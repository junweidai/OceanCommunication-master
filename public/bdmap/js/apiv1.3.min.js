window.TILE_VERSION = {
	"ditu": {
		"normal": {
			"version": "088",
			"updateDate": "20220804"
		},
		"satellite": {
			"version": "009",
			"updateDate": "20220804"
		},
		"normalTraffic": {
			"version": "081",
			"updateDate": "20220804"
		},
		"satelliteTraffic": {
			"version": "083",
			"updateDate": "20220804"
		},
		"mapJS": {
			"version": "104",
			"updateDate": "20220804"
		},
		"satelliteStreet": {
			"version": "083",
			"updateDate": "20220804"
		},
		"earthVector": {
			"version": "001",
			"updateDate": "20220804"
		}
	},
	"webapp": {
		"high_normal": {
			"version": "001",
			"updateDate": "20220804"
		},
		"lower_normal": {
			"version": "002",
			"updateDate": "20220804"
		}
	},
	"api_for_mobile": {
		"vector": {
			"version": "002",
			"updateDate": "20220804"
		},
		"vectorIcon": {
			"version": "002",
			"updateDate": "20220804"
		}
	}
};
window.MSV = {
	"mapstyle": {
		"version": "001",
		"updateDate": "20220802"
	}
};
window.BMAP_AUTHENTIC_KEY = "KjCZjTGeqgMrtfW1ts7UKggitD2ej23i";
!(function(t) {
	"use strict";

	function e(t) {
		return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t
	}

	function n(t, e) {
		return t(e = {
			exports: {}
		}, e.exports), e.exports
	}
	Object.values || (Object.values = function(t) {
		if (t !== Object(t)) throw new TypeError("Object.values called on a non-object");
		var e, n = [];
		for (e in t) Object.prototype.hasOwnProperty.call(t, e) && n.push(t[e]);
		return n
	}), "function" != typeof Object.assign && Object.defineProperty(Object, "assign", {
		value: function(t) {
			if (null == t) throw new TypeError("Cannot convert undefined or null to object");
			for (var e = Object(t), n = 0; n < (arguments.length <= 1 ? 0 : arguments.length - 1); n++) {
				var r = n + 1 < 1 || arguments.length <= n + 1 ? void 0 : arguments[n + 1];
				if (null != r)
					for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (e[i] = r[i])
			}
			return e
		},
		writable: !0,
		configurable: !0
	});
	var r = n((function(t) {
			function e(n) {
				return t.exports = e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
					return typeof t
				} : function(t) {
					return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
				}, t.exports.__esModule = !0, t.exports.default = t.exports, e(n)
			}
			t.exports = e, t.exports.__esModule = !0, t.exports.default = t.exports
		})),
		i = e(r),
		o = e(n((function(t) {
			function e(t, e) {
				for (var n = 0; n < e.length; n++) {
					var r = e[n];
					r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r)
				}
			}
			t.exports = function(t, n, r) {
				return n && e(t.prototype, n), r && e(t, r), Object.defineProperty(t, "prototype", {
					writable: !1
				}), t
			}, t.exports.__esModule = !0, t.exports.default = t.exports
		}))),
		a = e(n((function(t) {
			t.exports = function(t) {
				if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
				return t
			}, t.exports.__esModule = !0, t.exports.default = t.exports
		}))),
		s = n((function(t) {
			function e(n, r) {
				return t.exports = e = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
					return t.__proto__ = e, t
				}, t.exports.__esModule = !0, t.exports.default = t.exports, e(n, r)
			}
			t.exports = e, t.exports.__esModule = !0, t.exports.default = t.exports
		}));
	e(s);
	var u, h, c = e(n((function(t) {
			t.exports = function(t, e) {
				t.prototype = Object.create(e.prototype), t.prototype.constructor = t, s(t, e)
			}, t.exports.__esModule = !0, t.exports.default = t.exports
		}))),
		l = function(t, e) {
			var n = this;
			this.width = void 0, this.height = void 0, this.equals = function(t) {
				return t && n.width === t.width && n.height === t.height
			}, this.width = t || 0, this.height = e || 0
		},
		f = function() {
			function t(t, e) {
				this.lng = void 0, this.lat = void 0, this.lng = +t, this.lat = +e
			}
			return t.prototype.equals = function(t) {
				return t && this.lat === t.lat && this.lng === t.lng
			}, t
		}(),
		d = {
			REFRESH: "refresh",
			DATA_LOADED: "dataload",
			THUMB_LOADED: "thumb_loaded",
			SET_POV: "set_pov",
			POV_CHANGED: "pov_changed",
			POV_CHANGED_END: "pov_changed_end",
			ZOOM_CHANGED: "zoom_changed",
			SIZE_CHANGED: "size_changed",
			SET_ID: "set_id",
			SET_POSITION: "set_position",
			ID_CHANGED: "id_changed",
			POSITION_CHANGED: "position_changed",
			TOUCH_START: "touchstart",
			TOUCH_END: "touchend",
			CLICK: "click",
			DOUBLE_CLICK: "dblclick",
			LINK_CLICK: "link_click",
			OVERLAY_ADD: "overlay_add",
			OVERLAY_REMOVE: "overlay_remove",
			OVERLAYS_CLEAR: "overlays_clear",
			PANO_ERROR: "pano_error",
			LINK_VISIBLE_CHANGE: "links_visible_changed",
			DESTROY: "destroy",
			SCENE_CHANGE_END: "scene_change_end"
		},
		p = {
			TYPE_INNER: "inter",
			TYPE_STREET: "street",
			RADIUS: 3e3,
			COLS: 16,
			ROWS: 8,
			TILE_MAX_ZOOM: 4,
			TILE_MIN_ZOOM: 1,
			MIN_PITCH: -90,
			MAX_PITCH: 90,
			MAX_ZOOM: 4,
			MIN_ZOOM: 1,
			TILE_BASE_URLS: ["//apisv0.bdimg.com/", "//apisv1.bdimg.com/"],
			TOPO_ARROW_TEXTURE: "//webmap0.bdimg.com/wolfman/static/pano/images/webgl/topo_arrow_06f0f2e.png",
			FISHEYE_DURATION: 1500,
			FISHEYE_DELAY: 2e3
		},
		v = (u = {}, h = (navigator.userAgent || "")
			.toLowerCase(), u.isAndroid = h.includes("android"), u.isFirefox = h.includes("firefox"), u.isIos = /ip(hone|ad|od)/i.test(h), u.isWeixin = h.includes("micromessenger"), u.isWeibo = h.includes("weibo"), u.isWeChatOrWeiBo = u.isWeixin && u.isWeibo, u.isBaiduMap = h.includes("baidumap_"), u.isMobile = /android|webos|ip(hone|ad|od)|opera (mini|mobi|tablet)|iemobile|windows.+(phone|touch)|mobile|fennec|kindle (Fire)|Silk|maemo|blackberry|playbook; (touch|kbd)|Symbian(OS)|Ubuntu Touch/i.test(h), u.isPc = !u.isMobile, u),
		m = function(t) {
			for (var e = arguments.length <= 1 ? 0 : arguments.length - 1, n = 0; n < e; n++) {
				var r = n + 1 < 1 || arguments.length <= n + 1 ? void 0 : arguments[n + 1];
				for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i])
			}
			return t
		},
		g = function(t) {
			return t * Math.PI / 180
		},
		y = function(t) {
			return 180 * t / Math.PI
		},
		_ = function(t) {
			return t - 360 * Math.floor(t / 360)
		},
		x = function() {
			return Date.now()
		};
	var b = function t() {
			var e = t;
			if ("boolean" == typeof e._supportWebGL) return e._supportWebGL;
			if (!window.WebGLRenderingContext) return e._supportWebGL = !1, !1;
			var n = null,
				r = document.createElement("canvas");
			try {
				(n = r.getContext("webgl") || r.getContext("experimental-webgl")) && n instanceof WebGLRenderingContext && (e._supportWebGL = !0)
			} catch (t) {
				e._supportWebGL = !1
			}
			return null === n && (e._supportWebGL = !1), e._supportWebGL
		},
		M = function(t) {
			for (var e, n = Number.MAX_VALUE, r = -Number.MAX_VALUE, i = t.length - 1; i >= 0; i--) n > (e = t[i]) && (n = e), r < e && (r = e);
			return {
				min: n,
				max: r
			}
		},
		w = {
			g: function(t) {
				return "string" == typeof t || t instanceof String ? document.getElementById(t) : t && t.nodeName && (1 === t.nodeType || 9 === t.nodeType) ? t : null
			},
			show: function(t) {
				var e = w.g(t);
				return e && (e.style.display = ""), e
			},
			hide: function(t) {
				var e = w.g(t);
				return e && (e.style.display = "none"), t
			},
			create: function(t) {
				var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
					n = document.createElement(t);
				for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && n.setAttribute(r, e[r]);
				return n
			},
			getCurrentStyle: function(t) {
				return window.getComputedStyle(t, null)
			}
		},
		E = function(t, e, n) {
			var r, o, a = "",
				s = [],
				u = "jsonp" + Math.ceil(1e5 * Math.random()),
				h = t.indexOf("?") > 0 ? "&" : "?";
			for (var c in n = Object.assign({}, {
				jsonpCallback: "jsonp",
				timeout: 5e4,
				jsonp: "callback"
			}, n), e)({})
				.hasOwnProperty.call(e, c) && (a = "object" === i(e[c]) ? c + "=" + JSON.stringify(e[c]) : c + "=" + e[c], s.push(a));

			function l() {
				r.parentNode && r.parentNode.removeChild(r), window[u] = null
			}
			return t += h + s.join("&"), o = document.getElementsByTagName("script")[0] || document.head, t = t + "&" + n.jsonp + "=" + u, (r = document.createElement("script"))
				.src = t, r.type = "text/javascript", o.parentNode.appendChild(r, o), new Promise((function(t, e) {
					window[u] = function(e) {
						if (e && "string" == typeof e) try {
							e = JSON.parse(e)
						} catch (t) {
							e = {}, console.error("[ERROR] Parse Error.")
						}
						t(e), l()
					}, r.onerror = function(t) {
						l(), e({
							errno: -2,
							errmsg: "[ERROR] Load Error: ".concat(t),
							data: {}
						})
					}
				}))
		},
		T = function() {
			function t() {
				var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
					e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
				this._size = 0, this._cache = void 0, this.keyList = [], this._options = void 0, this._size = t, this._cache = new window.Map;
				var n = {
					clearCallback: null
				};
				this._options = Object.assign({}, n, e)
			}
			var e = t.prototype;
			return e.setData = function(t, e) {
				0 !== this._size && (this._cache.size >= this._size && this._removeOld(), this._cache.has(t) || this.keyList.push(t), this._cache.set(t, e))
			}, e.getData = function(t) {
				return this._cache.get(t)
			}, e._removeOld = function() {
				for (var t = Math.round(.6 * this._size), e = 0; e < t; e++) {
					var n = this.keyList[e];
					this._options.clearCallback && this._options.clearCallback(this.getData(n)), this._cache.delete(n)
				}
				this.keyList.splice(0, t)
			}, e.clear = function() {
				this._cache.clear(), this.keyList = []
			}, o(t, [{
				key: "cacheCount",
				get: function() {
					return this._cache.size
				}
			}]), t
		}(),
		A = function() {
			function t() {
				var t = this;
				this.rid = "", this.roadName = "", this.roadWidth = 5, this.isCurrentRoad = 0, this.pointList = [], this.getTopoInRoad = function(e) {
					var n = [],
						r = t.pointList,
						i = r.length,
						o = t.getPointByPanoId(e);
					if (!o || i <= 1) return n;
					var a = o.order;
					return 0 === a ? n.push(t.generateTopoData(o.dir, r[1])) : a === i - 1 ? n.push(t.generateTopoData(r[a - 1].dir + 180, r[a - 1])) : (n.push(t.generateTopoData((r[a - 1].dir + 180) % 360, r[a - 1])), n.push(t.generateTopoData(r[a].dir, r[a + 1]))), n
				}, this.getPointByPanoId = function(e) {
					for (var n, r = t.pointList, i = 0, o = r.length; i < o; i++)
						if (r[i].panoId === e) {
							n = r[i];
							break
						} return n
				}
			}
			return t.prototype.generateTopoData = function(t, e) {
				return void 0 !== e && (e.topoDir = t, e.roadName = this.roadName), e
			}, t
		}(),
		C = function() {
			var t = this;
			this.image = void 0, this.panoId = "", this.iid = "", this.panoType = "", this.panoX = 0, this.panoY = 0, this.panoZ = 0, this.heading = 0, this.pitch = 0, this.defaultHeading = void 0, this.defaultPitch = void 0, this.northDir = 0, this.fixHeading = 0, this.fixPitch = 0, this.fixRoll = 0, this.deviceHeight = 0, this.date = "20130822", this.time = "", this.provider = 1, this.admission = "GS(2013)6021", this.photos = [], this.roadName = "", this.roads = [], this.vpoints = [], this.topoArray = void 0, this.currentRoad = void 0, this.roadWidth = void 0, this.getCurrentRoad = function() {
				if (t.currentRoad) return t.currentRoad;
				for (var e = t.roads, n = 0, r = e.length; n < r; n++)
					if (e[n].isCurrentRoad) {
						t.currentRoad = e[n];
						break
					} return t.currentRoad
			}, this.getTopos = function() {
				if (t.topoArray) return t.topoArray;
				if (t.currentRoad || (t.currentRoad = t.getCurrentRoad()), !t.currentRoad) return [];
				if (t.topoArray = t.currentRoad.getTopoInRoad(t.panoId), t.vpoints.length < 1) return t.topoArray;
				for (var e, n = t.vpoints.length - 1; n >= 0; n--)(e = t.vpoints[n])
					.topoDir = e.dir, t.topoArray.push(e);
				return t.topoArray
			}, this.getRoadWidth = function() {
				return void 0 === t.roadWidth && (t.currentRoad || (t.currentRoad = t.getCurrentRoad()), t.currentRoad ? t.roadWidth = t.currentRoad.roadWidth : t.roadWidth = 0), t.roadWidth
			}
		};

	function R(t) {
		var e = {};
		return e.panoId = t.PID, e.panoType = t.Type, e.rid = t.RID, e.dir = t.DIR, e.roadName = t.RoadName, e.order = t.Order, e.panoX = t.X / 100, e.panoY = t.Y / 100, void 0 !== t.CPointX && void 0 !== t.CPointY && (e.cPoint = {
			x: t.CPointX / 100,
			y: t.CPointY / 100
		}), e
	}

	function S(t) {
		if (!t) return console.error("Get none from server"), null;
		var e = t.result;
		if (e && 0 !== e.error) return console.error("Get error from server"), null;
		var n = t.content;
		if (void 0 === n || 0 === n.length || void 0 === n[0]) return console.error("Get empty data from server"), null;
		var r = n[0],
			i = new C,
			o = r.Roll,
			a = {};
		if (i.panoId = r.ID, r.Inters instanceof Array) {
			var s = r.Inters[0];
			void 0 !== s && (i.iid = s.IID)
		}
		if (i.panoType = r.Type, i.panoX = (r.X || 0) / 100, i.panoY = (r.Y || 0) / 100, i.panoZ = (r.Z || 0) / 100, i.heading = void 0 !== r.MoveDir ? r.MoveDir : 0, i.northDir = r.NorthDir, i.fixHeading = void 0 !== r.Heading ? r.Heading : 270 - r.NorthDir, i.fixPitch = r.Pitch, i.fixRoll = 90 < o || -90 > o ? 0 : o, i.deviceHeight = r.DeviceHeight, i.date = r.Date || i.date, i.time = r.Time, i.provider = void 0 !== r.Provider ? r.Provider : i.provider, i.admission = r.Admission || i.admission, i.timeLine = r.TimeLine || [], i.roadName = r.Rname, r.Roads) {
			var u = r.Roads;
			i.roads = u.map((function(t) {
				return a[t.ID] = t.Name,
					function(t) {
						var e = new A;
						if (e.rid = t.ID, e.roadName = t.Name, e.roadWidth = void 0 !== t.Width ? t.Width / 100 : 0, e.isCurrentRoad = t.IsCurrent || 0, t.Panos)
							for (var n = t.Panos, r = 0, i = n.length; r < i; r++) e.pointList.push(R(n[r]));
						return e
					}(t)
			}))
		}
		if (r.Links)
			for (var h = r.Links, c = h.length, l = 0; l < c; l++) {
				var f = h[l];
				f.RoadName = a[f.RID], i.vpoints.push(R(f))
			}
		return i.photos = r.Photos || [], i
	}

	function P(t, e) {
		var n = (65535 & t) + (65535 & e);
		return (t >> 16) + (e >> 16) + (n >> 16) << 16 | 65535 & n
	}

	function D(t, e, n, r, i, o) {
		return P((a = P(P(e, t), P(r, o))) << (s = i) | a >>> 32 - s, n);
		var a, s
	}

	function O(t, e, n, r, i, o, a) {
		return D(e & n | ~e & r, t, e, i, o, a)
	}

	function I(t, e, n, r, i, o, a) {
		return D(e & r | n & ~r, t, e, i, o, a)
	}

	function L(t, e, n, r, i, o, a) {
		return D(e ^ n ^ r, t, e, i, o, a)
	}

	function B(t, e, n, r, i, o, a) {
		return D(n ^ (e | ~r), t, e, i, o, a)
	}

	function k(t, e) {
		var n, r, i, o, a;
		t[e >> 5] |= 128 << e % 32, t[14 + (e + 64 >>> 9 << 4)] = e;
		var s = 1732584193,
			u = -271733879,
			h = -1732584194,
			c = 271733878;
		for (n = 0; n < t.length; n += 16) r = s, i = u, o = h, a = c, s = O(s, u, h, c, t[n], 7, -680876936), c = O(c, s, u, h, t[n + 1], 12, -389564586), h = O(h, c, s, u, t[n + 2], 17, 606105819), u = O(u, h, c, s, t[n + 3], 22, -1044525330), s = O(s, u, h, c, t[n + 4], 7, -176418897), c = O(c, s, u, h, t[n + 5], 12, 1200080426), h = O(h, c, s, u, t[n + 6], 17, -1473231341), u = O(u, h, c, s, t[n + 7], 22, -45705983), s = O(s, u, h, c, t[n + 8], 7, 1770035416), c = O(c, s, u, h, t[n + 9], 12, -1958414417), h = O(h, c, s, u, t[n + 10], 17, -42063), u = O(u, h, c, s, t[n + 11], 22, -1990404162), s = O(s, u, h, c, t[n + 12], 7, 1804603682), c = O(c, s, u, h, t[n + 13], 12, -40341101), h = O(h, c, s, u, t[n + 14], 17, -1502002290), s = I(s, u = O(u, h, c, s, t[n + 15], 22, 1236535329), h, c, t[n + 1], 5, -165796510), c = I(c, s, u, h, t[n + 6], 9, -1069501632), h = I(h, c, s, u, t[n + 11], 14, 643717713), u = I(u, h, c, s, t[n], 20, -373897302), s = I(s, u, h, c, t[n + 5], 5, -701558691), c = I(c, s, u, h, t[n + 10], 9, 38016083), h = I(h, c, s, u, t[n + 15], 14, -660478335), u = I(u, h, c, s, t[n + 4], 20, -405537848), s = I(s, u, h, c, t[n + 9], 5, 568446438), c = I(c, s, u, h, t[n + 14], 9, -1019803690), h = I(h, c, s, u, t[n + 3], 14, -187363961), u = I(u, h, c, s, t[n + 8], 20, 1163531501), s = I(s, u, h, c, t[n + 13], 5, -1444681467), c = I(c, s, u, h, t[n + 2], 9, -51403784), h = I(h, c, s, u, t[n + 7], 14, 1735328473), s = L(s, u = I(u, h, c, s, t[n + 12], 20, -1926607734), h, c, t[n + 5], 4, -378558), c = L(c, s, u, h, t[n + 8], 11, -2022574463), h = L(h, c, s, u, t[n + 11], 16, 1839030562), u = L(u, h, c, s, t[n + 14], 23, -35309556), s = L(s, u, h, c, t[n + 1], 4, -1530992060), c = L(c, s, u, h, t[n + 4], 11, 1272893353), h = L(h, c, s, u, t[n + 7], 16, -155497632), u = L(u, h, c, s, t[n + 10], 23, -1094730640), s = L(s, u, h, c, t[n + 13], 4, 681279174), c = L(c, s, u, h, t[n], 11, -358537222), h = L(h, c, s, u, t[n + 3], 16, -722521979), u = L(u, h, c, s, t[n + 6], 23, 76029189), s = L(s, u, h, c, t[n + 9], 4, -640364487), c = L(c, s, u, h, t[n + 12], 11, -421815835), h = L(h, c, s, u, t[n + 15], 16, 530742520), s = B(s, u = L(u, h, c, s, t[n + 2], 23, -995338651), h, c, t[n], 6, -198630844), c = B(c, s, u, h, t[n + 7], 10, 1126891415), h = B(h, c, s, u, t[n + 14], 15, -1416354905), u = B(u, h, c, s, t[n + 5], 21, -57434055), s = B(s, u, h, c, t[n + 12], 6, 1700485571), c = B(c, s, u, h, t[n + 3], 10, -1894986606), h = B(h, c, s, u, t[n + 10], 15, -1051523), u = B(u, h, c, s, t[n + 1], 21, -2054922799), s = B(s, u, h, c, t[n + 8], 6, 1873313359), c = B(c, s, u, h, t[n + 15], 10, -30611744), h = B(h, c, s, u, t[n + 6], 15, -1560198380), u = B(u, h, c, s, t[n + 13], 21, 1309151649), s = B(s, u, h, c, t[n + 4], 6, -145523070), c = B(c, s, u, h, t[n + 11], 10, -1120210379), h = B(h, c, s, u, t[n + 2], 15, 718787259), u = B(u, h, c, s, t[n + 9], 21, -343485551), s = P(s, r), u = P(u, i), h = P(h, o), c = P(c, a);
		return [s, u, h, c]
	}

	function U(t) {
		var e, n = "",
			r = 32 * t.length;
		for (e = 0; e < r; e += 8) n += String.fromCharCode(t[e >> 5] >>> e % 32 & 255);
		return n
	}

	function N(t) {
		var e, n = [];
		for (n[(t.length >> 2) - 1] = void 0, e = 0; e < n.length; e += 1) n[e] = 0;
		var r = 8 * t.length;
		for (e = 0; e < r; e += 8) n[e >> 5] |= (255 & t.charCodeAt(e / 8)) << e % 32;
		return n
	}

	function F(t) {
		var e, n, r = "0123456789abcdef",
			i = "";
		for (n = 0; n < t.length; n += 1) e = t.charCodeAt(n), i += r.charAt(e >>> 4 & 15) + r.charAt(15 & e);
		return i
	}

	function j(t) {
		return unescape(encodeURIComponent(t))
	}

	function z(t) {
		return function(t) {
			return U(k(N(t), 8 * t.length))
		}(j(t))
	}

	function V(t, e) {
		return function(t, e) {
			var n, r, i = N(t),
				o = [],
				a = [];
			for (o[15] = a[15] = void 0, i.length > 16 && (i = k(i, 8 * t.length)), n = 0; n < 16; n += 1) o[n] = 909522486 ^ i[n], a[n] = 1549556828 ^ i[n];
			return r = k(o.concat(N(e)), 512 + 8 * e.length), U(k(a.concat(r), 640))
		}(j(t), j(e))
	}
	var G, W, H, Z, q = function(t, e, n) {
			return e ? n ? V(e, t) : F(V(e, t)) : n ? z(t) : F(z(t))
		},
		Y = function(t, e) {
			return E(t, {}, {
				jsonp: "fn"
			})
		},
		X = function(t, e) {
			if ("PANORAMA" === t) {
				var n = "https://api.map.baidu.com/?qt=pano_entry&v=gl&ak=" + window.BMAP_AUTHENTIC_KEY;
				"function" == typeof e ? Y(n)
					.then((function(t) {
						e()
					}))
					.catch((function(t) {})) : Y(n + "&callback=" + e)
			}
		},
		K = function(t) {
			if ("PANORAMA" === t) alert("您需要申请全景地图服务使用权限")
		},
		Q = (W = null, H = 0, Z = G || 5e3, function(t) {
			var e = (1e5 * Math.random())
				.toFixed(0);
			window["cbk" + e] = function(t) {
				t && void 0 !== t.error && 0 === t.error || X("PANORAMA", (function(t) {
					t && void 0 !== t.error && 0 === t.error || K("PANORAMA")
				}))
			}, H += t, W || (W = setTimeout((function() {
				var t = "https://api.map.baidu.com/?qt=pano_count&v=gl&ak=" + window.BMAP_AUTHENTIC_KEY + "&consume=" + H;
				Y(t + "&callback=window.cbk" + e), H = 0, W = null
			}), Z))
		}),
		J = function(t, e) {
			var n = (e = e || {})
				.counter ? e.counter : 1,
				r = !1 !== e.isCounter,
				i = Date.parse(new Date),
				o = i / 1e3,
				a = t + "-" + (o + 1800) + "-" + i + "-" + window.BMAP_AUTHENTIC_KEY + "-SJvEY5h37ZDh5pHS",
				s = q(a),
				u = "auth_key=" + (o + 1800) + "-" + i + "-" + window.BMAP_AUTHENTIC_KEY + "-" + s;
			return r && Q(n), u
		},
		$ = function() {
			function t(e) {
				var n = this;
				this.getPanoById = function(e) {
					var r;
					r = "".concat(t.SERVICE_URL, "?qt=sdata&sid=")
						.concat(e, "&")
						.concat(J("/")), n.getDataByUrl(r)
						.then((function(t) {
							var e = S(t);
							if (null === e) throw new Error("数据解析异常");
							return n._cache.setData(r, t), n._pano.dispatchEvent(d.DATA_LOADED, {
								data: e
							}), n._pano.dispatchEvent(d.ID_CHANGED, e.panoId), n._pano.dispatchEvent(d.POSITION_CHANGED, new f(e.panoX, e.panoY)), e
						}))
						.catch((function(t) {
							n._pano.dispatchEvent({
								type: d.PANO_ERROR,
								data: t
							})
						}))
				}, this.getPanoByLocation = function(e, r) {
					var i;
					i = "".concat(t.SERVICE_URL, "?qt=qsdata&x=")
						.concat(e.lng, "&y=")
						.concat(e.lat)
						.concat(r ? "&r=" + r : "", "&action=1&")
						.concat(J("/")), n.getDataByUrl(i)
						.then((function(t) {
							var r = S(t);
							n._cache.setData(i, t), n._pano.dispatchEvent(d.DATA_LOADED, {
								data: r
							}), n._pano.dispatchEvent(d.POSITION_CHANGED, e)
						}))
						.catch((function(t) {
							n._pano.dispatchEvent({
								type: d.PANO_ERROR,
								data: t
							})
						}))
				}, this._pano = e, this._cache = new T(10)
			}
			return t.prototype.getDataByUrl = function(t) {
				var e = this._cache.getData(t);
				return e ? Promise.resolve(e) : E(t, {}, {
					jsonp: "fn"
				})
			}, t
		}();
	$.SERVICE_URL = "//apisv0.bdimg.com/";
	var tt = n((function(t) {
			function e(t, e, n, r, i, o, a) {
				try {
					var s = t[o](a),
						u = s.value
				} catch (t) {
					return void n(t)
				}
				s.done ? e(u) : Promise.resolve(u)
					.then(r, i)
			}
			t.exports = function(t) {
				return function() {
					var n = this,
						r = arguments;
					return new Promise((function(i, o) {
						var a = t.apply(n, r);

						function s(t) {
							e(a, i, o, s, u, "next", t)
						}

						function u(t) {
							e(a, i, o, s, u, "throw", t)
						}
						s(void 0)
					}))
				}
			}, t.exports.__esModule = !0, t.exports.default = t.exports
		})),
		et = e(tt),
		nt = n((function(t) {
			var e = r.default;

			function n() {
				/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
				t.exports = n = function() {
					return r
				}, t.exports.__esModule = !0, t.exports.default = t.exports;
				var r = {},
					i = Object.prototype,
					o = i.hasOwnProperty,
					a = "function" == typeof Symbol ? Symbol : {},
					s = a.iterator || "@@iterator",
					u = a.asyncIterator || "@@asyncIterator",
					h = a.toStringTag || "@@toStringTag";

				function c(t, e, n) {
					return Object.defineProperty(t, e, {
						value: n,
						enumerable: !0,
						configurable: !0,
						writable: !0
					}), t[e]
				}
				try {
					c({}, "")
				} catch (t) {
					c = function(t, e, n) {
						return t[e] = n
					}
				}

				function l(t, e, n, r) {
					var i = e && e.prototype instanceof p ? e : p,
						o = Object.create(i.prototype),
						a = new A(r || []);
					return o._invoke = function(t, e, n) {
						var r = "suspendedStart";
						return function(i, o) {
							if ("executing" === r) throw new Error("Generator is already running");
							if ("completed" === r) {
								if ("throw" === i) throw o;
								return R()
							}
							for (n.method = i, n.arg = o;;) {
								var a = n.delegate;
								if (a) {
									var s = w(a, n);
									if (s) {
										if (s === d) continue;
										return s
									}
								}
								if ("next" === n.method) n.sent = n._sent = n.arg;
								else if ("throw" === n.method) {
									if ("suspendedStart" === r) throw r = "completed", n.arg;
									n.dispatchException(n.arg)
								} else "return" === n.method && n.abrupt("return", n.arg);
								r = "executing";
								var u = f(t, e, n);
								if ("normal" === u.type) {
									if (r = n.done ? "completed" : "suspendedYield", u.arg === d) continue;
									return {
										value: u.arg,
										done: n.done
									}
								}
								"throw" === u.type && (r = "completed", n.method = "throw", n.arg = u.arg)
							}
						}
					}(t, n, a), o
				}

				function f(t, e, n) {
					try {
						return {
							type: "normal",
							arg: t.call(e, n)
						}
					} catch (t) {
						return {
							type: "throw",
							arg: t
						}
					}
				}
				r.wrap = l;
				var d = {};

				function p() {}

				function v() {}

				function m() {}
				var g = {};
				c(g, s, (function() {
					return this
				}));
				var y = Object.getPrototypeOf,
					_ = y && y(y(C([])));
				_ && _ !== i && o.call(_, s) && (g = _);
				var x = m.prototype = p.prototype = Object.create(g);

				function b(t) {
					["next", "throw", "return"].forEach((function(e) {
						c(t, e, (function(t) {
							return this._invoke(e, t)
						}))
					}))
				}

				function M(t, n) {
					function r(i, a, s, u) {
						var h = f(t[i], t, a);
						if ("throw" !== h.type) {
							var c = h.arg,
								l = c.value;
							return l && "object" == e(l) && o.call(l, "__await") ? n.resolve(l.__await)
								.then((function(t) {
									r("next", t, s, u)
								}), (function(t) {
									r("throw", t, s, u)
								})) : n.resolve(l)
								.then((function(t) {
									c.value = t, s(c)
								}), (function(t) {
									return r("throw", t, s, u)
								}))
						}
						u(h.arg)
					}
					var i;
					this._invoke = function(t, e) {
						function o() {
							return new n((function(n, i) {
								r(t, e, n, i)
							}))
						}
						return i = i ? i.then(o, o) : o()
					}
				}

				function w(t, e) {
					var n = t.iterator[e.method];
					if (void 0 === n) {
						if (e.delegate = null, "throw" === e.method) {
							if (t.iterator.return && (e.method = "return", e.arg = void 0, w(t, e), "throw" === e.method)) return d;
							e.method = "throw", e.arg = new TypeError("The iterator does not provide a 'throw' method")
						}
						return d
					}
					var r = f(n, t.iterator, e.arg);
					if ("throw" === r.type) return e.method = "throw", e.arg = r.arg, e.delegate = null, d;
					var i = r.arg;
					return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, d) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, d)
				}

				function E(t) {
					var e = {
						tryLoc: t[0]
					};
					1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
				}

				function T(t) {
					var e = t.completion || {};
					e.type = "normal", delete e.arg, t.completion = e
				}

				function A(t) {
					this.tryEntries = [{
						tryLoc: "root"
					}], t.forEach(E, this), this.reset(!0)
				}

				function C(t) {
					if (t) {
						var e = t[s];
						if (e) return e.call(t);
						if ("function" == typeof t.next) return t;
						if (!isNaN(t.length)) {
							var n = -1,
								r = function e() {
									for (; ++n < t.length;)
										if (o.call(t, n)) return e.value = t[n], e.done = !1, e;
									return e.value = void 0, e.done = !0, e
								};
							return r.next = r
						}
					}
					return {
						next: R
					}
				}

				function R() {
					return {
						value: void 0,
						done: !0
					}
				}
				return v.prototype = m, c(x, "constructor", m), c(m, "constructor", v), v.displayName = c(m, h, "GeneratorFunction"), r.isGeneratorFunction = function(t) {
					var e = "function" == typeof t && t.constructor;
					return !!e && (e === v || "GeneratorFunction" === (e.displayName || e.name))
				}, r.mark = function(t) {
					return Object.setPrototypeOf ? Object.setPrototypeOf(t, m) : (t.__proto__ = m, c(t, h, "GeneratorFunction")), t.prototype = Object.create(x), t
				}, r.awrap = function(t) {
					return {
						__await: t
					}
				}, b(M.prototype), c(M.prototype, u, (function() {
					return this
				})), r.AsyncIterator = M, r.async = function(t, e, n, i, o) {
					void 0 === o && (o = Promise);
					var a = new M(l(t, e, n, i), o);
					return r.isGeneratorFunction(e) ? a : a.next()
						.then((function(t) {
							return t.done ? t.value : a.next()
						}))
				}, b(x), c(x, h, "Generator"), c(x, s, (function() {
					return this
				})), c(x, "toString", (function() {
					return "[object Generator]"
				})), r.keys = function(t) {
					var e = [];
					for (var n in t) e.push(n);
					return e.reverse(),
						function n() {
							for (; e.length;) {
								var r = e.pop();
								if (r in t) return n.value = r, n.done = !1, n
							}
							return n.done = !0, n
						}
				}, r.values = C, A.prototype = {
					constructor: A,
					reset: function(t) {
						if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(T), !t)
							for (var e in this) "t" === e.charAt(0) && o.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
					},
					stop: function() {
						this.done = !0;
						var t = this.tryEntries[0].completion;
						if ("throw" === t.type) throw t.arg;
						return this.rval
					},
					dispatchException: function(t) {
						if (this.done) throw t;
						var e = this;

						function n(n, r) {
							return a.type = "throw", a.arg = t, e.next = n, r && (e.method = "next", e.arg = void 0), !!r
						}
						for (var r = this.tryEntries.length - 1; r >= 0; --r) {
							var i = this.tryEntries[r],
								a = i.completion;
							if ("root" === i.tryLoc) return n("end");
							if (i.tryLoc <= this.prev) {
								var s = o.call(i, "catchLoc"),
									u = o.call(i, "finallyLoc");
								if (s && u) {
									if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
									if (this.prev < i.finallyLoc) return n(i.finallyLoc)
								} else if (s) {
									if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
								} else {
									if (!u) throw new Error("try statement without catch or finally");
									if (this.prev < i.finallyLoc) return n(i.finallyLoc)
								}
							}
						}
					},
					abrupt: function(t, e) {
						for (var n = this.tryEntries.length - 1; n >= 0; --n) {
							var r = this.tryEntries[n];
							if (r.tryLoc <= this.prev && o.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
								var i = r;
								break
							}
						}
						i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
						var a = i ? i.completion : {};
						return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, d) : this.complete(a)
					},
					complete: function(t, e) {
						if ("throw" === t.type) throw t.arg;
						return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), d
					},
					finish: function(t) {
						for (var e = this.tryEntries.length - 1; e >= 0; --e) {
							var n = this.tryEntries[e];
							if (n.finallyLoc === t) return this.complete(n.completion, n.afterLoc), T(n), d
						}
					},
					catch: function(t) {
						for (var e = this.tryEntries.length - 1; e >= 0; --e) {
							var n = this.tryEntries[e];
							if (n.tryLoc === t) {
								var r = n.completion;
								if ("throw" === r.type) {
									var i = r.arg;
									T(n)
								}
								return i
							}
						}
						throw new Error("illegal catch attempt")
					},
					delegateYield: function(t, e, n) {
						return this.delegate = {
							iterator: C(t),
							resultName: e,
							nextLoc: n
						}, "next" === this.method && (this.arg = void 0), d
					}
				}, r
			}
			t.exports = n, t.exports.__esModule = !0, t.exports.default = t.exports
		}));
	e(nt);
	var rt = nt(),
		it = rt;
	try {
		regeneratorRuntime = rt
	} catch (t) {
		"object" == typeof globalThis ? globalThis.regeneratorRuntime = rt : Function("r", "regeneratorRuntime = r")(rt)
	}

	function ot(t, e) {
		if (!t) throw new Error("math.gl assertion ".concat(e))
	}
	const at = {
		EPSILON: 1e-12,
		debug: !1,
		precision: 4,
		printTypes: !1,
		printDegrees: !1,
		printRowMajor: !0
	};

	function st(t, {
		precision: e = at.precision
	} = {}) {
		return t = function(t) {
			return Math.round(t / at.EPSILON) * at.EPSILON
		}(t), "".concat(parseFloat(t.toPrecision(e)))
	}

	function ut(t) {
		return Array.isArray(t) || ArrayBuffer.isView(t) && !(t instanceof DataView)
	}

	function ht(t, e, n) {
		const r = at.EPSILON;
		n && (at.EPSILON = n);
		try {
			if (t === e) return !0;
			if (ut(t) && ut(e)) {
				if (t.length !== e.length) return !1;
				for (let n = 0; n < t.length; ++n)
					if (!ht(t[n], e[n])) return !1;
				return !0
			}
			return t && t.equals ? t.equals(e) : e && e.equals ? e.equals(t) : "number" == typeof t && "number" == typeof e && Math.abs(t - e) <= at.EPSILON * Math.max(1, Math.abs(t), Math.abs(e))
		} finally {
			at.EPSILON = r
		}
	}
	class ct extends(function(t) {
		function e() {
			var e = Reflect.construct(t, Array.from(arguments));
			return Object.setPrototypeOf(e, Object.getPrototypeOf(this)), e
		}
		return e.prototype = Object.create(t.prototype, {
			constructor: {
				value: t,
				enumerable: !1,
				writable: !0,
				configurable: !0
			}
		}), Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t, e
	}(Array)) {
		clone() {
			return (new this.constructor)
				.copy(this)
		}
		fromArray(t, e = 0) {
			for (let n = 0; n < this.ELEMENTS; ++n) this[n] = t[n + e];
			return this.check()
		}
		toArray(t = [], e = 0) {
			for (let n = 0; n < this.ELEMENTS; ++n) t[e + n] = this[n];
			return t
		}
		from(t) {
			return Array.isArray(t) ? this.copy(t) : this.fromObject(t)
		}
		to(t) {
			return t === this ? this : ut(t) ? this.toArray(t) : this.toObject(t)
		}
		toTarget(t) {
			return t ? this.to(t) : this
		}
		toFloat32Array() {
			return new Float32Array(this)
		}
		toString() {
			return this.formatString(at)
		}
		formatString(t) {
			let e = "";
			for (let n = 0; n < this.ELEMENTS; ++n) e += (n > 0 ? ", " : "") + st(this[n], t);
			return "".concat(t.printTypes ? this.constructor.name : "", "[")
				.concat(e, "]")
		}
		equals(t) {
			if (!t || this.length !== t.length) return !1;
			for (let e = 0; e < this.ELEMENTS; ++e)
				if (!ht(this[e], t[e])) return !1;
			return !0
		}
		exactEquals(t) {
			if (!t || this.length !== t.length) return !1;
			for (let e = 0; e < this.ELEMENTS; ++e)
				if (this[e] !== t[e]) return !1;
			return !0
		}
		negate() {
			for (let t = 0; t < this.ELEMENTS; ++t) this[t] = -this[t];
			return this.check()
		}
		lerp(t, e, n) {
			if (void 0 === n) return this.lerp(this, t, e);
			for (let r = 0; r < this.ELEMENTS; ++r) {
				const i = t[r];
				this[r] = i + n * (e[r] - i)
			}
			return this.check()
		}
		min(t) {
			for (let e = 0; e < this.ELEMENTS; ++e) this[e] = Math.min(t[e], this[e]);
			return this.check()
		}
		max(t) {
			for (let e = 0; e < this.ELEMENTS; ++e) this[e] = Math.max(t[e], this[e]);
			return this.check()
		}
		clamp(t, e) {
			for (let n = 0; n < this.ELEMENTS; ++n) this[n] = Math.min(Math.max(this[n], t[n]), e[n]);
			return this.check()
		}
		add(...t) {
			for (const e of t)
				for (let t = 0; t < this.ELEMENTS; ++t) this[t] += e[t];
			return this.check()
		}
		subtract(...t) {
			for (const e of t)
				for (let t = 0; t < this.ELEMENTS; ++t) this[t] -= e[t];
			return this.check()
		}
		scale(t) {
			if ("number" == typeof t)
				for (let e = 0; e < this.ELEMENTS; ++e) this[e] *= t;
			else
				for (let e = 0; e < this.ELEMENTS && e < t.length; ++e) this[e] *= t[e];
			return this.check()
		}
		multiplyByScalar(t) {
			for (let e = 0; e < this.ELEMENTS; ++e) this[e] *= t;
			return this.check()
		}
		check() {
			if (at.debug && !this.validate()) throw new Error("math.gl: ".concat(this.constructor.name, " some fields set to invalid numbers'"));
			return this
		}
		validate() {
			let t = this.length === this.ELEMENTS;
			for (let e = 0; e < this.ELEMENTS; ++e) t = t && Number.isFinite(this[e]);
			return t
		}
		sub(t) {
			return this.subtract(t)
		}
		setScalar(t) {
			for (let e = 0; e < this.ELEMENTS; ++e) this[e] = t;
			return this.check()
		}
		addScalar(t) {
			for (let e = 0; e < this.ELEMENTS; ++e) this[e] += t;
			return this.check()
		}
		subScalar(t) {
			return this.addScalar(-t)
		}
		multiplyScalar(t) {
			for (let e = 0; e < this.ELEMENTS; ++e) this[e] *= t;
			return this.check()
		}
		divideScalar(t) {
			return this.multiplyByScalar(1 / t)
		}
		clampScalar(t, e) {
			for (let n = 0; n < this.ELEMENTS; ++n) this[n] = Math.min(Math.max(this[n], t), e);
			return this.check()
		}
		get elements() {
			return this
		}
	}

	function lt(t) {
		if (!Number.isFinite(t)) throw new Error("Invalid number ".concat(t));
		return t
	}

	function ft(t, e, n = "") {
		if (at.debug && ! function(t, e) {
			if (t.length !== e) return !1;
			for (let e = 0; e < t.length; ++e)
				if (!Number.isFinite(t[e])) return !1;
			return !0
		}(t, e)) throw new Error("math.gl: ".concat(n, " some fields set to invalid numbers'"));
		return t
	}
	class dt extends ct {
		get x() {
			return this[0]
		}
		set x(t) {
			this[0] = lt(t)
		}
		get y() {
			return this[1]
		}
		set y(t) {
			this[1] = lt(t)
		}
		len() {
			return Math.sqrt(this.lengthSquared())
		}
		magnitude() {
			return this.len()
		}
		lengthSquared() {
			let t = 0;
			for (let e = 0; e < this.ELEMENTS; ++e) t += this[e] * this[e];
			return t
		}
		magnitudeSquared() {
			return this.lengthSquared()
		}
		distance(t) {
			return Math.sqrt(this.distanceSquared(t))
		}
		distanceSquared(t) {
			let e = 0;
			for (let n = 0; n < this.ELEMENTS; ++n) {
				const r = this[n] - t[n];
				e += r * r
			}
			return lt(e)
		}
		dot(t) {
			let e = 0;
			for (let n = 0; n < this.ELEMENTS; ++n) e += this[n] * t[n];
			return lt(e)
		}
		normalize() {
			const t = this.magnitude();
			if (0 !== t)
				for (let e = 0; e < this.ELEMENTS; ++e) this[e] /= t;
			return this.check()
		}
		multiply(...t) {
			for (const e of t)
				for (let t = 0; t < this.ELEMENTS; ++t) this[t] *= e[t];
			return this.check()
		}
		divide(...t) {
			for (const e of t)
				for (let t = 0; t < this.ELEMENTS; ++t) this[t] /= e[t];
			return this.check()
		}
		lengthSq() {
			return this.lengthSquared()
		}
		distanceTo(t) {
			return this.distance(t)
		}
		distanceToSquared(t) {
			return this.distanceSquared(t)
		}
		getComponent(t) {
			return ot(t >= 0 && t < this.ELEMENTS, "index is out of range"), lt(this[t])
		}
		setComponent(t, e) {
			return ot(t >= 0 && t < this.ELEMENTS, "index is out of range"), this[t] = e, this.check()
		}
		addVectors(t, e) {
			return this.copy(t)
				.add(e)
		}
		subVectors(t, e) {
			return this.copy(t)
				.subtract(e)
		}
		multiplyVectors(t, e) {
			return this.copy(t)
				.multiply(e)
		}
		addScaledVector(t, e) {
			return this.add(new this.constructor(t)
				.multiplyScalar(e))
		}
	}
	var pt = 1e-6,
		vt = "undefined" != typeof Float32Array ? Float32Array : Array,
		mt = Math.random;

	function gt() {
		var t = new vt(2);
		return vt != Float32Array && (t[0] = 0, t[1] = 0), t
	}

	function yt(t, e) {
		var n = new vt(2);
		return n[0] = t, n[1] = e, n
	}

	function _t(t, e, n) {
		return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t
	}

	function xt(t, e, n) {
		return t[0] = e[0] * n[0], t[1] = e[1] * n[1], t
	}

	function bt(t, e, n) {
		return t[0] = e[0] / n[0], t[1] = e[1] / n[1], t
	}

	function Mt(t, e) {
		var n = e[0] - t[0],
			r = e[1] - t[1];
		return Math.hypot(n, r)
	}

	function wt(t, e) {
		var n = e[0] - t[0],
			r = e[1] - t[1];
		return n * n + r * r
	}

	function Et(t) {
		var e = t[0],
			n = t[1];
		return Math.hypot(e, n)
	}

	function Tt(t) {
		var e = t[0],
			n = t[1];
		return e * e + n * n
	}

	function At(t, e, n) {
		var r = e[0],
			i = e[1];
		return t[0] = n[0] * r + n[4] * i + n[12], t[1] = n[1] * r + n[5] * i + n[13], t
	}
	Math.hypot || (Math.hypot = function() {
		for (var t = 0, e = arguments.length; e--;) t += arguments[e] * arguments[e];
		return Math.sqrt(t)
	});
	var Ct, Rt = Et,
		St = _t,
		Pt = xt,
		Dt = bt,
		Ot = Mt,
		It = wt,
		Lt = Tt,
		Bt = (Ct = gt(), function(t, e, n, r, i, o) {
			var a, s;
			for (e || (e = 2), n || (n = 0), s = r ? Math.min(r * e + n, t.length) : t.length, a = n; a < s; a += e) Ct[0] = t[a], Ct[1] = t[a + 1], i(Ct, Ct, o), t[a] = Ct[0], t[a + 1] = Ct[1];
			return t
		}),
		kt = Object.freeze({
			__proto__: null,
			create: gt,
			clone: function(t) {
				var e = new vt(2);
				return e[0] = t[0], e[1] = t[1], e
			},
			fromValues: yt,
			copy: function(t, e) {
				return t[0] = e[0], t[1] = e[1], t
			},
			set: function(t, e, n) {
				return t[0] = e, t[1] = n, t
			},
			add: function(t, e, n) {
				return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t
			},
			subtract: _t,
			multiply: xt,
			divide: bt,
			ceil: function(t, e) {
				return t[0] = Math.ceil(e[0]), t[1] = Math.ceil(e[1]), t
			},
			floor: function(t, e) {
				return t[0] = Math.floor(e[0]), t[1] = Math.floor(e[1]), t
			},
			min: function(t, e, n) {
				return t[0] = Math.min(e[0], n[0]), t[1] = Math.min(e[1], n[1]), t
			},
			max: function(t, e, n) {
				return t[0] = Math.max(e[0], n[0]), t[1] = Math.max(e[1], n[1]), t
			},
			round: function(t, e) {
				return t[0] = Math.round(e[0]), t[1] = Math.round(e[1]), t
			},
			scale: function(t, e, n) {
				return t[0] = e[0] * n, t[1] = e[1] * n, t
			},
			scaleAndAdd: function(t, e, n, r) {
				return t[0] = e[0] + n[0] * r, t[1] = e[1] + n[1] * r, t
			},
			distance: Mt,
			squaredDistance: wt,
			length: Et,
			squaredLength: Tt,
			negate: function(t, e) {
				return t[0] = -e[0], t[1] = -e[1], t
			},
			inverse: function(t, e) {
				return t[0] = 1 / e[0], t[1] = 1 / e[1], t
			},
			normalize: function(t, e) {
				var n = e[0],
					r = e[1],
					i = n * n + r * r;
				return i > 0 && (i = 1 / Math.sqrt(i)), t[0] = e[0] * i, t[1] = e[1] * i, t
			},
			dot: function(t, e) {
				return t[0] * e[0] + t[1] * e[1]
			},
			cross: function(t, e, n) {
				var r = e[0] * n[1] - e[1] * n[0];
				return t[0] = t[1] = 0, t[2] = r, t
			},
			lerp: function(t, e, n, r) {
				var i = e[0],
					o = e[1];
				return t[0] = i + r * (n[0] - i), t[1] = o + r * (n[1] - o), t
			},
			random: function(t, e) {
				e = e || 1;
				var n = 2 * mt() * Math.PI;
				return t[0] = Math.cos(n) * e, t[1] = Math.sin(n) * e, t
			},
			transformMat2: function(t, e, n) {
				var r = e[0],
					i = e[1];
				return t[0] = n[0] * r + n[2] * i, t[1] = n[1] * r + n[3] * i, t
			},
			transformMat2d: function(t, e, n) {
				var r = e[0],
					i = e[1];
				return t[0] = n[0] * r + n[2] * i + n[4], t[1] = n[1] * r + n[3] * i + n[5], t
			},
			transformMat3: function(t, e, n) {
				var r = e[0],
					i = e[1];
				return t[0] = n[0] * r + n[3] * i + n[6], t[1] = n[1] * r + n[4] * i + n[7], t
			},
			transformMat4: At,
			rotate: function(t, e, n, r) {
				var i = e[0] - n[0],
					o = e[1] - n[1],
					a = Math.sin(r),
					s = Math.cos(r);
				return t[0] = i * s - o * a + n[0], t[1] = i * a + o * s + n[1], t
			},
			angle: function(t, e) {
				var n = t[0],
					r = t[1],
					i = e[0],
					o = e[1],
					a = Math.sqrt(n * n + r * r) * Math.sqrt(i * i + o * o),
					s = a && (n * i + r * o) / a;
				return Math.acos(Math.min(Math.max(s, -1), 1))
			},
			zero: function(t) {
				return t[0] = 0, t[1] = 0, t
			},
			str: function(t) {
				return "vec2(" + t[0] + ", " + t[1] + ")"
			},
			exactEquals: function(t, e) {
				return t[0] === e[0] && t[1] === e[1]
			},
			equals: function(t, e) {
				var n = t[0],
					r = t[1],
					i = e[0],
					o = e[1];
				return Math.abs(n - i) <= pt * Math.max(1, Math.abs(n), Math.abs(i)) && Math.abs(r - o) <= pt * Math.max(1, Math.abs(r), Math.abs(o))
			},
			len: Rt,
			sub: St,
			mul: Pt,
			div: Dt,
			dist: Ot,
			sqrDist: It,
			sqrLen: Lt,
			forEach: Bt
		});

	function Ut(t, e, n) {
		const r = e[0],
			i = e[1],
			o = e[2],
			a = n[3] * r + n[7] * i + n[11] * o || 1;
		return t[0] = (n[0] * r + n[4] * i + n[8] * o) / a, t[1] = (n[1] * r + n[5] * i + n[9] * o) / a, t[2] = (n[2] * r + n[6] * i + n[10] * o) / a, t
	}

	function Nt() {
		var t = new vt(3);
		return vt != Float32Array && (t[0] = 0, t[1] = 0, t[2] = 0), t
	}

	function Ft(t) {
		var e = new vt(3);
		return e[0] = t[0], e[1] = t[1], e[2] = t[2], e
	}

	function jt(t) {
		var e = t[0],
			n = t[1],
			r = t[2];
		return Math.hypot(e, n, r)
	}

	function zt(t, e, n) {
		var r = new vt(3);
		return r[0] = t, r[1] = e, r[2] = n, r
	}

	function Vt(t, e) {
		return t[0] = e[0], t[1] = e[1], t[2] = e[2], t
	}

	function Gt(t, e, n) {
		return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t[2] = e[2] + n[2], t
	}

	function Wt(t, e, n) {
		return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t[2] = e[2] - n[2], t
	}

	function Ht(t, e, n) {
		return t[0] = e[0] * n[0], t[1] = e[1] * n[1], t[2] = e[2] * n[2], t
	}

	function Zt(t, e, n) {
		return t[0] = e[0] / n[0], t[1] = e[1] / n[1], t[2] = e[2] / n[2], t
	}

	function qt(t, e, n) {
		return t[0] = e[0] * n, t[1] = e[1] * n, t[2] = e[2] * n, t
	}

	function Yt(t, e) {
		var n = e[0] - t[0],
			r = e[1] - t[1],
			i = e[2] - t[2];
		return Math.hypot(n, r, i)
	}

	function Xt(t, e) {
		var n = e[0] - t[0],
			r = e[1] - t[1],
			i = e[2] - t[2];
		return n * n + r * r + i * i
	}

	function Kt(t) {
		var e = t[0],
			n = t[1],
			r = t[2];
		return e * e + n * n + r * r
	}

	function Qt(t, e) {
		var n = e[0],
			r = e[1],
			i = e[2],
			o = n * n + r * r + i * i;
		return o > 0 && (o = 1 / Math.sqrt(o)), t[0] = e[0] * o, t[1] = e[1] * o, t[2] = e[2] * o, t
	}

	function Jt(t, e) {
		return t[0] * e[0] + t[1] * e[1] + t[2] * e[2]
	}

	function $t(t, e, n) {
		var r = e[0],
			i = e[1],
			o = e[2],
			a = n[0],
			s = n[1],
			u = n[2];
		return t[0] = i * u - o * s, t[1] = o * a - r * u, t[2] = r * s - i * a, t
	}

	function te(t, e, n) {
		var r = e[0],
			i = e[1],
			o = e[2],
			a = n[3] * r + n[7] * i + n[11] * o + n[15];
		return a = a || 1, t[0] = (n[0] * r + n[4] * i + n[8] * o + n[12]) / a, t[1] = (n[1] * r + n[5] * i + n[9] * o + n[13]) / a, t[2] = (n[2] * r + n[6] * i + n[10] * o + n[14]) / a, t
	}

	function ee(t, e, n) {
		var r = e[0],
			i = e[1],
			o = e[2];
		return t[0] = r * n[0] + i * n[3] + o * n[6], t[1] = r * n[1] + i * n[4] + o * n[7], t[2] = r * n[2] + i * n[5] + o * n[8], t
	}

	function ne(t, e, n) {
		var r = n[0],
			i = n[1],
			o = n[2],
			a = n[3],
			s = e[0],
			u = e[1],
			h = e[2],
			c = i * h - o * u,
			l = o * s - r * h,
			f = r * u - i * s,
			d = i * f - o * l,
			p = o * c - r * f,
			v = r * l - i * c,
			m = 2 * a;
		return c *= m, l *= m, f *= m, d *= 2, p *= 2, v *= 2, t[0] = s + c + d, t[1] = u + l + p, t[2] = h + f + v, t
	}

	function re(t, e, n, r) {
		var i = [],
			o = [];
		return i[0] = e[0] - n[0], i[1] = e[1] - n[1], i[2] = e[2] - n[2], o[0] = i[0], o[1] = i[1] * Math.cos(r) - i[2] * Math.sin(r), o[2] = i[1] * Math.sin(r) + i[2] * Math.cos(r), t[0] = o[0] + n[0], t[1] = o[1] + n[1], t[2] = o[2] + n[2], t
	}

	function ie(t, e, n, r) {
		var i = [],
			o = [];
		return i[0] = e[0] - n[0], i[1] = e[1] - n[1], i[2] = e[2] - n[2], o[0] = i[2] * Math.sin(r) + i[0] * Math.cos(r), o[1] = i[1], o[2] = i[2] * Math.cos(r) - i[0] * Math.sin(r), t[0] = o[0] + n[0], t[1] = o[1] + n[1], t[2] = o[2] + n[2], t
	}

	function oe(t, e, n, r) {
		var i = [],
			o = [];
		return i[0] = e[0] - n[0], i[1] = e[1] - n[1], i[2] = e[2] - n[2], o[0] = i[0] * Math.cos(r) - i[1] * Math.sin(r), o[1] = i[0] * Math.sin(r) + i[1] * Math.cos(r), o[2] = i[2], t[0] = o[0] + n[0], t[1] = o[1] + n[1], t[2] = o[2] + n[2], t
	}

	function ae(t, e) {
		var n = t[0],
			r = t[1],
			i = t[2],
			o = e[0],
			a = e[1],
			s = e[2],
			u = Math.sqrt(n * n + r * r + i * i) * Math.sqrt(o * o + a * a + s * s),
			h = u && Jt(t, e) / u;
		return Math.acos(Math.min(Math.max(h, -1), 1))
	}

	function se(t, e) {
		var n = t[0],
			r = t[1],
			i = t[2],
			o = e[0],
			a = e[1],
			s = e[2];
		return Math.abs(n - o) <= pt * Math.max(1, Math.abs(n), Math.abs(o)) && Math.abs(r - a) <= pt * Math.max(1, Math.abs(r), Math.abs(a)) && Math.abs(i - s) <= pt * Math.max(1, Math.abs(i), Math.abs(s))
	}
	var ue = Wt,
		he = Ht,
		ce = Zt,
		le = Yt,
		fe = Xt,
		de = jt,
		pe = Kt,
		ve = function() {
			var t = Nt();
			return function(e, n, r, i, o, a) {
				var s, u;
				for (n || (n = 3), r || (r = 0), u = i ? Math.min(i * n + r, e.length) : e.length, s = r; s < u; s += n) t[0] = e[s], t[1] = e[s + 1], t[2] = e[s + 2], o(t, t, a), e[s] = t[0], e[s + 1] = t[1], e[s + 2] = t[2];
				return e
			}
		}(),
		me = Object.freeze({
			__proto__: null,
			create: Nt,
			clone: Ft,
			length: jt,
			fromValues: zt,
			copy: Vt,
			set: function(t, e, n, r) {
				return t[0] = e, t[1] = n, t[2] = r, t
			},
			add: Gt,
			subtract: Wt,
			multiply: Ht,
			divide: Zt,
			ceil: function(t, e) {
				return t[0] = Math.ceil(e[0]), t[1] = Math.ceil(e[1]), t[2] = Math.ceil(e[2]), t
			},
			floor: function(t, e) {
				return t[0] = Math.floor(e[0]), t[1] = Math.floor(e[1]), t[2] = Math.floor(e[2]), t
			},
			min: function(t, e, n) {
				return t[0] = Math.min(e[0], n[0]), t[1] = Math.min(e[1], n[1]), t[2] = Math.min(e[2], n[2]), t
			},
			max: function(t, e, n) {
				return t[0] = Math.max(e[0], n[0]), t[1] = Math.max(e[1], n[1]), t[2] = Math.max(e[2], n[2]), t
			},
			round: function(t, e) {
				return t[0] = Math.round(e[0]), t[1] = Math.round(e[1]), t[2] = Math.round(e[2]), t
			},
			scale: qt,
			scaleAndAdd: function(t, e, n, r) {
				return t[0] = e[0] + n[0] * r, t[1] = e[1] + n[1] * r, t[2] = e[2] + n[2] * r, t
			},
			distance: Yt,
			squaredDistance: Xt,
			squaredLength: Kt,
			negate: function(t, e) {
				return t[0] = -e[0], t[1] = -e[1], t[2] = -e[2], t
			},
			inverse: function(t, e) {
				return t[0] = 1 / e[0], t[1] = 1 / e[1], t[2] = 1 / e[2], t
			},
			normalize: Qt,
			dot: Jt,
			cross: $t,
			lerp: function(t, e, n, r) {
				var i = e[0],
					o = e[1],
					a = e[2];
				return t[0] = i + r * (n[0] - i), t[1] = o + r * (n[1] - o), t[2] = a + r * (n[2] - a), t
			},
			hermite: function(t, e, n, r, i, o) {
				var a = o * o,
					s = a * (2 * o - 3) + 1,
					u = a * (o - 2) + o,
					h = a * (o - 1),
					c = a * (3 - 2 * o);
				return t[0] = e[0] * s + n[0] * u + r[0] * h + i[0] * c, t[1] = e[1] * s + n[1] * u + r[1] * h + i[1] * c, t[2] = e[2] * s + n[2] * u + r[2] * h + i[2] * c, t
			},
			bezier: function(t, e, n, r, i, o) {
				var a = 1 - o,
					s = a * a,
					u = o * o,
					h = s * a,
					c = 3 * o * s,
					l = 3 * u * a,
					f = u * o;
				return t[0] = e[0] * h + n[0] * c + r[0] * l + i[0] * f, t[1] = e[1] * h + n[1] * c + r[1] * l + i[1] * f, t[2] = e[2] * h + n[2] * c + r[2] * l + i[2] * f, t
			},
			random: function(t, e) {
				e = e || 1;
				var n = 2 * mt() * Math.PI,
					r = 2 * mt() - 1,
					i = Math.sqrt(1 - r * r) * e;
				return t[0] = Math.cos(n) * i, t[1] = Math.sin(n) * i, t[2] = r * e, t
			},
			transformMat4: te,
			transformMat3: ee,
			transformQuat: ne,
			rotateX: re,
			rotateY: ie,
			rotateZ: oe,
			angle: ae,
			zero: function(t) {
				return t[0] = 0, t[1] = 0, t[2] = 0, t
			},
			str: function(t) {
				return "vec3(" + t[0] + ", " + t[1] + ", " + t[2] + ")"
			},
			exactEquals: function(t, e) {
				return t[0] === e[0] && t[1] === e[1] && t[2] === e[2]
			},
			equals: se,
			sub: ue,
			mul: he,
			div: ce,
			dist: le,
			sqrDist: fe,
			len: de,
			sqrLen: pe,
			forEach: ve
		});
	const ge = [0, 0, 0];
	let ye, _e;
	class xe extends dt {
		static get ZERO() {
			return ye || (ye = new xe(0, 0, 0), Object.freeze(ye)), ye
		}
		constructor(t = 0, e = 0, n = 0) {
			super(-0, -0, -0), 1 === arguments.length && ut(t) ? this.copy(t) : (at.debug && (lt(t), lt(e), lt(n)), this[0] = t, this[1] = e, this[2] = n)
		}
		set(t, e, n) {
			return this[0] = t, this[1] = e, this[2] = n, this.check()
		}
		copy(t) {
			return this[0] = t[0], this[1] = t[1], this[2] = t[2], this.check()
		}
		fromObject(t) {
			return at.debug && (lt(t.x), lt(t.y), lt(t.z)), this[0] = t.x, this[1] = t.y, this[2] = t.z, this.check()
		}
		toObject(t) {
			return t.x = this[0], t.y = this[1], t.z = this[2], t
		}
		get ELEMENTS() {
			return 3
		}
		get z() {
			return this[2]
		}
		set z(t) {
			this[2] = lt(t)
		}
		angle(t) {
			return ae(this, t)
		}
		cross(t) {
			return $t(this, this, t), this.check()
		}
		rotateX({
			radians: t,
			origin: e = ge
		}) {
			return re(this, this, e, t), this.check()
		}
		rotateY({
			radians: t,
			origin: e = ge
		}) {
			return ie(this, this, e, t), this.check()
		}
		rotateZ({
			radians: t,
			origin: e = ge
		}) {
			return oe(this, this, e, t), this.check()
		}
		transform(t) {
			return this.transformAsPoint(t)
		}
		transformAsPoint(t) {
			return te(this, this, t), this.check()
		}
		transformAsVector(t) {
			return Ut(this, this, t), this.check()
		}
		transformByMatrix3(t) {
			return ee(this, this, t), this.check()
		}
		transformByMatrix2(t) {
			return function(t, e, n) {
				const r = e[0],
					i = e[1];
				t[0] = n[0] * r + n[2] * i, t[1] = n[1] * r + n[3] * i, t[2] = e[2]
			}(this, this, t), this.check()
		}
		transformByQuaternion(t) {
			return ne(this, this, t), this.check()
		}
	}
	class be extends dt {
		static get ZERO() {
			return _e || (_e = new be(0, 0, 0, 0), Object.freeze(_e)), _e
		}
		constructor(t = 0, e = 0, n = 0, r = 0) {
			super(-0, -0, -0, -0), ut(t) && 1 === arguments.length ? this.copy(t) : (at.debug && (lt(t), lt(e), lt(n), lt(r)), this[0] = t, this[1] = e, this[2] = n, this[3] = r)
		}
		set(t, e, n, r) {
			return this[0] = t, this[1] = e, this[2] = n, this[3] = r, this.check()
		}
		copy(t) {
			return this[0] = t[0], this[1] = t[1], this[2] = t[2], this[3] = t[3], this.check()
		}
		fromObject(t) {
			return at.debug && (lt(t.x), lt(t.y), lt(t.z), lt(t.w)), this[0] = t.x, this[1] = t.y, this[2] = t.z, this[3] = t.w, this
		}
		toObject(t) {
			return t.x = this[0], t.y = this[1], t.z = this[2], t.w = this[3], t
		}
		get ELEMENTS() {
			return 4
		}
		get z() {
			return this[2]
		}
		set z(t) {
			this[2] = lt(t)
		}
		get w() {
			return this[3]
		}
		set w(t) {
			this[3] = lt(t)
		}
		transform(t) {
			return te(this, this, t), this.check()
		}
		transformByMatrix3(t) {
			return function(t, e, n) {
				const r = e[0],
					i = e[1],
					o = e[2];
				t[0] = n[0] * r + n[3] * i + n[6] * o, t[1] = n[1] * r + n[4] * i + n[7] * o, t[2] = n[2] * r + n[5] * i + n[8] * o, t[3] = e[3]
			}(this, this, t), this.check()
		}
		transformByMatrix2(t) {
			return function(t, e, n) {
				const r = e[0],
					i = e[1];
				t[0] = n[0] * r + n[2] * i, t[1] = n[1] * r + n[3] * i, t[2] = e[2], t[3] = e[3]
			}(this, this, t), this.check()
		}
		transformByQuaternion(t) {
			return ne(this, this, t), this.check()
		}
		applyMatrix4(t) {
			return t.transform(this, this), this
		}
	}
	class Me extends ct {
		toString() {
			let t = "[";
			if (at.printRowMajor) {
				t += "row-major:";
				for (let e = 0; e < this.RANK; ++e)
					for (let n = 0; n < this.RANK; ++n) t += " ".concat(this[n * this.RANK + e])
			} else {
				t += "column-major:";
				for (let e = 0; e < this.ELEMENTS; ++e) t += " ".concat(this[e])
			}
			return t += "]", t
		}
		getElementIndex(t, e) {
			return e * this.RANK + t
		}
		getElement(t, e) {
			return this[e * this.RANK + t]
		}
		setElement(t, e, n) {
			return this[e * this.RANK + t] = lt(n), this
		}
		getColumn(t, e = new Array(this.RANK)
			.fill(-0)) {
			const n = t * this.RANK;
			for (let t = 0; t < this.RANK; ++t) e[t] = this[n + t];
			return e
		}
		setColumn(t, e) {
			const n = t * this.RANK;
			for (let t = 0; t < this.RANK; ++t) this[n + t] = e[t];
			return this
		}
	}

	function we() {
		var t = new vt(9);
		return vt != Float32Array && (t[1] = 0, t[2] = 0, t[3] = 0, t[5] = 0, t[6] = 0, t[7] = 0), t[0] = 1, t[4] = 1, t[8] = 1, t
	}

	function Ee(t, e, n) {
		var r = e[0],
			i = e[1],
			o = e[2],
			a = e[3],
			s = e[4],
			u = e[5],
			h = e[6],
			c = e[7],
			l = e[8],
			f = n[0],
			d = n[1],
			p = n[2],
			v = n[3],
			m = n[4],
			g = n[5],
			y = n[6],
			_ = n[7],
			x = n[8];
		return t[0] = f * r + d * a + p * h, t[1] = f * i + d * s + p * c, t[2] = f * o + d * u + p * l, t[3] = v * r + m * a + g * h, t[4] = v * i + m * s + g * c, t[5] = v * o + m * u + g * l, t[6] = y * r + _ * a + x * h, t[7] = y * i + _ * s + x * c, t[8] = y * o + _ * u + x * l, t
	}

	function Te(t, e, n) {
		return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t[2] = e[2] - n[2], t[3] = e[3] - n[3], t[4] = e[4] - n[4], t[5] = e[5] - n[5], t[6] = e[6] - n[6], t[7] = e[7] - n[7], t[8] = e[8] - n[8], t
	}
	var Ae = Ee,
		Ce = Te,
		Re = Object.freeze({
			__proto__: null,
			create: we,
			fromMat4: function(t, e) {
				return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[4], t[4] = e[5], t[5] = e[6], t[6] = e[8], t[7] = e[9], t[8] = e[10], t
			},
			clone: function(t) {
				var e = new vt(9);
				return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4], e[5] = t[5], e[6] = t[6], e[7] = t[7], e[8] = t[8], e
			},
			copy: function(t, e) {
				return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[4] = e[4], t[5] = e[5], t[6] = e[6], t[7] = e[7], t[8] = e[8], t
			},
			fromValues: function(t, e, n, r, i, o, a, s, u) {
				var h = new vt(9);
				return h[0] = t, h[1] = e, h[2] = n, h[3] = r, h[4] = i, h[5] = o, h[6] = a, h[7] = s, h[8] = u, h
			},
			set: function(t, e, n, r, i, o, a, s, u, h) {
				return t[0] = e, t[1] = n, t[2] = r, t[3] = i, t[4] = o, t[5] = a, t[6] = s, t[7] = u, t[8] = h, t
			},
			identity: function(t) {
				return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 1, t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 1, t
			},
			transpose: function(t, e) {
				if (t === e) {
					var n = e[1],
						r = e[2],
						i = e[5];
					t[1] = e[3], t[2] = e[6], t[3] = n, t[5] = e[7], t[6] = r, t[7] = i
				} else t[0] = e[0], t[1] = e[3], t[2] = e[6], t[3] = e[1], t[4] = e[4], t[5] = e[7], t[6] = e[2], t[7] = e[5], t[8] = e[8];
				return t
			},
			invert: function(t, e) {
				var n = e[0],
					r = e[1],
					i = e[2],
					o = e[3],
					a = e[4],
					s = e[5],
					u = e[6],
					h = e[7],
					c = e[8],
					l = c * a - s * h,
					f = -c * o + s * u,
					d = h * o - a * u,
					p = n * l + r * f + i * d;
				return p ? (p = 1 / p, t[0] = l * p, t[1] = (-c * r + i * h) * p, t[2] = (s * r - i * a) * p, t[3] = f * p, t[4] = (c * n - i * u) * p, t[5] = (-s * n + i * o) * p, t[6] = d * p, t[7] = (-h * n + r * u) * p, t[8] = (a * n - r * o) * p, t) : null
			},
			adjoint: function(t, e) {
				var n = e[0],
					r = e[1],
					i = e[2],
					o = e[3],
					a = e[4],
					s = e[5],
					u = e[6],
					h = e[7],
					c = e[8];
				return t[0] = a * c - s * h, t[1] = i * h - r * c, t[2] = r * s - i * a, t[3] = s * u - o * c, t[4] = n * c - i * u, t[5] = i * o - n * s, t[6] = o * h - a * u, t[7] = r * u - n * h, t[8] = n * a - r * o, t
			},
			determinant: function(t) {
				var e = t[0],
					n = t[1],
					r = t[2],
					i = t[3],
					o = t[4],
					a = t[5],
					s = t[6],
					u = t[7],
					h = t[8];
				return e * (h * o - a * u) + n * (-h * i + a * s) + r * (u * i - o * s)
			},
			multiply: Ee,
			translate: function(t, e, n) {
				var r = e[0],
					i = e[1],
					o = e[2],
					a = e[3],
					s = e[4],
					u = e[5],
					h = e[6],
					c = e[7],
					l = e[8],
					f = n[0],
					d = n[1];
				return t[0] = r, t[1] = i, t[2] = o, t[3] = a, t[4] = s, t[5] = u, t[6] = f * r + d * a + h, t[7] = f * i + d * s + c, t[8] = f * o + d * u + l, t
			},
			rotate: function(t, e, n) {
				var r = e[0],
					i = e[1],
					o = e[2],
					a = e[3],
					s = e[4],
					u = e[5],
					h = e[6],
					c = e[7],
					l = e[8],
					f = Math.sin(n),
					d = Math.cos(n);
				return t[0] = d * r + f * a, t[1] = d * i + f * s, t[2] = d * o + f * u, t[3] = d * a - f * r, t[4] = d * s - f * i, t[5] = d * u - f * o, t[6] = h, t[7] = c, t[8] = l, t
			},
			scale: function(t, e, n) {
				var r = n[0],
					i = n[1];
				return t[0] = r * e[0], t[1] = r * e[1], t[2] = r * e[2], t[3] = i * e[3], t[4] = i * e[4], t[5] = i * e[5], t[6] = e[6], t[7] = e[7], t[8] = e[8], t
			},
			fromTranslation: function(t, e) {
				return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 1, t[5] = 0, t[6] = e[0], t[7] = e[1], t[8] = 1, t
			},
			fromRotation: function(t, e) {
				var n = Math.sin(e),
					r = Math.cos(e);
				return t[0] = r, t[1] = n, t[2] = 0, t[3] = -n, t[4] = r, t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 1, t
			},
			fromScaling: function(t, e) {
				return t[0] = e[0], t[1] = 0, t[2] = 0, t[3] = 0, t[4] = e[1], t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 1, t
			},
			fromMat2d: function(t, e) {
				return t[0] = e[0], t[1] = e[1], t[2] = 0, t[3] = e[2], t[4] = e[3], t[5] = 0, t[6] = e[4], t[7] = e[5], t[8] = 1, t
			},
			fromQuat: function(t, e) {
				var n = e[0],
					r = e[1],
					i = e[2],
					o = e[3],
					a = n + n,
					s = r + r,
					u = i + i,
					h = n * a,
					c = r * a,
					l = r * s,
					f = i * a,
					d = i * s,
					p = i * u,
					v = o * a,
					m = o * s,
					g = o * u;
				return t[0] = 1 - l - p, t[3] = c - g, t[6] = f + m, t[1] = c + g, t[4] = 1 - h - p, t[7] = d - v, t[2] = f - m, t[5] = d + v, t[8] = 1 - h - l, t
			},
			normalFromMat4: function(t, e) {
				var n = e[0],
					r = e[1],
					i = e[2],
					o = e[3],
					a = e[4],
					s = e[5],
					u = e[6],
					h = e[7],
					c = e[8],
					l = e[9],
					f = e[10],
					d = e[11],
					p = e[12],
					v = e[13],
					m = e[14],
					g = e[15],
					y = n * s - r * a,
					_ = n * u - i * a,
					x = n * h - o * a,
					b = r * u - i * s,
					M = r * h - o * s,
					w = i * h - o * u,
					E = c * v - l * p,
					T = c * m - f * p,
					A = c * g - d * p,
					C = l * m - f * v,
					R = l * g - d * v,
					S = f * g - d * m,
					P = y * S - _ * R + x * C + b * A - M * T + w * E;
				return P ? (P = 1 / P, t[0] = (s * S - u * R + h * C) * P, t[1] = (u * A - a * S - h * T) * P, t[2] = (a * R - s * A + h * E) * P, t[3] = (i * R - r * S - o * C) * P, t[4] = (n * S - i * A + o * T) * P, t[5] = (r * A - n * R - o * E) * P, t[6] = (v * w - m * M + g * b) * P, t[7] = (m * x - p * w - g * _) * P, t[8] = (p * M - v * x + g * y) * P, t) : null
			},
			projection: function(t, e, n) {
				return t[0] = 2 / e, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = -2 / n, t[5] = 0, t[6] = -1, t[7] = 1, t[8] = 1, t
			},
			str: function(t) {
				return "mat3(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ")"
			},
			frob: function(t) {
				return Math.hypot(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8])
			},
			add: function(t, e, n) {
				return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t[2] = e[2] + n[2], t[3] = e[3] + n[3], t[4] = e[4] + n[4], t[5] = e[5] + n[5], t[6] = e[6] + n[6], t[7] = e[7] + n[7], t[8] = e[8] + n[8], t
			},
			subtract: Te,
			multiplyScalar: function(t, e, n) {
				return t[0] = e[0] * n, t[1] = e[1] * n, t[2] = e[2] * n, t[3] = e[3] * n, t[4] = e[4] * n, t[5] = e[5] * n, t[6] = e[6] * n, t[7] = e[7] * n, t[8] = e[8] * n, t
			},
			multiplyScalarAndAdd: function(t, e, n, r) {
				return t[0] = e[0] + n[0] * r, t[1] = e[1] + n[1] * r, t[2] = e[2] + n[2] * r, t[3] = e[3] + n[3] * r, t[4] = e[4] + n[4] * r, t[5] = e[5] + n[5] * r, t[6] = e[6] + n[6] * r, t[7] = e[7] + n[7] * r, t[8] = e[8] + n[8] * r, t
			},
			exactEquals: function(t, e) {
				return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3] && t[4] === e[4] && t[5] === e[5] && t[6] === e[6] && t[7] === e[7] && t[8] === e[8]
			},
			equals: function(t, e) {
				var n = t[0],
					r = t[1],
					i = t[2],
					o = t[3],
					a = t[4],
					s = t[5],
					u = t[6],
					h = t[7],
					c = t[8],
					l = e[0],
					f = e[1],
					d = e[2],
					p = e[3],
					v = e[4],
					m = e[5],
					g = e[6],
					y = e[7],
					_ = e[8];
				return Math.abs(n - l) <= pt * Math.max(1, Math.abs(n), Math.abs(l)) && Math.abs(r - f) <= pt * Math.max(1, Math.abs(r), Math.abs(f)) && Math.abs(i - d) <= pt * Math.max(1, Math.abs(i), Math.abs(d)) && Math.abs(o - p) <= pt * Math.max(1, Math.abs(o), Math.abs(p)) && Math.abs(a - v) <= pt * Math.max(1, Math.abs(a), Math.abs(v)) && Math.abs(s - m) <= pt * Math.max(1, Math.abs(s), Math.abs(m)) && Math.abs(u - g) <= pt * Math.max(1, Math.abs(u), Math.abs(g)) && Math.abs(h - y) <= pt * Math.max(1, Math.abs(h), Math.abs(y)) && Math.abs(c - _) <= pt * Math.max(1, Math.abs(c), Math.abs(_))
			},
			mul: Ae,
			sub: Ce
		});

	function Se() {
		var t = new vt(16);
		return vt != Float32Array && (t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0), t[0] = 1, t[5] = 1, t[10] = 1, t[15] = 1, t
	}

	function Pe(t) {
		var e = new vt(16);
		return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4], e[5] = t[5], e[6] = t[6], e[7] = t[7], e[8] = t[8], e[9] = t[9], e[10] = t[10], e[11] = t[11], e[12] = t[12], e[13] = t[13], e[14] = t[14], e[15] = t[15], e
	}

	function De(t, e) {
		return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[4] = e[4], t[5] = e[5], t[6] = e[6], t[7] = e[7], t[8] = e[8], t[9] = e[9], t[10] = e[10], t[11] = e[11], t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15], t
	}

	function Oe(t) {
		return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 1, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 1, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t
	}

	function Ie(t, e) {
		if (t === e) {
			var n = e[1],
				r = e[2],
				i = e[3],
				o = e[6],
				a = e[7],
				s = e[11];
			t[1] = e[4], t[2] = e[8], t[3] = e[12], t[4] = n, t[6] = e[9], t[7] = e[13], t[8] = r, t[9] = o, t[11] = e[14], t[12] = i, t[13] = a, t[14] = s
		} else t[0] = e[0], t[1] = e[4], t[2] = e[8], t[3] = e[12], t[4] = e[1], t[5] = e[5], t[6] = e[9], t[7] = e[13], t[8] = e[2], t[9] = e[6], t[10] = e[10], t[11] = e[14], t[12] = e[3], t[13] = e[7], t[14] = e[11], t[15] = e[15];
		return t
	}

	function Le(t, e) {
		var n = e[0],
			r = e[1],
			i = e[2],
			o = e[3],
			a = e[4],
			s = e[5],
			u = e[6],
			h = e[7],
			c = e[8],
			l = e[9],
			f = e[10],
			d = e[11],
			p = e[12],
			v = e[13],
			m = e[14],
			g = e[15],
			y = n * s - r * a,
			_ = n * u - i * a,
			x = n * h - o * a,
			b = r * u - i * s,
			M = r * h - o * s,
			w = i * h - o * u,
			E = c * v - l * p,
			T = c * m - f * p,
			A = c * g - d * p,
			C = l * m - f * v,
			R = l * g - d * v,
			S = f * g - d * m,
			P = y * S - _ * R + x * C + b * A - M * T + w * E;
		return P ? (P = 1 / P, t[0] = (s * S - u * R + h * C) * P, t[1] = (i * R - r * S - o * C) * P, t[2] = (v * w - m * M + g * b) * P, t[3] = (f * M - l * w - d * b) * P, t[4] = (u * A - a * S - h * T) * P, t[5] = (n * S - i * A + o * T) * P, t[6] = (m * x - p * w - g * _) * P, t[7] = (c * w - f * x + d * _) * P, t[8] = (a * R - s * A + h * E) * P, t[9] = (r * A - n * R - o * E) * P, t[10] = (p * M - v * x + g * y) * P, t[11] = (l * x - c * M - d * y) * P, t[12] = (s * T - a * C - u * E) * P, t[13] = (n * C - r * T + i * E) * P, t[14] = (v * _ - p * b - m * y) * P, t[15] = (c * b - l * _ + f * y) * P, t) : null
	}

	function Be(t) {
		var e = t[0],
			n = t[1],
			r = t[2],
			i = t[3],
			o = t[4],
			a = t[5],
			s = t[6],
			u = t[7],
			h = t[8],
			c = t[9],
			l = t[10],
			f = t[11],
			d = t[12],
			p = t[13],
			v = t[14],
			m = t[15];
		return (e * a - n * o) * (l * m - f * v) - (e * s - r * o) * (c * m - f * p) + (e * u - i * o) * (c * v - l * p) + (n * s - r * a) * (h * m - f * d) - (n * u - i * a) * (h * v - l * d) + (r * u - i * s) * (h * p - c * d)
	}

	function ke(t, e, n) {
		var r = e[0],
			i = e[1],
			o = e[2],
			a = e[3],
			s = e[4],
			u = e[5],
			h = e[6],
			c = e[7],
			l = e[8],
			f = e[9],
			d = e[10],
			p = e[11],
			v = e[12],
			m = e[13],
			g = e[14],
			y = e[15],
			_ = n[0],
			x = n[1],
			b = n[2],
			M = n[3];
		return t[0] = _ * r + x * s + b * l + M * v, t[1] = _ * i + x * u + b * f + M * m, t[2] = _ * o + x * h + b * d + M * g, t[3] = _ * a + x * c + b * p + M * y, _ = n[4], x = n[5], b = n[6], M = n[7], t[4] = _ * r + x * s + b * l + M * v, t[5] = _ * i + x * u + b * f + M * m, t[6] = _ * o + x * h + b * d + M * g, t[7] = _ * a + x * c + b * p + M * y, _ = n[8], x = n[9], b = n[10], M = n[11], t[8] = _ * r + x * s + b * l + M * v, t[9] = _ * i + x * u + b * f + M * m, t[10] = _ * o + x * h + b * d + M * g, t[11] = _ * a + x * c + b * p + M * y, _ = n[12], x = n[13], b = n[14], M = n[15], t[12] = _ * r + x * s + b * l + M * v, t[13] = _ * i + x * u + b * f + M * m, t[14] = _ * o + x * h + b * d + M * g, t[15] = _ * a + x * c + b * p + M * y, t
	}

	function Ue(t, e, n) {
		var r, i, o, a, s, u, h, c, l, f, d, p, v = n[0],
			m = n[1],
			g = n[2];
		return e === t ? (t[12] = e[0] * v + e[4] * m + e[8] * g + e[12], t[13] = e[1] * v + e[5] * m + e[9] * g + e[13], t[14] = e[2] * v + e[6] * m + e[10] * g + e[14], t[15] = e[3] * v + e[7] * m + e[11] * g + e[15]) : (r = e[0], i = e[1], o = e[2], a = e[3], s = e[4], u = e[5], h = e[6], c = e[7], l = e[8], f = e[9], d = e[10], p = e[11], t[0] = r, t[1] = i, t[2] = o, t[3] = a, t[4] = s, t[5] = u, t[6] = h, t[7] = c, t[8] = l, t[9] = f, t[10] = d, t[11] = p, t[12] = r * v + s * m + l * g + e[12], t[13] = i * v + u * m + f * g + e[13], t[14] = o * v + h * m + d * g + e[14], t[15] = a * v + c * m + p * g + e[15]), t
	}

	function Ne(t, e, n) {
		var r = n[0],
			i = n[1],
			o = n[2];
		return t[0] = e[0] * r, t[1] = e[1] * r, t[2] = e[2] * r, t[3] = e[3] * r, t[4] = e[4] * i, t[5] = e[5] * i, t[6] = e[6] * i, t[7] = e[7] * i, t[8] = e[8] * o, t[9] = e[9] * o, t[10] = e[10] * o, t[11] = e[11] * o, t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15], t
	}

	function Fe(t, e, n, r) {
		var i, o, a, s, u, h, c, l, f, d, p, v, m, g, y, _, x, b, M, w, E, T, A, C, R = r[0],
			S = r[1],
			P = r[2],
			D = Math.hypot(R, S, P);
		return D < pt ? null : (R *= D = 1 / D, S *= D, P *= D, i = Math.sin(n), a = 1 - (o = Math.cos(n)), s = e[0], u = e[1], h = e[2], c = e[3], l = e[4], f = e[5], d = e[6], p = e[7], v = e[8], m = e[9], g = e[10], y = e[11], _ = R * R * a + o, x = S * R * a + P * i, b = P * R * a - S * i, M = R * S * a - P * i, w = S * S * a + o, E = P * S * a + R * i, T = R * P * a + S * i, A = S * P * a - R * i, C = P * P * a + o, t[0] = s * _ + l * x + v * b, t[1] = u * _ + f * x + m * b, t[2] = h * _ + d * x + g * b, t[3] = c * _ + p * x + y * b, t[4] = s * M + l * w + v * E, t[5] = u * M + f * w + m * E, t[6] = h * M + d * w + g * E, t[7] = c * M + p * w + y * E, t[8] = s * T + l * A + v * C, t[9] = u * T + f * A + m * C, t[10] = h * T + d * A + g * C, t[11] = c * T + p * A + y * C, e !== t && (t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15]), t)
	}

	function je(t, e, n) {
		var r = Math.sin(n),
			i = Math.cos(n),
			o = e[4],
			a = e[5],
			s = e[6],
			u = e[7],
			h = e[8],
			c = e[9],
			l = e[10],
			f = e[11];
		return e !== t && (t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15]), t[4] = o * i + h * r, t[5] = a * i + c * r, t[6] = s * i + l * r, t[7] = u * i + f * r, t[8] = h * i - o * r, t[9] = c * i - a * r, t[10] = l * i - s * r, t[11] = f * i - u * r, t
	}

	function ze(t, e, n) {
		var r = Math.sin(n),
			i = Math.cos(n),
			o = e[0],
			a = e[1],
			s = e[2],
			u = e[3],
			h = e[8],
			c = e[9],
			l = e[10],
			f = e[11];
		return e !== t && (t[4] = e[4], t[5] = e[5], t[6] = e[6], t[7] = e[7], t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15]), t[0] = o * i - h * r, t[1] = a * i - c * r, t[2] = s * i - l * r, t[3] = u * i - f * r, t[8] = o * r + h * i, t[9] = a * r + c * i, t[10] = s * r + l * i, t[11] = u * r + f * i, t
	}

	function Ve(t, e, n) {
		var r = Math.sin(n),
			i = Math.cos(n),
			o = e[0],
			a = e[1],
			s = e[2],
			u = e[3],
			h = e[4],
			c = e[5],
			l = e[6],
			f = e[7];
		return e !== t && (t[8] = e[8], t[9] = e[9], t[10] = e[10], t[11] = e[11], t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15]), t[0] = o * i + h * r, t[1] = a * i + c * r, t[2] = s * i + l * r, t[3] = u * i + f * r, t[4] = h * i - o * r, t[5] = c * i - a * r, t[6] = l * i - s * r, t[7] = f * i - u * r, t
	}

	function Ge(t, e, n) {
		var r = e[0],
			i = e[1],
			o = e[2],
			a = e[3],
			s = r + r,
			u = i + i,
			h = o + o,
			c = r * s,
			l = r * u,
			f = r * h,
			d = i * u,
			p = i * h,
			v = o * h,
			m = a * s,
			g = a * u,
			y = a * h;
		return t[0] = 1 - (d + v), t[1] = l + y, t[2] = f - g, t[3] = 0, t[4] = l - y, t[5] = 1 - (c + v), t[6] = p + m, t[7] = 0, t[8] = f + g, t[9] = p - m, t[10] = 1 - (c + d), t[11] = 0, t[12] = n[0], t[13] = n[1], t[14] = n[2], t[15] = 1, t
	}

	function We(t, e) {
		var n = e[0],
			r = e[1],
			i = e[2],
			o = e[4],
			a = e[5],
			s = e[6],
			u = e[8],
			h = e[9],
			c = e[10];
		return t[0] = Math.hypot(n, r, i), t[1] = Math.hypot(o, a, s), t[2] = Math.hypot(u, h, c), t
	}

	function He(t, e) {
		var n = new vt(3);
		We(n, e);
		var r = 1 / n[0],
			i = 1 / n[1],
			o = 1 / n[2],
			a = e[0] * r,
			s = e[1] * i,
			u = e[2] * o,
			h = e[4] * r,
			c = e[5] * i,
			l = e[6] * o,
			f = e[8] * r,
			d = e[9] * i,
			p = e[10] * o,
			v = a + c + p,
			m = 0;
		return v > 0 ? (m = 2 * Math.sqrt(v + 1), t[3] = .25 * m, t[0] = (l - d) / m, t[1] = (f - u) / m, t[2] = (s - h) / m) : a > c && a > p ? (m = 2 * Math.sqrt(1 + a - c - p), t[3] = (l - d) / m, t[0] = .25 * m, t[1] = (s + h) / m, t[2] = (f + u) / m) : c > p ? (m = 2 * Math.sqrt(1 + c - a - p), t[3] = (f - u) / m, t[0] = (s + h) / m, t[1] = .25 * m, t[2] = (l + d) / m) : (m = 2 * Math.sqrt(1 + p - a - c), t[3] = (s - h) / m, t[0] = (f + u) / m, t[1] = (l + d) / m, t[2] = .25 * m), t
	}

	function Ze(t, e, n, r) {
		var i = e[0],
			o = e[1],
			a = e[2],
			s = e[3],
			u = i + i,
			h = o + o,
			c = a + a,
			l = i * u,
			f = i * h,
			d = i * c,
			p = o * h,
			v = o * c,
			m = a * c,
			g = s * u,
			y = s * h,
			_ = s * c,
			x = r[0],
			b = r[1],
			M = r[2];
		return t[0] = (1 - (p + m)) * x, t[1] = (f + _) * x, t[2] = (d - y) * x, t[3] = 0, t[4] = (f - _) * b, t[5] = (1 - (l + m)) * b, t[6] = (v + g) * b, t[7] = 0, t[8] = (d + y) * M, t[9] = (v - g) * M, t[10] = (1 - (l + p)) * M, t[11] = 0, t[12] = n[0], t[13] = n[1], t[14] = n[2], t[15] = 1, t
	}

	function qe(t, e) {
		var n = e[0],
			r = e[1],
			i = e[2],
			o = e[3],
			a = n + n,
			s = r + r,
			u = i + i,
			h = n * a,
			c = r * a,
			l = r * s,
			f = i * a,
			d = i * s,
			p = i * u,
			v = o * a,
			m = o * s,
			g = o * u;
		return t[0] = 1 - l - p, t[1] = c + g, t[2] = f - m, t[3] = 0, t[4] = c - g, t[5] = 1 - h - p, t[6] = d + v, t[7] = 0, t[8] = f + m, t[9] = d - v, t[10] = 1 - h - l, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t
	}

	function Ye(t, e, n, r, i, o, a) {
		var s = 1 / (n - e),
			u = 1 / (i - r),
			h = 1 / (o - a);
		return t[0] = 2 * o * s, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 2 * o * u, t[6] = 0, t[7] = 0, t[8] = (n + e) * s, t[9] = (i + r) * u, t[10] = (a + o) * h, t[11] = -1, t[12] = 0, t[13] = 0, t[14] = a * o * 2 * h, t[15] = 0, t
	}

	function Xe(t, e, n, r, i) {
		var o, a = 1 / Math.tan(e / 2);
		return t[0] = a / n, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = a, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[11] = -1, t[12] = 0, t[13] = 0, t[15] = 0, null != i && i !== 1 / 0 ? (o = 1 / (r - i), t[10] = (i + r) * o, t[14] = 2 * i * r * o) : (t[10] = -1, t[14] = -2 * r), t
	}
	var Ke = Xe;

	function Qe(t, e, n, r, i, o, a) {
		var s = 1 / (e - n),
			u = 1 / (r - i),
			h = 1 / (o - a);
		return t[0] = -2 * s, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = -2 * u, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 2 * h, t[11] = 0, t[12] = (e + n) * s, t[13] = (i + r) * u, t[14] = (a + o) * h, t[15] = 1, t
	}
	var Je = Qe;

	function $e(t, e, n, r) {
		var i, o, a, s, u, h, c, l, f, d, p = e[0],
			v = e[1],
			m = e[2],
			g = r[0],
			y = r[1],
			_ = r[2],
			x = n[0],
			b = n[1],
			M = n[2];
		return Math.abs(p - x) < pt && Math.abs(v - b) < pt && Math.abs(m - M) < pt ? Oe(t) : (c = p - x, l = v - b, f = m - M, i = y * (f *= d = 1 / Math.hypot(c, l, f)) - _ * (l *= d), o = _ * (c *= d) - g * f, a = g * l - y * c, (d = Math.hypot(i, o, a)) ? (i *= d = 1 / d, o *= d, a *= d) : (i = 0, o = 0, a = 0), s = l * a - f * o, u = f * i - c * a, h = c * o - l * i, (d = Math.hypot(s, u, h)) ? (s *= d = 1 / d, u *= d, h *= d) : (s = 0, u = 0, h = 0), t[0] = i, t[1] = s, t[2] = c, t[3] = 0, t[4] = o, t[5] = u, t[6] = l, t[7] = 0, t[8] = a, t[9] = h, t[10] = f, t[11] = 0, t[12] = -(i * p + o * v + a * m), t[13] = -(s * p + u * v + h * m), t[14] = -(c * p + l * v + f * m), t[15] = 1, t)
	}

	function tn(t, e, n, r) {
		var i = e[0],
			o = e[1],
			a = e[2],
			s = r[0],
			u = r[1],
			h = r[2],
			c = i - n[0],
			l = o - n[1],
			f = a - n[2],
			d = c * c + l * l + f * f;
		d > 0 && (c *= d = 1 / Math.sqrt(d), l *= d, f *= d);
		var p = u * f - h * l,
			v = h * c - s * f,
			m = s * l - u * c;
		return (d = p * p + v * v + m * m) > 0 && (p *= d = 1 / Math.sqrt(d), v *= d, m *= d), t[0] = p, t[1] = v, t[2] = m, t[3] = 0, t[4] = l * m - f * v, t[5] = f * p - c * m, t[6] = c * v - l * p, t[7] = 0, t[8] = c, t[9] = l, t[10] = f, t[11] = 0, t[12] = i, t[13] = o, t[14] = a, t[15] = 1, t
	}

	function en(t, e, n) {
		return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t[2] = e[2] - n[2], t[3] = e[3] - n[3], t[4] = e[4] - n[4], t[5] = e[5] - n[5], t[6] = e[6] - n[6], t[7] = e[7] - n[7], t[8] = e[8] - n[8], t[9] = e[9] - n[9], t[10] = e[10] - n[10], t[11] = e[11] - n[11], t[12] = e[12] - n[12], t[13] = e[13] - n[13], t[14] = e[14] - n[14], t[15] = e[15] - n[15], t
	}
	var nn = ke,
		rn = en,
		on = Object.freeze({
			__proto__: null,
			create: Se,
			clone: Pe,
			copy: De,
			fromValues: function(t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v) {
				var m = new vt(16);
				return m[0] = t, m[1] = e, m[2] = n, m[3] = r, m[4] = i, m[5] = o, m[6] = a, m[7] = s, m[8] = u, m[9] = h, m[10] = c, m[11] = l, m[12] = f, m[13] = d, m[14] = p, m[15] = v, m
			},
			set: function(t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v, m) {
				return t[0] = e, t[1] = n, t[2] = r, t[3] = i, t[4] = o, t[5] = a, t[6] = s, t[7] = u, t[8] = h, t[9] = c, t[10] = l, t[11] = f, t[12] = d, t[13] = p, t[14] = v, t[15] = m, t
			},
			identity: Oe,
			transpose: Ie,
			invert: Le,
			adjoint: function(t, e) {
				var n = e[0],
					r = e[1],
					i = e[2],
					o = e[3],
					a = e[4],
					s = e[5],
					u = e[6],
					h = e[7],
					c = e[8],
					l = e[9],
					f = e[10],
					d = e[11],
					p = e[12],
					v = e[13],
					m = e[14],
					g = e[15];
				return t[0] = s * (f * g - d * m) - l * (u * g - h * m) + v * (u * d - h * f), t[1] = -(r * (f * g - d * m) - l * (i * g - o * m) + v * (i * d - o * f)), t[2] = r * (u * g - h * m) - s * (i * g - o * m) + v * (i * h - o * u), t[3] = -(r * (u * d - h * f) - s * (i * d - o * f) + l * (i * h - o * u)), t[4] = -(a * (f * g - d * m) - c * (u * g - h * m) + p * (u * d - h * f)), t[5] = n * (f * g - d * m) - c * (i * g - o * m) + p * (i * d - o * f), t[6] = -(n * (u * g - h * m) - a * (i * g - o * m) + p * (i * h - o * u)), t[7] = n * (u * d - h * f) - a * (i * d - o * f) + c * (i * h - o * u), t[8] = a * (l * g - d * v) - c * (s * g - h * v) + p * (s * d - h * l), t[9] = -(n * (l * g - d * v) - c * (r * g - o * v) + p * (r * d - o * l)), t[10] = n * (s * g - h * v) - a * (r * g - o * v) + p * (r * h - o * s), t[11] = -(n * (s * d - h * l) - a * (r * d - o * l) + c * (r * h - o * s)), t[12] = -(a * (l * m - f * v) - c * (s * m - u * v) + p * (s * f - u * l)), t[13] = n * (l * m - f * v) - c * (r * m - i * v) + p * (r * f - i * l), t[14] = -(n * (s * m - u * v) - a * (r * m - i * v) + p * (r * u - i * s)), t[15] = n * (s * f - u * l) - a * (r * f - i * l) + c * (r * u - i * s), t
			},
			determinant: Be,
			multiply: ke,
			translate: Ue,
			scale: Ne,
			rotate: Fe,
			rotateX: je,
			rotateY: ze,
			rotateZ: Ve,
			fromTranslation: function(t, e) {
				return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 1, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 1, t[11] = 0, t[12] = e[0], t[13] = e[1], t[14] = e[2], t[15] = 1, t
			},
			fromScaling: function(t, e) {
				return t[0] = e[0], t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = e[1], t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = e[2], t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t
			},
			fromRotation: function(t, e, n) {
				var r, i, o, a = n[0],
					s = n[1],
					u = n[2],
					h = Math.hypot(a, s, u);
				return h < pt ? null : (a *= h = 1 / h, s *= h, u *= h, r = Math.sin(e), o = 1 - (i = Math.cos(e)), t[0] = a * a * o + i, t[1] = s * a * o + u * r, t[2] = u * a * o - s * r, t[3] = 0, t[4] = a * s * o - u * r, t[5] = s * s * o + i, t[6] = u * s * o + a * r, t[7] = 0, t[8] = a * u * o + s * r, t[9] = s * u * o - a * r, t[10] = u * u * o + i, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t)
			},
			fromXRotation: function(t, e) {
				var n = Math.sin(e),
					r = Math.cos(e);
				return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = r, t[6] = n, t[7] = 0, t[8] = 0, t[9] = -n, t[10] = r, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t
			},
			fromYRotation: function(t, e) {
				var n = Math.sin(e),
					r = Math.cos(e);
				return t[0] = r, t[1] = 0, t[2] = -n, t[3] = 0, t[4] = 0, t[5] = 1, t[6] = 0, t[7] = 0, t[8] = n, t[9] = 0, t[10] = r, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t
			},
			fromZRotation: function(t, e) {
				var n = Math.sin(e),
					r = Math.cos(e);
				return t[0] = r, t[1] = n, t[2] = 0, t[3] = 0, t[4] = -n, t[5] = r, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 1, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t
			},
			fromRotationTranslation: Ge,
			fromQuat2: function(t, e) {
				var n = new vt(3),
					r = -e[0],
					i = -e[1],
					o = -e[2],
					a = e[3],
					s = e[4],
					u = e[5],
					h = e[6],
					c = e[7],
					l = r * r + i * i + o * o + a * a;
				return l > 0 ? (n[0] = 2 * (s * a + c * r + u * o - h * i) / l, n[1] = 2 * (u * a + c * i + h * r - s * o) / l, n[2] = 2 * (h * a + c * o + s * i - u * r) / l) : (n[0] = 2 * (s * a + c * r + u * o - h * i), n[1] = 2 * (u * a + c * i + h * r - s * o), n[2] = 2 * (h * a + c * o + s * i - u * r)), Ge(t, e, n), t
			},
			getTranslation: function(t, e) {
				return t[0] = e[12], t[1] = e[13], t[2] = e[14], t
			},
			getScaling: We,
			getRotation: He,
			fromRotationTranslationScale: Ze,
			fromRotationTranslationScaleOrigin: function(t, e, n, r, i) {
				var o = e[0],
					a = e[1],
					s = e[2],
					u = e[3],
					h = o + o,
					c = a + a,
					l = s + s,
					f = o * h,
					d = o * c,
					p = o * l,
					v = a * c,
					m = a * l,
					g = s * l,
					y = u * h,
					_ = u * c,
					x = u * l,
					b = r[0],
					M = r[1],
					w = r[2],
					E = i[0],
					T = i[1],
					A = i[2],
					C = (1 - (v + g)) * b,
					R = (d + x) * b,
					S = (p - _) * b,
					P = (d - x) * M,
					D = (1 - (f + g)) * M,
					O = (m + y) * M,
					I = (p + _) * w,
					L = (m - y) * w,
					B = (1 - (f + v)) * w;
				return t[0] = C, t[1] = R, t[2] = S, t[3] = 0, t[4] = P, t[5] = D, t[6] = O, t[7] = 0, t[8] = I, t[9] = L, t[10] = B, t[11] = 0, t[12] = n[0] + E - (C * E + P * T + I * A), t[13] = n[1] + T - (R * E + D * T + L * A), t[14] = n[2] + A - (S * E + O * T + B * A), t[15] = 1, t
			},
			fromQuat: qe,
			frustum: Ye,
			perspectiveNO: Xe,
			perspective: Ke,
			perspectiveZO: function(t, e, n, r, i) {
				var o, a = 1 / Math.tan(e / 2);
				return t[0] = a / n, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = a, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[11] = -1, t[12] = 0, t[13] = 0, t[15] = 0, null != i && i !== 1 / 0 ? (o = 1 / (r - i), t[10] = i * o, t[14] = i * r * o) : (t[10] = -1, t[14] = -r), t
			},
			perspectiveFromFieldOfView: function(t, e, n, r) {
				var i = Math.tan(e.upDegrees * Math.PI / 180),
					o = Math.tan(e.downDegrees * Math.PI / 180),
					a = Math.tan(e.leftDegrees * Math.PI / 180),
					s = Math.tan(e.rightDegrees * Math.PI / 180),
					u = 2 / (a + s),
					h = 2 / (i + o);
				return t[0] = u, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = h, t[6] = 0, t[7] = 0, t[8] = -(a - s) * u * .5, t[9] = (i - o) * h * .5, t[10] = r / (n - r), t[11] = -1, t[12] = 0, t[13] = 0, t[14] = r * n / (n - r), t[15] = 0, t
			},
			orthoNO: Qe,
			ortho: Je,
			orthoZO: function(t, e, n, r, i, o, a) {
				var s = 1 / (e - n),
					u = 1 / (r - i),
					h = 1 / (o - a);
				return t[0] = -2 * s, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = -2 * u, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = h, t[11] = 0, t[12] = (e + n) * s, t[13] = (i + r) * u, t[14] = o * h, t[15] = 1, t
			},
			lookAt: $e,
			targetTo: tn,
			str: function(t) {
				return "mat4(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ", " + t[9] + ", " + t[10] + ", " + t[11] + ", " + t[12] + ", " + t[13] + ", " + t[14] + ", " + t[15] + ")"
			},
			frob: function(t) {
				return Math.hypot(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15])
			},
			add: function(t, e, n) {
				return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t[2] = e[2] + n[2], t[3] = e[3] + n[3], t[4] = e[4] + n[4], t[5] = e[5] + n[5], t[6] = e[6] + n[6], t[7] = e[7] + n[7], t[8] = e[8] + n[8], t[9] = e[9] + n[9], t[10] = e[10] + n[10], t[11] = e[11] + n[11], t[12] = e[12] + n[12], t[13] = e[13] + n[13], t[14] = e[14] + n[14], t[15] = e[15] + n[15], t
			},
			subtract: en,
			multiplyScalar: function(t, e, n) {
				return t[0] = e[0] * n, t[1] = e[1] * n, t[2] = e[2] * n, t[3] = e[3] * n, t[4] = e[4] * n, t[5] = e[5] * n, t[6] = e[6] * n, t[7] = e[7] * n, t[8] = e[8] * n, t[9] = e[9] * n, t[10] = e[10] * n, t[11] = e[11] * n, t[12] = e[12] * n, t[13] = e[13] * n, t[14] = e[14] * n, t[15] = e[15] * n, t
			},
			multiplyScalarAndAdd: function(t, e, n, r) {
				return t[0] = e[0] + n[0] * r, t[1] = e[1] + n[1] * r, t[2] = e[2] + n[2] * r, t[3] = e[3] + n[3] * r, t[4] = e[4] + n[4] * r, t[5] = e[5] + n[5] * r, t[6] = e[6] + n[6] * r, t[7] = e[7] + n[7] * r, t[8] = e[8] + n[8] * r, t[9] = e[9] + n[9] * r, t[10] = e[10] + n[10] * r, t[11] = e[11] + n[11] * r, t[12] = e[12] + n[12] * r, t[13] = e[13] + n[13] * r, t[14] = e[14] + n[14] * r, t[15] = e[15] + n[15] * r, t
			},
			exactEquals: function(t, e) {
				return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3] && t[4] === e[4] && t[5] === e[5] && t[6] === e[6] && t[7] === e[7] && t[8] === e[8] && t[9] === e[9] && t[10] === e[10] && t[11] === e[11] && t[12] === e[12] && t[13] === e[13] && t[14] === e[14] && t[15] === e[15]
			},
			equals: function(t, e) {
				var n = t[0],
					r = t[1],
					i = t[2],
					o = t[3],
					a = t[4],
					s = t[5],
					u = t[6],
					h = t[7],
					c = t[8],
					l = t[9],
					f = t[10],
					d = t[11],
					p = t[12],
					v = t[13],
					m = t[14],
					g = t[15],
					y = e[0],
					_ = e[1],
					x = e[2],
					b = e[3],
					M = e[4],
					w = e[5],
					E = e[6],
					T = e[7],
					A = e[8],
					C = e[9],
					R = e[10],
					S = e[11],
					P = e[12],
					D = e[13],
					O = e[14],
					I = e[15];
				return Math.abs(n - y) <= pt * Math.max(1, Math.abs(n), Math.abs(y)) && Math.abs(r - _) <= pt * Math.max(1, Math.abs(r), Math.abs(_)) && Math.abs(i - x) <= pt * Math.max(1, Math.abs(i), Math.abs(x)) && Math.abs(o - b) <= pt * Math.max(1, Math.abs(o), Math.abs(b)) && Math.abs(a - M) <= pt * Math.max(1, Math.abs(a), Math.abs(M)) && Math.abs(s - w) <= pt * Math.max(1, Math.abs(s), Math.abs(w)) && Math.abs(u - E) <= pt * Math.max(1, Math.abs(u), Math.abs(E)) && Math.abs(h - T) <= pt * Math.max(1, Math.abs(h), Math.abs(T)) && Math.abs(c - A) <= pt * Math.max(1, Math.abs(c), Math.abs(A)) && Math.abs(l - C) <= pt * Math.max(1, Math.abs(l), Math.abs(C)) && Math.abs(f - R) <= pt * Math.max(1, Math.abs(f), Math.abs(R)) && Math.abs(d - S) <= pt * Math.max(1, Math.abs(d), Math.abs(S)) && Math.abs(p - P) <= pt * Math.max(1, Math.abs(p), Math.abs(P)) && Math.abs(v - D) <= pt * Math.max(1, Math.abs(v), Math.abs(D)) && Math.abs(m - O) <= pt * Math.max(1, Math.abs(m), Math.abs(O)) && Math.abs(g - I) <= pt * Math.max(1, Math.abs(g), Math.abs(I))
			},
			mul: nn,
			sub: rn
		});

	function an() {
		var t = new vt(4);
		return vt != Float32Array && (t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 0), t
	}

	function sn(t) {
		var e = new vt(4);
		return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e
	}

	function un(t, e, n, r) {
		var i = new vt(4);
		return i[0] = t, i[1] = e, i[2] = n, i[3] = r, i
	}

	function hn(t, e) {
		return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t
	}

	function cn(t, e, n, r, i) {
		return t[0] = e, t[1] = n, t[2] = r, t[3] = i, t
	}

	function ln(t, e, n) {
		return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t[2] = e[2] + n[2], t[3] = e[3] + n[3], t
	}

	function fn(t, e, n) {
		return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t[2] = e[2] - n[2], t[3] = e[3] - n[3], t
	}

	function dn(t, e, n) {
		return t[0] = e[0] * n[0], t[1] = e[1] * n[1], t[2] = e[2] * n[2], t[3] = e[3] * n[3], t
	}

	function pn(t, e, n) {
		return t[0] = e[0] / n[0], t[1] = e[1] / n[1], t[2] = e[2] / n[2], t[3] = e[3] / n[3], t
	}

	function vn(t, e, n) {
		return t[0] = e[0] * n, t[1] = e[1] * n, t[2] = e[2] * n, t[3] = e[3] * n, t
	}

	function mn(t, e) {
		var n = e[0] - t[0],
			r = e[1] - t[1],
			i = e[2] - t[2],
			o = e[3] - t[3];
		return Math.hypot(n, r, i, o)
	}

	function gn(t, e) {
		var n = e[0] - t[0],
			r = e[1] - t[1],
			i = e[2] - t[2],
			o = e[3] - t[3];
		return n * n + r * r + i * i + o * o
	}

	function yn(t) {
		var e = t[0],
			n = t[1],
			r = t[2],
			i = t[3];
		return Math.hypot(e, n, r, i)
	}

	function _n(t) {
		var e = t[0],
			n = t[1],
			r = t[2],
			i = t[3];
		return e * e + n * n + r * r + i * i
	}

	function xn(t, e) {
		var n = e[0],
			r = e[1],
			i = e[2],
			o = e[3],
			a = n * n + r * r + i * i + o * o;
		return a > 0 && (a = 1 / Math.sqrt(a)), t[0] = n * a, t[1] = r * a, t[2] = i * a, t[3] = o * a, t
	}

	function bn(t, e) {
		return t[0] * e[0] + t[1] * e[1] + t[2] * e[2] + t[3] * e[3]
	}

	function Mn(t, e, n, r) {
		var i = e[0],
			o = e[1],
			a = e[2],
			s = e[3];
		return t[0] = i + r * (n[0] - i), t[1] = o + r * (n[1] - o), t[2] = a + r * (n[2] - a), t[3] = s + r * (n[3] - s), t
	}

	function wn(t, e, n) {
		var r = e[0],
			i = e[1],
			o = e[2],
			a = e[3];
		return t[0] = n[0] * r + n[4] * i + n[8] * o + n[12] * a, t[1] = n[1] * r + n[5] * i + n[9] * o + n[13] * a, t[2] = n[2] * r + n[6] * i + n[10] * o + n[14] * a, t[3] = n[3] * r + n[7] * i + n[11] * o + n[15] * a, t
	}

	function En(t, e) {
		return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3]
	}

	function Tn(t, e) {
		var n = t[0],
			r = t[1],
			i = t[2],
			o = t[3],
			a = e[0],
			s = e[1],
			u = e[2],
			h = e[3];
		return Math.abs(n - a) <= pt * Math.max(1, Math.abs(n), Math.abs(a)) && Math.abs(r - s) <= pt * Math.max(1, Math.abs(r), Math.abs(s)) && Math.abs(i - u) <= pt * Math.max(1, Math.abs(i), Math.abs(u)) && Math.abs(o - h) <= pt * Math.max(1, Math.abs(o), Math.abs(h))
	}
	var An, Cn = fn,
		Rn = dn,
		Sn = pn,
		Pn = mn,
		Dn = gn,
		On = yn,
		In = _n,
		Ln = function() {
			var t = an();
			return function(e, n, r, i, o, a) {
				var s, u;
				for (n || (n = 4), r || (r = 0), u = i ? Math.min(i * n + r, e.length) : e.length, s = r; s < u; s += n) t[0] = e[s], t[1] = e[s + 1], t[2] = e[s + 2], t[3] = e[s + 3], o(t, t, a), e[s] = t[0], e[s + 1] = t[1], e[s + 2] = t[2], e[s + 3] = t[3];
				return e
			}
		}(),
		Bn = Object.freeze({
			__proto__: null,
			create: an,
			clone: sn,
			fromValues: un,
			copy: hn,
			set: cn,
			add: ln,
			subtract: fn,
			multiply: dn,
			divide: pn,
			ceil: function(t, e) {
				return t[0] = Math.ceil(e[0]), t[1] = Math.ceil(e[1]), t[2] = Math.ceil(e[2]), t[3] = Math.ceil(e[3]), t
			},
			floor: function(t, e) {
				return t[0] = Math.floor(e[0]), t[1] = Math.floor(e[1]), t[2] = Math.floor(e[2]), t[3] = Math.floor(e[3]), t
			},
			min: function(t, e, n) {
				return t[0] = Math.min(e[0], n[0]), t[1] = Math.min(e[1], n[1]), t[2] = Math.min(e[2], n[2]), t[3] = Math.min(e[3], n[3]), t
			},
			max: function(t, e, n) {
				return t[0] = Math.max(e[0], n[0]), t[1] = Math.max(e[1], n[1]), t[2] = Math.max(e[2], n[2]), t[3] = Math.max(e[3], n[3]), t
			},
			round: function(t, e) {
				return t[0] = Math.round(e[0]), t[1] = Math.round(e[1]), t[2] = Math.round(e[2]), t[3] = Math.round(e[3]), t
			},
			scale: vn,
			scaleAndAdd: function(t, e, n, r) {
				return t[0] = e[0] + n[0] * r, t[1] = e[1] + n[1] * r, t[2] = e[2] + n[2] * r, t[3] = e[3] + n[3] * r, t
			},
			distance: mn,
			squaredDistance: gn,
			length: yn,
			squaredLength: _n,
			negate: function(t, e) {
				return t[0] = -e[0], t[1] = -e[1], t[2] = -e[2], t[3] = -e[3], t
			},
			inverse: function(t, e) {
				return t[0] = 1 / e[0], t[1] = 1 / e[1], t[2] = 1 / e[2], t[3] = 1 / e[3], t
			},
			normalize: xn,
			dot: bn,
			cross: function(t, e, n, r) {
				var i = n[0] * r[1] - n[1] * r[0],
					o = n[0] * r[2] - n[2] * r[0],
					a = n[0] * r[3] - n[3] * r[0],
					s = n[1] * r[2] - n[2] * r[1],
					u = n[1] * r[3] - n[3] * r[1],
					h = n[2] * r[3] - n[3] * r[2],
					c = e[0],
					l = e[1],
					f = e[2],
					d = e[3];
				return t[0] = l * h - f * u + d * s, t[1] = -c * h + f * a - d * o, t[2] = c * u - l * a + d * i, t[3] = -c * s + l * o - f * i, t
			},
			lerp: Mn,
			random: function(t, e) {
				var n, r, i, o, a, s;
				e = e || 1;
				do {
					a = (n = 2 * mt() - 1) * n + (r = 2 * mt() - 1) * r
				} while (a >= 1);
				do {
					s = (i = 2 * mt() - 1) * i + (o = 2 * mt() - 1) * o
				} while (s >= 1);
				var u = Math.sqrt((1 - a) / s);
				return t[0] = e * n, t[1] = e * r, t[2] = e * i * u, t[3] = e * o * u, t
			},
			transformMat4: wn,
			transformQuat: function(t, e, n) {
				var r = e[0],
					i = e[1],
					o = e[2],
					a = n[0],
					s = n[1],
					u = n[2],
					h = n[3],
					c = h * r + s * o - u * i,
					l = h * i + u * r - a * o,
					f = h * o + a * i - s * r,
					d = -a * r - s * i - u * o;
				return t[0] = c * h + d * -a + l * -u - f * -s, t[1] = l * h + d * -s + f * -a - c * -u, t[2] = f * h + d * -u + c * -s - l * -a, t[3] = e[3], t
			},
			zero: function(t) {
				return t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 0, t
			},
			str: function(t) {
				return "vec4(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ")"
			},
			exactEquals: En,
			equals: Tn,
			sub: Cn,
			mul: Rn,
			div: Sn,
			dist: Pn,
			sqrDist: Dn,
			len: On,
			sqrLen: In,
			forEach: Ln
		});
	! function(t) {
		t[t.COL0ROW0 = 0] = "COL0ROW0", t[t.COL0ROW1 = 1] = "COL0ROW1", t[t.COL0ROW2 = 2] = "COL0ROW2", t[t.COL0ROW3 = 3] = "COL0ROW3", t[t.COL1ROW0 = 4] = "COL1ROW0", t[t.COL1ROW1 = 5] = "COL1ROW1", t[t.COL1ROW2 = 6] = "COL1ROW2", t[t.COL1ROW3 = 7] = "COL1ROW3", t[t.COL2ROW0 = 8] = "COL2ROW0", t[t.COL2ROW1 = 9] = "COL2ROW1", t[t.COL2ROW2 = 10] = "COL2ROW2", t[t.COL2ROW3 = 11] = "COL2ROW3", t[t.COL3ROW0 = 12] = "COL3ROW0", t[t.COL3ROW1 = 13] = "COL3ROW1", t[t.COL3ROW2 = 14] = "COL3ROW2", t[t.COL3ROW3 = 15] = "COL3ROW3"
	}(An || (An = {}));
	const kn = 45 * Math.PI / 180,
		Un = 1,
		Nn = .1,
		Fn = 500,
		jn = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
	class zn extends Me {
		static get IDENTITY() {
			return function() {
				Gn || (Gn = new zn, Object.freeze(Gn));
				return Gn
			}()
		}
		static get ZERO() {
			return function() {
				Vn || (Vn = new zn([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Object.freeze(Vn));
				return Vn
			}()
		}
		get ELEMENTS() {
			return 16
		}
		get RANK() {
			return 4
		}
		get INDICES() {
			return An
		}
		constructor(t) {
			super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0), 1 === arguments.length && Array.isArray(t) ? this.copy(t) : this.identity()
		}
		copy(t) {
			return this[0] = t[0], this[1] = t[1], this[2] = t[2], this[3] = t[3], this[4] = t[4], this[5] = t[5], this[6] = t[6], this[7] = t[7], this[8] = t[8], this[9] = t[9], this[10] = t[10], this[11] = t[11], this[12] = t[12], this[13] = t[13], this[14] = t[14], this[15] = t[15], this.check()
		}
		set(t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v) {
			return this[0] = t, this[1] = e, this[2] = n, this[3] = r, this[4] = i, this[5] = o, this[6] = a, this[7] = s, this[8] = u, this[9] = h, this[10] = c, this[11] = l, this[12] = f, this[13] = d, this[14] = p, this[15] = v, this.check()
		}
		setRowMajor(t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v) {
			return this[0] = t, this[1] = i, this[2] = u, this[3] = f, this[4] = e, this[5] = o, this[6] = h, this[7] = d, this[8] = n, this[9] = a, this[10] = c, this[11] = p, this[12] = r, this[13] = s, this[14] = l, this[15] = v, this.check()
		}
		toRowMajor(t) {
			return t[0] = this[0], t[1] = this[4], t[2] = this[8], t[3] = this[12], t[4] = this[1], t[5] = this[5], t[6] = this[9], t[7] = this[13], t[8] = this[2], t[9] = this[6], t[10] = this[10], t[11] = this[14], t[12] = this[3], t[13] = this[7], t[14] = this[11], t[15] = this[15], t
		}
		identity() {
			return this.copy(jn)
		}
		fromObject(t) {
			return this.check()
		}
		fromQuaternion(t) {
			return qe(this, t), this.check()
		}
		frustum(t) {
			const {
				left: e,
				right: n,
				bottom: r,
				top: i,
				near: o = Nn,
				far: a = Fn
			} = t;
			return a === 1 / 0 ? function(t, e, n, r, i, o) {
				const a = 2 * o / (n - e),
					s = 2 * o / (i - r),
					u = (n + e) / (n - e),
					h = (i + r) / (i - r),
					c = -1,
					l = -1,
					f = -2 * o;
				t[0] = a, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = s, t[6] = 0, t[7] = 0, t[8] = u, t[9] = h, t[10] = c, t[11] = l, t[12] = 0, t[13] = 0, t[14] = f, t[15] = 0
			}(this, e, n, r, i, o) : Ye(this, e, n, r, i, o, a), this.check()
		}
		lookAt(t) {
			const {
				eye: e,
				center: n = [0, 0, 0],
				up: r = [0, 1, 0]
			} = t;
			return $e(this, e, n, r), this.check()
		}
		ortho(t) {
			const {
				left: e,
				right: n,
				bottom: r,
				top: i,
				near: o = Nn,
				far: a = Fn
			} = t;
			return Je(this, e, n, r, i, o, a), this.check()
		}
		orthographic(t) {
			const {
				fovy: e = kn,
				aspect: n = Un,
				focalDistance: r = 1,
				near: i = Nn,
				far: o = Fn
			} = t;
			Wn(e);
			const a = e / 2,
				s = r * Math.tan(a),
				u = s * n;
			return this.ortho({
				left: -u,
				right: u,
				bottom: -s,
				top: s,
				near: i,
				far: o
			})
		}
		perspective(t) {
			const {
				fovy: e = 45 * Math.PI / 180,
				aspect: n = 1,
				near: r = .1,
				far: i = 500
			} = t;
			return Wn(e), Ke(this, e, n, r, i), this.check()
		}
		determinant() {
			return Be(this)
		}
		getScale(t = [-0, -0, -0]) {
			return t[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]), t[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]), t[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]), t
		}
		getTranslation(t = [-0, -0, -0]) {
			return t[0] = this[12], t[1] = this[13], t[2] = this[14], t
		}
		getRotation(t, e) {
			t = t || [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0], e = e || [-0, -0, -0];
			const n = this.getScale(e),
				r = 1 / n[0],
				i = 1 / n[1],
				o = 1 / n[2];
			return t[0] = this[0] * r, t[1] = this[1] * i, t[2] = this[2] * o, t[3] = 0, t[4] = this[4] * r, t[5] = this[5] * i, t[6] = this[6] * o, t[7] = 0, t[8] = this[8] * r, t[9] = this[9] * i, t[10] = this[10] * o, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t
		}
		getRotationMatrix3(t, e) {
			t = t || [-0, -0, -0, -0, -0, -0, -0, -0, -0], e = e || [-0, -0, -0];
			const n = this.getScale(e),
				r = 1 / n[0],
				i = 1 / n[1],
				o = 1 / n[2];
			return t[0] = this[0] * r, t[1] = this[1] * i, t[2] = this[2] * o, t[3] = this[4] * r, t[4] = this[5] * i, t[5] = this[6] * o, t[6] = this[8] * r, t[7] = this[9] * i, t[8] = this[10] * o, t
		}
		transpose() {
			return Ie(this, this), this.check()
		}
		invert() {
			return Le(this, this), this.check()
		}
		multiplyLeft(t) {
			return ke(this, t, this), this.check()
		}
		multiplyRight(t) {
			return ke(this, this, t), this.check()
		}
		rotateX(t) {
			return je(this, this, t), this.check()
		}
		rotateY(t) {
			return ze(this, this, t), this.check()
		}
		rotateZ(t) {
			return Ve(this, this, t), this.check()
		}
		rotateXYZ(t) {
			return this.rotateX(t[0])
				.rotateY(t[1])
				.rotateZ(t[2])
		}
		rotateAxis(t, e) {
			return Fe(this, this, t, e), this.check()
		}
		scale(t) {
			return Ne(this, this, Array.isArray(t) ? t : [t, t, t]), this.check()
		}
		translate(t) {
			return Ue(this, this, t), this.check()
		}
		transform(t, e) {
			return 4 === t.length ? (ft(e = wn(e || [-0, -0, -0, -0], t, this), 4), e) : this.transformAsPoint(t, e)
		}
		transformAsPoint(t, e) {
			const {
				length: n
			} = t;
			let r;
			switch (n) {
				case 2:
					r = At(e || [-0, -0], t, this);
					break;
				case 3:
					r = te(e || [-0, -0, -0], t, this);
					break;
				default:
					throw new Error("Illegal vector")
			}
			return ft(r, t.length), r
		}
		transformAsVector(t, e) {
			let n;
			switch (t.length) {
				case 2:
					n = function(t, e, n) {
						const r = e[0],
							i = e[1],
							o = n[3] * r + n[7] * i || 1;
						return t[0] = (n[0] * r + n[4] * i) / o, t[1] = (n[1] * r + n[5] * i) / o, t
					}(e || [-0, -0], t, this);
					break;
				case 3:
					n = Ut(e || [-0, -0, -0], t, this);
					break;
				default:
					throw new Error("Illegal vector")
			}
			return ft(n, t.length), n
		}
		transformPoint(t, e) {
			return this.transformAsPoint(t, e)
		}
		transformVector(t, e) {
			return this.transformAsPoint(t, e)
		}
		transformDirection(t, e) {
			return this.transformAsVector(t, e)
		}
		makeRotationX(t) {
			return this.identity()
				.rotateX(t)
		}
		makeTranslation(t, e, n) {
			return this.identity()
				.translate([t, e, n])
		}
	}
	let Vn, Gn;

	function Wn(t) {
		if (t > 2 * Math.PI) throw Error("expected radians")
	}

	function Hn() {
		var t = new vt(4);
		return vt != Float32Array && (t[0] = 0, t[1] = 0, t[2] = 0), t[3] = 1, t
	}

	function Zn(t) {
		return t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 1, t
	}

	function qn(t, e, n) {
		n *= .5;
		var r = Math.sin(n);
		return t[0] = r * e[0], t[1] = r * e[1], t[2] = r * e[2], t[3] = Math.cos(n), t
	}

	function Yn(t, e, n) {
		var r = e[0],
			i = e[1],
			o = e[2],
			a = e[3],
			s = n[0],
			u = n[1],
			h = n[2],
			c = n[3];
		return t[0] = r * c + a * s + i * h - o * u, t[1] = i * c + a * u + o * s - r * h, t[2] = o * c + a * h + r * u - i * s, t[3] = a * c - r * s - i * u - o * h, t
	}

	function Xn(t, e) {
		var n = e[0],
			r = e[1],
			i = e[2],
			o = e[3],
			a = Math.sqrt(n * n + r * r + i * i),
			s = Math.exp(o),
			u = a > 0 ? s * Math.sin(a) / a : 0;
		return t[0] = n * u, t[1] = r * u, t[2] = i * u, t[3] = s * Math.cos(a), t
	}

	function Kn(t, e) {
		var n = e[0],
			r = e[1],
			i = e[2],
			o = e[3],
			a = Math.sqrt(n * n + r * r + i * i),
			s = a > 0 ? Math.atan2(a, o) / a : 0;
		return t[0] = n * s, t[1] = r * s, t[2] = i * s, t[3] = .5 * Math.log(n * n + r * r + i * i + o * o), t
	}

	function Qn(t, e, n, r) {
		var i, o, a, s, u, h = e[0],
			c = e[1],
			l = e[2],
			f = e[3],
			d = n[0],
			p = n[1],
			v = n[2],
			m = n[3];
		return (o = h * d + c * p + l * v + f * m) < 0 && (o = -o, d = -d, p = -p, v = -v, m = -m), 1 - o > pt ? (i = Math.acos(o), a = Math.sin(i), s = Math.sin((1 - r) * i) / a, u = Math.sin(r * i) / a) : (s = 1 - r, u = r), t[0] = s * h + u * d, t[1] = s * c + u * p, t[2] = s * l + u * v, t[3] = s * f + u * m, t
	}

	function Jn(t, e) {
		var n, r = e[0] + e[4] + e[8];
		if (r > 0) n = Math.sqrt(r + 1), t[3] = .5 * n, n = .5 / n, t[0] = (e[5] - e[7]) * n, t[1] = (e[6] - e[2]) * n, t[2] = (e[1] - e[3]) * n;
		else {
			var i = 0;
			e[4] > e[0] && (i = 1), e[8] > e[3 * i + i] && (i = 2);
			var o = (i + 1) % 3,
				a = (i + 2) % 3;
			n = Math.sqrt(e[3 * i + i] - e[3 * o + o] - e[3 * a + a] + 1), t[i] = .5 * n, n = .5 / n, t[3] = (e[3 * o + a] - e[3 * a + o]) * n, t[o] = (e[3 * o + i] + e[3 * i + o]) * n, t[a] = (e[3 * a + i] + e[3 * i + a]) * n
		}
		return t
	}

	function $n(t, e, n, r) {
		var i = .5 * Math.PI / 180;
		e *= i, n *= i, r *= i;
		var o = Math.sin(e),
			a = Math.cos(e),
			s = Math.sin(n),
			u = Math.cos(n),
			h = Math.sin(r),
			c = Math.cos(r);
		return t[0] = o * u * c - a * s * h, t[1] = a * s * c + o * u * h, t[2] = a * u * h - o * s * c, t[3] = a * u * c + o * s * h, t
	}
	var tr, er, nr, rr, ir, or, ar = sn,
		sr = un,
		ur = hn,
		hr = cn,
		cr = ln,
		lr = Yn,
		fr = vn,
		dr = bn,
		pr = Mn,
		vr = yn,
		mr = vr,
		gr = _n,
		yr = gr,
		_r = xn,
		xr = En,
		br = Tn,
		Mr = (tr = Nt(), er = zt(1, 0, 0), nr = zt(0, 1, 0), function(t, e, n) {
			var r = Jt(e, n);
			return r < -.999999 ? ($t(tr, er, e), de(tr) < 1e-6 && $t(tr, nr, e), Qt(tr, tr), qn(t, tr, Math.PI), t) : r > .999999 ? (t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 1, t) : ($t(tr, e, n), t[0] = tr[0], t[1] = tr[1], t[2] = tr[2], t[3] = 1 + r, _r(t, t))
		}),
		wr = (rr = Hn(), ir = Hn(), function(t, e, n, r, i, o) {
			return Qn(rr, e, i, o), Qn(ir, n, r, o), Qn(t, rr, ir, 2 * o * (1 - o)), t
		}),
		Er = (or = we(), function(t, e, n, r) {
			return or[0] = n[0], or[3] = n[1], or[6] = n[2], or[1] = r[0], or[4] = r[1], or[7] = r[2], or[2] = -e[0], or[5] = -e[1], or[8] = -e[2], _r(t, Jn(t, or))
		}),
		Tr = Object.freeze({
			__proto__: null,
			create: Hn,
			identity: Zn,
			setAxisAngle: qn,
			getAxisAngle: function(t, e) {
				var n = 2 * Math.acos(e[3]),
					r = Math.sin(n / 2);
				return r > pt ? (t[0] = e[0] / r, t[1] = e[1] / r, t[2] = e[2] / r) : (t[0] = 1, t[1] = 0, t[2] = 0), n
			},
			getAngle: function(t, e) {
				var n = dr(t, e);
				return Math.acos(2 * n * n - 1)
			},
			multiply: Yn,
			rotateX: function(t, e, n) {
				n *= .5;
				var r = e[0],
					i = e[1],
					o = e[2],
					a = e[3],
					s = Math.sin(n),
					u = Math.cos(n);
				return t[0] = r * u + a * s, t[1] = i * u + o * s, t[2] = o * u - i * s, t[3] = a * u - r * s, t
			},
			rotateY: function(t, e, n) {
				n *= .5;
				var r = e[0],
					i = e[1],
					o = e[2],
					a = e[3],
					s = Math.sin(n),
					u = Math.cos(n);
				return t[0] = r * u - o * s, t[1] = i * u + a * s, t[2] = o * u + r * s, t[3] = a * u - i * s, t
			},
			rotateZ: function(t, e, n) {
				n *= .5;
				var r = e[0],
					i = e[1],
					o = e[2],
					a = e[3],
					s = Math.sin(n),
					u = Math.cos(n);
				return t[0] = r * u + i * s, t[1] = i * u - r * s, t[2] = o * u + a * s, t[3] = a * u - o * s, t
			},
			calculateW: function(t, e) {
				var n = e[0],
					r = e[1],
					i = e[2];
				return t[0] = n, t[1] = r, t[2] = i, t[3] = Math.sqrt(Math.abs(1 - n * n - r * r - i * i)), t
			},
			exp: Xn,
			ln: Kn,
			pow: function(t, e, n) {
				return Kn(t, e), fr(t, t, n), Xn(t, t), t
			},
			slerp: Qn,
			random: function(t) {
				var e = mt(),
					n = mt(),
					r = mt(),
					i = Math.sqrt(1 - e),
					o = Math.sqrt(e);
				return t[0] = i * Math.sin(2 * Math.PI * n), t[1] = i * Math.cos(2 * Math.PI * n), t[2] = o * Math.sin(2 * Math.PI * r), t[3] = o * Math.cos(2 * Math.PI * r), t
			},
			invert: function(t, e) {
				var n = e[0],
					r = e[1],
					i = e[2],
					o = e[3],
					a = n * n + r * r + i * i + o * o,
					s = a ? 1 / a : 0;
				return t[0] = -n * s, t[1] = -r * s, t[2] = -i * s, t[3] = o * s, t
			},
			conjugate: function(t, e) {
				return t[0] = -e[0], t[1] = -e[1], t[2] = -e[2], t[3] = e[3], t
			},
			fromMat3: Jn,
			fromEuler: $n,
			str: function(t) {
				return "quat(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ")"
			},
			clone: ar,
			fromValues: sr,
			copy: ur,
			set: hr,
			add: cr,
			mul: lr,
			scale: fr,
			dot: dr,
			lerp: pr,
			length: vr,
			len: mr,
			squaredLength: gr,
			sqrLen: yr,
			normalize: _r,
			exactEquals: xr,
			equals: br,
			rotationTo: Mr,
			sqlerp: wr,
			setAxes: Er
		});

	function Ar(t) {
		return Ar = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
			return typeof t
		} : function(t) {
			return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
		}, Ar(t)
	}
	var Cr = function(t) {
			return "[object String]" === Object.prototype.toString.call(t)
		},
		Rr = function(t) {
			var e = "[object Function]" === Object.prototype.toString.call(t),
				n = "[object AsyncFunction]" === Object.prototype.toString.call(t);
			return e || n
		},
		Sr = 365611;

	function Pr(t, e) {
		this.type = t, this.returnValue = !0, this.target = e || null, this.currentTarget = null
	}
	var Dr = function() {
		function t() {
			this.__listeners = void 0
		}
		var e = t.prototype;
		return e.on = function() {
			for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];
			this.alias("addEventListener")(e)
		}, e.off = function() {
			for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];
			this.alias("removeEventListener")(e)
		}, e.emit = function() {
			for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];
			this.alias("dispatchEvent")(e)
		}, e.addEventListener = function(t, e, n) {
			if (Rr(e)) {
				var r;
				!this.__listeners && (this.__listeners = {});
				var i = this.__listeners;
				if ("string" == typeof n && n) {
					if (/[^\w-]/.test(n)) throw "nonstandard key:" + n;
					e.hashCode = n, r = n
				}!t.startsWith("on") && (t = "on" + t), "object" !== Ar(i[t]) && (i[t] = {}), r = r || (++Sr)
					.toString(), e.hashCode = r, i[t][r] = e
			}
		}, e.removeEventListener = function(t, e) {
			if (Rr(e)) e = e.hashCode;
			else if (!Cr(e)) return;
			!this.__listeners && (this.__listeners = {}), !t.startsWith("on") && (t = "on" + t);
			var n = this.__listeners;
			n[t] && n[t][e] && delete n[t][e]
		}, e.dispatchEvent = function(t, e) {
			Cr(t) && (t = new Pr(t)), !this.__listeners && (this.__listeners = {});
			var n = this.__listeners,
				r = t.type,
				i = e || t;
			if (t.target = t.target || this, t.currentTarget = this, 0 !== r.indexOf("on") && (r = "on".concat(r)), Rr(n[r]) && n[r].call(this, i), "object" === Ar(n[r]))
				for (var o in n[r]) Object.prototype.hasOwnProperty.call(n[r], o) && n[r][o].call(this, i);
			return t.returnValue
		}, e.alias = function(t) {
			var e = this;
			return function(n) {
				return e[t].apply(e, n)
			}
		}, t
	}();

	function Or(t, e) {
		var n = e[2],
			r = e[0],
			i = e[1],
			o = e[3],
			a = o * o,
			s = n * n,
			u = r * r,
			h = i * i,
			c = i * n - r * o,
			l = .4999999;
		return c < -l ? (t[0] = Math.PI / 2, t[1] = 2 * Math.atan2(i, o), t[2] = 0) : c > l ? (t[0] = -Math.PI / 2, t[1] = 2 * Math.atan2(i, o), t[2] = 0) : (t[0] = Math.asin(-2 * (n * i - r * o)), t[1] = Math.atan2(2 * (n * r + i * o), s - u - h + a), t[2] = Math.atan2(2 * (r * i + n * o), -s - u + h + a)), t
	}
	var Ir = function() {
		function t() {
			var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
				n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
				r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
				i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : t.DefaultOrder;
			this.isEuler = !0, this._x = void 0, this._y = void 0, this._z = void 0, this._order = void 0, this._onChangeCallback = void 0, this._x = e, this._y = n, this._z = r, this._order = i, this._onChangeCallback = function() {}
		}
		var e = t.prototype;
		return e.set = function(t, e, n) {
			var r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];
			return this._x = t, this._y = e, this._z = n, r && this._onChangeCallback(), this
		}, e.clone = function() {
			return new t(this._x, this._y, this._z, this._order)
		}, e.copy = function(t) {
			return t.isEuler ? (this._x = t._x, this._y = t._y, this._z = t._z, this._order = t._order, this._onChangeCallback(), this) : this
		}, e.equals = function(t) {
			return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
		}, e.toVector3 = function() {
			return zt(this._x, this._y, this._z)
		}, e.onChange = function(t) {
			"function" == typeof t && (this._onChangeCallback = t)
		}, o(t, [{
			key: "x",
			get: function() {
				return this._x
			},
			set: function(t) {
				this._x = t, this._onChangeCallback()
			}
		}, {
			key: "y",
			get: function() {
				return this._y
			},
			set: function(t) {
				this._y = t, this._onChangeCallback()
			}
		}, {
			key: "z",
			get: function() {
				return this._z
			},
			set: function(t) {
				this._z = t, this._onChangeCallback()
			}
		}, {
			key: "order",
			get: function() {
				return this._order
			},
			set: function(t) {
				this._order = t, this._onChangeCallback()
			}
		}]), t
	}();

	function Lr() {
		return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(t) {
			var e = 16 * Math.random() | 0;
			return ("x" === t ? e : 3 & e | 8)
				.toString(16)
		}))
	}
	Ir.DefaultOrder = "XYZ";
	var Br = function(t) {
			return 180 * t / Math.PI
		},
		kr = function(t) {
			function e() {
				var n;
				return (n = t.call(this) || this)
					.isObject3D = !0, n.uuid = Lr(), n.name = "", n.parent = null, n.children = [], n.visible = !0, n.position = Nt(), n.rotation = new Ir, n.scale = zt(1, 1, 1), n.quaternion = Hn(), n.up = Ft(e.DefaultUp), n.modelMatrix = Se(), n.worldMatrix = Se(), n.modelMatrixNeedUpdate = !1, n.worldMatrixNeedsUpdate = !1, n.rotation.onChange((function() {
						n.modelMatrixNeedUpdate = !0
					})), n
			}
			c(e, t);
			var n = e.prototype;
			return n.rotateX = function(t) {
				this.rotation.x = t
			}, n.rotateY = function(t) {
				this.rotation.y = t
			}, n.rotateZ = function(t) {
				this.rotation.z = t
			}, n.translate = function(t, e, n) {
				var r = zt(t, e, n);
				return this.position = Gt(this.position, this.position, r), this.modelMatrixNeedUpdate = !0, this
			}, n.setPosition = function(t, e, n) {
				var r = zt(t, e, n);
				return se(this.position, r) || (this.position = r, this.modelMatrixNeedUpdate = !0), this
			}, n.lookAt = function(t, e, n) {
				var r = this.up,
					i = this.position,
					o = zt(t, e, n),
					a = tn(Se(), i, o, r),
					s = He(Hn(), a),
					u = Or(Nt(), s);
				this.rotation.set(Br(u[0]), Br(u[1]), Br(u[2]))
			}, n.setVisible = function(t) {
				var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
				if (this.visible !== t && (this.visible = t, e))
					for (var n = 0, r = this.children.length; n < r; n++) this.children[n].setVisible(t, e)
			}, n.setScale = function(t, e, n) {
				var r = zt(t, e, n);
				return se(this.scale, r) || (this.scale = r, this.modelMatrixNeedUpdate = !0), this
			}, n.updateMatrix = function() {
				Oe(this.modelMatrix), Zn(this.quaternion), $n(this.quaternion, this.rotation.x, this.rotation.y, this.rotation.z), Ze(this.modelMatrix, this.quaternion, this.position, this.scale), this.modelMatrixNeedUpdate = !1, this.worldMatrixNeedsUpdate = !0
			}, n.updateWorldMatrix = function() {
				var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
				!0 !== this.modelMatrixNeedUpdate && !0 !== t || this.updateMatrix(), !0 === this.worldMatrixNeedsUpdate && (this.parent ? ke(this.worldMatrix, this.parent.worldMatrix, this.modelMatrix) : De(this.worldMatrix, this.modelMatrix), this.worldMatrixNeedsUpdate = !1, t = !0);
				for (var e = 0, n = this.children.length; e < n; e++) this.children[e].updateWorldMatrix(t)
			}, n.add = function(t) {
				if (t === this) return console.error("object3D.add: object can't be added as a child of itself. ==> ".concat(t)), this;
				if (t instanceof Array) {
					for (var e = 0, n = t.length; e < n; e++) this.add(t[e]);
					return this
				}
				return t && t.isObject3D ? (null !== t.parent && t.parent.remove(t), t.parent = this, this.children.push(t)) : console.error("Object3D.add: object not an instance of Object3D.", t), this
			}, n.remove = function(t) {
				if (t instanceof Array) {
					for (var e = 0, n = t.length; e < n; e++) this.remove(t[e]);
					return this
				}
				var r = this.children.indexOf(t);
				return -1 !== r && (t.parent = null, this.children.splice(r, 1)), this
			}, n.traverse = function(t) {
				t(this), this.children && this.children.length > 0 && this.children.forEach((function(e) {
					e.traverse(t)
				}))
			}, n.clone = function() {
				var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
					n = new e;
				if (n.up = Ft(this.up), n.scale = Ft(this.scale), n.position = Ft(this.position), n.rotation = this.rotation.clone(), n.quaternion = ar(this.quaternion), n.modelMatrix = Pe(this.modelMatrix), n.worldMatrix = Pe(this.worldMatrix), n.visible = this.visible, this.children.length && t)
					for (var r = 0, i = this.children.length; r < i; r++) n.add(this.children[r].clone());
				return n
			}, n.raycast = function(t) {
				return null
			}, e
		}(Dr);
	kr.DefaultUp = zt(0, 1, 0);
	var Ur = function() {
			function t(t, e) {
				this.isBox = !0, this.min = void 0, this.max = void 0, this.min = void 0 !== t ? t : zt(1 / 0, 1 / 0, 1 / 0), this.max = void 0 !== e ? e : zt(-1 / 0, -1 / 0, -1 / 0)
			}
			var e = t.prototype;
			return e.set = function(t, e) {
				return Vt(this.min, t), Vt(this.max, e), this
			}, e.setFromBufferAttribute = function(t) {
				for (var e = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, o = -1 / 0, a = -1 / 0, s = t.array, u = t.count, h = t.itemSize, c = 0; c < u; c++) {
					var l = s[c * h],
						f = s[c * h + 1],
						d = s[c * h + 2];
					l < e && (e = l), f < n && (n = f), d < r && (r = d), l > i && (i = l), f > o && (o = f), d > a && (a = d)
				}
				var p = zt(e, n, r),
					v = zt(i, o, a);
				return this.set(p, v), this
			}, e.getCenter = function() {
				return this.isInvalid() ? Nt() : zt((this.max[0] + this.min[0]) / 2, (this.max[1] + this.min[1]) / 2, (this.max[2] + this.min[2]) / 2)
			}, e.isInvalid = function() {
				return this.max[0] < this.min[0] || this.max[1] < this.min[1] || this.max[2] < this.min[2]
			}, t
		}(),
		Nr = function() {
			function t(e, n, r) {
				var i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
				if (this.isBufferAttribute = !0, this.name = "", this.type = void 0, this.array = void 0, this.itemSize = void 0, this.count = void 0, this.normalized = void 0, this.usage = void 0, this.needUpdate = void 0, Array.isArray(e)) throw new TypeError("BufferAttribute: array should be a Typed Array.");
				if (this.name = "BufferAttribute", this.array = e, this.itemSize = n, this.count = void 0 !== e ? e.length / n : 0, this.normalized = !0 === i, this.usage = 35044, this.needUpdate = !0, void 0 === r) {
					var o = this.array;
					this.type = t.FLOAT, o instanceof Int8Array ? this.type = t.BYTE : o instanceof Uint8Array ? this.type = t.UNSIGNED_BYTE : o instanceof Int16Array ? this.type = t.SHORT : o instanceof Uint16Array ? this.type = t.UNSIGNED_SHORT : o instanceof Int32Array ? this.type = t.INT : o instanceof Uint32Array && (this.type = t.UNSIGNED_INT)
				} else this.type = r
			}
			t.isBufferAttribute = function(e) {
				var n = !1;
				return e && e instanceof t && (n = !0), n
			};
			var e = t.prototype;
			return e.setUsage = function(t) {
				return this.usage = t, this
			}, e.setArray = function(t) {
				return this.array.set(t), this
			}, t
		}();
	Nr.BYTE = 5120, Nr.UNSIGNED_BYTE = 5121, Nr.SHORT = 5122, Nr.UNSIGNED_SHORT = 5123, Nr.INT = 5124, Nr.UNSIGNED_INT = 5125, Nr.FLOAT = 5126;
	var Fr = function(t) {
			function e(e, n, r, i) {
				var o;
				return (o = t.call(this, new Uint8Array(e), n, r, i) || this)
					.name = "Uint8BufferAttribute", o
			}
			return c(e, t), e
		}(Nr),
		jr = function(t) {
			function e(e, n, r, i) {
				var o;
				return (o = t.call(this, new Uint16Array(e), n, r, i) || this)
					.name = "Uint16BufferAttribute", o
			}
			return c(e, t), e
		}(Nr),
		zr = function(t) {
			function e(e, n, r, i) {
				var o;
				return (o = t.call(this, new Uint32Array(e), n, r, i) || this)
					.name = "Uint32BufferAttribute", o
			}
			return c(e, t), e
		}(Nr),
		Vr = function(t) {
			function e(e, n, r, i) {
				var o;
				return (o = t.call(this, new Float32Array(e), n, r, i) || this)
					.name = "Float32ArrayAttribute", o
			}
			return c(e, t), e
		}(Nr),
		Gr = function(t) {
			function e(e, n, r, i) {
				var o;
				if (Array.isArray(e)) {
					var a = function(t) {
						for (var e, n = Number.MAX_VALUE, r = -Number.MAX_VALUE, i = t.length - 1; i >= 0; i--) n > (e = t[i]) && (n = e), r < e && (r = e);
						return {
							min: n,
							max: r
						}
					}(e);
					o = new(a.max > 65535 ? Uint32Array : Uint16Array)(e)
				} else o = e;
				return t.call(this, o, n, r, i) || this
			}
			return c(e, t), e
		}(Nr),
		Wr = 0,
		Hr = function(t) {
			function e() {
				for (var e, n = arguments.length, r = new Array(n), i = 0; i < n; i++) r[i] = arguments[i];
				return (e = t.call.apply(t, [this].concat(r)) || this)
					.id = Wr++, e.uuid = Lr(), e.name = "", e.type = "BufferGeometry", e.indexes = null, e.attributes = {}, e.__webglInit = !1, e.groupsNeedUpdate = !1, e.boundingBox = null, e
			}
			c(e, t);
			var n = e.prototype;
			return n.getIndexes = function() {
				return this.indexes
			}, n.getCenter = function() {
				return this.computeBoundingBox(), this.boundingBox ? this.boundingBox.getCenter() : void 0
			}, n.setIndexes = function(t) {
				return Array.isArray(t) || ArrayBuffer.isView(t) ? this.indexes = new Gr(t, 1) : Gr.isBufferAttribute(t) && (this.indexes = t), this
			}, n.getAttribute = function(t) {
				return t ? this.attributes[t] : this.attributes
			}, n.setAttribute = function(t, e) {
				return t && Nr.isBufferAttribute(e) && (this.attributes[t] = e), this
			}, n.deleteAttribute = function(t) {
				return this.attributes[t] && delete this.attributes[t], this
			}, n.computeBoundingBox = function() {
				null === this.boundingBox && (this.boundingBox = new Ur);
				var t = this.attributes.position;
				t && t.isBufferAttribute && this.boundingBox.setFromBufferAttribute(t)
			}, e
		}(Dr),
		Zr = new xe,
		qr = new xe,
		Yr = new xe,
		Xr = function(t) {
			function e(e, n) {
				var r;
				return (r = t.call(this) || this)
					.type = "Mesh", r.geometry = void 0, r.material = void 0, r.materialChanged = void 0, r.__webglInit = !1, r.geometry = void 0 !== e ? e : new Hr, r.material = void 0 !== n ? n : null, r.materialChanged = !1, r
			}
			c(e, t);
			var n = e.prototype;
			return n.updateMaterial = function(t) {
				this.material && t.isMaterial && t.uuid !== this.material.uuid && (this.material = t, this.materialChanged = !0)
			}, n.raycast = function(t) {
				var e = this.geometry,
					n = e.indexes && e.indexes.array,
					r = e.attributes.position.array;
				if (!n) return null;
				for (var i = 0; i < n.length; i += 3) {
					var o = 3 * n[i],
						a = 3 * n[i + 1],
						s = 3 * n[i + 2],
						u = Zr.set(r[o], r[o + 1], r[o + 2])
						.transform(this.worldMatrix),
						h = qr.set(r[a], r[a + 1], r[a + 2])
						.transform(this.worldMatrix),
						c = Yr.set(r[s], r[s + 1], r[s + 2])
						.transform(this.worldMatrix),
						l = t.intersectTriangle(u, h, c);
					if (l) return {
						distance: l.distance,
						point: l.point,
						object: this
					}
				}
				return null
			}, e
		}(kr),
		Kr = function(t) {
			function e() {
				for (var e, n = arguments.length, r = new Array(n), i = 0; i < n; i++) r[i] = arguments[i];
				return (e = t.call.apply(t, [this].concat(r)) || this)
					.type = "Scene", e.isScene = !0, e.autoUpdate = !0, e
			}
			c(e, t);
			var n = e.prototype;
			return n.updateWorldMatrix = function() {
				var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
				!0 === this.autoUpdate && t.prototype.updateWorldMatrix.call(this, e)
			}, n.clone = function(n) {
				return void 0 === n && (n = new e), t.prototype.clone.call(this, n), n.autoUpdate = this.autoUpdate, n
			}, e
		}(kr),
		Qr = function(t) {
			function e() {
				var e;
				return (e = t.call(this) || this)
					.type = "Geometry", e.vertices = [], e.verticesBufferData = new Float32Array, e.indicesBufferData = new Uint16Array, e.uvtsBufferData = new Float32Array, e.groupsNeedUpdate = !1, e
			}
			return c(e, t), e
		}(Dr),
		Jr = new xe,
		$r = new xe,
		ti = new xe,
		ei = new xe,
		ni = new xe,
		ri = function() {
			function t(t, e) {
				this.origin = void 0, this.direction = void 0, this.origin = t || new xe, this.direction = e || new xe(0, 0, -1)
			}
			var e = t.prototype;
			return e.set = function(t, e) {
				return this.origin.copy(t), this.direction.copy(e), this
			}, e.setFromCamera = function(t, e) {
				var n = new xe(e.position[0], e.position[1], e.position[2]),
					r = (new zn)
					.fromArray(e.projectionMatrix),
					i = e.worldMatrix,
					o = new be(t[0], t[1], .5, 1)
					.transform(r)
					.transform(i),
					a = o.x,
					s = o.y,
					u = o.z,
					h = new xe(a, s, u)
					.sub(n)
					.normalize();
				this.set(n, h)
			}, e.getPointByLen = function(t, e) {
				var n = void 0 !== e ? e : new xe;
				return n.copy(this.direction), n.scale(t), n.add(this.origin), n
			}, e.intersectTriangle_Old = function(t, e, n) {
				var r, i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
					o = arguments.length > 4 ? arguments[4] : void 0,
					a = Jr.copy(e)
					.subtract(t),
					s = $r.copy(n)
					.subtract(t),
					u = ti.copy(a)
					.cross(s),
					h = ei.copy(this.origin)
					.subtract(t),
					c = this.direction.dot(u);
				if (0 < c) {
					if (i) return null;
					r = 1
				} else {
					if (!(0 > c)) return null;
					r = -1, c = -c
				}
				s.copy((new xe)
					.copy(h)
					.cross(s));
				var l = r * this.direction.dot(s);
				if (0 > l) return null;
				var f = r * this.direction.dot((new xe)
					.copy(h)
					.cross(a));
				if (0 > f) return null;
				if (l + f > c) return null;
				var d = -r * h.dot(u);
				return 0 > d ? null : this.getPointByLen(d / c, o)
			}, e.intersectTriangle = function(t, e, n) {
				var r = arguments.length > 4 ? arguments[4] : void 0,
					i = 1e-6,
					o = Jr.subVectors(e, t),
					a = $r.subVectors(n, t),
					s = ti.copy(this.direction)
					.cross(a),
					u = o.dot(s);
				if (u > -i && u < i) return null;
				var h = 1 / u,
					c = ei.subVectors(this.origin, t),
					l = h * c.dot(s);
				if (l < 0 || l > 1) return null;
				var f = ni.copy(c)
					.cross(o),
					d = h * this.direction.dot(f);
				if (d < 0 || l + d > 1) return null;
				var p = a.dot(f) * h;
				return p > i ? {
					distance: p,
					point: this.getPointByLen(p, r)
				} : null
			}, e.intersectSphere = function(t, e, n) {
				var r = (new xe)
					.subtract(t, this.origin),
					i = r.dot(this.direction),
					o = r.dot(r) - i * i,
					a = e * e;
				if (o > a) return null;
				var s = Math.sqrt(a - o),
					u = i - s,
					h = i + s;
				return 0 > u && 0 > h ? null : 0 > u ? this.getPointByLen(h, n) : this.getPointByLen(u, n)
			}, t
		}();

	function ii(t, e) {
		var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
		if (!n) {
			if (Array.isArray(t) || (n = function(t, e) {
				if (!t) return;
				if ("string" == typeof t) return oi(t, e);
				var n = Object.prototype.toString.call(t)
					.slice(8, -1);
				"Object" === n && t.constructor && (n = t.constructor.name);
				if ("Map" === n || "Set" === n) return Array.from(t);
				if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return oi(t, e)
			}(t)) || e && t && "number" == typeof t.length) {
				n && (t = n);
				var r = 0,
					i = function() {};
				return {
					s: i,
					n: function() {
						return r >= t.length ? {
							done: !0
						} : {
							done: !1,
							value: t[r++]
						}
					},
					e: function(t) {
						throw t
					},
					f: i
				}
			}
			throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
		}
		var o, a = !0,
			s = !1;
		return {
			s: function() {
				n = n.call(t)
			},
			n: function() {
				var t = n.next();
				return a = t.done, t
			},
			e: function(t) {
				s = !0, o = t
			},
			f: function() {
				try {
					a || null == n.return || n.return()
				} finally {
					if (s) throw o
				}
			}
		}
	}

	function oi(t, e) {
		(null == e || e > t.length) && (e = t.length);
		for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
		return r
	}
	var ai = function() {
			function t(t, e, n, r) {
				this.ray = void 0, this.near = void 0, this.far = void 0, this.ray = new ri(t, e), this.near = n || 0, this.far = r || 1 / 0
			}
			var e = t.prototype;
			return e.set = function(t, e) {
				this.ray.set(t, e)
			}, e.setFromCamera = function(t, e) {
				var n = new xe(e.position[0], e.position[1], e.position[2]),
					r = (new zn)
					.fromArray(e.projectionMatrix)
					.invert(),
					i = e.worldMatrix,
					o = new be(t[0], t[1], .5, 1)
					.transform(r)
					.transform(i),
					a = o.x,
					s = o.y,
					u = o.z,
					h = new xe(a, s, u)
					.sub(n)
					.normalize();
				this.set(n, h)
			}, e.pick = function(t) {
				var e, n = this.ray,
					r = [],
					i = ii([].concat(t));
				try {
					for (i.s(); !(e = i.n())
						.done;) {
						var o = e.value.raycast(n);
						o && r.push(o)
					}
				} catch (t) {
					i.e(t)
				} finally {
					i.f()
				}
				return r.sort((function(t, e) {
					return t.distance - e.distance
				})), r
			}, t
		}(),
		si = function(t) {
			function e(n) {
				var r;
				return (r = t.call(this) || this)
					.image = void 0, r.flipY = !0, r.premultiplyAlpha = !1, r.needsUpdate = !0, r.glTexture = null, r.isTexture = !0, r.gl = null, r.__textureInit = !1, r.clone = function(t) {
						return void 0 === t && (t = new e), t.image = r.image, t.flipY = r.flipY, t
					}, r.destory = function() {
						r.emit("destory", r.glTexture)
					}, r.destoryTexture = function() {
						r.glTexture && r.gl && (r.off("destory", r.destoryTexture), r.gl.deleteTexture(r.glTexture))
					}, void 0 !== n && (r.image = n), r
			}
			return c(e, t), e.prototype.init = function(t) {
				!0 !== this.__textureInit && (this.gl = t, this.glTexture = t.createTexture(), this.on("destory", this.destoryTexture), this.__textureInit = !0)
			}, e
		}(Dr),
		ui = function(t) {
			function e(e) {
				var n;
				return (n = t.call(this) || this)
					.isCube = !0, n.image = e || [], n.flipY = !1, n
			}
			return c(e, t), e
		}(si),
		hi = function() {
			function t(t, e, n) {
				var r = this;
				this.gl = void 0, this.maxTextureSize = void 0, this.maxTextures = void 0, this.usedTextureUnits = 0, this.getTextureUnit = function() {
					var t = r.usedTextureUnits;
					return r.usedTextureUnits >= r.maxTextures ? r.usedTextureUnits = 0 : r.usedTextureUnits += 1, t
				}, this.resetUsedTextureUnits = function() {
					r.usedTextureUnits = 0
				}, this.setTexture = function(t) {
					var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
					if (t instanceof ui) r.setCubeTexture(t, e);
					else {
						var n = r.gl;
						n.activeTexture(n.TEXTURE0 + e), t.needsUpdate ? (t.init(n), r.uploadTexture(n, t)) : n.bindTexture(n.TEXTURE_2D, t.glTexture)
					}
				}, this.setTextureForRenderTarget = function(t) {
					var e = r.gl;
					t.glTexture = e.createTexture(), e.bindTexture(e.TEXTURE_2D, t.glTexture), e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, t.flipY), e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, t.premultiplyAlpha), r.setTextureParameter(e);
					var n = e.RGBA,
						i = e.RGBA,
						o = e.UNSIGNED_BYTE;
					e.texImage2D(e.TEXTURE_2D, 0, n, t.width, t.height, 0, i, o, null)
				}, this.uploadTexture = function(t, e) {
					e.init(t), t.bindTexture(t.TEXTURE_2D, e.glTexture), t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY), t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, e.premultiplyAlpha), r.setTextureParameter(t), t.texImage2D(t.TEXTURE_2D, 0, t.RGBA, t.RGBA, t.UNSIGNED_BYTE, e.image), e.needsUpdate = !1
				}, this.setTextureParameter = function(t) {
					t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, t.LINEAR), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, t.LINEAR)
				}, this.gl = t, this.maxTextureSize = n, this.maxTextures = e
			}
			return t.prototype.setCubeTexture = function(t) {
				var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
					n = t.image;
				if (6 !== n.length) throw new Error("[setCubeTexture] CubeTexture need six images, but get\n                ".concat(n.length, "\n            "));
				var r = this.gl;
				if (t.needsUpdate) {
					t.init(r), r.activeTexture(r.TEXTURE0 + e), r.bindTexture(r.TEXTURE_CUBE_MAP, t.glTexture), r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL, t.flipY), r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_MAG_FILTER, r.LINEAR), r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_MIN_FILTER, r.LINEAR), r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_WRAP_S, r.CLAMP_TO_EDGE), r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_WRAP_T, r.CLAMP_TO_EDGE);
					for (var i = 0; i < 6; i++) {
						var o = n[i];
						r.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, r.RGBA, r.RGBA, r.UNSIGNED_BYTE, o)
					}
					t.needsUpdate = !1
				} else r.bindTexture(r.TEXTURE_CUBE_MAP, t.glTexture)
			}, t
		}(),
		ci = n((function(t) {
			t.exports = function(t, e) {
				(null == e || e > t.length) && (e = t.length);
				for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
				return r
			}, t.exports.__esModule = !0, t.exports.default = t.exports
		}));
	e(ci);
	var li = n((function(t) {
		t.exports = function(t) {
			if (Array.isArray(t)) return ci(t)
		}, t.exports.__esModule = !0, t.exports.default = t.exports
	}));
	e(li);
	var fi = n((function(t) {
		t.exports = function(t) {
			if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t)
		}, t.exports.__esModule = !0, t.exports.default = t.exports
	}));
	e(fi);
	var di = n((function(t) {
		t.exports = function(t, e) {
			if (t) {
				if ("string" == typeof t) return ci(t, e);
				var n = Object.prototype.toString.call(t)
					.slice(8, -1);
				return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(t) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ci(t, e) : void 0
			}
		}, t.exports.__esModule = !0, t.exports.default = t.exports
	}));
	e(di);
	var pi = n((function(t) {
		t.exports = function() {
			throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
		}, t.exports.__esModule = !0, t.exports.default = t.exports
	}));
	e(pi);
	var vi = e(n((function(t) {
			t.exports = function(t) {
				return li(t) || fi(t) || di(t) || pi()
			}, t.exports.__esModule = !0, t.exports.default = t.exports
		}))),
		mi = n((function(t) {
			t.exports = function(t) {
				if (Array.isArray(t)) return t
			}, t.exports.__esModule = !0, t.exports.default = t.exports
		}));
	e(mi);
	var gi = n((function(t) {
		t.exports = function(t, e) {
			var n = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
			if (null != n) {
				var r, i, o = [],
					a = !0,
					s = !1;
				try {
					for (n = n.call(t); !(a = (r = n.next())
						.done) && (o.push(r.value), !e || o.length !== e); a = !0);
				} catch (t) {
					s = !0, i = t
				} finally {
					try {
						a || null == n.return || n.return()
					} finally {
						if (s) throw i
					}
				}
				return o
			}
		}, t.exports.__esModule = !0, t.exports.default = t.exports
	}));
	e(gi);
	var yi = n((function(t) {
		t.exports = function() {
			throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
		}, t.exports.__esModule = !0, t.exports.default = t.exports
	}));
	e(yi);
	var _i = e(n((function(t) {
			t.exports = function(t, e) {
				return mi(t) || gi(t, e) || di(t, e) || yi()
			}, t.exports.__esModule = !0, t.exports.default = t.exports
		}))),
		xi = function(t, e, n) {
			if (t && e && e.length)
				for (var r = e.length, i = 0; i < r; i++) {
					var o = void 0,
						a = void 0,
						s = void 0,
						u = e[i],
						h = _i(u, 2),
						c = h[0],
						l = h[1],
						f = c.type,
						d = c.value;
					switch (c.type) {
						case "1i":
						case "1f":
							t["uniform".concat(f)](l, c.value);
							break;
						case "2f":
						case "3f":
						case "4f":
							t["uniform".concat(f)].apply(t, [l].concat(vi(d)));
							break;
						case "t":
							if (!(o = c.value) || !o.image && !o.glTexture) break;
							a = n.getTextureUnit(), t.uniform1i(l, a), n.setTexture(o, a);
							break;
						case "tv":
							s = [];
							for (var p = c.value, v = 0, m = p.length; v < m; v++) s[v] = n.getTextureUnit();
							t.uniform1iv(l, s);
							for (var g = 0, y = p.length; g < y; g++)(o = p[g]) && (o.image || o.glTexture) && (a = s[g], n.setTexture(o, a));
							break;
						case "mat4fv":
							t.uniformMatrix4fv(l, !1, c.value);
							break;
						default:
							console.warn("[UniformOperation] Unknown uniform type: ".concat(f))
					}
				}
		};
	var bi = "\nvoid main() {\n    gl_Position = mvpMatrix * vec4(position, 1.0);\n}\n",
		Mi = "\nvoid main() {\n    gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n",
		wi = 0,
		Ei = function(t) {
			function e() {
				for (var e, n = arguments.length, r = new Array(n), i = 0; i < n; i++) r[i] = arguments[i];
				return (e = t.call.apply(t, [this].concat(r)) || this)
					.isMaterial = !0, e.id = wi++, e.type = "Material", e.name = "", e.uuid = Lr(), e.uniforms = {}, e.vertexShader = bi, e.fragmentShader = Mi, e.program = null, e.depthTest = !0, e.visible = !0, e.opacity = 1, e.needsUpdate = !0, e.uniformsList = [], e
			}
			c(e, t);
			var n = e.prototype;
			return n.setValues = function(t) {
				if (void 0 !== t)
					for (var e in t)
						if (Object.prototype.hasOwnProperty.call(t, e)) {
							var n = t[e];
							if (void 0 === n) {
								console.warn("Material: '" + e + "' parameter is undefined.");
								continue
							}
							if (void 0 === this[e]) {
								console.warn("".concat(this.type, ": ")
									.concat(e, " is not a property of this material."));
								continue
							}
							var r = "set" + e.charAt(0)
								.toUpperCase() + e.slice(1);
							"function" == typeof this[r] ? this[r](n) : this[e] = n
						}
			}, n.clone = function() {
				return (new e)
					.copy(this)
			}, n.copy = function(t) {
				return this.uniforms = function(t) {
					var e, n = {};
					for (var r in t)
						if (Object.prototype.hasOwnProperty.call(t, r))
							for (var i in n[r] = {}, t[r]) Object.prototype.hasOwnProperty.call(t[r], i) && ((e = t[r][i]) && e.isTexture ? n[r][i] = e.clone() : n[r][i] = e instanceof Array ? e.slice(0) : e);
					return n
				}(t.uniforms), this.depthTest = t.depthTest, this.visible = t.visible, this.fragmentShader = t.fragmentShader, this.vertexShader = t.vertexShader, this
			}, o(e, [{
				key: "defines",
				get: function() {
					return ""
				}
			}]), e
		}(Dr),
		Ti = {
			useColor: "USE_COLOR",
			useUV: "NEED_UV"
		},
		Ai = function() {
			function t() {
				this.useColor = !1, this.useUV = !1
			}
			return t.prototype.getDefines = function() {
				for (var t = [], e = 0, n = Object.keys(this); e < n.length; e++) {
					var r = n[e];
					Ti[r] && !0 === this[r] && t.push("#define ".concat(Ti[r]))
				}
				return t.push(""), t.join("\n")
			}, t
		}(),
		Ci = "\n#ifdef NEED_UV\n    varying vec2 vUV;\n#endif\nvoid main(void) {\n    gl_Position = mvpMatrix * vec4(position, 1.0);\n    #ifdef NEED_UV\n        vUV = uv;\n    #endif\n}\n",
		Ri = "\nprecision mediump float;\n#ifdef NEED_UV\n    varying vec2 vUV;\n    uniform sampler2D uSampler;\n#endif\n#ifdef USE_COLOR\n    uniform vec4 uColor;\n#endif\nuniform float uOpacity;\nvoid main(void) {\n    vec4 finalColor;\n    vec4 defaultColor = vec4(1.0, 0.0, 0.0, 1.0);\n    finalColor = defaultColor;\n    #ifdef USE_COLOR\n        finalColor = uColor;\n    #endif\n    #ifdef NEED_UV\n        finalColor = texture2D(uSampler, vUV);\n    #endif\n    gl_FragColor = vec4(finalColor.rgb, finalColor.a * uOpacity);\n}\n",
		Si = function(t) {
			function e() {
				var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
				return (e = t.call(this) || this)
					.map = null, e.color = [1, 0, 0, 1], e.type = "BasicMaterial", e.opacity = 1, e.depthTest = !0, e.vertexShader = Ci, e.fragmentShader = Ri, e.uniforms = {
						uSampler: {
							type: "t",
							value: null
						},
						uColor: {
							type: "4f",
							value: [1, 0, 0, 1]
						},
						uOpacity: {
							type: "1f",
							value: e.opacity
						}
					}, e.setValues(n), e
			}
			c(e, t);
			var n = e.prototype;
			return n.setOpacity = function(t) {
				this.uniforms.uOpacity.value = t, this.opacity = t
			}, n.setColor = function(t) {
				!Array.isArray(t) || t.length < 4 || (this.uniforms.uColor.value = t, this.color = t)
			}, n.setMap = function(t) {
				var e = this;
				t && (t instanceof Promise ? t.then((function(t) {
						e.uniforms.uSampler.value = t instanceof si == !0 ? t : new si(t)
					}))
					.catch((function(t) {
						return console.error(t)
					})) : !0 === t.isTexture && (this.uniforms.uSampler.value = t), this.map = t)
			}, o(e, [{
				key: "defines",
				get: function() {
					var t = new Ai;
					return t.useColor = !!this.color, t.useUV = !!this.map, t.getDefines()
				}
			}]), e
		}(Ei),
		Pi = function(t) {
			var e = this;
			this.gl = void 0, this.newAttributes = new Uint8Array(16), this.enabledAttributes = new Uint8Array(16), this.currentDepthTest = !1, this.currentDepthWrite = !0, this.currentColorWrite = !0, this.currentDoubleSided = !1, this.currentFlipSided = !1, this.initAttributes = function() {
				for (var t = 0, n = e.newAttributes.length; t < n; t++) e.newAttributes[t] = 0
			}, this.enableAttribute = function(t) {
				var n = e.gl,
					r = e.newAttributes,
					i = e.enabledAttributes;
				r[t] = 1, 0 === i[t] && (n.enableVertexAttribArray(t), i[t] = 1)
			}, this.disableAttribute = function(t) {
				var n = e.gl,
					r = e.newAttributes,
					i = e.enabledAttributes;
				r[t] = 0, 1 === i[t] && (n.disableVertexAttribArray(t), i[t] = 0)
			}, this.disableUnusedAttributes = function() {
				for (var t = e.gl, n = e.newAttributes, r = e.enabledAttributes, i = 0, o = r.length; i < o; i++) r[i] !== n[i] && (t.disableVertexAttribArray(i), r[i] = 0)
			}, this.setDepthTest = function(t) {
				var n = e.gl;
				e.currentDepthTest !== t && (t ? n.enable(n.DEPTH_TEST) : n.disable(n.DEPTH_TEST), e.currentDepthTest = t)
			}, this.setDepthWrite = function(t) {
				var n = e.gl;
				e.currentDepthWrite !== t && (n.depthMask(t), e.currentDepthWrite = t)
			}, this.setColorWrite = function(t) {
				var n = e.gl;
				e.currentColorWrite !== t && (n.colorMask(t, t, t, t), e.currentColorWrite = t)
			}, this.setDefaultGLState = function(t, n, r, i) {
				var o = e.gl;
				o.clearColor(229 / 255, 227 / 255, 223 / 255, 1), o.clear(o.COLOR_BUFFER_BIT | o.DEPTH_BUFFER_BIT), o.clearDepth(1), o.clearStencil(0), o.disable(o.DEPTH_TEST), o.depthFunc(o.LEQUAL), o.frontFace(o.CCW), o.disable(o.CULL_FACE), o.depthMask(!0), o.enable(o.BLEND), o.blendFunc(o.SRC_ALPHA, o.ONE_MINUS_SRC_ALPHA), o.viewport(t, n, r, i)
			}, this.setDoubleSided = function(t) {
				var n = e.gl;
				e.currentDoubleSided !== t && (t ? n.disable(n.CULL_FACE) : n.enable(n.CULL_FACE), e.currentDoubleSided = t)
			}, this.setFlipSided = function(t) {
				var n = e.gl;
				e.currentFlipSided !== t && (t ? n.frontFace(n.CW) : n.frontFace(n.CCW), e.currentFlipSided = t)
			}, this.reset = function() {
				for (var t = e.enabledAttributes, n = 0; n < t.length; n++) t[n] = 0;
				e.currentDepthTest = !1, e.currentDepthWrite = !0, e.currentColorWrite = !0, e.currentDoubleSided = !1, e.currentFlipSided = !1
			}, this.gl = t
		},
		Di = function(t) {
			var e = this;
			this.maxTextures = void 0, this.maxTextureSize = void 0, this.maxVerticesOneDraw = void 0, this.maxVertexShaderTextureUnits = void 0, this.maxFragmentShaderTextureUnits = void 0, this.gl = void 0, this.getMaxTextures = function() {
				var t = e.gl;
				return t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS)
			}, this.getLineWidthRange = function() {
				var t = e.gl;
				return t.getParameter(t.ALIASED_LINE_WIDTH_RANGE)
			}, this.getMaxVertexShaderTextureUnits = function() {
				var t = e.gl;
				return t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)
			}, this.getMaxFragmentShaderTextureUnits = function() {
				var t = e.gl;
				return t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)
			}, this.getMaxTextureSize = function() {
				var t = e.gl;
				return t.getParameter(t.MAX_TEXTURE_SIZE)
			}, this.getMaxVerticesOneDraw = function() {
				return e.gl.getExtension("OES_element_index_uint") ? 4294967296 : 65535
			}, this.getLegalPrecision = function(t) {
				var n = e.gl,
					r = n.getShaderPrecisionFormat(n.VERTEX_SHADER, n.HIGH_FLOAT),
					i = n.getShaderPrecisionFormat(n.VERTEX_SHADER, n.MEDIUM_FLOAT),
					o = n.getShaderPrecisionFormat(n.FRAGMENT_SHADER, n.HIGH_FLOAT),
					a = n.getShaderPrecisionFormat(n.FRAGMENT_SHADER, n.MEDIUM_FLOAT),
					s = r && o && r.precision > 0 && o.precision > 0,
					u = i && a && i.precision > 0 && a.precision > 0;
				return "highp" !== t || s ? "mediump" !== t || u || (t = "lowp", console.warn("[WebGLCapability] mediump is not supported, using lowp by default.")) : u ? (t = "mediump", console.warn("[WebGLCapability] highp is not supported, using mediump by default.")) : (t = "lowp", console.warn("[WebGLCapability] highp and mediump is not supported, using lowp by default.")), t
			}, this.gl = t, this.maxTextures = this.getMaxTextures(), this.maxVertexShaderTextureUnits = this.getMaxVertexShaderTextureUnits(), this.maxFragmentShaderTextureUnits = this.getMaxFragmentShaderTextureUnits(), this.maxTextureSize = this.getMaxTextureSize(), this.maxVerticesOneDraw = this.getMaxVerticesOneDraw()
		},
		Oi = 0,
		Ii = function(t, e, n) {
			var r = t.createShader(n);
			if (!r) throw new Error("Something went wrong while compile the shader.");
			return t.shaderSource(r, e), t.compileShader(r), t.getShaderParameter(r, t.COMPILE_STATUS) || console.error("Error compiling shader: ".concat(t.getShaderInfoLog(r))), r
		},
		Li = function() {
			function t(t, e, n) {
				this.usedTimes = void 0, this.id = void 0, this.code = void 0, this.program = void 0, this.attributes = void 0, this.uniforms = void 0, this.gl = void 0, this.parameters = void 0, this.precision = void 0, this.gl = t, this.parameters = e, this.precision = n.precision || "highp", this.usedTimes = 1, this.id = Oi++;
				var r = e.defines,
					i = void 0 === r ? "" : r,
					o = e.vertexShader,
					a = e.fragmentShader;
				this.code = i + o + a, this.program = this.createProgram(t, e, this.precision), this.attributes = this.fetchAttributes(t, this.program), this.uniforms = function(t, e) {
					var n, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
						i = {},
						o = r.length;
					if (!o) return i;
					for (var a = 0; a < o; a++) i[n = r[a]] = t.getUniformLocation(e, n);
					return i
				}(t, this.program, this.getFullUniforms(e.uniforms))
			}
			var e = t.prototype;
			return e.getAttributes = function() {
				return this.attributes
			}, e.getUniforms = function() {
				return this.uniforms
			}, e.createProgram = function(t, e) {
				var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "highp",
					r = e.vertexShader,
					i = e.fragmentShader,
					o = e.defines,
					a = void 0 === o ? "" : o,
					s = ["precision ".concat(n, " float;"), "uniform mat4 modelMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat4 mvpMatrix;", "attribute vec3 position;", "attribute vec2 uv;", ""].join("\n"),
					u = t.createProgram(),
					h = ["precision ".concat(n, " float;"), ""].join("\n"),
					c = Ii(t, s + a + r, t.VERTEX_SHADER),
					l = Ii(t, h + a + i, t.FRAGMENT_SHADER);
				if (!u) throw new Error("Something went wrong while createProgram.");
				return t.attachShader(u, c), t.attachShader(u, l), t.linkProgram(u), u
			}, e.fetchAttributes = function(t, e) {
				for (var n = {}, r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES), i = 0; i < r; i++) {
					var o = t.getActiveAttrib(e, i);
					if (!o) throw new Error("Something went wrong while getActiveAttrib.");
					var a = o.name;
					n[a] = t.getAttribLocation(e, a)
				}
				return n
			}, e.getFullUniforms = function(t) {
				var e = ["mvpMatrix", "modelMatrix", "projectionMatrix", "viewMatrix"];
				for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && e.push(n);
				return e
			}, t
		}(),
		Bi = {
			canvas: document.createElement("canvas"),
			context: void 0,
			width: 0,
			height: 0,
			pixelRatio: 1,
			precision: "highp",
			alpha: !1,
			premultipliedAlpha: !0,
			antialias: !0,
			stencil: !0,
			depth: !0,
			preserveDrawingBuffer: !1
		},
		ki = function() {
			function t() {
				var t = this,
					e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
				this.state = void 0, this.domElement = void 0, this.capability = void 0, this.textureOperation = void 0, this._gl = void 0, this.parameters = void 0, this.programs = void 0, this.viewportInfo = void 0, this.autoDisposeProgram = !0, this.currentCacheState = void 0, this.setSize = function(e, n) {
					var r = t.parameters,
						i = r.canvas,
						o = r.pixelRatio;
					i.style.width = "".concat(e, "px"), i.style.height = "".concat(n, "px"), i.width = e * o, i.height = n * o, t.setViewport(0, 0, e, n)
				}, this.setViewport = function(e, n, r, i) {
					var o = t.parameters.pixelRatio,
						a = t.viewportInfo;
					a.x = e * o, a.y = n * o, a.width = r * o, a.height = i * o, t._gl.viewport.apply(t._gl, Object.values(a))
				}, this.setClearColor = function(e, n, r) {
					var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
					!0 === t.parameters.premultipliedAlpha && (e *= i, n *= i, r *= i), t._gl.clearColor(e, n, r, i)
				}, this.getContext = function() {
					return t._gl
				}, this.forceContextLoss = function() {
					try {
						var e = t._gl.getExtension("WEBGL_lose_context");
						e && e.loseContext()
					} catch (t) {
						console.error("[WebGLRenderer] WEBGL_lose_context error: ", t)
					}
				}, this.initScene = function(e) {
					!0 === e.visible && e.traverse((function(e) {
						!0 === e.visible && e instanceof Xr && t.initMesh(e)
					}))
				}, this.initMesh = function(e) {
					!0 === e.visible && (!0 !== e.__webglInit && (e.__webglInit = !0, e.addEventListener("removed", t.onObjectRemoved)), e.geometry && t.checkAndUpdateGeometry(e.geometry), e.children && e.children.length > 0 && e.children.forEach((function(e) {
						t.initMesh(e)
					})))
				}, this.checkAndUpdateGeometry = function(e) {
					!0 !== e.__webglInit && (e.__webglInit = !0, e.addEventListener("removed", t.onGeometryRemove), e.groupsNeedUpdate = !0), !0 === e.groupsNeedUpdate && ("BufferGeometry" === e.type ? t.updateBufferGeometry(e) : t.updateGeometryBuffer(e, t._gl.STATIC_DRAW), e.groupsNeedUpdate = !1)
				}, this.updateGeometryBuffer = function(e, n) {
					var r = e.verticesBufferData,
						i = e.uvtsBufferData,
						o = e.indicesBufferData,
						a = e.borderVerticesBufferData,
						s = t._gl;
					0 < r.length && (e.glVerticesBuffer = s.createBuffer(), s.bindBuffer(s.ARRAY_BUFFER, e.glVerticesBuffer), s.bufferData(s.ARRAY_BUFFER, r, n)), 0 < i.length && (e.glUvtsBuffer = s.createBuffer(), s.bindBuffer(s.ARRAY_BUFFER, e.glUvtsBuffer), s.bufferData(s.ARRAY_BUFFER, i, n)), 0 < o.length && (e.glIndicesBuffer = s.createBuffer(), s.bindBuffer(s.ELEMENT_ARRAY_BUFFER, e.glIndicesBuffer), s.bufferData(s.ELEMENT_ARRAY_BUFFER, o, n)), !0 === e.showBorder && void 0 !== a && 0 < a.length && (e.glBorderVerticesBuffer = s.createBuffer(), s.bindBuffer(s.ARRAY_BUFFER, e.glBorderVerticesBuffer), s.bufferData(s.ARRAY_BUFFER, e.borderVerticesBufferData, n))
				}, this.renderScene = function(e, n) {
					!0 === e.visible && e.traverse((function(e) {
						e instanceof Xr && (t.renderObject(e, n), e.children.length && e.children.forEach((function(e) {
							t.renderObject(e, n)
						})))
					}))
				}, this.renderObject = function(e, n) {
					var r = e.material,
						i = e.geometry;
					if (!0 === e.visible && r && i && !0 === r.visible) {
						t.state.setDepthTest(r.depthTest);
						var o = !1,
							a = t.setProgram(n, r, e);
						o = "BufferGeometry" === i.type ? t.updateVerticesAttribute2(a, i, !1) : t.updateVerticesAttribute(a, i, !1), t.renderGeometryWithProgram(a, i, r, o)
					}
				}, this.setProgram = function(e, n, r) {
					var i = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
						o = t._gl;
					t.textureOperation.resetUsedTextureUnits(), t.checkAndUpdateMaterial(r.material);
					var a = n.program,
						s = a.getUniforms();
					return a.id !== t.currentCacheState.programId && (o.useProgram(a.program), t.currentCacheState.programId = a.id), !1 !== i && xi(o, n.uniformsList, t.textureOperation), t.updateMVPMatrix(s, e, r), a
				}, this.checkAndUpdateMaterial = function(e) {
					void 0 !== e && (!0 !== e.__webglInit && (e.__webglInit = !0, e.addEventListener("removed", t.onMaterialRomove), e.needsUpdate = !0), !0 === e.needsUpdate && (t.updateMaterial(e), e.needsUpdate = !1))
				}, this.updateMaterial = function(e) {
					e.program && t.removeMaterial(e);
					for (var n = null, r = t.programs.length, i = e.defines, o = (void 0 === i ? "" : i) + e.vertexShader + e.fragmentShader, a = r - 1; a >= 0; a--) {
						var s = t.programs[a];
						if (s.code === o) {
							(n = s)
							.usedTimes++;
							break
						}
					}
					if (null === n) {
						var u = {
							uniforms: e.uniforms,
							defines: e.defines || "",
							vertexShader: e.vertexShader,
							fragmentShader: e.fragmentShader
						};
						n = new Li(t._gl, u, {
							precision: t.parameters.precision
						}), t.programs.push(n)
					}
					e.program = n, e.uniformsList = [];
					var h = 0,
						c = n.uniforms,
						l = e.uniforms;
					for (var f in l)
						if (Object.prototype.hasOwnProperty.call(l, f)) {
							var d = c[f];
							d && (e.uniformsList[h] = [l[f], d], h++)
						}
				}, this.updateMVPMatrix = function(e, n, r) {
					if (void 0 !== e.mvpMatrix) {
						var i = Pe(n.projectionMatrix);
						ke(i, i, n.viewMatrix), ke(i, i, r.worldMatrix), t._gl.uniformMatrix4fv(e.mvpMatrix, !1, i), t._gl.uniformMatrix4fv(e.modelMatrix, !1, r.worldMatrix), t._gl.uniformMatrix4fv(e.viewMatrix, !1, n.viewMatrix), t._gl.uniformMatrix4fv(e.projectionMatrix, !1, n.projectionMatrix)
					}
					t.currentCacheState.camera = n
				}, this.renderGeometryWithProgram = function(e, n, r) {
					var i = t._gl,
						o = t.currentCacheState.curRenderTarget;
					if (e.uniforms.showDebugLine && i.uniform1i(e.uniforms.showDebugLine, 0), "BufferGeometry" === n.type ? i.bindBuffer(i.ELEMENT_ARRAY_BUFFER, n.indexesBuffer) : i.bindBuffer(i.ELEMENT_ARRAY_BUFFER, n.glIndicesBuffer), null !== o && void 0 !== o.glFrameBuffer) {
						var a = i.checkFramebufferStatus(i.FRAMEBUFFER);
						if (i.FRAMEBUFFER_COMPLETE !== a) return t.removeRenderTarget(o), void(t.currentCacheState.curRenderTarget = null)
					}
					n.indexes && n.indexes.count > 0 ? i.drawElements(i.TRIANGLES, n.indexes.count, i.UNSIGNED_SHORT, 0) : i.drawArrays(i.TRIANGLES, 0, n.attributes.position.count)
				}, this.onObjectRemoved = function(e) {
					e.target.traverse((function(e) {
						e.removeEventListener("removed", t.onObjectRemoved), t.removeObject(e)
					}))
				}, this.onGeometryRemove = function(e) {
					var n = e.target;
					n.removeEventListener("removed", t.onGeometryRemove), t.removeGeometry(n)
				}, this.onMaterialRomove = function(e) {
					var n = e.target;
					n.removeEventListener("removed", t.onMaterialRomove), t.removeMaterial(n)
				}, this.onRenderTargetRemove = function(e) {
					var n = e.target;
					n.removeEventListener("removed", t.onRenderTargetRemove), t.removeRenderTarget(n)
				}, this.removeObject = function(t) {
					t.geometry && delete t.geometry.__webglInit, delete t.__webglInit
				}, this.removeGeometry = function(e) {
					delete e.__webglInit, t.deleteBuffers(e), t.currentCacheState.geometryProgramId = null
				}, this.deleteBuffers = function(e) {
					["glVerticesBuffer", "glUvtsBuffer", "glIndicesBuffer", "glBorderVerticesBuffer"].forEach((function(n) {
						t._gl.deleteBuffer(e[n]), void 0 !== e[n] && 0 < e[n] && delete e[n]
					}))
				}, this.removeMaterial = function(e) {
					var n = e.program.program;
					if (n) {
						e.program = null;
						for (var r = t.programs, i = r.length - 1; i >= 0; i--) {
							var o = r[i];
							if (o.program === n) {
								o.usedTimes--, 0 === o.usedTimes && !1 !== t.autoDisposeProgram && (r.splice(i, 1), t._gl.deleteProgram(n));
								break
							}
						}
					}
				}, this.removeRenderTarget = function(e) {
					t._gl.deleteRenderbuffer(e.glDepthBuffer), e.glDepthBuffer = null, t._gl.deleteTexture(e.glTexture), e.glTexture = null, t._gl.deleteFramebuffer(e.glFrameBuffer), e.glFrameBuffer = null
				}, this.parameters = Object.assign({}, Bi, e), e && !e.canvas && (this.parameters.canvas = document.createElement("canvas")), this.initGL(), this.programs = [], this.viewportInfo = {
					x: 0,
					y: 0,
					width: this.parameters.canvas.width,
					height: this.parameters.canvas.height
				}, this.parameters.width && this.parameters.height && this.setSize(this.parameters.width, this.parameters.height), this.domElement = this.parameters.canvas, this.state = new Pi(this._gl), this.state.setDefaultGLState.apply(this.state, Object.values(this.viewportInfo)), this.currentCacheState = {
					programId: null,
					geometryProgramId: null,
					materialId: null,
					camera: null,
					curRenderTarget: null
				}, this.capability = new Di(this._gl);
				var n = this.capability.maxTextures,
					r = this.capability.maxTextureSize;
				this.textureOperation = new hi(this._gl, n, r)
			}
			var e = t.prototype;
			return e.clearBuffer = function() {
				var t = this._gl;
				t.clear(t.COLOR_BUFFER_BIT | t.DEPTH_BUFFER_BIT)
			}, e.initGL = function() {
				var t = this,
					e = this.parameters,
					n = e.canvas,
					r = e.context,
					i = e.alpha,
					o = e.depth,
					a = e.stencil,
					s = e.antialias,
					u = e.premultipliedAlpha,
					h = e.preserveDrawingBuffer;
				try {
					var c = {
							alpha: i,
							depth: o,
							stencil: a,
							antialias: s,
							premultipliedAlpha: u,
							preserveDrawingBuffer: h
						},
						l = r || n.getContext("webgl", c) || n.getContext("experimental-webgl", c) || n.getContext("moz-webgl", c) || n.getContext("webkit-3d", c);
					if (!l) throw null !== n.getContext ? "Error creating WebGL context with your provided attributes." : "Error creating WebGL context.";
					this._gl = l, n.addEventListener("webglcontextlost", (function(e) {
						e.preventDefault(), void 0 !== t.state && (t.resetGLState(), t.state.setDefaultGLState.apply(t.state, Object.values(t.viewportInfo)))
					}), !1)
				} catch (t) {
					console.error("[WebGLRenderer] Create webgl error: ", t)
				}
			}, e.resetGLState = function() {
				this.currentCacheState = {
					programId: null,
					geometryProgramId: null,
					materialId: null,
					camera: null,
					curRenderTarget: null
				}, this.state.reset()
			}, e.setRenderTarget = function(t) {
				var e = this._gl;
				void 0 !== t && null === t.glFrameBuffer && (t.addEventListener("removed", this.onRenderTargetRemove), t.glFrameBuffer = e.createFramebuffer(), e.bindFramebuffer(e.FRAMEBUFFER, t.glFrameBuffer), this.textureOperation.setTextureForRenderTarget(t), t.glDepthBuffer = e.createRenderbuffer(), e.bindRenderbuffer(e.RENDERBUFFER, t.glDepthBuffer), e.renderbufferStorage(e.RENDERBUFFER, e.DEPTH_COMPONENT16, t.width, t.height), e.framebufferTexture2D(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.TEXTURE_2D, t.glTexture, 0), e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.RENDERBUFFER, t.glDepthBuffer), e.bindTexture(e.TEXTURE_2D, null), e.bindRenderbuffer(e.RENDERBUFFER, null), e.bindFramebuffer(e.FRAMEBUFFER, null))
			}, e.render = function(t, e, n) {
				if (e.isCamera) {
					var r = this._gl;
					if (t.updateWorldMatrix(), e.updateWorldMatrix(), e.updateProjectionMatrix(), this.currentCacheState.camera = null, void 0 !== n) this.setRenderTarget(n), this.currentCacheState.curRenderTarget = n, r.bindFramebuffer(r.FRAMEBUFFER, n.glFrameBuffer), r.viewport(0, 0, n.width, n.height);
					else {
						var i = this.viewportInfo,
							o = i.width,
							a = i.height;
						this.currentCacheState.curRenderTarget = null, r.bindFramebuffer(r.FRAMEBUFFER, null), r.viewport(0, 0, o, a)
					}
					this.initScene(t), this.renderScene(t, e)
				} else console.error("[WebGLRenderer]  Camera is not leagal.")
			}, e.updateBufferGeometry = function(t) {
				var e = this._gl,
					n = t.getIndexes(),
					r = t.getAttribute();
				for (var i in r)
					if (Object.prototype.hasOwnProperty.call(r, i)) {
						var o = i + "Buffer",
							a = r[i],
							s = a.array,
							u = a.usage;
						t[o] = e.createBuffer(), e.bindBuffer(e.ARRAY_BUFFER, t[o]), e.bufferData(e.ARRAY_BUFFER, s, u)
					} n && (t.indexesBuffer = e.createBuffer(), e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, t.indexesBuffer), e.bufferData(e.ELEMENT_ARRAY_BUFFER, n.array, n.usage))
			}, e.updateVerticesAttribute2 = function(t, e) {
				var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
					r = this._gl,
					i = !1,
					o = "".concat(e.id, "_")
					.concat(t.id);
				if (o !== this.currentCacheState.geometryProgramId) {
					this.currentCacheState.geometryProgramId = o, this.state.initAttributes(), i = !0;
					var a = e.getAttribute();
					for (var s in a)
						if (Object.prototype.hasOwnProperty.call(a, s)) {
							var u = s + "Buffer",
								h = a[s],
								c = h.itemSize,
								l = h.type,
								f = h.normalized;
							0 <= t.attributes[s] && (!0 !== n && (r.bindBuffer(r.ARRAY_BUFFER, e[u]), r.vertexAttribPointer(t.attributes[s], c, l, f, 0, 0)), this.state.enableAttribute(t.attributes[s]))
						}
				}
				return this.state.disableUnusedAttributes(), i
			}, e.updateVerticesAttribute = function(t, e) {
				var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
					r = this._gl,
					i = !1,
					o = "".concat(e.id, "_")
					.concat(t.id);
				if (o !== this.currentCacheState.geometryProgramId) {
					this.currentCacheState.geometryProgramId = o, this.state.initAttributes(), i = !0;
					var a = t.getAttributes();
					0 <= a.position && (!0 !== n && (r.bindBuffer(r.ARRAY_BUFFER, e.glVerticesBuffer), r.vertexAttribPointer(a.position, 3, r.FLOAT, !1, 0, 0)), this.state.enableAttribute(a.position)), 0 <= a.uv && void 0 !== e.glUvtsBuffer && (r.bindBuffer(r.ARRAY_BUFFER, e.glUvtsBuffer), r.vertexAttribPointer(a.uv, 2, r.FLOAT, !1, 0, 0), this.state.enableAttribute(a.uv))
				}
				return this.state.disableUnusedAttributes(), i
			}, t
		}(),
		Ui = function(t) {
			function e(e, n, r, i, o, a) {
				var s;
				switch ((s = t.call(this) || this)
					.addIntoBuffer = function(t, e, n) {
						t[n] = e[0], t[n + 1] = e[1], t[n + 2] = e[2]
					}, s.get3DVertex = function(t, e) {
						var n;
						switch (e) {
							case "x":
								n = zt(0, t[0], t[1]);
								break;
							case "y":
								n = zt(t[0], 0, t[1]);
								break;
							default:
								n = zt(t[0], t[1], 0)
						}
						return n
					}, s.zeroAxis = void 0 !== o ? o : "z", s.zeroAxis) {
					case "x":
						s.normal = zt(-1, 0, 0);
						break;
					case "y":
					default:
						s.normal = zt(0, -1, 0);
						break;
					case "z":
						s.normal = zt(0, 0, -1)
				}
				a = void 0 !== a ? a : {}, s.showBorder = !(!1 === a.showBorder), s.borderWidth = void 0 !== a.borderWidth ? a.borderWidth : 1, s.borderColor = void 0 !== a.borderColor ? a.borderColor : [0, 0, 0, 1];
				var u, h, c, l = .5 * e,
					f = .5 * n,
					d = r || 1,
					p = i || 1,
					v = e / d,
					m = n / p,
					g = (d + 1) * (p + 1);
				s.verticesBufferData = new Float32Array(3 * g), s.uvtsBufferData = new Float32Array(2 * g), s.indicesBufferData = new(g > 65535 ? Uint32Array : Uint16Array)(d * p * 6);
				for (var y = 0, _ = 0, x = 0; x <= p; x++) {
					u = x * m - f;
					for (var b = 0; b <= d; b++) c = yt(b * v - l, u), h = s.get3DVertex(c, s.zeroAxis), s.vertices.push(h), s.addIntoBuffer(s.verticesBufferData, h, y), s.uvtsBufferData[_] = b / d, s.uvtsBufferData[_ + 1] = 1 - x / p, y += 3, _ += 2
				}
				for (var M, w, E, T, A = 0, C = 0; C < p; C++)
					for (var R = 0; R < d; R++) M = R + (d + 1) * C, w = R + (d + 1) * (C + 1), E = R + 1 + (d + 1) * (C + 1), T = R + 1 + (d + 1) * C, s.addIntoBuffer(s.indicesBufferData, [M, w, E], A), s.addIntoBuffer(s.indicesBufferData, [M, E, T], A + 3), A += 6;
				s.borderIndicesBufferData = new Uint16Array(4), s.borderIndicesBufferData[0] = 0, s.borderIndicesBufferData[1] = d, s.borderIndicesBufferData[2] = (d + 1) * p, s.borderIndicesBufferData[3] = (d + 1) * (p + 1) - 1;
				var S = 0;
				s.borderVerticesBufferData = new Float32Array(6 * (d + p));
				for (var P = 0; P < g; P += d + 1) s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[P], S), S += 3;
				for (var D = (d + 1) * p + 1; D < g; D++) s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[D], S), S += 3;
				for (var O = (d + 1) * p - 1; O > 0; O -= d + 1) s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[O], S), S += 3;
				for (var I = d - 1; I > 0; I--) s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[I], S), S += 3;
				return s
			}
			return c(e, t), e
		}(Qr),
		Ni = "z",
		Fi = function(t) {
			function e(n, r, i, o) {
				var a, s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {};
				a = t.call(this) || this;
				var u = e.buildPlane(n, r, i, o, s),
					h = u.uvs,
					c = u.indices,
					l = u.normals,
					f = u.vertices;
				return a.name = "PlaneBufferGeometry", a.setAttribute("position", new Vr(f, 3)), a.setAttribute("normals", new Vr(l, 3)), a.setAttribute("uv", new Vr(h, 2)), a.setIndexes(c), a
			}
			return c(e, t), e.buildPlane = function(t, n, r, i) {
				for (var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {}, a = o.normalAxis, s = void 0 === a ? Ni : a, u = o.useBack, h = void 0 !== u && u, c = o.normalDest, l = void 0 === c ? 0 : c, f = .5 * t, d = .5 * n, p = r || 1, v = i || 1, m = t / p, g = n / v, y = e.getNormal(s, h), _ = [], x = [], b = [], M = [], w = 0; w <= v; w++)
					for (var E = w * g - d, T = 0; T <= p; T++) {
						var A = T * m - f,
							C = e.get3DVertex([A, E], s, l);
						b.push.apply(b, vi(C)), _.push(T / p, 1 - w / v), M.push.apply(M, vi(y))
					}
				for (var R = 0; R < v; R++)
					for (var S = 0; S < p; S++) {
						var P = S + (p + 1) * R,
							D = S + (p + 1) * (R + 1),
							O = S + 1 + (p + 1) * (R + 1),
							I = S + 1 + (p + 1) * R;
						x.push(P, D, O), x.push(P, O, I)
					}
				return {
					uvs: _,
					indices: x,
					vertices: b,
					normals: M
				}
			}, e.getNormal = function(t) {
				var e, n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
					r = n ? -1 : 1;
				switch (t) {
					case "x":
						e = [r, 0, 0];
						break;
					case Ni:
						e = [0, 0, r];
						break;
					default:
						e = [0, r, 0]
				}
				return e
			}, e
		}(Hr);
	Fi.get3DVertex = function(t, e) {
		var n, r = _i(t, 2),
			i = r[0],
			o = r[1],
			a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
		switch (e) {
			case "x":
				n = [a, i, o];
				break;
			case "y":
				n = [i, a, o];
				break;
			default:
				n = [i, o, a]
		}
		return n
	};
	var ji = function(t) {
			function e(e, n, r, i, o, a) {
				var s;
				(s = t.call(this) || this)
				.name = "BoxGeometry";
				var u = s.initBox(e, n, r, i, o, a),
					h = u.uvs,
					c = u.normals,
					l = u.vertices,
					f = u.indices;
				return s.setAttribute("position", new Vr(l, 3)), s.setAttribute("normals", new Vr(c, 3)), s.setAttribute("uv", new Vr(h, 2)), s.setIndexes(f), s
			}
			return c(e, t), e.prototype.initBox = function(t, e, n, r, i, o) {
				var a = [],
					s = Fi.buildPlane,
					u = s(n, e, o, i, {
						normalAxis: "x",
						normalDest: t / 2
					}),
					h = s(n, e, o, i, {
						normalAxis: "x",
						useBack: !0,
						normalDest: -t / 2
					}),
					c = s(t, n, r, o, {
						normalAxis: "y",
						normalDest: e / 2
					}),
					l = s(t, n, r, o, {
						normalAxis: "y",
						useBack: !0,
						normalDest: -e / 2
					}),
					f = s(t, e, r, i, {
						normalAxis: "z",
						normalDest: n / 2
					}),
					d = s(t, e, r, i, {
						normalAxis: "z",
						useBack: !0,
						normalDest: -n / 2
					});
				a.push(u, h, c, l, f, d);
				for (var p = 0, v = [], m = [], g = [], y = [], _ = function(t) {
					var e = a[t],
						n = e.uvs,
						r = e.vertices,
						i = e.normals,
						o = e.indices,
						s = p;
					v = v.concat(n), m = m.concat(r), g = g.concat(i), y = y.concat(o.map((function(t) {
						return s + t
					}))), p += r.length / 3
				}, x = 0; x < 6; x++) _(x);
				return {
					uvs: v,
					vertices: m,
					normals: g,
					indices: y
				}
			}, e
		}(Hr),
		zi = function(t) {
			function e(e, n) {
				var r;
				return (r = t.call(this) || this)
					.width = void 0, r.height = void 0, r.glFrameBuffer = null, r.glDepthBuffer = null, r.flipY = !1, r.premultiplyAlpha = !1, r.glTexture = null, r.width = e, r.height = n, r
			}
			return c(e, t), e
		}(Dr);

	function Vi(t, e) {
		var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
		if (!n) {
			if (Array.isArray(t) || (n = function(t, e) {
				if (!t) return;
				if ("string" == typeof t) return Gi(t, e);
				var n = Object.prototype.toString.call(t)
					.slice(8, -1);
				"Object" === n && t.constructor && (n = t.constructor.name);
				if ("Map" === n || "Set" === n) return Array.from(t);
				if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Gi(t, e)
			}(t)) || e && t && "number" == typeof t.length) {
				n && (t = n);
				var r = 0,
					i = function() {};
				return {
					s: i,
					n: function() {
						return r >= t.length ? {
							done: !0
						} : {
							done: !1,
							value: t[r++]
						}
					},
					e: function(t) {
						throw t
					},
					f: i
				}
			}
			throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
		}
		var o, a = !0,
			s = !1;
		return {
			s: function() {
				n = n.call(t)
			},
			n: function() {
				var t = n.next();
				return a = t.done, t
			},
			e: function(t) {
				s = !0, o = t
			},
			f: function() {
				try {
					a || null == n.return || n.return()
				} finally {
					if (s) throw o
				}
			}
		}
	}

	function Gi(t, e) {
		(null == e || e > t.length) && (e = t.length);
		for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
		return r
	}
	var Wi = function() {
		function t() {
			this.faceCount = 0, this.verticesCoords = [], this.textureCoords = [], this.uvs = [], this.vertices = [], this.normals = [], this.indexes = []
		}
		var e = t.prototype;
		return e.load = function(t) {
			var e = this;
			return new Promise((function(n) {
				(function(t) {
					var e = new XMLHttpRequest;
					return e.open("GET", t, !0), e.send(null), new Promise((function(t) {
						e.addEventListener("load", (function() {
							t(e.responseText)
						}), !1)
					}), (function(t) {
						e.addEventListener("error", (function(e) {
							console.error("request error"), t(e)
						}), !1)
					}))
				})(t)
				.then((function(t) {
					e.parse(t);
					var r = e.genObject3D();
					n(r)
				}))
			}))
		}, e.genObject3D = function() {
			var t = new Hr;
			t.setAttribute("position", new Vr(this.vertices, 3)), this.uvs.length && t.setAttribute("uv", new Vr(this.uvs, 2)), t.setIndexes(this.indexes);
			var e = new Si;
			return new Xr(t, e)
		}, e.parse = function(t) {
			var e, n = Vi(t.split("\n"));
			try {
				for (n.s(); !(e = n.n())
					.done;) {
					var r = e.value,
						i = r.indexOf("#"); - 1 !== i && (r = r.substring(0, i));
					var o = (r = r.trim())
						.split(/\s+/);
					switch (o[0]) {
						case "v":
							this.verticesCoords.push(parseFloat(o[1]), parseFloat(o[2]), parseFloat(o[3]));
							break;
						case "vn":
							this.normals.push(parseFloat(o[1]), parseFloat(o[2]), parseFloat(o[3]));
							break;
						case "vt":
							this.textureCoords.push(parseFloat(o[1]), parseFloat(o[2]));
							break;
						case "p":
						case "l":
						case "usemtl":
							break;
						case "f":
							o.shift(), this.parseFaceLine(o)
					}
				}
			} catch (t) {
				n.e(t)
			} finally {
				n.f()
			}
		}, e.parseFaceLine = function(t) {
			for (var e = [], n = t.length, r = 0; r < n; r++) {
				var i = t[r];
				if (i.length > 0) {
					var o = i.split("/");
					e.push(o)
				}
			}
			for (var a = e[0], s = 1, u = e.length - 1; s < u; s++) {
				var h = e[s],
					c = e[s + 1];
				this.addFace(a, h, c)
			}
		}, e.addFace = function(t, e, n) {
			var r = this.verticesCoords,
				i = r.length / 3,
				o = this.parseVertexIndex(t[0], i),
				a = this.parseVertexIndex(e[0], i),
				s = this.parseVertexIndex(n[0], i);
			this.vertices.push(r[o], r[o + 1], r[o + 2], r[a], r[a + 1], r[a + 2], r[s], r[s + 1], r[s + 2]);
			var u = 3 * this.faceCount;
			if (this.indexes.push(u, u + 1, u + 2), this.faceCount++, "" !== t[1]) {
				var h = this.textureCoords,
					c = h.length,
					l = this.parseUVIndex(t[1], c),
					f = this.parseUVIndex(e[1], c),
					d = this.parseUVIndex(n[1], c);
				this.uvs.push(h[l], h[l + 1], h[f], h[f + 1], h[d], h[d + 1])
			}
			t[2]
		}, e.parseVertexIndex = function(t, e) {
			var n = parseInt(t, 10);
			return 3 * (n >= 0 ? n - 1 : n + e / 3)
		}, e.parseUVIndex = function(t, e) {
			var n = parseInt(t, 10);
			return 2 * (n >= 0 ? n - 1 : n + e / 2)
		}, t
	}();

	function Hi(t) {
		return new Promise((function(e, n) {
			var r = new Image;
			r.src = t, r.crossOrigin = "Anonymous", r.onload = function() {
				e(r)
			}, r.onerror = function(t) {
				n(t)
			}
		}))
	}

	function Zi(t) {
		if (6 !== t.length) throw new Error("[loadCubeTexture] param urls need len six. [px, nx, py, ny, pz, nz]");
		return new Promise((function(e, n) {
			for (var r = 0, i = new ui, o = i.image, a = function(a) {
				Hi(t[a])
					.then((function(t) {
						r++, o[a] = t, 6 === r && (i.needsUpdate = !0, e(i))
					}))
					.catch((function(t) {
						console.error(t), n(t)
					}))
			}, s = 0; s < 6; s++) a(s)
		}))
	}
	var qi = function(t) {
			function e() {
				var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : .1,
					r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3e3;
				return (e = t.call(this) || this)
					.isCamera = !0, e.viewMatrix = Se(), e.projectionMatrix = Se(), e.projectionMatrixNeedUpdate = !1, e._far = void 0, e._near = void 0, e._far = r, e._near = n, e
			}
			return c(e, t), e.prototype.updateWorldMatrix = function() {
				var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
				t.prototype.updateWorldMatrix.call(this, e), Le(this.viewMatrix, this.worldMatrix)
			}, o(e, [{
				key: "near",
				get: function() {
					return this._near
				},
				set: function(t) {
					this._near = t, this.projectionMatrixNeedUpdate = !0
				}
			}, {
				key: "far",
				get: function() {
					return this._far
				},
				set: function(t) {
					this._far = t, this.projectionMatrixNeedUpdate = !0
				}
			}]), e
		}(kr),
		Yi = function(t) {
			function e(e, n, r, i, o, a) {
				var s;
				return (s = t.call(this, o, a) || this)
					._left = void 0, s._right = void 0, s._top = void 0, s._bottom = void 0, s._top = r, s._left = e, s._right = n, s._bottom = i, s.updateProjectionMatrix(!0), s
			}
			c(e, t);
			var n = e.prototype;
			return n.updateProjectionMatrix = function() {
				var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
				if (!0 === t || !0 === this.projectionMatrixNeedUpdate) {
					var e = (this.right - this.left) / 2,
						n = (this.top - this.bottom) / 2,
						r = (this.right + this.left) / 2,
						i = (this.top + this.bottom) / 2,
						o = r - e,
						a = r + e,
						s = i + n,
						u = i - n;
					Oe(this.projectionMatrix), Je(this.projectionMatrix, o, a, s, u, this.near, this.far), this.projectionMatrixNeedUpdate = !1
				}
			}, n.clone = function(n) {
				return void 0 === n && (n = new e(0, 0, 0, 0, 0, 0)), t.prototype.clone.call(this, n), n.left = this.left, n.right = this.right, n.top = this.top, n.bottom = this.bottom, n.near = this.near, n.far = this.far, n.updateProjectionMatrix(), n.updateWorldMatrix(), n
			}, o(e, [{
				key: "top",
				get: function() {
					return this._top
				},
				set: function(t) {
					t !== this._top && (this._top = t, this.projectionMatrixNeedUpdate = !0)
				}
			}, {
				key: "left",
				get: function() {
					return this._left
				},
				set: function(t) {
					t !== this._left && (this._left = t, this.projectionMatrixNeedUpdate = !0)
				}
			}, {
				key: "right",
				get: function() {
					return this._right
				},
				set: function(t) {
					t !== this._right && (this._right = t, this.projectionMatrixNeedUpdate = !0)
				}
			}, {
				key: "bottom",
				get: function() {
					return this._bottom
				},
				set: function(t) {
					t !== this._bottom && (this._bottom = t, this.projectionMatrixNeedUpdate = !0)
				}
			}]), e
		}(qi),
		Xi = function(t) {
			function e(e, n, r, i) {
				var o;
				return (o = t.call(this, r, i) || this)
					.type = "PerspectiveCamera", o._fov = void 0, o._aspect = void 0, o._fov = e, o._aspect = n, o.updateProjectionMatrix(!0), o
			}
			c(e, t);
			var n = e.prototype;
			return n.updateProjectionMatrix = function() {
				var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
				!0 !== t && !0 !== this.projectionMatrixNeedUpdate || (Oe(this.projectionMatrix), Ke(this.projectionMatrix, this.fov * Math.PI / 180, this.aspect, this.near, this.far), this.projectionMatrixNeedUpdate = !1)
			}, n.clone = function(n) {
				return void 0 === n && (n = new e(0, 0, 0, 0)), t.prototype.clone.call(this, n), n.fov = this.fov, n.aspect = this.aspect, n.near = this.near, n.far = this.far, n.updateProjectionMatrix(), n.updateWorldMatrix(), n
			}, o(e, [{
				key: "fov",
				get: function() {
					return this._fov
				},
				set: function(t) {
					t !== this._fov && (this._fov = t, this.projectionMatrixNeedUpdate = !0)
				}
			}, {
				key: "aspect",
				get: function() {
					return this._aspect
				},
				set: function(t) {
					t !== this._aspect && (this._aspect = t, this.projectionMatrixNeedUpdate = !0)
				}
			}]), e
		}(qi),
		Ki = Object.freeze({
			__proto__: null,
			Mesh: Xr,
			Scene: Kr,
			Geometry: Qr,
			Object3D: kr,
			Raycaster: ai,
			Texture: si,
			CubeTexture: ui,
			TextureOperation: hi,
			Material: Ei,
			BasicMaterial: Si,
			BufferGeometry: Hr,
			WebGLRenderer: ki,
			PlaneGeometry: Ui,
			BoxGeometry: ji,
			WebGLRenderTarget: zi,
			PlaneBufferGeometry: Fi,
			Box3: Ur,
			OBJLoader: Wi,
			loadImage: Hi,
			loadTexture: function(t, e, n) {
				return Hi(t)
					.then((function(t) {
						var n = new si(t);
						return e && e(n), n
					}))
					.catch((function(t) {
						n && n(t)
					}))
			},
			loadCubeTexture: Zi,
			Vec2: kt,
			Vec3: me,
			Vec4: Bn,
			Mat3: Re,
			Mat4: on,
			Quat: Tr,
			quatToEuler: Or,
			BufferAttribute: Nr,
			Uint8BufferAttribute: Fr,
			Uint16BufferAttribute: jr,
			Uint32BufferAttribute: zr,
			Float32ArrayAttribute: Vr,
			UintBufferAttribute: Gr,
			OrthographicCamera: Yi,
			PerspectiveCamera: Xi
		}),
		Qi = function() {
			function t(t) {
				this.pano = void 0, this.panoData = void 0, this._meshs = new Xr, this.pano = t
			}
			return o(t, [{
				key: "camera",
				get: function() {
					return this.pano.camera
				}
			}, {
				key: "meshs",
				get: function() {
					return this._meshs
				},
				set: function(t) {
					this._meshs = t
				}
			}]), t
		}(),
		Ji = ["varying vec3 v_normal;", "void main(void){", "   gl_Position = mvpMatrix * vec4(position, 1.0);", "   v_normal = normalize(position.xyz);", "}"].join("\n"),
		$i = ["uniform samplerCube uSampler;", "uniform float uOpacity;", "varying vec3 v_normal;", "void main(void){", "    vec4 textureColor = textureCube(uSampler, normalize(v_normal));", "    gl_FragColor = vec4(textureColor.rgb, textureColor.a * uOpacity);", "}"].join("\n"),
		to = function(t) {
			function e(e) {
				var n;
				return (n = t.call(this, e) || this)
					.initMesh(), n
			}
			c(e, t);
			var n = e.prototype;
			return n.initMesh = function() {
				var t = new ji(8, 8, 8, 1, 1, 1),
					e = new Ei;
				e.vertexShader = Ji, e.fragmentShader = $i, e.uniforms = {
					vColor: {
						type: "4f",
						value: [1, 0, 0, 1]
					},
					uSampler: {
						type: "t",
						value: null
					},
					uOpacity: {
						type: "1f",
						value: 1
					}
				};
				var n = new Xr(t, e);
				n.visible = !1, n.setScale(-1, 1, 1), this.meshs = n
			}, n.setData = function(t) {
				var e = this;
				if (!t.image || 6 !== t.image.length) throw new Error("天空盒模型需要6张纹理，但只获取到 ".concat(t.image ? t.image.length : 0, "张"));
				this.panoData = t;
				var n = this.meshs;
				Zi(t.image)
					.then((function(t) {
						n.material.uniforms.uSampler.value = t, n.visible = !0, e.pano.emit({
							type: d.REFRESH,
							log: "[Refresh Log] 立方贴图加载完成， 渲染一帧"
						})
					}))
					.catch((function(t) {
						return console.error(t)
					}))
			}, n.update = function() {}, n.draw = function() {}, e
		}(Qi),
		eo = function(t) {
			return t
		},
		no = function(t) {
			return t * t
		},
		ro = function(t) {
			return -t * (t - 2)
		},
		io = no,
		oo = ro,
		ao = Object.freeze({
			__proto__: null,
			linear: eo,
			reverse: function(t) {
				return 1 - t
			},
			easeInQuad: no,
			easeInCubic: function(t) {
				return Math.pow(t, 3)
			},
			easeOutQuad: ro,
			easeOutCubic: function(t) {
				return Math.pow(t - 1, 3) + 1
			},
			easeInOutQuad: function(t) {
				return t < .5 ? t * t * 2 : -2 * (t - 2) * t - 1
			},
			easeInOutCubic: function(t) {
				return t < .5 ? 4 * Math.pow(t, 3) : 4 * Math.pow(t - 1, 3) + 1
			},
			easeInOutSine: function(t) {
				return (1 - Math.cos(Math.PI * t)) / 2
			},
			easeIn: io,
			easeOut: oo
		}),
		so = function() {},
		uo = function() {
			function t(t, e, n) {
				var r = this,
					i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : eo;
				this.from = void 0, this.to = void 0, this.duration = void 0, this.easingFn = void 0, this._isPlaying = !1, this._autoTimer = null, this._startTime = null, this._onUpdateCallback = so, this._onEndCallback = so, this.start = function() {
					return r._isPlaying || (r._isPlaying = !0, r._startTime = r.getNow()), r
				}, this.stop = function() {
					return r._isPlaying = !1, r
				}, this.startAndAutoUpdate = function() {
					if (r._isPlaying) return r;
					r.start(), r._autoTimer = null;
					return function t() {
						r.update(), r._autoTimer = requestAnimationFrame(t)
					}(), r
				}, this.onEnd = function(t) {
					return "function" == typeof t ? r._onEndCallback = t : console.warn("[Warning] onUpdate required a funtion"), r
				}, this.onUpdate = function(t) {
					return "function" == typeof t ? r._onUpdateCallback = t : console.warn("[Warning] onUpdate required a funtion"), r
				}, this.update = function() {
					if (!r._isPlaying) return !1;
					var t = r.from,
						e = r.to,
						n = r.getNow(),
						i = r.easingFn,
						o = r._startTime;
					if (o > n) return !1;
					var a = (n - o) / r.duration,
						s = t + (e - t) * i(a = 0 === r.duration || a > 1 ? 1 : a);
					return r._onUpdateCallback(s), 1 === a && r.handleEnd(), !0
				}, this.from = t, this.to = e, this.duration = n, this.easingFn = i
			}
			var e = t.prototype;
			return e.getNow = function() {
				return Date.now()
			}, e.handleEnd = function() {
				this._isPlaying = !1, this._autoTimer = null, this._onEndCallback()
			}, t
		}(),
		ho = function(t, e, n) {
			var r = .5 * e,
				i = .5 * n;
			return yt((t[0] - r) / r, (i - t[1]) / i)
		},
		co = function(t, e, n) {
			var r = .5 * e,
				i = .5 * n;
			return yt((t[0] + 1) * r, (1 - t[1]) * i)
		},
		lo = function(t, e, n, r) {
			var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 100,
				o = an(),
				a = ho(t, n, r),
				s = un(a[0], a[1], i, 1),
				u = Se(),
				h = e.worldMatrix;
			return Le(u, e.projectionMatrix), wn(o, s, u), wn(o, o, h), o
		},
		fo = function(t, e, n, r) {
			var i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
				o = un(e[0], e[1], e[2], 1);
			if (wn(o, o, t.viewMatrix), 0 < o[2] && !0 !== i) return null;
			wn(o, o, t.projectionMatrix), o[0] = o[0] / o[3], o[1] = o[1] / o[3], o[2] = o[2] / o[3], o[3] = 1;
			var a = yt(o[0], o[1]);
			return co(a, n, r)
		},
		po = function(t, e, n, r) {
			var i = fo(e, t, n, r) || [-1, -1],
				o = _i(i, 2),
				a = o[0],
				s = o[1],
				u = !1;
			return a >= 0 && a <= n && s >= 0 && s <= r && (u = !0), u
		},
		vo = Object.freeze({
			__proto__: null,
			viewportToNormalizeProjection: ho,
			normalizeProjectionToViewport: co,
			viewportToWorld: lo,
			worldToViewport: fo,
			isCoordsInView: po
		}),
		mo = function() {
			function t() {
				var e = this,
					n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 500;
				this.getVertexs = function() {
					return e.vertexs
				}, this.getFacesVertex = function() {
					return e.facesVertex
				}, this.generateTextureCoord = function(n, r, i) {
					var o = e.facesVertex[Math.round(e.facesVertex.length / 2)];
					if (o) {
						for (var a = [], s = Math.pow(2, 5 - i), u = r % s, h = n % s, c = t.H_SEGS / e.cols, l = 1 / c, f = 1 / ((t.V_SEGS - 1) / e.rows), d = 0; d < o.length / 3; d++) {
							var p = d % (c + 1) * l,
								v = Math.floor(d / (c + 1)) * f;
							p = p / s + 1 * u / s, v = v / s + 1 * h / s, 1 === i && (v *= 2), a.push(p, v)
						}
						return a
					}
				}, this.getFaceIndex = function(n) {
					var r = 0,
						i = _i(n, 3),
						o = i[0],
						a = i[1],
						s = i[2],
						u = Math.round(180 * Math.atan(Math.abs(s) / Math.abs(o)) / Math.PI);
					o > 0 ? s < 0 && (u = 360 - u) : u = s > 0 ? 180 - u : 180 + u, u %= 360, r = a > e._x3 ? 7 : a > e._x2 ? 6 : a > e._x1 ? 5 : a > 0 ? 4 : a > -e._x1 ? 3 : a > -e._x2 ? 2 : a > -e._x3 ? 1 : 0;
					var h = Math.floor(u / 22.5),
						c = t.H_SEGS;
					return [h, r, h + r * (c / (c / e.cols))]
				}, this.viewportToSphereCoord = function(t, n, r, i) {
					var o = e.radius,
						a = lo(t, i, n, r),
						s = _i(a, 3),
						u = s[0],
						h = s[1],
						c = s[2],
						l = o / Math.sqrt(u * u + h * h + c * c);
					return [u * l, h * l, c * l]
				}, this.getFaceVertex = function(n, r) {
					var i = t.H_SEGS / e.cols,
						o = r + n * (t.H_SEGS / i);
					return e.facesVertex[o]
				}, this.radius = n, this.rows = t.DEFAULT_COLS / 2, this.cols = t.DEFAULT_COLS, this.vertexs = null, this.facesVertex = [], this.facesVertexIndice = [], this.init()
			}
			var e = t.prototype;
			return e.init = function() {
				var t = this.getSphereVertexInfo();
				this.facesVertexIndice = this.getSphereFacesIndices(), this.vertexs = t.vertexs, this.facesVertex = t.facesVertex, this.calcConst()
			}, e.calcConst = function() {
				var t = 360 / this.cols;
				this._x1 = Math.cos(g(3 * t)) * this.radius, this._x2 = Math.cos(g(2 * t)) * this.radius, this._x3 = Math.cos(g(1 * t)) * this.radius
			}, e.getSphereVertexInfo = function() {
				for (var e, n = [], r = [], i = this.radius, o = t.H_SEGS, a = t.V_SEGS, s = 360 / o, u = 180 / (a - 1), h = o / this.cols, c = o / h, l = 0, f = 0, d = [], p = 0; p < a; p++) {
					var v = Math.sin(g(p * u - 90)) * i,
						m = Math.cos(g(p * u - 90)) * i;
					v = Math.round(100 * v) / 100, m = Math.round(100 * m) / 100, l = Math.floor(p / h);
					for (var y = 0; y < o; y++) {
						var _ = Math.cos(g(y * s)) * m,
							x = Math.sin(g(y * s)) * m;
						if (_ = Math.round(100 * _) / 100, x = Math.round(100 * x) / 100, n.push(_, v, x), e = (f = Math.floor(y / h)) + l * c, l < this.rows && (r[e] || (r[e] = []), r[e].push(_, v, x)), l > 0 && p % h == 0) {
							var b = f + (l - 1) * c;
							r[b].push(_, v, x), y > 0 && y % h == 0 && r[b - 1] && r[b - 1].push(_, v, x), y === o - 1 && r[b].push(d[0], d[1], d[2])
						}
						0 === f && 0 === y && (d = [_, v, x]), y > 0 && y % h == 0 && r[e - 1] && r[e - 1].push(_, v, x), l < this.rows && y === o - 1 && r[e].push(d[0], d[1], d[2])
					}
				}
				return {
					vertexs: n,
					facesVertex: r
				}
			}, e.getSphereFacesIndices = function() {
				for (var e = [], n = t.H_SEGS / this.cols, r = n + 1, i = 0; i < n; i++)
					for (var o = 0; o < n; o++) {
						var a = i * r,
							s = a + o + 1,
							u = a + o + 1 + r;
						e.push(a + o, s, u), s = a + o + 1 + r, e.push(a + o, s, a + r + o)
					}
				return e
			}, e.getSphereFacesIndicesByimageZoom = function(e) {
				for (var n = this, r = [], i = t.H_SEGS, o = Math.pow(2, 5 - e), a = i / this.cols + 1, s = a * a, u = function(t) {
					for (var e = function(e) {
						n.facesVertexIndice.forEach((function(n) {
							r.push(n + s * e + s * t * 2)
						}))
					}, i = 0; i < o; i++) e(i)
				}, h = 0; h < o; h++) u(h);
				return r
			}, t
		}();
	mo.DEFAULT_COLS = Math.pow(2, 4), mo.H_SEGS = 64, mo.V_SEGS = 33;
	var go = function() {
			function t() {
				this._counter = 0, this._imageCollection = {}
			}
			var e = t.prototype;
			return e.getImageInstance = function() {
				var t;
				for (var e in this._imageCollection)
					if (this._imageCollection[e] && !0 === this._imageCollection[e]._free) return this._imageCollection[e]._free = !1, this._imageCollection[e];
				t = new Image;
				var n = this.getGUID();
				return this._imageCollection[n] = t, t
			}, e.freeImage = function(t) {
				t && (t._free = !0, t.src = "", t.onload = t.onerror = null)
			}, e.getGUID = function() {
				return this._counter++, "img_".concat(this._counter)
			}, t
		}(),
		yo = function() {
			function t(e, n) {
				var r = this,
					i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
				this.imageInstancePool = void 0, this.tileImagesCache = void 0, this.textureInfo = void 0, this.pano = void 0, this.udtVersion = void 0, this.cdnList = void 0, this.calcTileKey = function(t, e, n, r) {
					return "".concat(t, "_")
						.concat(e, "_")
						.concat(n, "_")
						.concat(r)
				}, this.loadImage = function(t, e, n, i) {
					var o = r.calcTileKey(t, e, n, i),
						a = r.getTilesUrl(t, {
							x: e,
							y: n
						}, i),
						s = r.tileImagesCache.getData(o);
					return new Promise((function(t, e) {
						s ? t(s._loaded ? s : null) : ((s = r.imageInstancePool.getImageInstance())
							.crossOrigin = "anonymous", s._loaded = !1, s.onload = function() {
								s._loaded = !0, t(s)
							}, s.onerror = function(t) {
								console.error("Tile ".concat(o, " load error => "), t), e(t)
							}, s.src = a, r.tileImagesCache.setData(o, s))
					}))
				}, this.loadTexture = function(t, e, n, i) {
					var o = r.calcTileKey(t, e, n, i),
						a = r.textureInfo.getData(o);
					return new Promise((function(s, u) {
						a && a.loaded ? s(a) : r.loadImage(t, e, n, i)
							.then((function(t) {
								if (!t) return null;
								var e = new si(t);
								1 !== i && r.textureInfo.setData(o, e), s(e)
							}))
							.catch((function(t) {
								console.error("[TextureManager] loadTexture fail => ".concat(t)), u(null)
							}))
					}))
				}, this.loadTopoTexture = function(t) {
					var e = 0,
						n = new Image;
					return new Promise((function(r) {
						n.onload = function() {
							var t = new si(n);
							t.flipY = !1, r(t)
						}, n.onerror = function() {
							2 > e ? (e++, n.src = "".concat(t, "&random=")
								.concat((new Date)
									.getTime())) : r(null)
						}, n.crossOrigin = "anonymous", n.src = t
					}))
				}, this.clear = function() {
					r.textureInfo.clear()
				}, this.pano = e, this.udtVersion = i, this.cdnList = n || e.opts.tileBaseUrls, this.imageInstancePool = new go, this.tileImagesCache = new T(t.MAX_TILE_CACHED, {
					clearCallback: function(t) {
						r.imageInstancePool.freeImage(t)
					}
				}), this.textureInfo = new T(t.MAX_TILE_CACHED, {
					clearCallback: function(t) {
						t.destory()
					}
				})
			}
			var e = t.prototype;
			return e.getRandomCDN = function() {
				var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
					e = t.length;
				return t[Math.floor(Math.random() * e)]
			}, e.getTilesUrl = function(e, n, r) {
				return this.getRandomCDN(this.cdnList) + (t.TILE_URL_TEMPLATE + "&".concat(J("/", {
						isCounter: !0
					})))
					.replace("{udt}", this.udtVersion)
					.replace("{sid}", e)
					.replace("{x}", "".concat(n.x))
					.replace("{y}", "".concat(n.y))
					.replace("{zoom}", "".concat(r))
			}, t
		}();
	yo.MAX_TILE_CACHED = 160, yo.TILE_URL_TEMPLATE = "?qt=pdata&sid={sid}&pos={y}_{x}&z={zoom}&udt={udt}&from=H5";
	var _o = ["attribute vec2 uvBack;", "varying mediump vec2 vTextureCoordBack;", "varying mediump vec2 vTextureCoord;", "void main(void) {", "    gl_Position = mvpMatrix * vec4(position, 1.0);", "    vTextureCoordBack = uvBack;", "    vTextureCoord = uv;", "}"].join("\n"),
		xo = ["precision mediump float;", "varying vec2 vTextureCoordBack;", "varying vec2 vTextureCoord;", "uniform sampler2D uSamplerBack;", "uniform sampler2D uSampler;", "uniform bool uDrawThumb;", "uniform bool uDrawBack;", "uniform float uAlpha;", "void main(void) {", "    if (uDrawThumb) {", "        gl_FragColor = texture2D(uSamplerBack, vTextureCoordBack);", "        return;", "    }", "    if (uAlpha == 1.0) {", "        gl_FragColor = texture2D(uSampler, vTextureCoord);", "        return;", "    }", "    if (uDrawBack) {", "        gl_FragColor = texture2D(uSampler, vTextureCoord) * uAlpha + texture2D(uSamplerBack, vTextureCoordBack) * (1.0 - uAlpha);", "    } else {", "        vec4 textureColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));", "        gl_FragColor =  vec4(textureColor.rgb, textureColor.a * uAlpha);", "    }", "}"].join("\n"),
		bo = ["varying highp vec2 vTextureCoord;", "void main(void) {", "    gl_Position = mvpMatrix * vec4(position, 1.0);", "    vTextureCoord = uv;", "}"].join("\n"),
		Mo = ["precision mediump float;", "uniform sampler2D uSampler;", "varying highp vec2 vTextureCoord;", "void main(void) {", "    gl_FragColor = texture2D(uSampler, vTextureCoord);", "}"].join("\n"),
		wo = ["varying highp vec2 vTextureCoord;", "void main(void) {", "    gl_Position = mvpMatrix * vec4(position, 1.0);", "    vTextureCoord = uv;", "}"].join("\n"),
		Eo = ["uniform sampler2D uSampler;", "uniform float uOpacity;", "varying vec2 vTextureCoord;", "void main(void){", "    vec4 textureColor = texture2D(uSampler, vTextureCoord);", "    gl_FragColor = vec4(textureColor.rgb, textureColor.a * uOpacity);", "}"].join("\n"),
		To = ["varying highp vec3 vTextureCoord;", "void main(void){", "   gl_Position = mvpMatrix  * vec4(position, 1.0);", "   vTextureCoord = vec3(uv, 1.0) * length(position);", "}"].join("\n"),
		Ao = ["uniform sampler2D uSampler;", "uniform float uOpacity;", "varying vec3 vTextureCoord;", "uniform bool showDebugLine;", "uniform vec4 vColor;", "void main(void){", "   if (!showDebugLine) {", "       vec4 textureColor = texture2DProj(uSampler, vTextureCoord);", "       gl_FragColor = vec4(textureColor.rgb, textureColor.a * uOpacity);", "   } else {", "       gl_FragColor = vec4(vColor.rgb, vColor.a);", "   }", "}"].join("\n"),
		Co = function() {
			function t(e, n, r, i) {
				this.nodes = void 0, this.level = void 0, this.key = void 0, this.nodes = [], this.level = e, this.key = "".concat(r, "_")
					.concat(i), e < n && (this.nodes[0] = new t(e + 1, n, 2 * r, 2 * i), this.nodes[1] = new t(e + 1, n, 2 * r, 2 * i + 1), this.nodes[2] = new t(e + 1, n, 2 * r + 1, 2 * i), this.nodes[3] = new t(e + 1, n, 2 * r + 1, 2 * i + 1))
			}
			var e = t.prototype;
			return e.hasNodes = function() {
				return this.nodes.length > 0
			}, e.getNodeKeysByLevel = function(t) {
				if (t < this.level) return console.warn("指定节点".concat(t, " 不在当前节点")
					.concat(this.level, "范围内！")), [];
				if (this.level === t) return [this.key];
				for (var e = [], n = 0; n < this.nodes.length; n++)
					if (Object.prototype.hasOwnProperty.call(this.nodes, n)) {
						var r = this.nodes[n];
						if (this.level === t - 1) e.push(r.key);
						else if (r.hasNodes()) {
							var i = r.getNodeKeysByLevel(t);
							e.push.apply(e, vi(i))
						}
					} return e
			}, t
		}();
	var Ro = function(t) {
			function e(e) {
				var n;
				return (n = t.call(this, e) || this)
					.name = "SphereRender", n.sphere = void 0, n.textureManager = void 0, n.imgColsRows = void 0, n.curThumbTexture = void 0, n.meshCache = {}, n.tileInfoCache = {}, n.imgRange = void 0, n.faceRange = void 0, n.hitTile = void 0, n.setData = function(t) {
						n.panoData = t, n.curThumbTexture = null, n.loadThumbTextures(t.panoId)
					}, n.update = function() {
						n.updateRangeInfo(), n.checkAndLoadTiles()
					}, n.checkAndLoadTiles = function() {
						if (n.curThumbTexture && n.panoData) {
							var t = n.panoData.panoId,
								e = n.camera,
								r = n.imgColsRows[n._imgZoom],
								i = r.cols,
								o = i - 1,
								a = r.rows - 1,
								s = n.pano.getContainerSize(),
								u = s.width,
								h = s.height,
								c = !1,
								l = [],
								f = _i(n.imgRange, 4),
								d = f[0],
								p = f[1],
								v = f[2],
								m = f[3];
							if (po(zt(0, 100, 0), e, u, h)) {
								for (var g = 0; g <= v; g++)
									for (var y = 0; y <= o; y++) n.checkAndLoadTile(t, y, g, n._imgZoom), l.push([g, y]);
								v < m && (v += 1, c = !0)
							} else if (po(zt(0, -100, 0), e, u, h)) {
								for (var _ = m; _ <= a; _++)
									for (var x = 0; x <= o; x++) n.checkAndLoadTile(t, x, _, n._imgZoom), l.push([_, x]);
								v < m && (m -= 1, c = !0)
							} else c = !0;
							if (!0 === c) {
								p > o && (p = o);
								for (var b = d; b <= p; b++)
									for (var M = v; M <= m; M++) {
										var w = b < 0 ? b + i : b;
										n.checkAndLoadTile(t, w, M, n._imgZoom), l.push([M, w])
									}
							}
							n.hitTile = l, l.forEach((function(t) {
								var e = _i(t, 2),
									r = e[0],
									i = e[1],
									o = "".concat(r, "_")
									.concat(i, "_")
									.concat(n._imgZoom);
								if (void 0 === n.tileInfoCache[o]) {
									var a = new Co(n._imgZoom, 5, r, i)
										.getNodeKeysByLevel(5);
									n.tileInfoCache[o] = a
								}
							}))
						}
					}, n.draw = function() {
						var t = n.meshs;
						if (!n.faceRange || !n.curThumbTexture) return !1;
						t.children = [];
						for (var e = function(e, r) {
							var i = n.curThumbTexture,
								o = n.textureManager.calcTileKey(n.panoData.panoId, e, r, n._imgZoom),
								a = n.textureManager.textureInfo.getData(o),
								s = !1,
								u = null;
							if (a ? !(u = a)
								.finished && u.aniInfo && u.aniInfo && u.aniInfo.update() : i && (s = !0, u = i), u) {
								var h = "".concat(r, "_")
									.concat(e, "_")
									.concat(n._imgZoom),
									c = n.meshCache[h];
								if (!c) {
									if (!(c = n.createTileMesh(r, e))) return;
									n.meshCache[h] = c
								}
								if (!c.material) return;
								var l = c.material.uniforms;
								l.uSamplerBack.value = i, s ? l.uDrawThumb.value = !0 : (l.uDrawThumb.value = !1, l.uSampler.value = u, l.uAlpha.value = u.alpha), t.add(c)
							}
						}, r = 0; r < n.hitTile.length; r++) {
							var i = _i(n.hitTile[r], 2),
								o = i[0];
							e(i[1], o)
						}
						return !0
					}, n.pano = e, n.sphere = new mo(e.opts.radius), n.textureManager = new yo(e), n.imgColsRows = function() {
						for (var t = [], e = 0; e <= 5; e++) t[e] = e < 2 ? {
							cols: 1,
							rows: 1
						} : {
							cols: Math.pow(2, e - 1),
							rows: Math.pow(2, e - 1) / 2
						};
						return t
					}(), n.curThumbTexture = null, n.meshs = new Xr, n
			}
			c(e, t);
			var n = e.prototype;
			return n.checkAndLoadTile = function(t, e, n, r) {
				var i = this,
					o = this.textureManager,
					a = o.calcTileKey(t, e, n, r);
				!0 !== (void 0 !== o.textureInfo.getData(a)) && this.textureManager.loadTexture(t, e, n, r)
					.then((function(t) {
						t && !t.done && (t.aniInfo = i.createTextureAnimation(t), t.done = !0, i.pano.dispatchEvent({
							type: d.REFRESH,
							log: "[Refresh Log] 瓦片加载完成， 渲染一帧"
						}))
					}))
			}, n.loadThumbTextures = function(t) {
				var e = this;
				this.textureManager.loadTexture(t, 0, 0, 1)
					.then((function(t) {
						e.curThumbTexture = t, e.pano.dispatchEvent({
							type: d.THUMB_LOADED
						}), e.pano.dispatchEvent({
							debug: !0,
							type: d.REFRESH,
							log: "[Refresh Log] 缩略图加载完毕，渲染一帧"
						})
					}))
			}, n.createTextureAnimation = function(t) {
				var e = this;
				return t.alpha = 0, new uo(0, 1, 300)
					.onUpdate((function(n) {
						t.alpha = n, e.pano.dispatchEvent({
							debug: !0,
							type: d.REFRESH,
							log: "[Refresh Log] 纹理清晰度渐变动画，渲染一帧"
						})
					}))
					.onEnd((function() {
						t.finished = !0
					}))
					.start()
			}, n.createTileMesh = function(t, e) {
				var n = new Ei,
					r = new Hr;
				if (n.depthTest = !1, n.vertexShader = _o, n.fragmentShader = xo, n.uniforms = {
					uSampler: {
						type: "t",
						value: null
					},
					uSamplerBack: {
						type: "t",
						value: null
					},
					uDrawThumb: {
						type: "1i",
						value: 1
					},
					uDrawBack: {
						type: "1i",
						value: 1
					},
					uAlpha: {
						type: "1f",
						value: 1
					}
				}, !this.setGeometryAttrib(r, t, e)) return null;
				var i = new Xr(r, n);
				return i.name = "tile-mesh", i
			}, n.setGeometryAttrib = function(t, e, n) {
				var r = "".concat(e, "_")
					.concat(n, "_")
					.concat(this._imgZoom),
					i = this.tileInfoCache[r];
				if (!i) return !1;
				for (var o = [], a = [], s = [], u = 0; u < i.length; u++) {
					var h = i[u].split("_"),
						c = this.sphere.rows,
						l = Number(h[1]),
						f = c - 1 - Number(h[0]);
					o.push.apply(o, vi(this.sphere.getFaceVertex(f, l))), a.push.apply(a, vi(this.sphere.generateTextureCoord(f, l, this._imgZoom))), s.push.apply(s, vi(this.sphere.generateTextureCoord(f, l, 1)))
				}
				var d = this.sphere.getSphereFacesIndicesByimageZoom(this._imgZoom);
				return t.setAttribute("uv", new Vr(a, 2)), t.setAttribute("uvBack", new Vr(s, 2)), t.setAttribute("position", new Vr(o, 3)), t.setIndexes(d), !0
			}, n.getTileBoundary = function() {
				var t = this.pano.getContainerSize(),
					e = t.width,
					n = t.height,
					r = yt(0, 0),
					i = yt(e, 0),
					o = yt(0, n),
					a = yt(e, n),
					s = yt(.5 * e, 0),
					u = yt(.5 * e, n),
					h = yt(0, .5 * n),
					c = yt(e, .5 * n),
					l = this.getSpherePosition(r),
					f = this.getSpherePosition(i),
					d = this.getSpherePosition(o),
					p = this.getSpherePosition(a),
					v = this.getSpherePosition(s),
					m = this.getSpherePosition(u),
					g = this.getSpherePosition(h),
					y = this.getSpherePosition(c),
					_ = Math.max(l[1], v[1], f[1]),
					x = Math.min(d[1], m[1], p[1]),
					b = [l[0], g[0], d[0], v[0]],
					w = [f[0], y[0], p[0], m[0]],
					E = Math.min.apply(Math, b),
					T = Math.max.apply(Math, w),
					A = M(b),
					C = M(w),
					R = this.sphere.cols,
					S = R / 2;
				A.max - A.min > S && (E = Math.min.apply(Math, vi(b.filter((function(t) {
					return t > S
				}))))), C.max - C.min > S && (T = Math.max.apply(Math, vi(w.filter((function(t) {
					return t < S
				}))))), E > T && (E -= R);
				var P = this.getImgIndexByFaceColRow(E, _),
					D = _i(P, 2),
					O = D[0],
					I = D[1],
					L = this.getImgIndexByFaceColRow(T, x),
					B = _i(L, 2);
				return [
					[E, T, _, x],
					[O, B[0], I, B[1]]
				]
			}, n.updateRangeInfo = function() {
				var t = this.getTileBoundary(),
					e = _i(t, 2),
					n = e[0],
					r = e[1];
				this.imgRange = r, this.faceRange = n
			}, n.getImgIndexByFaceColRow = function(t, e, n) {
				n = n || this._imgZoom;
				var r = Math.pow(2, 5 - n),
					i = Math.floor(t / r),
					o = Math.floor(e / r);
				return [i, o = this.imgColsRows[n].rows - o - 1, i + o * mo.DEFAULT_COLS / r]
			}, n.normalizeNum = function(t, e) {
				for (var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, r = t; r < n;) r += e;
				return r %= e
			}, n.getSpherePosition = function(t) {
				var e = this.camera,
					n = this.pano.getContainerSize(),
					r = n.width,
					i = n.height,
					o = this.sphere.viewportToSphereCoord(t, r, i, e),
					a = this.sphere.getFaceIndex(o),
					s = _i(a, 2);
				return yt(s[0], s[1])
			}, n.generateBackThumb = function(t) {
				if (t) {
					var e = this.pano,
						n = e.getContainerSize(),
						r = n.width,
						i = n.height,
						o = "//apisv0.bdimg.com/?udt=20140616&qt=pdata&pos=0_0&z=2&sid=".concat(t, "&from=H5&")
						.concat(J("/", {
							isCounter: !0
						})),
						a = e.getPanes()
						.tileLayer;
					a.style.backgroundImage = 'url("' + o + '")', a.style.backgroundPosition = "50% 50%", a.style.backgroundSize = "150% 150%", a.style.width = "".concat(r, "px"), a.style.height = "".concat(i, "px")
				}
			}, o(e, [{
				key: "_imgZoom",
				get: function() {
					return this.pano.imageZoom
				}
			}]), e
		}(Qi),
		So = [10, -20, 30, 10, -20, 10, -10, -20, 10, -10, -20, 30].map((function(t) {
			return -20 === t ? -20 : 1.8 * t
		})),
		Po = [10, -22, 30, 10, -22, 10, -10, -22, 10, -10, -22, 30].map((function(t) {
			return -22 === t ? -22 : 1.8 * t
		})),
		Do = [1.8, -20, 24.9, 1.8, -20, 16.3, -1.8, -20, 16.3, -1.8, -20, 24.9].map((function(t) {
			return -20 === t ? -20 : 1.8 * t
		})),
		Oo = [0, 0, 0, .5, .25, .5, .25, 0],
		Io = function() {
			function t(t, e, n) {
				var r = this;
				this.mesh = void 0, this.material = void 0, this.linkData = void 0, this._pano = void 0, this.northDir = void 0, this.yAxisDis = void 0, this.isPosInArrow = function(t, e, n, i, o) {
					var a = yt(t, e),
						s = lo(a, n, i, o, -1),
						u = 200 * s[0],
						h = 200 * s[1],
						c = 200 * s[2],
						l = r.yAxisDis / h;
					if (l < 0) return !1;
					var f = [u * l, h * l, c * l];
					return r.isHitLink(f)
				}, this._pano = t, this.linkData = e, this.northDir = n, this.yAxisDis = 0, this.linkData.refinedDir = _((e.topoDir || 0) + this.northDir), this.material = this.createArrowMaterial(), this.mesh = this.initMesh(), this.changePose()
			}
			var e = t.prototype;
			return e.initMesh = function() {
				var t = this.createGeometry(),
					e = new Xr(t, this.material);
				return e.visible = !1, e.name = "link-mesh", e
			}, e.createArrowMaterial = function() {
				var t = new Ei;
				return t.depthTest = !1, t.vertexShader = bo, t.fragmentShader = Mo, t.uniforms = {
					uSampler: {
						type: "t",
						value: null
					}
				}, t
			}, e.setTopoTexture = function(t) {
				t.isTexture && (this.material.uniforms.uSampler.value = t)
			}, e.setVisible = function(t) {
				this.mesh.setVisible(t, !0)
			}, e.createGeometry = function() {
				var t = new Hr,
					e = this.getTextCoord(this.linkData.topoDir),
					n = [].concat(Po, So, Do),
					r = [].concat([.5, 0, .5, .5, 1, .5, 1, 0], [0, 0, 0, .5, .5, .5, .5, 0], e),
					i = [].concat([0, 1, 2, 0, 2, 3], [4, 5, 6, 4, 6, 7], [8, 9, 11, 10, 11, 9]);
				return t.setAttribute("position", new Vr(n, 3)), t.setAttribute("uv", new Vr(r, 2)), t.setIndexes(i), t
			}, e.changePose = function(t) {
				t = t || this.mesh;
				var e = 50,
					n = -30,
					r = this._pano.getPov()
					.pitch,
					i = this.linkData.refinedDir;
				(e += 20 * this._pano.getZoom(), r < 0) && (e *= (90 - (r = Math.abs(r))) / 90, n -= 20 * r / 90);
				var o = Math.cos(g(i)) * e,
					a = Math.sin(g(i)) * e;
				this.yAxisDis = n + -20, t.setPosition(o, n, a), t.rotateY(-_(i - 90)), t.rotateX(-5), t.updateWorldMatrix(!0)
			}, e.getTextCoord = function(t) {
				t = (t + 360) % 360;
				var e = Math.ceil(Math.floor(t / 22.5) / 2);
				8 === e && (e = 0);
				for (var n = Oo.slice(0), r = Math.floor(e / 2), i = e % 2, o = 0; o < n.length; o++) o % 2 == 0 ? (n[o] += .25 * r, n[o] = .5 * n[o]) : (n[o] += .5 * i, n[o] = .5 * n[o] + .5);
				return n
			}, e.isHitLink = function(t) {
				var e = t[0],
					n = t[2],
					r = this.mesh.worldMatrix,
					i = zt(So[0], So[1], So[2]),
					o = zt(So[6], So[7], So[8]),
					a = zt((i[0] + o[0]) / 2, (i[1] + o[1]) / 2, (i[2] + o[2]) / 2);
				return te(a, a, r), Math.abs(e - a[0]) < 18 && Math.abs(n - a[2]) < 18
			}, t
		}(),
		Lo = function(t) {
			function e(e) {
				var n;
				return (n = t.call(this, e) || this)
					.name = "PanoLinkRender", n.linkVisible = !0, n.textureManager = void 0, n.linkInfos = [], n.setData = function(t) {
						if (t && (o = t.getTopos, a = "[object Function]" === Object.prototype.toString.call(o), s = "[object AsyncFunction]" === Object.prototype.toString.call(o), a || s)) {
							n.reset();
							var e = t.getTopos(),
								r = t.northDir,
								i = t.panoType === p.TYPE_STREET;
							e.length && i && (n.linkInfos = e.map((function(t) {
								return new Io(n.pano, t, r)
							})), n.meshs = n.linkInfos.map((function(t) {
								return t.mesh
							})), n.loadTextures(), n.setVisible(!0))
						}
						var o, a, s
					}, n.clickChecker = function(t, e) {
						if (n.linkVisible) {
							var r = n.getIdByTouchPos(t, e);
							return r && (n.setVisible(!1), n.pano.dispatchEvent({
								type: d.LINK_CLICK,
								id: r
							}), n.pano.setId(r, {
								animation: !0
							})), !r
						}
					}, n.pano = e, n.meshs = [], n.textureManager = new yo(e), n
			}
			c(e, t);
			var n = e.prototype;
			return n.reset = function() {
				this.meshs = [], this.linkInfos = []
			}, n.update = function() {
				this.linkInfos.forEach((function(t) {
					t.changePose()
				}))
			}, n.setVisible = function(t) {
				var e = this.linkInfos;
				if (!(e.length < 1)) {
					var n = this.pano.opts.linksControl,
						r = !1;
					!0 === n && (r = t), this.linkVisible = r, e.forEach((function(t) {
						return t.setVisible(r)
					}))
				}
			}, n.draw = function() {}, n.loadTextures = function() {
				var t = this,
					e = this.pano.opts.imgPath ? "".concat(this.pano.opts.imgPath, "topo_arrow.png") : p.TOPO_ARROW_TEXTURE;
				this.textureManager.loadTopoTexture(e)
					.then((function(e) {
						e && t.linkInfos.forEach((function(t) {
							t.setTopoTexture(e)
						}))
					}))
			}, n.getIdByTouchPos = function(t, e) {
				var n = this,
					r = null;
				if (!this.linkInfos.length) return r;
				var i = this.pano.getContainerSize(),
					o = i.width,
					a = i.height,
					s = this.linkInfos.filter((function(r) {
						return r.isPosInArrow(t, e, n.camera, o, a)
					}));
				return s.length && (r = s[0].linkData.panoId), r
			}, e
		}(Qi),
		Bo = function() {
			function t(t, e, n) {
				var r = this;
				this.start = function() {
					r.fadeAni.start(), r._pano.dispatchEvent({
						debug: !0,
						log: "淡出动画，渲染一帧",
						type: d.REFRESH
					})
				}, this.update = function() {
					r.fadeAni.update()
				}, this._pano = t, this.gl = this._pano.gl, this.snapshot = e, this.scene = this.initScene(), this.camera = this.initCamera();
				this.fadeAni = new uo(1, 0, 600)
					.onUpdate((function(t) {
						r.material.uniforms.uOpacity.value = t, r._pano.dispatchEvent({
							type: d.REFRESH
						})
					}))
					.onEnd((function() {
						n && n(), r._pano.dispatchEvent({
							type: d.REFRESH,
							debug: !0,
							log: "淡出动画结束，渲染一帧"
						})
					}))
			}
			var e = t.prototype;
			return e.initScene = function() {
				var t = new Kr,
					e = this._pano.getContainerSize(),
					n = e.width,
					r = e.height,
					i = new Fi(n, r),
					o = this.initMaterial(),
					a = new Xr(i, o);
				return t.add(a), t
			}, e.initMaterial = function() {
				var t = new Ei;
				return t.depthTest = !1, t.vertexShader = wo, t.fragmentShader = Eo, t.uniforms = {
					uSampler: {
						type: "t",
						value: this.snapshot
					},
					uOpacity: {
						type: "1f",
						value: 1
					}
				}, this.material = t, t
			}, e.initCamera = function() {
				var t = this._pano.getContainerSize(),
					e = t.width / 2,
					n = t.height / 2;
				return new Yi(-e, e, n, -n, 0, 11e3)
			}, t
		}(),
		ko = function() {
			function t(t, e, n) {
				var r = this;
				this.start = function() {
					r.waveAni.start(), r._pano.dispatchEvent({
						debug: !0,
						log: "淡出动画，渲染一帧",
						type: d.REFRESH
					})
				}, this.update = function() {
					r.waveAni.update()
				}, this._pano = t, this.gl = this._pano.gl, this.snapshot = e, this.scene = this.initScene(), this.camera = this.initCamera();
				this.waveAni = new uo(0, 1, 800)
					.onUpdate((function(t) {
						r.material.uniforms.progress.value = t, r.material.uniforms.uOpacity.value = 1 - t, r._pano.dispatchEvent({
							type: d.REFRESH
						})
					}))
					.onEnd((function() {
						n && n(), r._pano.dispatchEvent({
							type: d.REFRESH,
							debug: !0,
							log: "淡出动画结束，渲染一帧"
						})
					}))
			}
			var e = t.prototype;
			return e.initCamera = function() {
				var t = this._pano.getContainerSize(),
					e = t.width / 2,
					n = t.height / 2;
				return new Yi(-e, e, n, -n, 0, 11e3)
			}, e.initScene = function() {
				var t = new Kr,
					e = this._pano.getContainerSize(),
					n = e.width,
					r = e.height,
					i = new Fi(n, r),
					o = this.initMaterial(),
					a = new Xr(i, o);
				return t.add(a), t
			}, e.initMaterial = function() {
				var t = new Ei,
					e = this._pano.getContainerSize(),
					n = e.width,
					r = e.height;
				return t.depthTest = !1, t.vertexShader = wo, t.fragmentShader = "\n    uniform float aspect;\n    uniform float radius;\n    uniform float amp;\n    uniform float band;\n    uniform float waves;\n    uniform float speed;\n    uniform float progress;\n    uniform vec2 uCenter;\n    uniform sampler2D uSampler;\n    uniform float uOpacity;\n\n    varying vec2 vTextureCoord;\n\n    void main() {\n        vec2 tc = vTextureCoord;\n        vec2 uv = vec2(0.0, 0.0);\n        vec2 p;\n        float len;\n        vec2 uv_offset;\n        float wave_width = band * radius;\n\n        p = (tc - uCenter);\n        p.x = p.x * aspect;\n        len = length(p);\n\n        float current_radius = radius * progress;\n        float damp_factor = 1.0;\n        if (progress > .5) {\n            damp_factor = (1.0 - progress) * 2.0;\n        }\n\n        float cut_factor = clamp(wave_width * damp_factor - abs(current_radius - len), 0.0, 1.0);\n        float waves_factor = waves * len / radius;\n        uv_offset = (p / len) * cos((waves_factor - progress * speed) * 3.14) * amp * cut_factor;\n\n        uv += uv_offset;\n\n        vec4 t_image = texture2D(uSampler, fract(tc + uv));\n\n        // gl_FragColor = t_image;\n        gl_FragColor = vec4(t_image.rgb, t_image.a * uOpacity);\n    }\n", t.uniforms = {
					uSampler: {
						type: "t",
						value: this.snapshot
					},
					uCenter: {
						type: "2f",
						value: [.5, .5]
					},
					uOpacity: {
						type: "1f",
						value: 1
					},
					progress: {
						type: "1f",
						value: 0
					},
					speed: {
						type: "1f",
						value: 4
					},
					waves: {
						type: "1f",
						value: 14
					},
					band: {
						type: "1f",
						value: .3
					},
					amp: {
						type: "1f",
						value: .3
					},
					aspect: {
						type: "1f",
						value: n / r
					},
					radius: {
						type: "1f",
						value: 1
					}
				}, this.material = t, t
			}, t
		}(),
		Uo = function() {
			function t(t, e, n, r) {
				var i = this;
				this.startAni = function() {
					i.animation.start()
				}, this.update = function() {
					i.animation.update()
				}, this.pano = t, this.distance = n, this.refinedDir = e, this.camera = this.pano.camera, this.cameraBase = this.pano.camera.clone(), this.handleEnd = r, this.initAni()
			}
			return t.prototype.initAni = function() {
				var t = this,
					e = this.distance,
					n = this.refinedDir,
					r = Math.cos(g(n)),
					i = Math.sin(g(n));
				this.animation = new uo(0, 1, 400, ao.easeOutQuad)
					.onUpdate((function(n) {
						var o = e * n,
							a = r * o,
							s = i * o;
						t.camera.setPosition(a, 0, s), t.pano.dispatchEvent({
							debug: !0,
							type: d.REFRESH,
							log: "[Refresh Log] 前进动画， 渲染一帧"
						})
					}))
					.onEnd((function() {
						t.handleEnd && t.handleEnd()
					}))
			}, t
		}(),
		No = function(t, e, n, r) {
			this.x = t || 0, this.y = e || 0, this.width = n || 0, this.height = r || 0
		},
		Fo = function(t, e) {
			var n = this;
			this.angleDegreeDelta = function(t, e) {
					var n = Math.abs(t - e);
					return n > 180 ? 360 - n : n
				}, this.getRoad = function(t, e, n, r, i) {
					for (var o, a = [], s = [
						[-t / 2, -e, -10],
						[-t / 2, -e, -20],
						[t / 2, -e, -10],
						[t / 2, -e, -20]
					], u = s.length, h = 0; h < u; h++) te(o = s[h], o, n), a[h] = {
						x: o[0] * r * .5,
						y: -o[1] * i * .5
					};
					return a
				}, this.getIntersection = function(t, e, n, r) {
					if (t.x === e.x || n.x === r.x) return null;
					var i = (e.y - t.y) / (e.x - t.x),
						o = (r.y - n.y) / (r.x - n.x);
					if (i === o) return null;
					var a = (o * n.x - i * t.x + t.y - n.y) / (o - i);
					return {
						x: a,
						y: i * (a - t.x) + t.y
					}
				}, this.calculateVanishPoint = function(t, e, r, i) {
					var o = n.getIntersection(t[0], t[1], t[2], t[3]);
					return null === o ? null : (o.x += r * e * .5, o.y += i * e * .5, o)
				}, this.getOuterRect = function(t, e, n) {
					return new No(t * (n - 1) * .5, e * (n - 1) * .5, t, e)
				}, this.transformPoint = function(t, e, n) {
					return t && void 0 !== t.x && void 0 !== t.y ? {
						x: t.x + e,
						y: t.y + n
					} : t
				}, this.getInnerRect = function(t, e, r, i, o) {
					var a = n.transformPoint(t, .5 * -r * o, .5 * -i * o),
						s = n.transformPoint(a, 0, 20),
						u = n.transformPoint(a, 10, 20),
						h = n.getIntersection(e[0], e[1], s, u),
						c = n.getIntersection(e[2], e[3], s, u),
						l = n.transformPoint(h, 0, -70),
						f = new No(l.x + r * o * .5, l.y + i * o * .5, c.x - h.x, 70);
					return f = n.fixInnerRectPosition(f, t), f = n.fixInnerRectSize(f, t, r)
				}, this.fixInnerRectPosition = function(t, e) {
					var n = t,
						r = (e.x - t.x) / t.width,
						i = 0;
					return r > .7 && (i = r - .7), r < .3 && (i = .3 - r), n.x = n.x + n.width * i, n
				}, this.fixInnerRectSize = function(t, e, n) {
					var r, i, o, a, s = t;
					s.width / n > .12 && (a = (o = .12 * n) * (s.width / s.height), r = s.x + (s.width - o) * (e.x - s.x) / s.width, i = s.y + (s.height - a) * (e.y - s.y) / s.height, s = new No(r, i, o, a));
					var u = s.width / s.height;
					return a = s.height, u > 1.2 && (a = s.height * u / 1.2), u < .9 && (a = s.height * u / .9), i = s.y + s.height - a, s.height = a, s.y = i, s
				}, this.panoData = t.panoData, this.camera = t.camera, this.projectionMatrix = this.camera.projectionMatrix, this.fov = g(this.camera.fov), this.traverseDir = e, this.cameraHeading = t.getPov()
				.heading || 0, this.isMovingForward = this.angleDegreeDelta(this.cameraHeading, this.traverseDir) <= 90, this.roadWith = Math.min(1.5 * this.panoData.getRoadWidth(), 10), this.deviceHeight = this.panoData.deviceHeight || 2.2, this.panoWidth = t._container.clientWidth, this.panoHeight = t._container.clientHeight;
			var r = this.angleDegreeDelta(this.cameraHeading, this.traverseDir) > 45;
			this.snapshotRatio = r ? 1 : 1.8, this.projectionRoadInfos = this.getRoad(this.roadWith, this.deviceHeight, this.projectionMatrix, this.panoWidth, this.panoHeight), this.vanishPoint = this.calculateVanishPoint(this.projectionRoadInfos, this.snapshotRatio, this.panoWidth, this.panoHeight), this.innerRect = this.getInnerRect(this.vanishPoint, this.projectionRoadInfos, this.panoWidth, this.panoHeight, this.snapshotRatio), this.outerRect = this.getOuterRect(this.panoWidth, this.panoHeight, this.snapshotRatio), this.focusLength = .5 * this.panoHeight / Math.tan(.75 * this.fov), this.vanishPointDeltaX = this.vanishPoint.x - this.outerRect.x - .5 * this.outerRect.width, this.vanishPointDeltaY = this.vanishPoint.y - this.outerRect.y - .5 * this.outerRect.height
		},
		jo = {
			FAR: [10, 10, 0],
			LEFT: [0, 10, 30],
			RIGHT: [0, 10, 30],
			TOP: [10, 0, 30],
			BOTTOM: [10, 0, 30]
		},
		zo = {
			FAR: ["innerTopLeftVertex", "innerBottomRightVertex"],
			LEFT: ["outerTopLeftVertex", "innerBottomLeftVertex"],
			RIGHT: ["innerTopRightVertex", "outerBottomRightVertex"],
			TOP: ["outerTopLeftVertex", "innerTopRightVertex"],
			BOTTOM: ["innerBottomLeftVertex", "outerBottomRightVertex"]
		},
		Vo = Object.keys(jo),
		Go = function(t) {
			function e(e, n) {
				var r;
				if ((r = t.call(this) || this)
					.createSkeleton = function(t) {
						var e = t.vanishPoint,
							n = t.innerRect,
							r = t.outerRect,
							i = t.focusLength,
							o = r.y + r.height - n.y - n.height,
							a = e.y - n.y,
							s = e.x - n.x,
							u = n.x + n.width - e.x,
							h = r.y + r.height - e.y,
							c = o * i / (h - o),
							l = u * (i + c) / i,
							f = -(s * (i + c) / i),
							d = h + a * (i + c) / i - h,
							p = -h,
							v = c / 5;
						return {
							innerTopLeftVertex: {
								x: f,
								y: d,
								z: -c
							},
							innerBottomLeftVertex: {
								x: f,
								y: p,
								z: -c
							},
							innerTopRightVertex: {
								x: l,
								y: d,
								z: -c
							},
							innerBottomRightVertex: {
								x: l,
								y: p,
								z: -c
							},
							outerTopLeftVertex: {
								x: f,
								y: d,
								z: v
							},
							outerTopRightVertex: {
								x: l,
								y: d,
								z: v
							},
							outerBottomLeftVertex: {
								x: f,
								y: p,
								z: v
							},
							outerBottomRightVertex: {
								x: l,
								y: p,
								z: v
							}
						}
					}, r.modelSkeleton = function(t, e) {
						var n = [],
							i = [];
						return Vo.forEach((function(o) {
							var a = _i(zo[o], 2),
								s = a[0],
								u = a[1],
								h = n.length / 3;
							n = n.concat(r.calculatePlaneVertex(t[s], t[u], o, e)), i = i.concat(r.calculateIndices(o, h))
						})), [n, i]
					}, r.calculatePlaneVertex = function(t, e, n, i) {
						for (var o, a = [], s = _i(jo[n], 3), u = s[0], h = s[1], c = s[2], l = r.linerInterpolate(t.x, e.x, u), f = r.linerInterpolate(t.y, e.y, h), d = r.linerInterpolate(t.z, e.z, c), p = 0; p <= u; p++)
							for (var v = 0; v <= h; v++)
								for (var m = 0; m <= c; m++) wn(o = un(l[p], f[v], d[m], 1), o, i), o[0] = o[0] / o[3], o[1] = o[1] / o[3], o[2] = o[2] / o[3], a.push(o[0], o[1], o[2]);
						return a
					}, r.calculateIndices = function(t, e) {
						var n = [],
							r = jo[t];
						r = r.filter((function(t) {
							return t > 0
						}));
						for (var i = _i(r, 2), o = i[0], a = i[1], s = 0, u = 0, h = 0, c = 0, l = 0; l < o; l++)
							for (var f = 0; f < a; f++) u = (s = e + (a + 1) * l + f) + 1, c = (h = s + a + 1) + 1, n.push(s, h, c), n.push(s, c, u);
						return n
					}, r.linerInterpolate = function(t, e, n) {
						var r = [];
						if (n <= 0) r.push(t);
						else
							for (var i = (e - t) / n, o = 0; o <= n; o++) r[o] = t + i * o;
						return r
					}, r.calculateUVCoordinate = function(t, e, n) {
						for (var i, o = t.camera, a = t.panoWidth, s = t.panoHeight, u = t.vanishPointDeltaX, h = t.vanishPointDeltaY, c = [], l = e.width, f = e.height, d = 0, p = 0, v = n.length / 3, m = 0; m < v; m++) wn(i = un(n[3 * m], n[3 * m + 1], n[3 * m + 2], 1), i, o.viewMatrix), wn(i, i, o.projectionMatrix), i[0] = i[0] / i[3], i[1] = i[1] / i[3], i[2] = i[2] / i[3], i[3] = 1, d = (i[0] * a * .5 + u + .5 * l) / l, p = (i[1] * s * .5 + h + .5 * f) / f, c.push(r.getValidateUV(d), r.getValidateUV(p));
						return new Float32Array(c)
					}, r.getValidateUV = function(t) {
						return Math.max(-.1, Math.min(1.1, t))
					}, r.rotationMatrix = Se(), r.camera = e.camera, e.isMovingForward) ze(r.rotationMatrix, r.rotationMatrix, g(_(-e.traverseDir + e.panoData.heading)));
				else {
					var i = _(180 - e.traverseDir + e.panoData.heading);
					ze(r.rotationMatrix, r.rotationMatrix, g(i))
				}
				r.cuboidVertexes = r.createSkeleton(e);
				var o = r.modelSkeleton(r.cuboidVertexes, r.rotationMatrix),
					a = _i(o, 2),
					s = a[0],
					u = a[1];
				return r.verticesBufferData = new Float32Array(s), r.indicesBufferData = new Uint16Array(u), r.uvtsBufferData = r.calculateUVCoordinate(e, n, s, r.rotationMatrix), r.setAttribute("position", new Vr(r.verticesBufferData, 3)), r.setAttribute("uv", new Vr(r.uvtsBufferData, 2)), r.setIndexes(r.indicesBufferData), r
			}
			return c(e, t), e
		}(Hr),
		Wo = [0, 1, 0, .5],
		Ho = function() {
			function t(t, e, n, r, i) {
				var o = this;
				this.start = function() {
					o.animation.start(), o._pano.dispatchEvent({
						debug: !0,
						log: "淡出动画，渲染一帧",
						type: d.REFRESH
					})
				}, this.update = function() {
					o.animation.update()
				}, this._pano = t, this.distance = e, this.handleEnd = i, this.traverseDir = r, this.snapshot = n, this.camera = t.camera, this.scene = this.initScene(), this.rotationMatrix = this.traverseGeometry.rotationMatrix, this.initAni()
			}
			var e = t.prototype;
			return e.initAni = function() {
				var t = this,
					e = zt(0, 0, this.distance);
				te(e, e, this.rotationMatrix), this.animation = new uo(0, 1, 700, ao.linear)
					.onUpdate((function(n) {
						var r = Nt();
						qt(r, e, n), t.scene.traverse((function(t) {
							t.position = r, t.updateWorldMatrix(!0)
						})), t._pano.dispatchEvent({
							debug: !0,
							type: d.REFRESH,
							log: "[Refresh Log] 前进动画， 渲染一帧"
						})
					}))
					.onEnd((function() {
						t.handleEnd && t.handleEnd(), t._pano.dispatchEvent({
							debug: !0,
							type: d.REFRESH,
							log: "[Refresh Log] 前进动画， 渲染一帧"
						})
					}))
			}, e.initScene = function() {
				var t = new Kr,
					e = this._pano.getContainerSize(),
					n = e.width,
					r = e.height,
					i = new Fo(this._pano, this.traverseDir),
					o = new No(0, 0, n, r),
					a = new Go(i, o),
					s = this.initMaterial(),
					u = new Xr(a, s);
				return this.traverseGeometry = a, t.add(u), t
			}, e.initMaterial = function() {
				var t = new Ei;
				return t.depthTest = !1, t.vertexShader = To, t.fragmentShader = Ao, t.uniforms = {
					uSampler: {
						type: "t",
						value: this.snapshot
					},
					uOpacity: {
						type: "1f",
						value: 1
					},
					vColor: {
						type: "4f",
						value: Wo
					},
					showDebugLine: {
						type: "1i",
						value: true
					}
				}, this.material = t, t
			}, t
		}(),
		Zo = function() {
			function t() {
				var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
					e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
				this.x = t, this.y = e
			}
			return t.prototype.equals = function(t) {
				return t && t.x === this.x && t.y === this.y
			}, t
		}(),
		qo = function() {
			function t(t, e) {
				var n = this;
				this.setData = function(t, e) {
					n.panoData = t, n.nextPanoData = e
				}, this.sceneChangeHandler = function() {
					if (n.panoData && n.nextPanoData) return new Promise((function(t) {
						var e = n.isStreet(n.panoData.panoType),
							r = n.isStreet(n.nextPanoData.panoType),
							i = n.snapshotFn(),
							o = n.pano.animationType;
						if (o && ["waterwave", "fade"].indexOf(o) > -1) switch (o) {
							case "waterwave":
								n.prepareWaterWave(i), t();
								break;
							case "fade":
								n.prepareFade(i), t()
						} else r && e ? (n.setDir(), n.prepareTraverse(i)
							.then((function(e) {
								n.prepareFade(e), t()
							}))) : (n.prepareFade(i), t())
					}))
				}, this.setSnapshot = function(t) {
					n.snapshot = t
				}, this.pano = t, this.snapshotFn = e, this.panoData = null, this.nextPanoData = null, this.changeAni = null, this.animateDir = 0
			}
			var e = t.prototype;
			return e.draw = function() {
				if (this.changeAni) {
					var t = this.changeAni,
						e = t.scene,
						n = t.camera;
					this.changeAni.update(), this.pano.renderer.render(e, n)
				}
			}, e.setDir = function() {
				if (this.panoData && this.nextPanoData) {
					var t = this.nextPanoData.panoId,
						e = this.panoData.getTopos()
						.filter((function(e) {
							return e && e.panoId === t
						}));
					if (e.length) {
						var n = e[0].topoDir;
						this.animateDir = n
					} else this.animateDir = this.pano.getPov()
						.heading || 0
				}
			}, e.prepareJump = function() {
				var t = this,
					e = this.calcJumpDistance();
				return new Promise((function(n) {
					t.changeAni = new Uo(t.pano, t.animateDir, e, (function() {
						t.changeAni = null, n()
					})), t.changeAni.startAni(), t.pano.dispatchEvent({
						debug: !0,
						log: "穿梭动画，渲染一帧",
						type: d.REFRESH
					})
				}))
			}, e.prepareTraverse = function(t) {
				var e = this,
					n = this.calcJumpDistance();
				return new Promise((function(r) {
					e.changeAni = new Ho(e.pano, n, t, e.animateDir, (function() {
						var t = e.snapshotFn(e.changeAni.scene, e.changeAni.camera);
						r(t), e.changeAni = null
					})), e.changeAni.start(), e.pano.dispatchEvent({
						debug: !0,
						log: "穿梭动画，渲染一帧",
						type: d.REFRESH
					})
				}))
			}, e.prepareFade = function(t) {
				var e = this;
				this.changeAni = new Bo(this.pano, t, (function() {
					e.changeAni = null, e.pano.emit(d.SCENE_CHANGE_END)
				}))
			}, e.prepareWaterWave = function(t) {
				var e = this;
				this.changeAni = new ko(this.pano, t, (function() {
					e.changeAni = null, e.pano.emit(d.SCENE_CHANGE_END)
				}))
			}, e.calcJumpDistance = function() {
				var t, e, n = 300,
					r = (t = new Zo(this.panoData.panoX, this.panoData.panoY), e = new Zo(this.nextPanoData.panoX, this.nextPanoData.panoY), t && e ? Math.round(Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2))) : 0);
				"number" == typeof r && (n *= Math.pow(r, 1 / 4));
				return n
			}, e.isStreet = function(t) {
				return t === p.TYPE_STREET
			}, t
		}(),
		Yo = function() {
			function t(t, e) {
				var n = e.fov,
					r = void 0 === n ? 145 : n,
					i = e.cameraY,
					o = void 0 === i ? 3e3 : i,
					a = e.handleEnd;
				this._pano = void 0, this.originFov = void 0, this.originRotateX = void 0, this.originRotateY = void 0, this.targetFov = void 0, this.targetCameraY = void 0, this.handleEnd = void 0, this.animate = void 0, this._pano = t, this.originFov = this.camera.fov, this.originRotateX = this.camera.rotation.x, this.originRotateY = this.camera.rotation.y, this.targetFov = r, this.targetCameraY = o, this.handleEnd = a, this.init()
			}
			var e = t.prototype;
			return e.start = function() {
				this._pano.dispatchEvent({
					type: d.REFRESH,
					debug: !0,
					log: "开场动画动画起始，渲染一帧"
				}), this.animate.start()
			}, e.update = function() {
				this.animate.update()
			}, e.init = function() {
				var t = this,
					e = this.camera;
				this.handleCameraChange(0), this.animate = new uo(0, 1, p.FISHEYE_DURATION, ao.easeInOutQuad)
					.onUpdate((function(e) {
						t.handleCameraChange(e), t._pano.dispatchEvent({
							type: d.REFRESH,
							debug: !0,
							log: "开场动画动画，渲染一帧"
						})
					}))
					.onEnd((function() {
						e.fov = t.originFov, e.rotateX(t.originRotateX), e.rotateY(t.originRotateY), e.setPosition(0, 0, 0), e.updateWorldMatrix(), e.updateProjectionMatrix(), t._pano.dispatchEvent({
							type: d.REFRESH,
							debug: !0,
							log: "开场动画动画结束，渲染一帧"
						}), t.handleEnd()
					}))
			}, e.handleCameraChange = function(t) {
				var e = this.camera,
					n = this.targetCameraY,
					r = this.targetFov - (this.targetFov - this.originFov) * t,
					i = (this.originRotateX - -90) * t - 90,
					o = this.originRotateY * t;
				e.fov = r, e.rotateX(i), e.rotateY(o), e.setPosition(0, n - n * t, 0), e.updateWorldMatrix(), e.updateProjectionMatrix()
			}, o(t, [{
				key: "camera",
				get: function() {
					return this._pano.camera
				}
			}]), t
		}();

	function Xo(t, e) {
		var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
		if (!n) {
			if (Array.isArray(t) || (n = function(t, e) {
				if (!t) return;
				if ("string" == typeof t) return Ko(t, e);
				var n = Object.prototype.toString.call(t)
					.slice(8, -1);
				"Object" === n && t.constructor && (n = t.constructor.name);
				if ("Map" === n || "Set" === n) return Array.from(t);
				if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Ko(t, e)
			}(t)) || e && t && "number" == typeof t.length) {
				n && (t = n);
				var r = 0,
					i = function() {};
				return {
					s: i,
					n: function() {
						return r >= t.length ? {
							done: !0
						} : {
							done: !1,
							value: t[r++]
						}
					},
					e: function(t) {
						throw t
					},
					f: i
				}
			}
			throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
		}
		var o, a = !0,
			s = !1;
		return {
			s: function() {
				n = n.call(t)
			},
			n: function() {
				var t = n.next();
				return a = t.done, t
			},
			e: function(t) {
				s = !0, o = t
			},
			f: function() {
				try {
					a || null == n.return || n.return()
				} finally {
					if (s) throw o
				}
			}
		}
	}

	function Ko(t, e) {
		(null == e || e > t.length) && (e = t.length);
		for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
		return r
	}
	var Qo = function() {
		function t(t) {
			var e = this;
			this.name = "PanoOverlayManager", this.overlays = [], this.pano = void 0, this.isReady = !1, this.clickChecker = function(t, n) {
				var r, i = !0,
					o = Xo(e.overlays);
				try {
					for (o.s(); !(r = o.n())
						.done;) {
						var a = r.value,
							s = a.dom.getBoundingClientRect(),
							u = s.left,
							h = s.right,
							c = s.top,
							l = s.bottom;
						if (t >= u && t <= h && n >= c && n <= l) {
							i = !1, a.handleClick();
							break
						}
					}
				} catch (t) {
					o.e(t)
				} finally {
					o.f()
				}
				return i
			}, this.pano = t
		}
		var e = t.prototype;
		return e.handleAdd = function(t) {
			t && t.id && (this.overlays.some((function(e) {
				return e.id === t.id
			})) || (this.overlays.push(t), this.isReady && t.init(this.pano)))
		}, e.handleRemove = function(t) {
			for (var e = 0; e < this.overlays.length; e++)
				if (this.overlays[e].id === t.id) return this.overlays[e].remove(), void this.overlays.splice(e, 1)
		}, e.init = function() {
			this.isReady = !0;
			var t, e = Xo(this.overlays);
			try {
				for (e.s(); !(t = e.n())
					.done;) {
					t.value.init(this.pano)
				}
			} catch (t) {
				e.e(t)
			} finally {
				e.f()
			}
		}, e.draw = function() {
			if (this.isReady) {
				var t, e = Xo(this.overlays);
				try {
					for (e.s(); !(t = e.n())
						.done;) {
						t.value.draw()
					}
				} catch (t) {
					e.e(t)
				} finally {
					e.f()
				}
			}
		}, e.destroy = function() {
			var t, e = Xo(this.overlays);
			try {
				for (e.s(); !(t = e.n())
					.done;) {
					t.value.remove()
				}
			} catch (t) {
				e.e(t)
			} finally {
				e.f()
			}
			this.overlays = []
		}, t
	}();

	function Jo(t, e) {
		var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
		if (!n) {
			if (Array.isArray(t) || (n = function(t, e) {
				if (!t) return;
				if ("string" == typeof t) return $o(t, e);
				var n = Object.prototype.toString.call(t)
					.slice(8, -1);
				"Object" === n && t.constructor && (n = t.constructor.name);
				if ("Map" === n || "Set" === n) return Array.from(t);
				if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return $o(t, e)
			}(t)) || e && t && "number" == typeof t.length) {
				n && (t = n);
				var r = 0,
					i = function() {};
				return {
					s: i,
					n: function() {
						return r >= t.length ? {
							done: !0
						} : {
							done: !1,
							value: t[r++]
						}
					},
					e: function(t) {
						throw t
					},
					f: i
				}
			}
			throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
		}
		var o, a = !0,
			s = !1;
		return {
			s: function() {
				n = n.call(t)
			},
			n: function() {
				var t = n.next();
				return a = t.done, t
			},
			e: function(t) {
				s = !0, o = t
			},
			f: function() {
				try {
					a || null == n.return || n.return()
				} finally {
					if (s) throw o
				}
			}
		}
	}

	function $o(t, e) {
		(null == e || e > t.length) && (e = t.length);
		for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
		return r
	}
	var ta = function() {
			function t(t) {
				var e = this;
				this.renderer = void 0, this.gl = void 0, this.camera = void 0, this.cameraNoFix = null, this.panoData = null, this.scene = void 0, this.sceneChange = void 0, this.openingAni = void 0, this.sphereRender = void 0, this.linkGLRender = void 0, this.overlayManager = void 0, this.skyboxRender = void 0, this.pano = void 0, this.renderThreadId = null, this.requestId = null, this.isRAFRuning = !1, this.setData = function() {
					var t = et(it.mark((function t(n) {
						var r, o;
						return it.wrap((function(t) {
							for (;;) switch (t.prev = t.next) {
								case 0:
									if (n) {
										t.next = 2;
										break
									}
									return t.abrupt("return");
								case 2:
									if (!e.panoData || !e.pano.useAnimation) {
										t.next = 8;
										break
									}
									return e.sceneChange.setData(e.panoData, n), t.next = 6, e.sceneChange.sceneChangeHandler();
								case 6:
									void 0 !== e.pano.backupUseAnimation && (e.pano.useAnimation = e.pano.backupUseAnimation), e.pano.animationType = "";
								case 8:
									e.reset(), e.panoData = n, e.pano.panoData = n, void 0 === i(n.defaultHeading) && void 0 === i(n.defaultPitch) || e.pano.handlePovChange({
											heading: n.defaultHeading,
											pitch: n.defaultPitch
										}), r = n.image && 6 === n.image.length, (o = r ? e.skyboxRender : e.sphereRender)
										.setData(n), e.linkGLRender.setData(n), e.overlayManager.init(), e.scene.add(o.meshs), e.updateProjectionMatrix(e.camera), e.updateCameraHeadingAndPitch(e.camera);
								case 20:
								case "end":
									return t.stop()
							}
						}), t)
					})));
					return function(e) {
						return t.apply(this, arguments)
					}
				}(), this.getSnapshot = function(t, n) {
					t = t || e.scene, n = n || e.camera;
					var r = e.pano.getContainerSize(),
						i = r.width,
						o = r.height,
						a = new zi(i, o);
					return a.premultiplyAlpha = !0, e.renderer.render(t, n, a), a
				}, this.update = function() {
					e.panoData && (e.sphereRender.update(), e.linkGLRender.update(), e.startRenderThread())
				}, this.onThumbLoaded = function() {
					e.sceneChange.changeAni && e.sceneChange.changeAni.start();
					var t = e.linkGLRender.meshs;
					t && e.scene.add(t), e.startFishEyeAni()
				}, this.startRenderThread = function() {
					var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 100;
					e.renderThreadId && (clearTimeout(e.renderThreadId), e.renderThreadId = null), e.renderThreadId = window.setTimeout((function() {
						e.isRAFRuning = !1, e.renderThreadId = null
					}), t), e.isRAFRuning || (e.isRAFRuning = !0, e.renderFrame())
				}, this.resize = function() {
					var t = e.pano.getContainer();
					e.renderer.setSize(t.clientWidth, t.clientHeight)
				};
				var n = window.devicePixelRatio || 1,
					r = t.getContainer();
				this.pano = t, this.renderer = new ki({
						premultipliedAlpha: !1,
						preserveDrawingBuffer: t.opts.enableCapture || !1,
						antialias: !(n > 1),
						pixelRatio: n,
						width: r.clientWidth,
						height: r.clientHeight
					}), this.renderer.setSize(r.clientWidth, r.clientHeight), t.getPanes()
					.tileLayer.appendChild(this.renderer.domElement), this.gl = this.renderer.getContext(), this.camera = new Xi(75, r.clientWidth / r.clientHeight, .01, 67e3), this.scene = new Kr, t.gl = this.gl, t.canvas = this.renderer.domElement, t.scene = this.scene, t.camera = this.camera, t.cameraNoFix = this.cameraNoFix, t.renderer = this.renderer, t.renders = [], this.sceneChange = new qo(t, this.getSnapshot), this.initModule()
			}
			var e = t.prototype;
			return e.initModule = function() {
				var t = this.pano;
				this.sphereRender = new Ro(t), this.linkGLRender = new Lo(t), this.overlayManager = new Qo(t), this.skyboxRender = new to(t), this.pano.renders.push(this.sphereRender, this.linkGLRender, this.overlayManager, this.skyboxRender)
			}, e.reset = function() {
				this.scene.remove(this.sphereRender.meshs), this.scene.remove(this.linkGLRender.meshs)
			}, e.getModule = function(t) {
				var e, n = null,
					r = Jo(this.pano.renders);
				try {
					for (r.s(); !(e = r.n())
						.done;) {
						var i = e.value;
						if (i.name === t) {
							n = i;
							break
						}
					}
				} catch (t) {
					r.e(t)
				} finally {
					r.f()
				}
				return n
			}, e.renderFrame = function() {
				!1 !== this.isRAFRuning ? (this.openingAni && this.openingAni.update(), this.sphereRender.draw(), this.renderer.render(this.scene, this.camera), this.overlayManager.draw(), this.sceneChange.draw(), this.requestId = requestAnimationFrame(this.renderFrame.bind(this))) : this.requestId && (cancelAnimationFrame(this.requestId), this.requestId = null)
			}, e.startFishEyeAni = function() {
				var t = this;
				this.pano.fisheye && (this.openingAni = new Yo(this.pano, {
					handleEnd: function() {
						t.openingAni = null, t.pano.fisheye = !1
					}
				}), setTimeout((function() {
					t.openingAni.start(), t.startRenderThread()
				}), p.FISHEYE_DELAY))
			}, e.updateProjectionMatrix = function(t, e) {
				var n = this.pano.getFov(e),
					r = this.pano.getContainerSize(),
					i = r.width / r.height;
				t.fov = n, t.aspect = i, t.updateProjectionMatrix()
			}, e.updateCameraHeadingAndPitch = function(t) {
				var e = this.pano.getPov(),
					n = e.heading,
					r = e.pitch,
					i = this.panoData,
					o = i.fixHeading,
					a = void 0 === o ? 0 : o,
					s = i.fixPitch,
					u = void 0 === s ? 0 : s,
					h = i.fixRoll,
					c = void 0 === h ? 0 : h;
				t.rotateX(r - u), t.rotateY(-n + a), t.rotateZ(c), t.updateWorldMatrix()
			}, e.safeCall = function(t, e, n) {
				var r = this.getModule(t);
				if (r && r[e]) return r[e].apply(r, n || []);
				throw new Error("[safeCall] get module error => ".concat(t))
			}, o(t, [{
				key: "isCanUpdate",
				get: function() {
					var t = this.sceneChange.changeAni,
						e = this.openingAni;
					return this.panoData && !(t || e)
				}
			}]), t
		}(),
		ea = function() {
			function t(t) {
				var e = this;
				this.updateAnglePerPixel = function() {
					e._anglePerPixel = e._pano.calcAnglePerPixel()
				}, this.destroy = function() {
					e.bindEvent(!1)
				}, this._pano = t, this._displayZoom = t.getZoom(), this._anglePerPixel = t.calcAnglePerPixel(), this.lock = !1, this.clickTimer = null, this.dragAni = null, this.state = {
					initPos: null,
					initHeading: 0,
					initPitch: 0,
					lastDiffPos: null,
					moveDiffPos: null,
					isTouchDown: !1,
					isTouchMove: !1,
					startTime: 0,
					lastMoveTime: 0
				}
			}
			var e = t.prototype;
			return e.init = function() {
				this._initialized || (this._initialized = !0, this.isMobile = navigator.userAgent.toLowerCase()
					.match(/ipod|ipad|iphone|android/), this.isMobile ? (this.EVENTS = {
						START: "touchstart",
						MOVING: "touchmove",
						END: "touchend",
						OUT: "touchcancel",
						WHEEL: "gesturechange",
						DOMMouseScroll: "DOMMouseScroll"
					}, this.getPagePosition = function(t) {
						var e = t.touches.length > 0 ? t.touches[0] : t.changedTouches[0];
						return {
							x: e.pageX,
							y: e.pageY
						}
					}) : (this.EVENTS = {
						START: "mousedown",
						MOVING: "mousemove",
						END: "mouseup",
						OUT: "mouseout",
						WHEEL: "mousewheel"
					}, this.getPagePosition = function(t) {
						return {
							x: t.pageX,
							y: t.pageY
						}
					}), this.bindEvent())
			}, e.bindEvent = function() {
				var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
					e = document.body,
					n = this.EVENTS,
					r = n.START,
					i = n.MOVING,
					o = n.END,
					a = this._pano._svContainer,
					s = t ? "addEventListener" : "removeEventListener";
				a[s](r, this.handleDown.bind(this)), a[s](i, this.handleMove.bind(this)), e[s](o, this.handleUp.bind(this))
			}, e.handleDown = function(t) {
				this.dragAni && this.dragAni.stop();
				var e = this.state,
					n = this.getPagePosition(t),
					r = this._pano.getPov();
				e.initPos = n, e.isTouchDown = !0, e.initHeading = r.heading, e.initPitch = r.pitch, e.startTime = x(), this._pano.dispatchEvent(d.TOUCH_START, t)
			}, e.handleMove = function(t) {
				if (this.state.isTouchDown) {
					this.state.isTouchMove = !0;
					var e = this.calcDiffPos(this.state.initPos, this.getPagePosition(t));
					this.setPov(e), this.state.moveDiffPos = e, this.state.lastDiffPos = e, this.state.lastMoveTime = x(), t.preventDefault(), t.stopPropagation()
				}
			}, e.handleUp = function(t) {
				var e = this;
				if (this.state.isTouchDown) {
					var n = !0,
						r = this.getPagePosition(t);
					if (t.pos = r, this.state.isTouchDown = !1, this._pano.dispatchEvent(d.TOUCH_END, t), this._pano.renders.length)
						for (var i = 0; i < this._pano.renders.length; i++) {
							var o = this._pano.renders[i];
							if (o.clickChecker && !(n = o.clickChecker(r.x, r.y))) {
								t.stopPropagation();
								break
							}
						}
					if (!1 !== n)
						if (this.state.isTouchMove) this.state.isTouchMove = !1, this.processMotion(t);
						else if (t.stopPropagation(), this.clickTimer) clearTimeout(this.clickTimer), this.clickTimer = null, this._pano.dispatchEvent(d.DOUBLE_CLICK, t);
					else {
						this.clickTimer = setTimeout((function() {
							e.clickTimer = null, e._pano.dispatchEvent(d.CLICK, t)
						}), 300)
					}
				}
			}, e.setPov = function(t) {
				var e = t.x,
					n = t.y,
					r = -e * this._anglePerPixel,
					i = n * this._anglePerPixel,
					o = this.state.initHeading + r,
					a = this.state.initPitch + i;
				this._pano.setPov({
					heading: o,
					pitch: a
				})
			}, e.processMotion = function(t) {
				var e = this,
					n = this.state,
					r = x(),
					i = r - n.lastMoveTime,
					o = n.moveDiffPos,
					a = o.x,
					s = o.y;
				if (i < 300 && (Math.abs(a) > 10 || Math.abs(s) > 10)) {
					var u = this.calcDiffPos(this.state.initPos, this.getPagePosition(t)),
						h = 2 * Math.sqrt(Math.pow(u.x, 2) + Math.pow(u.y, 2)) / (.008 * (r - n.startTime)),
						c = [u.x > 0 ? 1 : -1, u.y > 0 ? 1 : -1],
						l = Math.abs(u.x),
						f = Math.abs(u.y),
						p = Math.atan2(f, l),
						v = Math.cos(p) * h,
						m = Math.sin(p) * h; - 1 === c[0] && (v = -v), -1 === c[1] && (m = -m), this.dragAni && this.dragAni.stop();
					var g = this._pano.getPov(),
						y = g.heading,
						_ = g.pitch;
					n.initHeading = y, n.initPitch = _;
					this.dragAni = new uo(0, 1, 400, (function(t) {
							return .3125 * t - .15625 * t * t
						}))
						.onUpdate((function(t) {
							var n = (t *= 6.4) * v,
								r = t * m;
							e.setPov({
								x: n,
								y: r
							})
						}))
						.onEnd((function() {
							e.dragAni = null, e._pano.dispatchEvent({
								type: d.POV_CHANGED_END
							})
						}))
						.startAndAutoUpdate()
				} else this._pano.dispatchEvent({
					type: d.POV_CHANGED_END
				})
			}, e.calcDiffPos = function(t, e) {
				return t && e ? {
					x: e.x - t.x,
					y: e.y - t.y
				} : {
					x: 0,
					y: 0
				}
			}, t
		}();

	function na(t, e) {
		var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
		if (!n) {
			if (Array.isArray(t) || (n = function(t, e) {
				if (!t) return;
				if ("string" == typeof t) return ra(t, e);
				var n = Object.prototype.toString.call(t)
					.slice(8, -1);
				"Object" === n && t.constructor && (n = t.constructor.name);
				if ("Map" === n || "Set" === n) return Array.from(t);
				if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ra(t, e)
			}(t)) || e && t && "number" == typeof t.length) {
				n && (t = n);
				var r = 0,
					i = function() {};
				return {
					s: i,
					n: function() {
						return r >= t.length ? {
							done: !0
						} : {
							done: !1,
							value: t[r++]
						}
					},
					e: function(t) {
						throw t
					},
					f: i
				}
			}
			throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
		}
		var o, a = !0,
			s = !1;
		return {
			s: function() {
				n = n.call(t)
			},
			n: function() {
				var t = n.next();
				return a = t.done, t
			},
			e: function(t) {
				s = !0, o = t
			},
			f: function() {
				try {
					a || null == n.return || n.return()
				} finally {
					if (s) throw o
				}
			}
		}
	}

	function ra(t, e) {
		(null == e || e > t.length) && (e = t.length);
		for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
		return r
	}
	var ia = function() {
		function t(t) {
			this.pano = t, this.preZoom = t.getZoom(), this.zoomChangeAni = null, this.debug = !1, this.panoServiceLock = !1, this.bindEvent(), this.initModule(), this.initResize(), this.handleContextStatus()
		}
		var e = t.prototype;
		return e.initModule = function() {
			var t = this.pano;
			this.panoService = new $(t), this.panoGLRender = new ta(t), this.op = new ea(t)
		}, e.initResize = function() {
			var t = this,
				e = this.pano.getContainerSize(),
				n = this.pano.getContainer(),
				r = function(n, r) {
					if (n && r) {
						var i = new l(n, r);
						i.equals(e) || (t.pano.dispatchEvent({
							type: d.SIZE_CHANGED
						}), e = i)
					}
				};
			if (void 0 !== window.ResizeObserver) {
				var i = new window.ResizeObserver((function(t) {
					var e, n = na(t);
					try {
						for (n.s(); !(e = n.n())
							.done;) {
							var i = e.value.target;
							r(i.clientWidth, i.clientHeight)
						}
					} catch (t) {
						n.e(t)
					} finally {
						n.f()
					}
				}));
				i.observe(n), this.resizeOb = i
			} else this.checkSizeTimer = setInterval((function() {
				r(n.clientWidth, n.clientHeight)
			}), 80)
		}, e.bindEvent = function() {
			var t = this,
				e = this.pano;
			e.on(d.PANO_ERROR, (function() {
				t.panoServiceLock = !1
			})), e.on(d.DATA_LOADED, (function(n) {
				t.pano.opts.visible ? t.pano.show() : t.pano.hide(), t.panoServiceLock = !1, n.options && n.options.animation && (e.backupUseAnimation = e.useAnimation, e.useAnimation = n.options.animation, "" !== n.options.animationType && (e.animationType = n.options.animationType)), t.panoGLRender.setData(n.data), t.op.init()
			})), e.on(d.SET_POV, (function(n) {
				var r = n.pov,
					i = n.options,
					o = (void 0 === i ? {
						animation: !0
					} : i)
					.animation;
				if (t.panoGLRender.isCanUpdate) {
					var a = function(n) {
						e.handlePovChange(n) && (t.panoGLRender.updateCameraHeadingAndPitch(e.camera), t.panoGLRender.update(), e.dispatchEvent(d.POV_CHANGED, n))
					};
					if (o) {
						var s = e.getPov(),
							u = s.heading,
							h = s.pitch,
							c = r.heading - u,
							l = r.pitch - h;
						c > 180 ? (u += 360, c = r.heading - u) : c < -180 && (u -= 360, c = r.heading - u), new uo(0, 1, 400, ao["ease-out"])
							.onUpdate((function(t) {
								a({
									heading: u + t * c,
									pitch: h + t * l
								})
							}))
							.onEnd((function() {}))
							.startAndAutoUpdate()
					} else a(r)
				} else e.handlePovChange(r)
			})), e.on(d.ZOOM_CHANGED, (function() {
				var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
				if (t.panoGLRender.isCanUpdate) {
					var r = t.preZoom,
						i = e.getZoom();
					if (r !== i) {
						var o = n.noAnimation || !1;
						if (t.zoomChangeAni && (t.zoomChangeAni.stop(), t.zoomChangeAni = null), o) return t.op.updateAnglePerPixel(), t.panoGLRender.updateProjectionMatrix(e.camera), t.panoGLRender.update(), void(t.preZoom = i);
						var a = 400;
						t.zoomChangeAni = new uo(r, i, a, ao.easeOutCubic)
							.onUpdate((function(n) {
								t.panoGLRender.updateProjectionMatrix(e.camera, n), t.panoGLRender.update(n)
							}))
							.onEnd((function() {
								t.zoomChangeAni = null, t.preZoom = i
							}))
							.startAndAutoUpdate()
					}
				}
			})), e.on(d.DOUBLE_CLICK, (function() {
				t.panoGLRender.isCanUpdate && (v.isMobile && (3 === e.getZoom() ? e.setZoom(2) : e.setZoom(3)))
			})), e.on(d.REFRESH, (function(e) {
				var n = e.duration || 200;
				t.panoGLRender.startRenderThread(n), t.debug && e.log && e.debug && console.warn(e.log)
			})), e.on(d.SET_ID, (function(e) {
				if (!t.panoServiceLock && e.id) {
					t.panoServiceLock = !0, window.getPanoById = t.panoService.getPanoById;
					var n = (1e5 * Math.random())
						.toFixed(0);
					BMapGL._rd = BMapGL._rd || {}, BMapGL._rd["_cbk" + n] = function(t) {
						t && void 0 !== t.error && 0 === t.error ? window.getPanoById(e.id) : K("PANORAMA"), delete BMapGL._rd["_cbk" + n]
					}, X("PANORAMA", "BMapGL._rd._cbk" + n)
				}
			})), e.on(d.SET_POSITION, (function(e) {
				if (!t.panoServiceLock && e.point) {
					t.panoServiceLock = !0, window.getPanoByLocation = t.panoService.getPanoByLocation;
					var n = (1e5 * Math.random())
						.toFixed(0);
					BMapGL._rd = BMapGL._rd || {}, BMapGL._rd["_cbk" + n] = function(t) {
						t && void 0 !== t.error && 0 === t.error ? window.getPanoByLocation(e.point) : K("PANORAMA"), delete BMapGL._rd["_cbk" + n]
					}, X("PANORAMA", "BMapGL._rd._cbk" + n)
				}
			})), e.on(d.SIZE_CHANGED, (function() {
				t.op.updateAnglePerPixel(), t.panoGLRender.resize(), t.panoGLRender.updateProjectionMatrix(e.camera), t.panoGLRender.update()
			})), e.on(d.THUMB_LOADED, (function() {
				t.panoGLRender.onThumbLoaded(), t.panoGLRender.update()
			})), e.on(d.OVERLAY_ADD, (function(e) {
				t.panoGLRender.overlayManager.handleAdd(e)
			})), e.on(d.OVERLAY_REMOVE, (function(e) {
				t.panoGLRender.overlayManager.handleRemove(e)
			})), e.on(d.OVERLAYS_CLEAR, (function() {
				t.panoGLRender.overlayManager.destroy()
			})), e.on(d.LINK_VISIBLE_CHANGE, (function(e) {
				"boolean" == typeof e.value && (t.panoGLRender.safeCall("PanoLinkRender", "setVisible", [e.value]), t.pano.dispatchEvent(d.REFRESH))
			})), e.on(d.DESTROY, (function() {
				t.op.destroy(), t.resizeOb && t.resizeOb.disconnect(), t.checkSizeTimer && clearInterval(t.checkSizeTimer), t.panoGLRender.renderer.forceContextLoss(), e.canvas.removeEventListener("webglcontextlost", t.onWebGLContextLost, !1)
			}));
			var n = v.isFirefox ? "DOMMouseScroll" : "mousewheel",
				r = new Date;
			e._svContainer.addEventListener(n, (function(t) {
				if (e.opts.enableScrollWheelZoom && e.opts.visible) {
					var n = new Date;
					if (n - r < 400) return;
					r = n;
					var i = -t.detail / 3 || t.wheelDelta / 120,
						o = e.getZoom() + i;
					e.setZoom(o), t.preventDefault()
				}
			}))
		}, e.getImgZoom = function() {
			return this.pano.calcDisplayZoom()
				.imgZoom
		}, e.handleContextStatus = function() {
			this.pano.canvas.addEventListener("webglcontextlost", this.onWebGLContextLost, !1)
		}, e.onWebGLContextLost = function(t) {
			t.preventDefault(), setTimeout((function() {
				window.location.reload()
			}), 200)
		}, t
	}();

	function oa(t, e, n) {
		t.addEventListener(e, n, !1)
	}
	var aa = function(t) {
			function e(e, n) {
				var r;
				(r = t.call(this) || this)
				.panoData = null, r.opts = void 0, r.useAnimation = !1, r.backupUseAnimation = r.useAnimation, r.animationType = "", r.fisheye = !1, r.canvas = void 0, r.camera = void 0, r.renderer = void 0, r.gl = void 0, r.scene = void 0, r.cameraNoFix = void 0, r.renders = void 0, r.closeBtn = null, r.navigator = null, r._container = void 0, r._pov = {
					heading: 0,
					pitch: 0
				}, r._id = null, r._position = null, r._zoom = 2, r._displayZoomResultsCache = {}, r._svContainer = void 0, r._eventManager = void 0, r._panes = void 0, r.addCloseButton = function(t) {
					var e = r.closeBtn = document.createElement("div");
					e.className = "pano_close", e.style.cssText = ["position:absolute", "right:10px", "top:10px", "padding: 5px 8px;", "cursor:pointer", "border-radius: 4px", "font-size: 14px", "background-color: rgba(0,0,0,.55)", "z-index: 99", "color: #fff"].join(";"), e.innerText = "关闭", e.title = "退出全景", e.onclick = function() {
						r.hide(), t && t()
					}, r._svContainer.appendChild(e)
				}, r.getContainer = function() {
					return r._container
				}, r.getContainerSize = function() {
					var t = r._container;
					return new l(t.clientWidth, t.clientHeight)
				}, r.getPanes = function() {
					return r._panes
				}, r.show = function() {
					r.opts.visible = !0, w.show(r._svContainer)
				}, r.hide = function() {
					r.opts.visible = !1, w.hide(r._svContainer)
				}, r.getZoom = function() {
					return r._zoom
				}, r.setZoom = function(t) {
					var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
					t !== r._zoom && (t > p.MAX_ZOOM && (t = p.MAX_ZOOM), t < p.MIN_ZOOM && (t = p.MIN_ZOOM), t !== r._zoom && (r._zoom = t, r.dispatchEvent(d.ZOOM_CHANGED, {
						noAnimation: e.noAnimation || !1
					})))
				}, r.getPov = function() {
					return r._pov
				}, r.setPov = function(t, e) {
					r.dispatchEvent(d.SET_POV, {
						pov: t,
						options: e || {
							animation: !1
						}
					})
				}, r.handlePovChange = function(t) {
					if ("object" === i(t)) {
						var e = !1,
							n = t.heading,
							o = t.pitch;
						if ("number" != typeof n || isNaN(n) || (e = !0, n = _(n), r._pov.heading = n), "number" == typeof o && !isNaN(n)) {
							e = !0;
							var a = r.opts.minPitch,
								s = r.opts.maxPitch;
							o > s && (o = s), o < a && (o = a), r._pov.pitch = o
						}
						return e
					}
				}, r.calcDisplayZoom = function(t, e) {
					t = t || r.getContainerSize(), e = e || r.getZoom();
					var n = t,
						i = n.width,
						o = n.height,
						a = r.opts.maxImageZoom,
						s = r.opts.minImageZoom,
						u = "".concat(i, "_")
						.concat(o, "_")
						.concat(e);
					if (r._displayZoomResultsCache[u]) return r._displayZoomResultsCache[u];
					for (var h = r.calcAnglePerPixel(), c = Math.floor(e) + 2, l = 360 / (2 * Math.pow(2, c - 2) * h); l > 512;) c++, l = 360 / (2 * Math.pow(2, c - 2) * h);
					if (c > a) {
						var f = c - a;
						l *= Math.pow(2, f), c = a
					}
					c < s && (c = s);
					var d = {
						imgZoom: c,
						displayTileSize: l = Math.round(l)
					};
					return r._displayZoomResultsCache[u] = d, d
				}, r.calcAnglePerPixel = function() {
					return r.getFov() / r.getContainerSize()
						.height
				}, r.getFov = function(t) {
					return t = t || r.getZoom(), (v.isMobile ? r.calcMobileFovy : r.calcPCFovy)
						.call(a(r), t)
				}, r.getVisible = function() {
					return r.opts.visible
				}, r.setId = function(t) {
					var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
					r.useAnimation = e.animation || !1, r.fisheye = e.fisheye || !1, r.animationType = e.animationType || "", r.dispatchEvent(d.SET_ID, {
						id: t
					})
				}, r.setPosition = function(t) {
					var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
					r.useAnimation = e.animation || !1, r.fisheye = e.fisheye || !1, r.animationType = e.animationType || "", r.dispatchEvent(d.SET_POSITION, {
						point: t
					})
				};
				var o = {
					minImageZoom: p.TILE_MIN_ZOOM,
					maxImageZoom: p.TILE_MAX_ZOOM,
					minPitch: p.MIN_PITCH,
					maxPitch: p.MAX_PITCH,
					radius: p.RADIUS,
					tileBaseUrls: p.TILE_BASE_URLS,
					linksControl: !0,
					navigationControl: !0,
					enableScrollWheelZoom: !0,
					enableCapture: !1,
					visible: !0
				};
				r.opts = Object.assign({}, o, n);
				var s = "string" == typeof e ? document.querySelector(e) : e;
				if (!s) throw new Error("全景引擎宿主容器不存在");
				return r._container = s, r._init(), r
			}
			c(e, t);
			var n = e.prototype;
			return n.getPosition = function() {
				return this.position
			}, n.setOptions = function(t) {
				var e;
				for (e in t)
					if (Object.prototype.hasOwnProperty.call(t, e)) {
						var n = !0;
						if ("object" !== i(t[e]) && (n = t[e] !== this.opts[e]), this.opts[e] = t[e], !n) continue;
						switch (e) {
							case "linksControl":
								this.dispatchEvent(d.LINK_VISIBLE_CHANGE, {
									value: t[e]
								});
								break;
							case "navigationControl":
								var r = !!t[e],
									o = this.navigator;
								r ? o.show() : o.hide()
						}
					}
			}, n.capture = function() {
				var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
				if (this.canvas) {
					var e = this.canvas,
						n = t.quality || .8,
						r = t.type || "image/jpeg",
						i = e.toDataURL(r, n);
					return i
				}
			}, n.addOverlay = function(t) {
				this.dispatchEvent(d.OVERLAY_ADD, t)
			}, n.removeOverlay = function(t) {
				this.dispatchEvent(d.OVERLAY_REMOVE, t)
			}, n.clearOverlays = function() {
				this.dispatchEvent(d.OVERLAYS_CLEAR)
			}, n.destroy = function() {
				this.dispatchEvent(d.DESTROY)
			}, n._init = function() {
				this._createDoms(), this.navigator = function(t) {
					function e(t) {
						this._initialize(t)
					}
					return m(e.prototype, {
						_initialize: function(t) {
							this._pano = t, this.imgPath = t.opts.imgPath || "//api0.map.bdimg.com/images/", this._zoomInEnabled = !0, this._zoomOutEnabled = !0, this._render(), this._bind()
						},
						_render: function() {
							this._container = w.create("div");
							var t = this._container.style;
							t.position = "absolute", t.left = "10px", t.top = "10px", t.zIndex = 99;
							var e = this._container;
							e.innerHTML = this._generateHtml(), v.isPc ? (this._panBtnContainer = e.children[2], this._panBtns = [this._panBtnContainer.children[0], this._panBtnContainer.children[1], this._panBtnContainer.children[2], this._panBtnContainer.children[3]], this._svgDirGroup = e.children[1].childNodes[0], this._zoomContainer = e.children[3]) : v.isMobile && (this._zoomContainer = e.children[0]), this._btnZoomIn = this._zoomContainer.children[0], this._btnZoomOut = this._zoomContainer.children[1], v.isMobile && (this._zoomContainer.style.left = this._zoomContainer.style.top = "0", this._zoomContainer.style.width = "36px", this._zoomContainer.style.height = "78px", this._btnZoomIn.style.width = this._btnZoomOut.style.width = "33px", this._btnZoomIn.style.height = this._btnZoomOut.style.height = "36px", this._btnZoomOut.style.top = "37.5px"), this._pano.getZoom() >= p.MAX_ZOOM && this._setZoomBtnEnabled("zoomIn", !1), this._pano.getZoom() <= p.MIN_ZOOM && this._setZoomBtnEnabled("zoomOut", !1), this._pano._svContainer.appendChild(e)
						},
						_generateHtml: function() {
							var t = [];
							return v.isPc && (t.push(this._generatePanHtml()), t.push(this._generateDirHtml()), t.push(this._generatePanBtnHtml())), t.push(this._generateZoomContainerHtml()), t.join("")
						},
						_generateDirHtml: function() {
							return '<svg version="1.1" overflow="hidden" width="82px" height="82px" viewBox="0 0 82 82"style="position: absolute; top: 0px; left: 0px;"><g transform="rotate(0, 41, 41)"><rect x="33"y="1" width="14" height="12" rx="4" ry="4" stroke="#868685" stroke-width="1" fill="#f8f8f8"></rect><polyline points="37.5,9.5 37.5,3.5 42.5,9.5 42.5,3.5" stroke-linejoin="bevel" stroke-width="1.5" fill="#f2f4f6" stroke="#868685"></polyline></g></svg>'
						},
						_generatePanHtml: function() {
							return '<div style="position:absolute;top:4px;left:4px;width:74px;height:74px;background:url(' + this.imgPath + 'st-navictrl.png) no-repeat;-webkit-user-select:none;overflow:hidden"><div></div></div>'
						},
						_generatePanBtnHtml: function() {
							return '<div style="position:absolute;top:0px;left:0;width:82px;height:82px;user-select:none;"><div style="position:absolute;left:32px;top:13px;cursor:pointer;width:17px;height:17px;" title="向上平移"></div><div style="position:absolute;left:14px;top:32px;cursor:pointer;width:17px;height:17px;" title="向左平移"></div><div style="position:absolute;left:51px;top:32px;cursor:pointer;width:17px;height:17px;" title="向右平移"></div><div style="position:absolute;left:33px;top:51px;cursor:pointer;width:17px;height:17px;" title="向下平移"></div></div>'
						},
						_generateZoomContainerHtml: function() {
							var t = "background-image:url('" + this.imgPath + "st-navictrl.png');background-repeat:no-repeat;background-position:-74px 0;";
							return v.isMobile && (t = "background-image:url('" + this.imgPath + "st-navictrl-hd.png');background-repeat:no-repeat;background-position:0 0;background-size:180px 78px;"), '<div style="position:absolute;top:84px;left:30px;width:24px;height:52px;' + t + '-webkit-user-select:none;overflow:hidden"><div style="position:absolute;cursor:pointer;width:22px;height:24px;top:0;left:0;-webkit-user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0)" title="放大一级"></div><div style="position:absolute;cursor:pointer;width:22px;height:24px;top:25px;left:0;-webkit-user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0)" title="缩小一级"></div><div></div></div>'
						},
						_bind: function() {
							var t = this._pano,
								e = this;
							if (v.isPc) {
								oa(this._panBtns[0], "click", (function() {
									var e = t.getPov();
									t.setPov({
										heading: e.heading,
										pitch: e.pitch + 30
									}, {
										animation: !0
									})
								})), oa(this._panBtns[1], "click", (function() {
									var e = t.getPov();
									t.setPov({
										heading: e.heading - 45,
										pitch: e.pitch
									}, {
										animation: !0
									})
								})), oa(this._panBtns[2], "click", (function() {
									var e = t.getPov();
									t.setPov({
										heading: e.heading + 45,
										pitch: e.pitch
									}, {
										animation: !0
									})
								})), oa(this._panBtns[3], "click", (function() {
									var e = t.getPov();
									t.setPov({
										heading: e.heading,
										pitch: e.pitch - 30
									}, {
										animation: !0
									})
								}));
								for (var n = 0; n < this._panBtns.length; n++) oa(this._panBtns[n], "mousedown", (function(t) {
									t.stopPropagation()
								}));
								e._mousedown = !1, oa(this._panBtnContainer, "mousedown", (function(n) {
									e._mousedown = !0, e._panBtnContainer.style.cursor = "grabbing", e._startHeading = e._calcAngle(n), e._curHeading = t.getPov()
										.heading, n.preventDefault()
								})), oa(document, "mousemove", (function(n) {
									e._mousedown && t.setPov({
										heading: e._curHeading + 360 - (e._calcAngle(n) - e._startHeading),
										pitch: t.getPov()
											.pitch
									})
								})), oa(document, "mouseup", (function() {
									e._mousedown && (e._mousedown = !1, e._panBtnContainer.style.cursor = "grab", e._startHeading = null)
								})), t.addEventListener("position_changed", (function() {
									var t = 360 - this.getPov()
										.heading;
									e._svgDirGroup.setAttribute("transform", "rotate(" + t + ", 41, 41)")
								})), t.addEventListener("pov_changed", (function() {
									var t = 360 - this.getPov()
										.heading;
									e._svgDirGroup.setAttribute("transform", "rotate(" + t + ", 41, 41)")
								}))
							}
							oa(this._btnZoomIn, "click", (function() {
								t.setZoom(t.getZoom() + 1)
							})), oa(this._btnZoomOut, "click", (function() {
								t.setZoom(t.getZoom() - 1)
							})), v.isPc ? (oa(this._btnZoomIn, "mousedown", (function() {
								e._redrawZoomBtn(e._zoomInEnabled, -98)
							})), oa(this._btnZoomOut, "mousedown", (function() {
								e._redrawZoomBtn(e._zoomOutEnabled, -122)
							})), oa(this._btnZoomIn, "mouseup", (function() {
								e._redrawZoomBtn(e._zoomInEnabled, -74)
							})), oa(this._btnZoomOut, "mouseup", (function() {
								e._redrawZoomBtn(e._zoomOutEnabled, -74)
							}))) : v.isMobile && (oa(this._btnZoomIn, "touchstart", (function() {
								e._redrawZoomBtn(e._zoomInEnabled, -98)
							})), oa(this._btnZoomOut, "touchstart", (function() {
								e._redrawZoomBtn(e._zoomOutEnabled, -122)
							})), oa(this._btnZoomIn, "touchend", (function() {
								e._redrawZoomBtn(e._zoomInEnabled, -74)
							})), oa(this._btnZoomOut, "touchend", (function() {
								e._redrawZoomBtn(e._zoomOutEnabled, -74)
							}))), t.addEventListener("zoom_changed", (function(n) {
								t.getZoom() >= p.MAX_ZOOM ? e._setZoomBtnEnabled("zoomIn", !1) : t.getZoom() <= p.MIN_ZOOM ? e._setZoomBtnEnabled("zoomOut", !1) : (e._setZoomBtnEnabled("zoomIn", !0), e._setZoomBtnEnabled("zoomOut", !0))
							}))
						},
						_redrawZoomBtn: function(t, e) {
							t && (v.isMobile && (e = (e + 74) / 24 * 36), this._zoomContainer.style.backgroundPosition = e + "px 0")
						},
						show: function() {
							this._container.style.display = ""
						},
						hide: function() {
							this._container.style.display = "none"
						},
						_calcAngle: function(t) {
							var e = (t = window.event || t)
								.pageX || t.clientX,
								n = t.pageY || t.clientY,
								r = this._pano.getContainer()
								.getBoundingClientRect();
							e = e - r.left - 50, n = -(n - r.top - 50);
							var i = Math.atan2(n, e) / Math.PI * 180;
							return i < 90 ? 90 - i : 450 - i
						},
						_setZoomBtnEnabled: function(t, e) {
							if ("zoomIn" === t)
								if (e) {
									this._zoomInEnabled = !0, this._btnZoomIn.style.cursor = "pointer";
									var n = -74;
									v.isMobile && (n = 0), this._zoomContainer.style.backgroundPosition = n + "px 0"
								} else {
									this._zoomInEnabled = !1, this._btnZoomIn.style.cursor = "";
									var r = -170;
									v.isMobile && (r = -144), this._zoomContainer.style.backgroundPosition = r + "px 0"
								} if ("zoomOut" === t)
								if (e) {
									this._zoomOutEnabled = !0, this._btnZoomOut.style.cursor = "pointer";
									var i = -74;
									v.isMobile && (i = 0), this._zoomContainer.style.backgroundPosition = i + "px 0"
								} else {
									this._zoomOutEnabled = !1, this._btnZoomOut.style.cursor = "";
									var o = -146;
									v.isMobile && (o = -108), this._zoomContainer.style.backgroundPosition = o + "px 0"
								}
						}
					}), new e(t)
				}(this), this._eventManager = new ia(this)
			}, n._createDoms = function() {
				var t = this._container,
					e = w.create("div"),
					n = e.style;
				n.overflow = "hidden", n.position = "absolute", n.zIndex = "20", n.top = n.left = "0px", n.height = n.width = "100%", n.backgroundColor = "#e5e3df", n.display = "none", n.cursor = "grab", e.addEventListener("mousedown", (function() {
						return n.cursor = "grabbing"
					})), e.addEventListener("mouseup", (function() {
						return n.cursor = "grab"
					})), this._svContainer = e, this._panes = {
						tileLayer: this._createContainer("1"),
						maskLayer: this._createContainer("2"),
						linksLayer: this._createContainer("3"),
						overlayLayer: this._createContainer("4"),
						effectLayer: this._createContainer("5")
					}, e.appendChild(this._panes.tileLayer), e.appendChild(this._panes.linksLayer), e.appendChild(this._panes.overlayLayer), e.appendChild(this._panes.effectLayer), b() || (e.appendChild(this._panes.maskLayer), this._panes.maskLayer.style.width = "".concat(t.clientWidth, "px"), this._panes.maskLayer.style.height = "".concat(t.clientHeight, "px"), this._panes.maskLayer.style.overflow = "hidden"), t.appendChild(e), "absolute" !== w.getCurrentStyle(t)
					.position && (t.style.position = "relative")
			}, n._createContainer = function(t) {
				var e = w.create("div"),
					n = e.style;
				return n.position = "absolute", n.top = n.left = "0", n.zIndex = t || "0", e
			}, n.calcMobileFovy = function(t) {
				var e = this.getContainerSize(),
					n = e.width,
					r = e.height,
					i = 240 / Math.pow(2, t),
					o = n / 2 / Math.tan(g(i / 2)),
					a = Math.atan2(r / 2, o);
				return 2 * y(a)
			}, n.calcPCFovy = function(t) {
				return 90 - 15 * (t - 1)
			}, o(e, [{
				key: "imageZoom",
				get: function() {
					return this.calcDisplayZoom()
						.imgZoom
				}
			}, {
				key: "panoId",
				get: function() {
					return this.panoData ? this.panoData.panoId : ""
				}
			}, {
				key: "panoNorthDir",
				get: function() {
					return this.panoData ? this.panoData.northDir : 0
				}
			}, {
				key: "position",
				get: function() {
					return this.panoData && "number" == typeof this.panoData.panoX && "number" == typeof this.panoData.panoY ? new f(this.panoData.panoX, this.panoData.panoY) : null
				}
			}]), e
		}(Dr),
		sa = {
			dom: null,
			anchor: null,
			width: null,
			height: null,
			altitude: 2,
			sphereZ: null,
			useUV: !1
		},
		ua = function(t) {
			function e(e) {
				var n, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
				return (n = t.call(this) || this)
					.visible = !0, n.worldCoord = void 0, n.pov = void 0, n.id = n.genId(), n._pano = void 0, n.lastPanoPosition = null, n.initialized = !1, n.position = void 0, n.options = void 0, n.position = e, n.options = Object.assign({}, sa, r), n.pov = null, n
			}
			c(e, t);
			var n = e.prototype;
			return n.getPov = function() {
				return this.pov
			}, n.genId = function() {
				var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 4;
				return Number("".concat(Math.random()
							.toString()
							.substr(3, t))
						.concat(Date.now()))
					.toString(36)
			}, n.init = function(t) {
				t && !this.initialized && (this._pano = t, this.lastPanoPosition = this._pano.position, this.worldCoord = this.options.useUV ? this.calcCoordsByUV() : this.calcCoordsByMC(), this.worldCoord && (this.initialized = !0, this.add(), this.draw()))
			}, n.calcCoordsByMC = function() {
				var t = this._pano.position;
				if (t && this.position) {
					var e, n = this.position,
						r = n.lng - t.lng,
						i = n.lat - t.lat,
						o = Math.atan2(r, i);
					o < 0 && (o += 2 * Math.PI), o = Math.round(y(o));
					var a = 500,
						s = this.options,
						u = s.sphereZ,
						h = s.altitude;
					null === u ? e = 25 * h : (e = u || 0, a = Math.sqrt(Math.pow(r, 2) + Math.pow(i, 2) + Math.pow(e, 2)));
					var c = y(Math.asin(e / a));
					c = c > 90 ? 90 : c < -90 ? -90 : c;
					var l = _(o + this._pano.panoNorthDir),
						f = this.radius,
						d = Math.cos(g(c)) * f;
					d = Math.round(100 * d) / 100;
					var p = Math.cos(g(l)) * d,
						v = Math.sin(g(c)) * f,
						m = Math.sin(g(l)) * d;
					return this.pov = {
						heading: o,
						pitch: c
					}, zt(p, v, m)
				}
			}, n.calcCoordsByUV = function() {
				if (this.position) {
					var t = this.radius,
						e = this.position,
						n = _i(e, 2),
						r = n[0],
						i = n[1],
						o = 2 * r * Math.PI,
						a = (i - .5) * Math.PI,
						s = Math.cos(a) * Math.cos(o) * t,
						u = Math.sin(a) * t,
						h = Math.cos(a) * Math.sin(o) * t;
					return this.pov = {
						heading: _(y(o) - this._pano.panoNorthDir),
						pitch: y(a)
					}, zt(s, u, h)
				}
			}, n.add = function() {
				var t = this.options,
					e = t.width,
					n = t.height;
				if (this.dom) {
					var r = this._pano,
						i = this.dom;
					i.style.position = "absolute", r.getPanes()
						.overlayLayer.appendChild(i), "number" != typeof e && (this.options.width = i.clientWidth), "number" != typeof n && (this.options.height = i.clientHeight), r.dispatchEvent({
							type: "onoverlaydomadded",
							overlay: this
						})
				}
			}, n.remove = function() {
				var t = this.dom;
				t && t.parentNode && t.parentNode.removeChild(t)
			}, n.povToPointGL = function() {
				if (!this.worldCoord) return null;
				var t = this._pano,
					e = t.camera,
					n = t.getContainerSize(),
					r = n.width,
					i = n.height;
				return fo(e, this.worldCoord, r, i)
			}, n.draw = function() {
				if (this.initialized && this.visible && this._pano && this._pano.panoData && this.dom) {
					var t = this.lastPanoPosition,
						e = this._pano.position;
					t.lng === e.lng && t.lat === e.lat || (this.lastPanoPosition = e, this.worldCoord = this.options.useUV ? this.calcCoordsByUV() : this.calcCoordsByMC());
					var n = this.dom,
						r = this.povToPointGL();
					if (n.style.visibility = "hidden", r) {
						var i = this.calcAnchor(),
							o = "".concat(r[0] - i.width, "px"),
							a = "".concat(r[1] - i.height, "px");
						if (isNaN(r[0]) || isNaN(r[1])) return;
						n.style.visibility = "visible", n.style.webkitTransform = "translate(".concat(o, ", ")
							.concat(a, ")"), n.style.transform = "translate(".concat(o, ", ")
							.concat(a, ")")
					}
				}
			}, n.handleClick = function() {
				this.dispatchEvent("click")
			}, n.calcAnchor = function() {
				var t = this.options,
					e = t.anchor,
					n = t.width,
					r = void 0 === n ? 0 : n,
					i = t.height;
				return e || new l(r / 2, (void 0 === i ? 0 : i) / 2)
			}, n.show = function() {
				this.visible = !0, this.dom && (this.dom.style.display = "")
			}, n.hide = function() {
				this.visible = !1, this.dom && (this.dom.style.display = "none")
			}, o(e, [{
				key: "radius",
				get: function() {
					return this._pano ? this._pano.opts.radius : 0
				}
			}, {
				key: "dom",
				get: function() {
					return this.options.dom
				}
			}]), e
		}(Dr),
		ha = function(t) {
			function e(e, n) {
				var r = n.position,
					i = n.altitude,
					o = void 0 === i ? 2 : i,
					a = n.costomStyle,
					s = function(t) {
						var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
							n = document.createElement("div"),
							r = {
								backgroundColor: "rgba(29, 29, 29, 0.8)",
								fontSize: "14px",
								padding: "7px 14px",
								height: "19px",
								color: "#fff",
								whiteSpace: "nowrap",
								borderRadius: "4px"
							};
						return m(n.style, r, e), n.innerText = t, n
					}(e, void 0 === a ? {} : a);
				return t.call(this, r, {
					dom: s,
					altitude: o
				}) || this
			}
			return c(e, t), e
		}(ua);
	t.Converters = vo, t.Engines = Ki, t.EventType = d, t.PanoLabel = ha, t.PanoOverlay = ua, t.PanoramaService = function() {
		var t = this;
		this.getPanoById = function(e, n) {
			var r;
			r = "".concat($.SERVICE_URL, "?qt=sdata&sid=")
				.concat(e, "&")
				.concat(J("/")), t.request(r)
				.then((function(t) {
					n && n(t)
				}))
				.catch((function(t) {
					n && n(null)
				}))
		}, this.getPanoByLocation = function(e, n, r) {
			var i;
			i = "".concat($.SERVICE_URL, "?qt=qsdata&x=")
				.concat(e.lng, "&y=")
				.concat(e.lat)
				.concat(n ? "&r=" + n : "", "&action=1&")
				.concat(J("/")), t.request(i)
				.then((function(t) {
					r && r(t)
				}))
				.catch((function(t) {
					r && r(null)
				}))
		}, this.request = function(t) {
			return E(t, {}, {
				jsonp: "fn"
			})
		}
	}, t.Point = f, t.getPanoControl = function(t, e) {
		var n, r, i, o = (e = e || {})
			.imgPath || "//api.map.baidu.com/images/";

		function a(e) {
			e.call(this), this.defaultAnchor = t.ControlAnchor.TOP_RIGHT, this.defaultOffset = new t.Size(10, 10), this._isOn = !1
		}
		return n = a, r = t.Control, (i = Object.create(r.prototype))
			.constructor = n, n.prototype = i, m(a.prototype, {
				initialize: function(t) {
					return this._map = t, this._render(), this._bind(), this._container
				},
				_render: function() {
					var t = this,
						n = w.create("div");
					n.innerHTML = '<span style="position:relative;top:33px;">全景</span>', n.title = "进入全景", m(n.style, {
						width: "49px",
						height: "51px",
						color: "#565656",
						background: 'url("'.concat(o, 'st-control.png")'),
						position: "absolute",
						cursor: "pointer",
						fontFamily: "arial,sans-serif",
						fontSize: "13px",
						textAlign: "center",
						boxShadow: "0px 0px 3px rgba(0, 0, 0, 0.3)",
						MozBoxShadow: "0px 0px 3px rgba(0, 0, 0, 0.3)",
						WebkitBoxShadow: "0px 0px 3px rgba(0, 0, 0, 0.3)"
					}), this._container = n;
					var r = this._map.getContainer();
					r.appendChild(n);
					var i = {
						visible: !1
					};
					e.imgPath && (i.imgPath = [e.imgPath]), e.tileBaseUrl && (i.tileBaseUrls = [e.tileBaseUrl]), this._pano = new aa(r, i), this._pano.addCloseButton((function() {
						t.isMapEnableWheelZoom && t._map.enableScrollWheelZoom()
					}));
					var a = this._scout = w.create("div");
					m(a.style, {
						position: "absolute",
						width: "24px",
						height: "41px",
						cursor: "pointer",
						backgroundImage: 'url("'.concat(o, 'st-scout.png")'),
						backgroundRepeat: "no-repeat",
						backgroundPosition: "-24px 0",
						overflow: "hidden",
						display: "none",
						zIndex: 11
					}), r.appendChild(a);
					var s = this._infoWindow = w.create("div");
					m(s.style, {
						position: "absolute",
						width: "112px",
						height: "119px",
						backgroundImage: 'url("'.concat(o, 'st-infowindow.gif")'),
						backgroundRepeat: "no-repeat",
						backgroundPosition: "0 0",
						display: "none",
						cursor: "pointer",
						zIndex: 12
					});
					var u = this._thumb = w.create("img");
					s.appendChild(u), u.src = o + "st-noresult.png", m(u.style, {
						width: "100px",
						height: "75px",
						left: "6px",
						top: "6px",
						position: "absolute"
					});
					var h = this._stDescription = w.create("div");
					m(h.style, {
						position: "absolute",
						top: "85px",
						fontFamily: "arial,sans-serif",
						fontSize: "13px",
						paddingLeft: "6px"
					}), s.appendChild(h), r.appendChild(s)
				},
				_updateView: function() {
					var t = this._container.style;
					this._isOn || this._isOver ? (t.backgroundPosition = "-49px 0", t.color = "#fff") : (t.backgroundPosition = "0 0", t.color = "#565656")
				},
				_bind: function() {
					var n = this;
					this._pano.on("dataload", (function(t) {
						var r = t.data;
						r ? (n._currentSvId = r.panoId, e.tileBaseUrl ? n._thumb.src = "".concat(e.tileBaseUrl, "?&sid=")
							.concat(r.panoId, "&pos=0_0&z=0") : n._thumb.src = "//apisv0.bdimg.com/?qt=pdata&sid=".concat(r.panoId, "&pos=0_0&z=0&from=H5&")
							.concat(J("/")), n._stDescription.innerHTML = r.roadName) : (n._currentSvId = null, n._thumb.src = o + "st-noresult.png", n._stDescription.innerHTML = "")
					}));
					var r = this;
					v.isPc && (this._container.addEventListener("mouseover", (function() {
							r._isOver = !0, r._updateView()
						})), this._container.addEventListener("mouseout", (function() {
							r._isOver = !1, r._updateView()
						}))), this._container.addEventListener("click", (function() {
							r._isOn ? r._close() : r._open()
						})), this._map.getContainer()
						.addEventListener("mousemove", (function(e) {
							if (r._isOn) {
								var n = (e = window.event || e)
									.pageX || e.clientX,
									i = e.pageY || e.clientY,
									a = function(t) {
										for (var e = {
											left: 0,
											top: 0
										}; t && t.offsetParent;) e.left += t.offsetLeft, e.top += t.offsetTop, t = t.offsetParent;
										return e
									}(r._map.container),
									s = new Zo(n - a.left, i - a.top),
									u = r._map.pixelToPoint(s);
								if ("" !== r._scout.style.display && v.isPc && (r._scout.style.display = "", r._infoWindow.style.display = ""), r._scout.style.left = s.x - 12 + "px", r._scout.style.top = s.y - 41 - 2 + "px", r._prePixel = r._curPixel, r._curPixel = s, r._prePixel) {
									var h = s.x - r._prePixel.x;
									h > 0 ? r._scout.style.backgroundPosition = "-48px 0" : h < 0 && (r._scout.style.backgroundPosition = "0 0")
								}
								r._curPixel.y < 170 ? r._infoStatus = 2 : r._infoStatus = 1, r._curPixel.x < 66 && (r._infoStatus = 3), r._curPixel.x > r._map.getSize()
									.width - 56 - 10 && (r._infoStatus = 4);
								var c = 1 === r._infoStatus || 2 === r._infoStatus ? 112 : 126,
									l = 1 === r._infoStatus || 2 === r._infoStatus ? 119 : 105;
								1 !== r._infoStatus && 2 !== r._infoStatus || (r._infoWindow.style.left = r._curPixel.x - Math.round(c / 2) + "px", 1 === r._infoStatus ? (r._infoWindow.style.top = r._curPixel.y - l - 42 + "px", r._infoWindow.style.backgroundPosition = "0 0", r._thumb.style.top = "6px", r._thumb.style.bottom = "", r._stDescription.style.top = "85px", r._stDescription.style.bottom = "") : (r._infoWindow.style.top = r._curPixel.y + 2 + "px", r._infoWindow.style.backgroundPosition = "-112px 0", r._thumb.style.top = "", r._thumb.style.bottom = "6px", r._stDescription.style.top = "", r._stDescription.style.bottom = "85px"), r._infoWindow.style.width = "112px", r._infoWindow.style.height = "119px", r._thumb.style.left = "6px", r._stDescription.style.left = "0"), 3 !== r._infoStatus && 4 !== r._infoStatus || (r._infoWindow.style.top = r._curPixel.y - Math.round(l / 2) - 20 + "px", 3 === r._infoStatus ? (r._infoWindow.style.left = r._curPixel.x + 12 + "px", r._infoWindow.style.backgroundPosition = "0 -119px", r._thumb.style.left = "20px", r._stDescription.style.left = "14px") : (r._infoWindow.style.left = r._curPixel.x - 12 - c + "px", r._infoWindow.style.backgroundPosition = "-126px -119px", r._thumb.style.left = "6px", r._stDescription.style.left = "0"), r._infoWindow.style.width = "126px", r._infoWindow.style.height = "105px"), r._infoWindow.style.backgroundImage = 'url("'.concat(o, 'st-infowindow.gif")'), r._timerId && (clearTimeout(r._timerId), r._timerId = null), r._timerId = setTimeout((function() {
									r._currentPoint = u, r._scout.style.backgroundPosition = "-24px 0";
									var e = r._map.lnglatToMercator(u.lng, u.lat);
									r._pano.setPosition(new t.Point(e[0], e[1]))
								}), 200)
							}
						})), this._map.addEventListener("click", (function(t) {
							r._isOn && v.isMobile && (r._pano.setPosition(t.point), r._pano.show(), r._close()), r._isOn && r._currentSvId && (r._pano.setId(r._currentSvId), r._pano.show(), r._map.config.enableWheelZoom && (r._map.disableScrollWheelZoom(), r.isMapEnableWheelZoom = !0), r._close())
						}))
				},
				_open: function() {
					this._isOn || (this._isOn = !0, this._map.addTileLayer(this._panoCoverageLayer), v.isPc && (this._preDefaultCursor = this._map.getDefaultCursor(), this._preDraggingCursor = this._map.getDraggingCursor(), this._map.setDefaultCursor("pointer"), this._map.setDraggingCursor("pointer"))), this._updateView()
				},
				_close: function() {
					this._isOn && (this._map.removeTileLayer(this._panoCoverageLayer), v.isPc && (this._scout.style.display = "none", this._infoWindow.style.display = "none", this._map.setDefaultCursor(this._preDefaultCursor), this._map.setDraggingCursor(this._preDraggingCursor)), this._isOn = !1), this._updateView()
				}
			}), new a(t.Control)
	}, t.getStreetViewCoverageLayer = function(t) {
		var e = new t.TileLayer({
			transparentPng: !0,
			dataType: 1,
			cacheSize: 32
		});
		return e.zIndex = 110, e.getTilesUrl = window.PANORAMA_URL ? function(t, e) {
			var n = window.PANORAMA_URL + "/tile",
				r = t.x,
				i = t.y;
			return window.BMAPGL_84 && (i = Math.pow(2, e) - i - 1), "".concat(n, "?customid=panorama&x=")
				.concat(r, "&y=")
				.concat(i, "&z=")
				.concat(e, "&type=WGS84")
		} : function(t, e) {
			var n = ["//apisv0.bdimg.com/", "//apisv1.bdimg.com/"],
				r = (Math.abs(t.x) + Math.abs(t.y)) % n.length;
			return "".concat(n[r], "?udt=")
				.concat("20150114", "&qt=tile&styles=")
				.concat("pl", "&x=")
				.concat(t.x, "&y=")
				.concat(t.y, "&z=")
				.concat(e)
				.replace(/-(\d+)/gi, "M$1") + "&" + J("/", {
					isCounter: !1
				})
		}, e
	}, t.init = function(t, e) {
		return new aa(t, e)
	}, Object.defineProperty(t, "__esModule", {
		value: !0
	})
})(Pano = {});
window.BMapGL = window.BMapGL || {};
(function(bo, eV) {
	var es = es || {
		version: "20150702",
		emptyFn: function() {}
	};
	(function() {
		es._log = [];
		var i = 0;
		var T = {};
		es.BaseClass = function(i9) {
			T[(this.hashCode = (i9 || es.BaseClass.guid()))] = this
		};
		es.BaseClass.guid = function() {
			return "mz_" + (i++)
				.toString(36)
		};
		es.BaseClass.create = function() {
			var i9 = new es.BaseClass();
			i9.decontrol();
			return i9
		};
		var e = es.instance = es.I = function(i9) {
			return T[i9]
		};
		es.BaseClass.prototype.dispose = function() {
			if (this.hashCode) {
				delete T[this.hashCode]
			}
			for (var i9 in this) {
				if (typeof this[i9] != "function") {
					delete this[i9]
				}
			}
		};
		es.BaseClass.prototype.getHashCode = function() {
			if (!this.hashCode) {
				T[(this.hashCode = es.BaseClass.guid())] = this
			}
			return this.hashCode
		};
		es.BaseClass.prototype.decontrol = function() {
			delete T[this.hashCode]
		};
		es.BaseClass.prototype.toString = function() {
			return "[object " + (this._className || "Object") + "]"
		};
		es.BaseClass.prototype._wlog = function(ja, jb) {
			var i9 = es._log;
			if (i9.length > 100) {
				i9.reverse()
					.length = 50;
				i9.reverse()
			}
			i9[i9.length] = "[" + ja + "][" + (this._className || "Object") + " " + this.hashCode + "] " + jb
		}
	})();
	Function.prototype.inherits = function(i9, T) {
		var e, ja, jc = this.prototype,
			jb = function() {};
		jb.prototype = i9.prototype;
		ja = this.prototype = new jb();
		if (typeof(T) == "string") {
			ja._className = T
		}
		for (e in jc) {
			ja[e] = jc[e]
		}
		this.prototype.constructor = jc.constructor;
		jc = jb = null;
		return ja
	};
	es.BaseEvent = function(e, i) {
		this.type = e;
		this.returnValue = true;
		this.target = i || null;
		this.currentTarget = this.srcElement = null;
		this.cancelBubble = false;
		this.domEvent = null
	};
	es.BaseClass.prototype.on = es.BaseClass.prototype.addEventListener = function(T, i) {
		if (typeof i !== "function") {
			return this._wlog("error", "addEventListener:" + i + " is not a function")
		}
		if (!this._listeners) {
			this._listeners = {}
		}
		var e = this._listeners;
		if (T.indexOf("on") !== 0) {
			T = "on" + T
		}
		if (typeof e[T] !== "object") {
			e[T] = {}
		}
		var i9 = i.hashCode || es.BaseClass.guid();
		i.hashCode = i9;
		if (e[T][i9]) {
			this._wlog("warning", "repeat key:" + i9)
		}
		e[T][i9] = i
	};
	es.BaseClass.prototype.off = es.BaseClass.prototype.removeEventListener = function(T, i) {
		if (typeof i == "function") {
			i = i.hashCode
		} else {
			if (typeof i !== "string" && typeof i !== "undefined") {
				return
			}
		}
		if (!this._listeners) {
			this._listeners = {}
		}
		if (T.indexOf("on") != 0) {
			T = "on" + T
		}
		var e = this._listeners;
		if (!e[T]) {
			return
		}
		if (i === undefined) {
			e[T] = {};
			return
		}
		if (e[T][i]) {
			delete e[T][i]
		}
	};
	es.BaseClass.prototype.fire = es.BaseClass.prototype.dispatchEvent = function(i9) {
		if (!this._listeners) {
			this._listeners = {}
		}
		var T, e = this._listeners,
			ja = i9.type;
		i9.target = i9.srcElement = i9.target || i9.srcElement || this;
		i9.currentTarget = this;
		if (typeof this[ja] == "function") {
			this[ja](i9)
		}
		if (typeof e[ja] == "object") {
			for (T in e[ja]) {
				if (typeof e[ja][T] == "function") {
					e[ja][T].call(this, i9)
				}
			}
		}
		return i9.returnValue
	};
	es.BaseEvent.prototype.inherit = function(T) {
		var i = this;
		this.domEvent = T = window.event || T;
		i.clientX = T.clientX || T.pageX;
		i.clientY = T.clientY || T.pageY;
		i.offsetX = T.offsetX || T.layerX;
		i.offsetY = T.offsetY || T.layerY;
		i.screenX = T.screenX;
		i.screenY = T.screenY;
		i.ctrlKey = T.ctrlKey || T.metaKey;
		i.shiftKey = T.shiftKey;
		i.altKey = T.altKey;
		return i
	};
	es.Browser = (function() {
		var T = navigator.userAgent;
		var ja = 0;
		var e = 0;
		var jb = 0;
		var i = 0;
		var jf = 0;
		var jd = 0;
		var je = 0;
		var jc = 0;
		var i9 = 0;
		var jg = 0;
		if (typeof window.opera === "object" && /Opera(\s|\/)(\d+(\.\d+)?)/.test(T)) {
			jb = parseFloat(RegExp.$2)
		} else {
			if (/OPR(\/(\d+)(\..?)?)/.test(T)) {
				jb = parseInt(RegExp.$2, 10)
			} else {
				if (/Edge\/((\d+)\.\d+)/.test(T)) {
					ja = parseInt(RegExp.$2, 10)
				} else {
					if (/MSIE (\d+(\.\d+)?)/.test(T)) {
						e = parseFloat(RegExp.$1)
					} else {
						if (T.indexOf("Trident") > -1 && /rv:(\d+(\.\d+)?)/.test(T)) {
							e = parseInt(RegExp.$1, 10)
						} else {
							if (/Firefox(\s|\/)(\d+(\.\d+)?)/.test(T)) {
								jf = parseFloat(RegExp.$2)
							} else {
								if (navigator.vendor === "Netscape" && /Netscape(\s|\/)(\d+(\.\d+)?)/.test(T)) {
									je = parseFloat(RegExp.$2)
								} else {
									if (T.indexOf("Safari") > -1 && /Version\/(\d+(\.\d+)?)/.test(T)) {
										i = parseFloat(RegExp.$1)
									}
								}
							}
						}
					}
				}
			}
		}
		if (T.indexOf("Trident") > -1 && /Trident\/(\d+(\.\d+)?)/.test(T)) {
			jc = parseInt(RegExp.$1, 10)
		} else {
			if (!e && !ja && T.indexOf("Gecko") > -1 && T.indexOf("KHTML") === -1 && /rv\:(\d+(\.\d+)?)/.test(T)) {
				i9 = parseFloat(RegExp.$1)
			} else {
				if (!ja && /chrome\/(\d+(\.\d+)?)/i.test(T)) {
					jd = parseFloat(RegExp.$1)
				} else {
					if (!ja && /AppleWebKit\/(\d+(\.\d+)?)/.test(T)) {
						jg = parseInt(RegExp.$1, 10)
					}
				}
			}
		}
		var jh = {
			edge: ja,
			ie: e,
			firefox: jf,
			netscape: je,
			opera: jb,
			safari: i,
			chrome: jd,
			gecko: i9,
			trident: jc,
			webkit: jg
		};
		return jh
	})();
	window.FeBrowser = es.Browser;
	es.Dom = {};
	es.Dom.createDom = function(i, e) {
		if (es.isIE && e && e.name) {
			i = "<" + i + ' name="' + es.String.escapeHTML(e.name) + '">'
		}
		var T = document.createElement(i);
		if (e) {
			es.Dom.setProperties(T, e)
		}
		return T
	};
	es.Dom.getOffset = function(i9) {
		var jc = es.Dom.getOwnerDocument(i9);
		var jb = es.isGecko > 0 && jc.getBoxObjectFor && es.Dom.getStyle(i9, "position") == "absolute" && (i9.style.top === "" || i9.style.left === "");
		var jd = {
			left: 0,
			top: 0
		};
		var i = (es.isIE && !es.isStrict) ? jc.body : jc.documentElement;
		if (i9 == i) {
			return jd
		}
		var T = null;
		var ja;
		if (i9.getBoundingClientRect) {
			ja = i9.getBoundingClientRect();
			jd.left = ja.left + Math.max(jc.documentElement.scrollLeft, jc.body.scrollLeft);
			jd.top = ja.top + Math.max(jc.documentElement.scrollTop, jc.body.scrollTop);
			jd.left -= jc.documentElement.clientLeft;
			jd.top -= jc.documentElement.clientTop;
			if (es.isIE && !es.isStrict) {
				jd.left -= 2;
				jd.top -= 2
			}
		} else {
			if (jc.getBoxObjectFor && !jb) {
				ja = jc.getBoxObjectFor(i9);
				var e = jc.getBoxObjectFor(i);
				jd.left = ja.screenX - e.screenX;
				jd.top = ja.screenY - e.screenY
			} else {
				T = i9;
				do {
					jd.left += T.offsetLeft;
					jd.top += T.offsetTop;
					if (es.isWebkit > 0 && es.Dom.getStyle(T, "position") == "fixed") {
						jd.left += jc.body.scrollLeft;
						jd.top += jc.body.scrollTop;
						break
					}
					T = T.offsetParent
				} while (T && T != i9);
				if (es.isOpera > 0 || (es.isWebkit > 0 && es.Dom.getStyle(i9, "position") == "absolute")) {
					jd.top -= jc.body.offsetTop
				}
				T = i9.offsetParent;
				while (T && T != jc.body) {
					jd.left -= T.scrollLeft;
					if (!es.isOpera || T.tagName != "TR") {
						jd.top -= T.scrollTop
					}
					T = T.offsetParent
				}
			}
		}
		return jd
	};
	es.Dom.getOwnerDocument = function(e) {
		return e.nodeType == 9 ? e : e.ownerDocument || e.document
	};
	es.Dom.setProperties = function(i, e) {
		es.each(e, function(i9, T) {
			es.Dom._setProperty(i, T, i9)
		})
	};
	es.Dom._setProperty = function(i, e, T) {
		if (e == "style") {
			i.style.cssText = T
		} else {
			if (e == "class") {
				i.className = T
			} else {
				if (e == "for") {
					i.htmlFor = T
				} else {
					if (e in es.Dom._DIRECT_ATTRIBUTE_MAP) {
						i.setAttribute(es.Dom._DIRECT_ATTRIBUTE_MAP[e], T)
					} else {
						i[e] = T
					}
				}
			}
		}
	};
	es.Dom._DIRECT_ATTRIBUTE_MAP = {
		cellpadding: "cellPadding",
		cellspacing: "cellSpacing",
		colspan: "colSpan",
		rowspan: "rowSpan",
		valign: "vAlign",
		height: "height",
		width: "width",
		usemap: "useMap",
		frameborder: "frameBorder"
	};
	es.G = function() {
		for (var T = [], i9 = arguments.length - 1; i9 > -1; i9--) {
			var ja = arguments[i9];
			T[i9] = null;
			if (typeof ja == "object" && ja && ja.dom) {
				T[i9] = ja.dom
			} else {
				if ((typeof ja == "object" && ja && ja.tagName) || ja == window || ja == document) {
					T[i9] = ja
				} else {
					if (typeof ja == "string" && (ja = document.getElementById(ja))) {
						T[i9] = ja
					}
				}
			}
		}
		return T.length < 2 ? T[0] : T
	};
	es.ac = function(e, i) {
		if (!(e = this.G(e))) {
			return
		}
		i = this.trim(i);
		if (!new RegExp("(^| )" + i.replace(/(\W)/g, "\\$1") + "( |$)")
			.test(e.className)) {
			e.className = e.className.split(/\s+/)
				.concat(i)
				.join(" ")
		}
	};
	es.addClassName = es.ac;
	es.each = function(jb, e) {
		if (typeof e != "function") {
			return jb
		}
		if (jb) {
			if (jb.length === undefined) {
				for (var T in jb) {
					e.call(jb[T], jb[T], T)
				}
			} else {
				for (var i9 = 0, ja = jb.length; i9 < ja; i9++) {
					e.call(jb[i9], jb[i9], i9)
				}
			}
		}
		return jb
	};
	es.extend = function(jb, i9) {
		if (jb && i9 && typeof(i9) == "object") {
			for (var ja in i9) {
				jb[ja] = i9[ja]
			}
			var T = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
			for (var e = 0, i; e < T.length; e++) {
				i = T[e];
				if (Object.prototype.hasOwnProperty.call(i9, i)) {
					jb[i] = i9[i]
				}
			}
		}
		return jb
	};
	es.hide = function() {
		es.each(arguments, function(e) {
			if (e = es.G(e)) {
				e.style.display = "none"
			}
		})
	};
	es.inherit = function(jd, i9, T) {
		var jc = jd.prototype;
		var jb = function() {};
		jb.prototype = i9.prototype;
		var ja = jd.prototype = new jb();
		if (typeof T == "string") {
			ja._className = T
		}
		for (var e in jc) {
			ja[e] = jc[e]
		}
		jd.prototype.constructor = jc.constructor;
		jc = null;
		return ja
	};
	es.isIE = 0;
	(function() {
		if (navigator.userAgent.indexOf("MSIE") > 0 && !window.opera) {
			/MSIE (\d+(\.\d+)?)/.test(navigator.userAgent);
			es.isIE = parseFloat(RegExp.$1)
		}
	})();
	es.rc = function(e, i) {
		if (!(e = this.G(e))) {
			return
		}
		i = this.trim(i);
		var T = e.className.replace(new RegExp("(^| +)" + i.replace(/(\W)/g, "\\$1") + "( +|$)", "g"), "$2");
		if (e.className != T) {
			e.className = T
		}
	};
	es.removeClassName = es.rc;
	es.show = function() {
		this.each(arguments, function(e) {
			if (e = es.G(e)) {
				e.style.display = ""
			}
		})
	};
	es.trim = function(e) {
		return e.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+$)/g, "")
	};
	es.getElementsByClassName = function(e, i) {
		if (e.getElementsByClassName) {
			return e.getElementsByClassName(i)
		} else {
			return (function T(jg, je) {
				if (je == null) {
					je = document
				}
				var jd = [],
					jc = je.getElementsByTagName("*"),
					i9 = jc.length,
					jf = new RegExp("(^|\\s)" + jg + "(\\s|$)"),
					jb, ja;
				for (jb = 0, ja = 0; jb < i9; jb++) {
					if (jf.test(jc[jb].className)) {
						jd[ja] = jc[jb];
						ja++
					}
				}
				return jd
			})(i, e)
		}
	};
	es.toggleClass = function(e, i) {
		if (es.hasClass(e, i)) {
			es.removeClassName(e, i)
		} else {
			es.addClassName(e, i)
		}
	};
	es.hasClass = function(i9, T) {
		if (!i9 || !i9.className || typeof i9.className != "string") {
			return false
		}
		var i = -1;
		try {
			i = i9.className == T || i9.className.search(new RegExp("(\\s|^)" + T + "(\\s|$)"))
		} catch (ja) {
			return false
		}
		return i > -1
	};
	es.insertHTML = function(i9, e, T) {
		i9 = es.G(i9);
		if (i9 === null) {
			return i9
		}
		var i, ja;
		if (i9.insertAdjacentHTML) {
			i9.insertAdjacentHTML(e, T)
		} else {
			i = i9.ownerDocument.createRange();
			e = e.toUpperCase();
			if (e == "AFTERBEGIN" || e == "BEFOREEND") {
				i.selectNodeContents(i9);
				i.collapse(e == "AFTERBEGIN")
			} else {
				ja = e == "BEFOREBEGIN";
				i[ja ? "setStartBefore" : "setEndAfter"](i9);
				i.collapse(ja)
			}
			i.insertNode(i.createContextualFragment(T))
		}
		return i9
	};
	if (typeof HTMLElement != "undefined" && HTMLElement.prototype.__lookupGetter__ && !HTMLElement.prototype.__lookupGetter__("children") && !window.opera) {
		try {
			HTMLElement.prototype.__defineGetter__("children", function() {
				for (var T = [], i9 = 0, jb, ja = 0, e = this.childNodes.length; ja < e; ja++) {
					jb = this.childNodes[ja];
					if (jb.nodeType == 1) {
						T[i9++] = jb;
						if (jb.name) {
							if (!T[jb.name]) {
								T[jb.name] = []
							}
							T[jb.name][T[jb.name].length] = jb
						}
						if (jb.id) {
							T[jb.id] = jb
						}
					}
				}
				return T
			})
		} catch (ir) {}
	}
	if (typeof(HTMLElement) != "undefined" && !window.opera && HTMLElement.prototype && !HTMLElement.prototype.insertAdjacentHTML) {
		HTMLElement.prototype.insertAdjacentHTML = function(i, T) {
			var i9 = this.ownerDocument.createRange();
			i9.setStartBefore(this);
			i9 = i9.createContextualFragment(T);
			switch (i) {
				case "beforeBegin":
					this.parentNode.insertBefore(i9, this);
					break;
				case "afterBegin":
					this.insertBefore(i9, this.firstChild);
					break;
				case "beforeEnd":
					this.appendChild(i9);
					break;
				case "afterEnd":
					if (!this.nextSibling) {
						this.parentNode.appendChild(i9)
					} else {
						this.parentNode.insertBefore(i9, this.nextSibling)
					}
					break
			}
		}
	}
	if (typeof HTMLElement != "undefined" && !window.opera) {
		HTMLElement.prototype.contains = function(e) {
			if (!e) {
				return false
			}
			if (e == this) {
				return true
			}
			while (e = e.parentNode) {
				if (e == this) {
					return true
				}
			}
			return false
		}
	}
	if (!es.Browser.ie && typeof Event != "undefined" && !window.opera) {
		Event.prototype.__defineSetter__("returnValue", function(e) {
			if (!e) {
				this.preventDefault()
			}
			return e
		});
		Event.prototype.__defineSetter__("cancelBubble", function(e) {
			if (e) {
				this.stopPropagation()
			}
			return e
		})
	}
	es.each = function(ja, i9) {
		if (bG(i9)) {
			for (var T = 0, e = ja.length; T < e; T++) {
				if (i9.call(ja, ja[T], T) === false) {
					break
				}
			}
		}
		return ja
	};
	es.Platform = {
		x11: 0,
		macintosh: 0,
		windows: 0,
		android: 0,
		iphone: 0,
		ipad: 0
	};
	for (var ip in es.Platform) {
		if (es.Platform.hasOwnProperty(ip)) {
			es.Platform[ip] = new RegExp(ip, "i")
				.test(window.navigator.userAgent) ? 1 : 0
		}
	}
	if (typeof(es.Dom) === "undefined") {
		es.Dom = {}
	}
	es.Dom.getComputedStyle = function(i, e) {
		var i9 = i.nodeType == 9 ? i : i.ownerDocument || i.document,
			T;
		if (i9.defaultView && i9.defaultView.getComputedStyle) {
			T = i9.defaultView.getComputedStyle(i, null);
			if (T) {
				return T[e] || T.getPropertyValue(e)
			}
		} else {
			if (i.currentStyle) {
				return i.currentStyle[e] || ""
			}
		}
		return ""
	};
	var e7 = es.BaseEvent;
	var cJ = es.BaseClass;
	cJ.prototype.toString = function() {
		return this._className || ""
	};
	es.on = function(T, i, e) {
		if (!(T = es.G(T))) {
			return T
		}
		i = i.replace(/^on/, "");
		if (T.addEventListener) {
			T.addEventListener(i, e, false)
		} else {
			if (T.attachEvent) {
				T.attachEvent("on" + i, e)
			}
		}
		return T
	};
	es.un = function(T, i, e) {
		if (!(T = es.G(T))) {
			return T
		}
		i = i.replace(/^on/, "");
		if (T.removeEventListener) {
			T.removeEventListener(i, e, false)
		} else {
			if (T.detachEvent) {
				T.detachEvent("on" + i, e)
			}
		}
		return T
	};
	es.hc = function(i9, T) {
		if (!i9 || !i9.className || typeof i9.className != "string") {
			return false
		}
		var i = -1;
		try {
			i = i9.className == T || i9.className.search(new RegExp("(\\s|^)" + T + "(\\s|$)"))
		} catch (ja) {
			return false
		}
		return i > -1
	};
	es.isEmptyObject = function(T) {
		if (Object.prototype.toString.call(T) === "[object Object]") {
			for (var e in T) {
				return false
			}
			return true
		} else {
			return false
		}
	};
	var bF = window.location.protocol === "http:" ? "http:" : "https:";
	var dZ = {
		fontFamily: 'Arial,Helvetica,"PingFang SC","Hiragino Sans GB",STHeiti,sans-serif',
		mapStyleNameIdPair: {
			"default": 0,
			"grayed-out": 1
		},
		mapHost: bF + "//map.baidu.com",
		apiHost: bF + "//api.map.baidu.com",
		apiIMG: bF + "//api.map.baidu.com/images",
		staticHost: bF + "//webmap0.bdimg.com",
		imgPath: bF + "//webmap0.bdimg.com/image/api/",
		tileDomain: [bF + "//maponline0.bdimg.com", bF + "//maponline1.bdimg.com", bF + "//maponline2.bdimg.com", bF + "//maponline3.bdimg.com"],
		panoTilePath: "//apisv1.bdimg.com/",
		optDomain: "http://10.120.25.45:8017",
		rasterTilePath: "/tile/",
		vectorTilePath: "/pvd/",
		originTilePath: [bF + "//pcor.baidu.com"],
		stylePath: "//maponline0.bdimg.com/sty/",
		getIconSetPath: function(e) {
			var i = "map_icons2x/";
			if (typeof e === "string" && this.mapStyleNameIdPair[e] > 0) {
				i = "map_icons2x_" + (this.mapStyleNameIdPair[e] - 1) + "/"
			}
			return bF + this.stylePath + i
		},
		getMapStyleFiles: function(T) {
			var ja = true;
			if (typeof T === "string" && T !== "default") {
				ja = false
			}
			var jb = ja ? "" : "_" + (this.mapStyleNameIdPair[T] - 1);
			var i = bp();
			var i9 = "udt=" + i.udt + "&v=" + i.ver;
			var e = bF + this.stylePath;
			return [e + "icons_2x" + jb + ".js?" + i9, e + "fs" + jb + ".js?" + i9, e + "indoor_fs.js?" + i9]
		},
		tvc: {
			ditu: {
				normal: {
					version: "088",
					updateDate: "20210726"
				},
				satellite: {
					version: "009",
					updateDate: "20210726"
				},
				normalTraffic: {
					version: "081",
					updateDate: "20210726"
				},
				satelliteTraffic: {
					version: "083",
					updateDate: "20210726"
				},
				mapJS: {
					version: "104",
					updateDate: "20210726"
				},
				satelliteStreet: {
					version: "083",
					updateDate: "20210726"
				},
				panoClick: {
					version: "1033",
					updateDate: "20180108"
				},
				panoUdt: {
					version: "20180108",
					updateDate: "20180108"
				},
				panoSwfAPI: {
					version: "20150123",
					updateDate: "20150123"
				},
				panoSwfPlace: {
					version: "20141112",
					updateDate: "20141112"
				},
				earthVector: {
					version: "001",
					updateDate: "20210726"
				}
			}
		},
		msv: {
			mapstyle: {
				updateDate: "20210726",
				version: "001"
			}
		}
	};
	dZ.imgResources = {
		blankGIF: dZ.staticHost + "/res/litemapapi/v1d1/images/blank.gif?20170501",
		markerPng: dZ.staticHost + "/res/litemapapi/v1d1/images/marker.png?20170501",
		locPng: dZ.staticHost + "/res/litemapapi/v1d1/images/loc.png?20180918",
		locNewPng: dZ.staticHost + "/res/litemapapi/v1d1/images/loc_new.png?20190314",
		zoomPng: dZ.staticHost + "/res/litemapapi/v1d1/images/zoombtn.png?20180918",
		mapLogoPng: dZ.staticHost + "/res/litemapapi/v1d1/images/logo-2x.png?20190226"
	};
	var w = dZ;
	var ih = "ruler.cur";
	if (es.Browser.ie || es.Browser.edge) {
		es.extend(w, {
			distCursor: "url(" + w.imgPath + ih + "),crosshair",
			defaultCursor: "url(" + w.imgPath + "openhand.cur),default",
			draggingCursor: "url(" + w.imgPath + "closedhand.cur),move"
		})
	} else {
		if (es.Browser.firefox) {
			es.extend(w, {
				distCursor: "url(" + w.imgPath + ih + "),crosshair",
				defaultCursor: "-moz-grab",
				draggingCursor: "-moz-grabbing"
			})
		} else {
			if (es.Browser.chrome || es.Browser.safari) {
				es.extend(w, {
					distCursor: "url(" + w.imgPath + ih + ") 2 6,crosshair",
					defaultCursor: "url(" + w.imgPath + "openhand.cur) 8 8,default",
					draggingCursor: "url(" + w.imgPath + "closedhand.cur) 8 8,move"
				});
				if (es.Platform.macintosh) {
					w.defaultCursor = "-webkit-grab";
					w.draggingCursor = "-webkit-grabbing"
				}
			} else {
				es.extend(w, {
					distCursor: "url(" + w.imgPath + ih + "),crosshair",
					defaultCursor: "url(" + w.imgPath + "openhand.cur),default",
					draggingCursor: "url(" + w.imgPath + "closedhand.cur),move"
				})
			}
		}
	}
	bo = bo || {};
	bo.version = "gl";
	bo._register = [];
	bo.register = function(e) {
		this._register[this._register.length] = e
	};
	bo.guid = 1;
	bo.getGUID = function(e) {
		return (e || "") + bo.guid++
	};
	var ei = window.BMAP_AUTHENTIC_KEY || "";

	function M(e, i, i9) {
		var T = new Date();
		T.setTime(T.getTime() + i9 * 24 * 60 * 60 * 1000);
		document.cookie = e + "=" + escape(i) + ";expires=" + T.toGMTString()
	}

	function aU(e, i) {
		if (navigator.cookieEnabled) {
			return M(e, i, 30)
		}
		if (localStorage) {
			return localStorage.setItem(e, i)
		}
		if (sessionStorage) {
			return sessionStorage.setItem(e, i)
		}
	}
	bo.getSeckeyCid = function() {
		var i = +new Date();
		var e = bF + "//dlswbr.baidu.com/heicha/mw/abclite-2063-s.js?_t=" + i;
		f5.load(e, hQ)
	};

	function hQ() {
		if (window.___abvk) {
			aU("SECKEY_ABVK", window.___abvk)
		}
	}
	window.__abbaidu_2063_cb = function(i) {
		var e = JSON.parse(i);
		aU("BMAP_SECKEY", e.data)
	};
	bo.bmapVerifyCbk = function(ja) {
		if (ja && ja.error !== 0) {
			bo = null;
			BMapGL = null;
			var jb = "百度未授权使用地图API，可能是因为您提供的密钥不是有效的百度地图开放平台密钥，或此密钥未对本应用的百度地图JavaScriptAPI授权。您可以访问如下网址了解如何获取有效的密钥：https://lbs.baidu.com/apiconsole/key#。";
			switch (ja.error) {
				case 101:
					jb = "您所使用的密钥ak有问题，不支持jsapi服务，可以访问该网址了解如何获取有效密钥：http://lbsyun.baidu.com/apiconsole/key#。";
					break;
				case 102:
					jb = "MCODE参数不存在，mobile类型MCODE参数必需，详情查看：http://lbsyun.baidu.com/apiconsole/key#。";
					break;
				case 200:
					jb = "APP不存在，AK有误请检查再重试，详情查看：http://lbsyun.baidu.com/apiconsole/key#。";
					break;
				case 201:
					jb = "APP被您禁用啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
					break;
				case 202:
					jb = "APP被管理员删除啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
					break;
				case 203:
					jb = "APP类型错误，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
					break;
				case 210:
					jb = "APP IP校验失败，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
					break;
				case 220:
					jb = "APP Referer校验失败。请检查该ak设置的白名单与访问所有的域名是否一致。详情查看：http://lbsyun.baidu.com/apiconsole/key#";
					break;
				case 230:
					jb = "APP Mcode码校验失败，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
					break;
				case 240:
					jb = "APP服务被禁用了，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。";
					break;
				case 250:
					jb = "该用户不存在... 请登录 https://lbs.baidu.com 的控制台，注册成为开发者申请ak吧。";
					break;
				case 251:
					jb = "该用户被自己删除啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情。";
					break;
				case 252:
					jb = "该用户被管理员删除啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 了解如何获取有效密钥，或请联系我们了解详情。";
					break;
				case 260:
					jb = "您所使用的密钥AK不包含该服务呢，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看服务选择情况，或请联系我们了解详情。";
					break;
				case 261:
					jb = "您所使用的密钥AK的该服务被禁用啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看服务选择情况，或请联系我们了解详情。";
					break;
				case 401:
					jb = "您所使用的AK并发超限了，请登录 http://lbsyun.baidu.com/cashier/quota#/home 了解详情。";
					break;
				case 302:
					jb = "您所使用的AK天配额超限了，请登录 http://lbsyun.baidu.com/cashier/quota#/home 了解详情。";
					break
			}
			alert(jb);
			var T = document.getElementsByClassName("bmap-container");
			if (T) {
				for (var i9 = 0; i9 < T.length; i9++) {
					var e = T[i9];
					if (e && e.firstChild && e.firstChild.id === "platform") {
						e.innerText = ""
					}
				}
			}
		}
	};
	bo.frequencyCbk = function(e) {
		if (e) {
			window.QTFrequency = e
		}
	};
	bo.verify = function() {
		var e = w.apiHost + "/?qt=verify&v=gl&type=webgl&ak=" + ei + "&callback=" + eV + ".bmapVerifyCbk";
		f5.load(e)
	};
	bo.frequency = function() {};
	bo.apiLoad = bo.apiLoad || function() {};

	function hi(i, e) {
		this._size = i;
		this._cache = [];
		this._totalGetTimes = 0;
		this._totalHitTimes = 0;
		this._options = {
			clearCallback: null,
			removeOldCallback: null
		};
		e = e || {};
		for (var T in e) {
			if (e.hasOwnProperty(T)) {
				this._options[T] = e[T]
			}
		}
	}
	hi.prototype.setData = function(T, i9) {
		var e = this._cache;
		var i = this._size;
		if (i === 0) {
			return
		}
		if (e.length > i) {
			this._removeOld()
		}
		if (!e[T]) {
			e.push(i9)
		}
		e[T] = i9;
		i9._key_ = T
	};
	hi.prototype.getHitRate = function() {
		return Math.round(this._totalHitTimes / this._totalGetTimes * 1000) / 1000
	};
	hi.prototype.getData = function(i) {
		var e = this._cache[i];
		if (e) {
			this._totalHitTimes++
		}
		this._totalGetTimes++;
		return e
	};
	hi.prototype.removeData = function(ja) {
		if (this._options.clearCallback) {
			this._options.clearCallback(this._cache[ja])
		}
		var T = this._cache;
		var jb = T[ja];
		for (var i9 = 0, e = T.length; i9 < e; i9++) {
			if (T[i9] === jb) {
				T.splice(i9, 1);
				break
			}
		}
		delete T[ja]
	};
	hi.prototype._removeOld = function() {
		var e = this._cache;
		var ja = Math.round(this._size * 0.6);
		for (var i9 = 0; i9 < ja; i9++) {
			var T = e[i9]._key_;
			if (this._options.clearCallback) {
				this._options.clearCallback(e[T])
			}
			delete e[T]
		}
		e.splice(0, ja);
		if (this._options.removeOldCallback) {
			this._options.removeOldCallback()
		}
	};
	hi.prototype.clear = function() {
		var T = this._cache;
		for (var ja = 0, e = T.length; ja < e; ja++) {
			var i9 = T[ja]._key_;
			if (this._options.clearCallback) {
				this._options.clearCallback(T[i9])
			}
			delete T[i9]
		}
		this._cache = T = []
	};
	hi.prototype.forEach = function(i9) {
		var T = this._cache;
		for (var jb = 0, e = T.length; jb < e; jb++) {
			var ja = T[jb]._key_;
			i9(T[ja])
		}
	};
	hi.prototype.getBatch = function(ja) {
		var e = [];
		for (var i9 = 0, T = ja.length; i9 < T; i9++) {
			if (this.getData(ja[i9])) {
				e[e.length] = this.getData(ja[i9])
			}
		}
		return e
	};
	hi.prototype.clearExcept = function(jb) {
		var T = this._cache;
		for (var e = T.length, ja = e - 1; ja >= 0; ja--) {
			var i9 = this._cache[ja]._key_;
			if (!jb[i9]) {
				T.splice(ja, 1);
				if (this._options.clearCallback) {
					this._options.clearCallback(T[i9])
				}
				delete T[i9]
			}
		}
	};
	hi.prototype.getDataCount = function() {
		return this._cache.length
	};

	function hV() {}
	es.extend(hV.prototype, {
		centerAndZoomIn: function(je, T, jf) {
			var jc = this;
			if (!je && !T) {
				return
			}
			je = je || this.centerPoint;
			T = T || this.zoomLevel;
			T = this._getProperZoom(T)
				.zoom;
			if (this.mapType === BMAP_EARTH_MAP) {
				if (!this._earth) {
					this.mapType = BMAPGL_NORMAL_MAP;
					this.temp.originMapType = BMAP_EARTH_MAP;

					function jd() {
						jc._earth = new bo.Earth(jc, {
							showRealSunlight: jc.config.showRealSunlight,
							showMilkyway: jc.config.showMilkyway,
							earthBackground: jc.config.earthBackground
						});
						jc._proxyEarthEvents();
						jc._changeEarthMapType(BMAP_EARTH_MAP);
						es.extend(jc, bo.EarthView.prototype);
						if (!jc._navigationCtrl && jc.config.showControls) {
							jc._navigationCtrl = new bo.NavigationControl3D(jc)
						}
						delete jc.temp.originMapType
					}
					gi.load("earth", function() {
						if (bo["FeatureStyle" + jc.config.style]) {
							jd()
						} else {
							jc.loadMapStyleFiles(function() {
								jd()
							})
						}
					})
				}
			}
			this.lastLevel = this.zoomLevel || T;
			this.zoomLevel = T;
			var ja = new e7("onload");
			ja.point = je;
			ja.zoom = T;
			this.centerPoint = this.restrictCenter(new cd(je.lng, je.lat));
			if (this.centerPoint.zoom) {
				this.zoomLevel = this.centerPoint.zoom
			}
			this.defaultZoomLevel = this.defaultZoomLevel || this.zoomLevel;
			this.defaultCenter = this.defaultCenter || this.centerPoint;
			if (!this.loaded && !(this.temp.originMapType === BMAP_EARTH_MAP)) {
				var i = this.config.defaultMaxBounds;
				var jb = new h(i, "baidu", this.mapType);
				var i9 = new gI({
					mapType: this.mapType,
					copyright: jb,
					customLayer: false,
					baseLayer: true,
					tileTypeName: "web"
				});
				i9._isInnerLayer = true;
				this.addTileLayer(i9);
				if (this.mapType === BMAP_SATELLITE_MAP && this._isHybridShow === true) {
					this._addHybirdMap()
				}
			}
			this.dispatchEvent(ja);
			this.loaded = true;
			jf = jf || {};
			jf.callback && jf.callback()
		},
		_setPlatformPosition: function(jf, je, ji) {
			ji = ji || {};
			if (jf === 0 && je === 0 && !ji.point) {
				return
			}
			if (isNaN(ji.initMapOffsetX)) {
				ji.initMapOffsetX = this.offsetX
			}
			if (isNaN(ji.initMapOffsetY)) {
				ji.initMapOffsetY = this.offsetY
			}
			var jg = jf + ji.initMapOffsetX;
			var jd = je + ji.initMapOffsetY;
			if (ji.point) {
				var i = this.restrictCenter(ji.point);
				if (!i.equals(this.centerPoint)) {
					this.centerPoint = i.clone();
					this.fire(new e7("oncenter_changed"))
				}
			} else {
				var i9 = this.offsetX - jg;
				var e = this.offsetY - jd;
				var T = this.getZoomUnits();
				var jc = this.centerPoint.lng;
				var jb = this.centerPoint.lat;
				var ja = new cd(jc, jb);
				this.centerPoint = this.restrictCenter(new cd(ja.lng + i9 * T, ja.lat - e * T), T);
				this.fire(new e7("oncenter_changed"));
				if (this.zoomLevel < 10) {
					jg = this.offsetX - (this.centerPoint.lng - ja.lng) / T;
					jd = this.offsetY + (this.centerPoint.lat - ja.lat) / T
				}
			}
			this.offsetX = jg;
			this.offsetY = jd;
			var jh = this.platform.style;
			jh.left = jg + "px";
			jh.top = jd + "px";
			this.maskLayer.style.left = -jg + "px";
			this.maskLayer.style.top = -jd + "px";
			if (ji.dispatchEvent !== false) {
				this.dispatchEvent(new e7("onmoving"))
			}
		},
		zoomTo: function(e, jc, jg) {
			jg = jg || {};
			jg.zoomCenter = jc;
			if (jg.noAnimation !== true) {
				this.deepZoomTo(e, jg);
				return
			}
			if (typeof e !== "number") {
				return
			}
			var ja = dO[this.mapType];
			if (!ja) {
				return
			}
			var T = e;
			e = this._getProperZoom(e)
				.zoom;
			if (e === this.zoomLevel) {
				var jd = new e7("onzoomexceeded");
				jd.targetZoom = T;
				this.dispatchEvent(jd);
				jg.callback && jg.callback();
				return
			}
			this.lastLevel = this.zoomLevel;
			if (jc) {
				this.temp._cPoint = jc;
				this.temp._cPixel = this.pointToPixelIn(jc)
			} else {
				if (this.getInfoWindow()) {
					var jf = this.getInfoWindow()
						.getPoint();
					this.temp._cPixel = this.pointToPixelIn(jf);
					this.temp._cPoint = jf
				}
			}
			if (this.config.zoomCenter) {
				jc = this.config.zoomCenter;
				this.temp._cPoint = jc;
				this.temp._cPixel = this.pointToPixelIn(jc)
			}
			if (jc || this.temp.infoWin && this.temp.infoWin.isOpen()) {
				var i = this.temp._cPoint;
				var je = this.temp._cPixel;
				var i9 = this.getZoomUnits(e);
				var jb = new cd(i.lng + i9 * (this.width / 2 - je.x), i.lat - i9 * (this.height / 2 - je.y));
				this.centerPoint = this.restrictCenter(jb, i9, e);
				if (this.centerPoint.zoom) {
					e = this.centerPoint.zoom
				}
			}
			if (jg.fireEvent !== false) {
				this.dispatchEvent(new e7("onzoomstart"))
			}
			if (e !== this.zoomLevel) {
				this.zoomLevel = e;
				this.dispatchEvent(new e7("onzooming"));
				this.dispatchEvent(new e7("onzoomstartcode"))
			}
			if (jg.fireEvent !== false) {
				this.dispatchEvent(new e7("onzoomend"))
			}
			if (jg.callback) {
				jg.callback()
			}
		},
		deepZoomMedia: function(e) {
			var i = this;
			if (!i.temp.isStdCtrlBusy) {
				i.temp.isStdCtrlBusy = true;
				i.deepZoomTo(i.zoomLevel + e);
				setTimeout(function() {
					i.temp.isStdCtrlBusy = false
				}, 400)
			}
		},
		deepZoomTo: function(jd, i9) {
			i9 = i9 || {};
			var jb = jd - this.zoomLevel;
			var ja = this._getProperZoom(jd);
			if (ja.exceeded) {
				var e = new e7("onzoomexceeded");
				e.targetZoom = jd;
				this.dispatchEvent(e);
				return
			}
			var i;
			if (i9.zoomCenter) {
				i = this.pointToPixelIn(i9.zoomCenter)
			} else {
				if (this.getInfoWindow()) {
					i = this.pointToPixelIn(this.getInfoWindow()
						.getPoint(), {
							zoom: this.lastLevel
						})
				} else {
					var i = new eL(this.width / 2, this.height / 2)
				}
			}
			this.lastLevel = this.zoomLevel;
			var jc = this.deepZoom || new ax(this);
			var T = jb > 0 ? 1 : -1;
			jc.zoomMap(i, jb, T, null, i9)
		},
		flyToIn: function(je, e) {
			if (e === this.zoomLevel) {
				this.panToIn(je);
				return
			}
			var jb = this._getProperZoom(e);
			if (jb.exceeded) {
				var jf = new e7("onzoomexceeded");
				jf.targetZoom = e;
				this.dispatchEvent(jf);
				return
			}
			var jd = e - this.zoomLevel;
			var T = new eL(this.width / 2, this.height / 2);
			var i = this.pointToPixelIn(je);
			var jc = new h3(i.x - T.x, i.y - T.y);
			this.lastLevel = this.zoomLevel;
			if (Math.abs(jd) >= 4 || Math.abs(jc.width) > this.width || Math.abs(jc.height) > this.height) {
				this.centerAndZoomIn(je, e);
				return
			}
			var ja = this.deepZoom || new ax(this);
			var i9 = jd > 0 ? 1 : -1;
			ja.zoomMap(i, jd, i9, jc)
		},
		panToIn: function(i, T) {
			T = T || {};
			if (!i || i.equals(this.centerPoint)) {
				T.callback && T.callback();
				return
			}
			var i9 = this.pointToPixelIn(i);
			var e = Math.round(this.width / 2);
			var ja = Math.round(this.height / 2);
			if (Math.abs(e - i9.x) > this.width || Math.abs(ja - i9.y) > this.height || T.noAnimation === true) {
				this._panToIn(e - i9.x, ja - i9.y, i);
				T.callback && T.callback()
			} else {
				this._panBy(e - i9.x, ja - i9.y, T)
			}
		},
		_panToIn: function(i, e, i9) {
			var T = this.temp;
			if (T.operating === true) {
				return
			}
			if (T.dragAni) {
				T.dragAni.stop();
				T.dragAni = null;
				this.dispatchEvent(new e7("onmoveend"))
			}
			this.dispatchEvent(new e7("onmovestart"));
			this._setPlatformPosition(i, e, {
				point: i9
			});
			this.dispatchEvent(new e7("onmoveend"))
		},
		panBy: function(i, e, T) {
			T = T || {};
			i = Math.round(i) || 0;
			e = Math.round(e) || 0;
			if (Math.abs(i) <= this.width && Math.abs(e) <= this.height && T.noAnimation !== true) {
				this._panBy(i, e, T)
			} else {
				this._panToIn(i, e);
				T.callback && T.callback()
			}
		},
		_panBy: function(i, e, ja) {
			if (this.temp.operating === true) {
				return
			}
			ja = ja || {};
			this.dispatchEvent(new e7("onmovestart"));
			var i9 = this;
			var T = i9.temp;
			T.pl = i9.offsetX;
			T.pt = i9.offsetY;
			if (T.tlPan) {
				T.tlPan.cancel()
			}
			if (T.dragAni) {
				T.dragAni.stop();
				T.dragAni = null;
				this.dispatchEvent(new e7("onmoveend"))
			}
			T.tlPan = new e0({
				fps: ja.fps || i9.config.fps,
				duration: ja.duration || i9.config.actionDuration,
				transition: ja.transition || fT.easeInOutQuad,
				render: function(jb) {
					this.terminative = i9.temp.operating;
					if (i9.temp.operating) {
						return
					}
					i9._setPlatformPosition(Math.ceil(i * jb), Math.ceil(e * jb), {
						initMapOffsetX: T.pl,
						initMapOffsetY: T.pt
					})
				},
				finish: function(jb) {
					i9.dispatchEvent(new e7("onmoveend"));
					i9.temp.tlPan = false;
					if (i9.temp.stopArrow === true) {
						i9.temp.stopArrow = false;
						if (i9.temp.arrow !== 0) {
							i9._arrow()
						}
					}
					ja.callback && ja.callback()
				}
			})
		},
		getCenterIn: function() {
			return this.centerPoint
		},
		getZoom: function() {
			return this.zoomLevel
		},
		setTilt: function() {},
		getTilt: function() {
			return this._tilt
		},
		setHeading: function() {},
		getHeading: function() {
			return this._heading
		},
		restrictCenter: function(jh, i, e) {
			this.isRestrict = false;
			i = i || this.getZoomUnits();
			e = e || this.zoomLevel;
			var jf = this.pixelToPointIn(new eL(this.width, 0), {
				center: jh,
				zoom: e
			});
			var jd = this.pixelToPointIn(new eL(0, this.height), {
				center: jh,
				zoom: e
			});
			var ji = jh.lng;
			var jn = jh.lat;
			if (this.config.restrictBounds !== null && !this.config.restrictBounds.isEmpty()) {
				var jm = this.config.restrictBounds;
				var i9 = jm.getSouthWest();
				var jk = jm.getNorthEast();
				var jg = ia.convertLL2MC(i9);
				var jb = ia.convertLL2MC(jk);
				jh.lng = this.calcNewLngByBounds(ji, jd, jf, jg.lng, jb.lng, i);
				jh.lat = this.calcNewLatByBounds(jn, jd, jf, jg.lat, jb.lat, i);
				return jh
			}
			var je = this.pixelToPointIn(new eL(0, 0), {
				center: jh,
				zoom: e
			});
			var ja = this.pixelToPointIn(new eL(0, this.height), {
				center: jh,
				zoom: e
			});
			if (this.zoomLevel < 5) {
				if (je.lat > gV.MAX_LAT && ja.lat < gV.MIN_LAT) {
					this.isRestrict = true;
					var T = gV.MAX_LAT - jh.lat;
					var jc = jh.lat - gV.MIN_LAT;
					var jl;
					if (T < jc) {
						jl = T / (this.height / 2)
					} else {
						jl = jc / (this.height / 2)
					}
					var jj = 18 - m(jl);
					this.zoomLevel = Math.ceil(jj);
					jh.zoom = Math.ceil(jj);
					return jh
				}
			}
			if (je.lat > gV.MAX_LAT) {
				this.isRestrict = true;
				jh.lat = gV.MAX_LAT - this.height / 2 * i
			} else {
				if (ja.lat < gV.MIN_LAT) {
					this.isRestrict = true;
					jh.lat = gV.MIN_LAT + this.height / 2 * i
				}
			}
			return jh
		}
	});

	function gV(e, T) {
		if (typeof e === "string") {
			e = document.getElementById(e)
		}
		cJ.call(this);
		this.container = e;
		this.width = e.clientWidth;
		this.height = e.clientHeight;
		this.offsetX = 0;
		this.offsetY = 0;
		this._setStyle(e);
		e.unselectable = "on";
		e.innerHTML = "";
		es.ac(e, "bmap-container");
		e.appendChild(this.render());
		this._initDate = new Date();
		this.platform = e.children[0];
		this.maskLayer = this.platform.children[0];
		this._panes = {};
		this.centerPoint = new cd(0, 0);
		this.zoomLevel = 0;
		this._heading = 0;
		this._tilt = 0;
		this._bounds = new ha();
		this.lastLevel = 0;
		this._lock = false;
		this._enableTiltZoom = 7;
		this._enableHeadingZoom = 7;
		this.defaultZoomLevel = null;
		this.defaultCenter = null;
		this.zoomEventStatus = "idle";
		this.currentOperation = dI.idle;
		this._setConfig(T);
		this._initMapRenderType();
		this._animationInfo = {};
		this._animationInfoUnstopable = {};
		this.suspendLoad = false;
		this._customTileLabels = [];
		if (this._renderType === "webgl") {
			this._workerMgr = new iv(this);
			this._featureMgr = new bX();
			es.extend(this, x.prototype);
			this.jobScheduler = new ba(this);
			this.benchmark = new cB();
			this._setupWebGLMap();
			this.deviceInfo = {
				hardwareInfo: {
					renderer: "",
					vendor: ""
				}
			};
			if (cH.ifSupportWebGL._renderer) {
				this.deviceInfo.hardwareInfo.renderer = cH.ifSupportWebGL._renderer;
				this.deviceInfo.hardwareInfo.vendor = cH.ifSupportWebGL._vendor
			}
		} else {
			es.extend(this, hV.prototype)
		}
		if (!dO[this.config.mapType]) {
			this.config.mapType = BMAPGL_NORMAL_MAP
		}
		if (this.config.mapType === BMAP_EARTH_MAP && !this.config.enableEarth) {
			if (this.forceEnableEarth() === false) {
				this.config.mapType = BMAPGL_NORMAL_MAP
			}
		}
		this.mapType = this.config.mapType;
		this.preMapType = null;
		if (this.config.enableEarth) {
			var jb = this.maskLayer.style;
			jb.opacity = 0;
			jb.background = "#000";
			if (this.config.mapType === BMAP_EARTH_MAP) {
				jb.opacity = 1
			}
			setTimeout(function() {
				jb.WebkitTransition = jb.transition = "opacity .4s"
			}, 100)
		}
		this._isHybridShow = this.config.showStreetLayer;
		this.temp = {
			operating: false,
			arrow: 0,
			lastDomMoveTime: 0,
			lastLoadTileTime: 0,
			lastMovingTime: 0,
			canKeyboard: false,
			I: function(i) {
				return es.I(i)
			},
			curSpots: [],
			curSpotsArray: [],
			curAreaSpot: null,
			spotsGuid: 1,
			registerIndex: -1,
			hoverOnSpot: null,
			isStdCtrlBusy: false
		};
		window.InstanceCore = this.temp.I;
		this.platform.style.cursor = this.config.defaultCursor;
		this._bind();
		for (var i9 = 0; i9 < bo._register.length; i9++) {
			bo._register[i9](this)
		}
		this.temp.registerIndex = i9;
		var ja = this;
		if (this._renderType === "webgl") {
			gi.load("oppcgl", function() {
				ja._asyncRegister()
			})
		} else {
			gi.load("oppc", function() {
				ja._asyncRegister()
			})
		}
		if (this.config.mapType === "B_EARTH_MAP") {
			if (!bo.Earth) {
				gi.load("earth", function() {})
			} else {
				ja._syncAndChangeMapType("B_EARTH_MAP")
			}
		}
	}
	gV.MAX_TILT = 87;
	gV.MAX_DRAG_TILT = 73;
	gV.MAX_DRAG_TILT_L2 = 50;
	gV.MIN_TILT = 0;
	gV.MAX_LAT = 19431424;
	gV.MIN_LAT = -16023552;
	gV.WORLD_SIZE_MC_HALF = 20037726.372307256;
	gV.WORLD_SIZE_MC = gV.WORLD_SIZE_MC_HALF * 2;
	gV.RIGHT_EDGE_POINT = new cd(gV.WORLD_SIZE_MC_HALF, 0);
	gV.LEFT_EDGE_POINT = new cd(-gV.WORLD_SIZE_MC_HALF, 0);
	gV.HIGH_RES_MIN_RATIO = 1.2;
	gV.inherits(cJ, "Map");
	var eT = {
		NORMAL: "B_NORMAL_MAP",
		EARTH: "B_EARTH_MAP",
		SATELLITE: "B_STREET_MAP"
	};
	bo.MapTypeId = eT;
	es.extend(gV.prototype, {
		render: function() {
			var e = bK("div", {
				id: "platform"
			});
			var i9 = e.style;
			i9.overflow = "visible";
			i9.position = "absolute";
			i9.zIndex = 5;
			i9.top = i9.left = "0px";
			var i = bK("div", {
				id: "mask",
				"class": "BMap_mask"
			});
			var T = i.style;
			T.position = "absolute";
			T.top = T.left = "0px";
			T.zIndex = "9";
			T.overflow = "hidden";
			T.WebkitUserSelect = "none";
			T.width = this.width + "px";
			T.height = this.height + "px";
			e.appendChild(i);
			return e
		},
		_initMapRenderType: function() {
			var e = this.config.forceRenderType;
			if (e === "dom") {
				this._renderType = "dom";
				return
			} else {
				if (e === "canvas") {
					if (cH.isModernBrowser && !cH.ifCanvas2dInBlackList()) {
						this._renderType = "canvas";
						return
					} else {
						this._renderType = "dom";
						return
					}
				} else {
					if (e === "webgl") {
						if (cH.ifSupportWebGL()) {
							this._renderType = "webgl";
							return
						}
					}
				}
			}
			if (cH.ifSupportWebGL() && cH.ifEnableWebGLMap()) {
				this._renderType = "webgl";
				return
			}
			if (cH.isModernBrowser && cH.ifEnableCanvas2dMap()) {
				this._renderType = "canvas";
				return
			}
			this._renderType = "dom"
		},
		_setConfig: function(i) {
			i = i || {};
			this.config = {
				bottomOffset: 0,
				clickInterval: 200,
				enableDragging: true,
				enableRotate: true,
				enableTilt: true,
				enableKeyboard: false,
				enableDblclickZoom: true,
				enableContinuousZoom: true,
				enableWheelZoom: false,
				enableRotateGestures: true,
				enableTiltGestures: true,
				enablePinchZoom: true,
				fixCenterWhenPinch: false,
				enableAutoResize: true,
				zoomCenter: null,
				fps: es.Browser.ie ? 30 : 60,
				zoomerDuration: 240,
				actionDuration: 450,
				defaultCursor: w.defaultCursor,
				draggingCursor: w.draggingCursor,
				overlayMoveCursor: "pointer",
				coordType: BMAP_COORD_MERCATOR,
				mapType: BMAPGL_NORMAL_MAP,
				drawer: BMAP_SYS_DRAWER,
				enableInertialDragging: true,
				drawMargin: 500,
				drawMarginGL: 500,
				enableFulltimeSpotClick: false,
				enableResizeOnCenter: false,
				isModernBrowser: cH.isModernBrowser,
				forceRenderType: "",
				textRenderType: null,
				ratio: fz() >= gV.HIGH_RES_MIN_RATIO ? 2 : 1,
				enableEarth: cH.ifEnableEarth(),
				defaultMaxBounds: new ha(new cd(-21364736, -10616832), new cd(23855104, 15859712)),
				showControls: false,
				showRealSunlight: true,
				showMilkyway: true,
				earthBackground: null,
				showStreetLayer: true,
				minZoom: null,
				maxZoom: null,
				style: "default",
				backgroundColor: null,
				enableIconClick: false,
				autoSafeArea: false,
				ak: null,
				webgl2: false,
				restrictCenter: true,
				restrictBounds: null,
				smaa: true,
				preserveDrawingBuffer: false,
				privateOn: false,
				privateRegions: null
			};
			for (var T in i) {
				if (i.hasOwnProperty(T)) {
					this.config[T] = i[T];
					if (T === "fixCenterWhenResize") {
						this.config.enableResizeOnCenter = i[T]
					}
				}
			}
			if (i.style) {
				if (i.style["styleId"] && i.style["styleId"].length < 32) {
					this.config.style = i.style["styleId"]
				} else {
					this.config.style = i.style
				}
			}
			this._setTextRenderType();
			this._displayOptions = {
				poi: true,
				poiText: true,
				poiIcon: true,
				overlay: true,
				layer: true,
				building: true,
				indoor: true,
				street: true,
				skyColors: ["rgba(226, 237, 248, 0)", "rgba(186, 211, 252, 1)"],
				isFlat: false,
				labelMargin: 0
			};
			if (i.displayOptions) {
				for (var e in i.displayOptions) {
					if (i.displayOptions.hasOwnProperty(e)) {
						this._displayOptions[e] = i.displayOptions[e]
					}
				}
			}
			if (this.config.restrictCenter === false) {
				this._enableTiltZoom = 0;
				this._enableHeadingZoom = 0
			}
		},
		getMinZoom: function() {
			var T;
			if (dO[this.mapType][this._renderType]) {
				T = dO[this.mapType][this._renderType].minZoom
			} else {
				T = dO[this.mapType].minZoom
			}
			if (this.config.minZoom !== null && this.config.minZoom >= T) {
				T = this.config.minZoom
			}
			if (this.mapType === "B_EARTH_MAP") {
				return T
			}
			var i = this.getSize();
			var e = this.worldSize(T);
			while (e < i.width) {
				T++;
				e = this.worldSize(T)
			}
			return T
		},
		getMaxZoom: function() {
			var e;
			if (dO[this.mapType][this._renderType]) {
				e = dO[this.mapType][this._renderType].maxZoom
			} else {
				e = dO[this.mapType].maxZoom
			}
			if (this.config.maxZoom !== null && this.config.maxZoom <= e) {
				e = this.config.maxZoom
			} else {
				if (this._renderType === "webgl") {
					e = 21
				}
			}
			return e
		},
		_drawFrame: function() {
			this._webglMapScene._painter.draw()
		},
		_setupWebGLMap: function() {
			var e = this;
			gi.load("mapgl", function() {
				e._asyncRegister()
			})
		},
		_setStyle: function(i) {
			var e = i.style;
			e.overflow = "hidden";
			if (b0(i)
				.position !== "absolute") {
				e.position = "relative"
			}
			e.backgroundImage = "url(" + w.imgPath + "bg.png)";
			e.textAlign = "left";
			e.touchAction = e.MSTouchAction = "none"
		},
		_bind: function() {
			var e = this;
			if (e._renderType !== "webgl") {
				e._watchSize = function() {
					var T = e.getContainerSize();
					if (e.width !== T.width || e.height !== T.height) {
						var jc = (T.width - e.width) / 2;
						var je = (T.height - e.height) / 2;
						var i9 = e.getZoomUnits();
						var jb = e.centerPoint;
						if (jb && !e.config.enableResizeOnCenter) {
							e.centerPoint = new cd(jb.lng + jc * i9, jb.lat - je * i9)
						}
						e.maskLayer.style.width = (e.width = T.width) + "px";
						e.maskLayer.style.height = (e.height = T.height) + "px";
						var ja = new e7("onresize");
						ja.size = T;
						e.dispatchEvent(ja);
						e.fire(new e7("onsize_changed"));
						var i = parseInt(e.platform.style.left, 10) || 0;
						var jd = parseInt(e.platform.style.top, 10) || 0;
						if (e.currentOperation !== "undefined" && e.currentOperation !== dI.idle && (e.offsetX !== i || e.offsetY !== jd)) {
							e._setPlatformPosition(i, jd)
						}
					}
				}
			} else {
				e._watchSize = function() {
					var i = e.getContainerSize();
					if (e.width !== i.width || e.height !== i.height) {
						var i9 = e.getSize();
						e.maskLayer.style.width = (e.width = i.width) + "px";
						e.maskLayer.style.height = (e.height = i.height) + "px";
						if (fz() !== e.config.ratio) {
							e.config.ratio = fz()
						}
						var ja = new e7("onresize");
						ja.size = i;
						e.dispatchEvent(ja);
						var T = new e7("onsize_changed");
						T.size = i;
						T.oldSize = i9;
						e.fire(T)
					}
				}
			}
			if (e.config.enableAutoResize) {
				e.temp.autoResizeTimer = setInterval(e._watchSize, 16)
			}
			this.on("size_changed", function() {
				var i = e.getMinZoom();
				if (e.zoomLevel < i) {
					e.setZoomIn(i, {
						noAnimation: true
					})
				}
			});
			this.on("zoom_changed", function() {
				this.dispatchEvent(new e7("onzooming"))
			})
		},
		addControl: function(e) {
			if (e && bG(e._i)) {
				e._i(this);
				this.dispatchEvent(new e7("onaddcontrol", e))
			}
		},
		removeControl: function(e) {
			if (e && bG(e.remove)) {
				e.remove();
				this.dispatchEvent(new e7("onremovecontrol", e))
			}
		},
		addContextMenu: function(e) {
			if (e) {
				e.initialize(this);
				this.dispatchEvent(new e7("onaddcontextmenu", e))
			}
		},
		removeContextMenu: function(e) {
			if (e) {
				this.dispatchEvent(new e7("onremovecontextmenu", e));
				e.remove()
			}
		},
		addDistrictLayer: function(e) {
			if (e) {
				e.initialize(this)
			}
		},
		removeDistrictLayer: function(e) {
			if (e) {
				e.removeDistrict(this, e)
			}
		},
		addOverlay: function(i) {
			if (i && bG(i._i)) {
				var T = new e7("onbeforeaddoverlay", i);
				T.overlay = i;
				this.dispatchEvent(T);
				i._i(this);
				T = new e7("onaddoverlay", i);
				T.overlay = i;
				this.dispatchEvent(T)
			}
		},
		removeOverlay: function(i) {
			if (i && bG(i.remove)) {
				var T = new e7("onremoveoverlay", i);
				T.overlay = i;
				i.remove();
				this.dispatchEvent(T)
			}
		},
		clearOverlays: function() {
			this.dispatchEvent(new e7("onclearoverlays"))
		},
		addTileLayer: function(ja) {
			if (!ja) {
				return
			}
			for (var i9 = 0, e = this.tileMgr.tileLayers.length; i9 < e; i9++) {
				var T = this.tileMgr.tileLayers[i9];
				if (T === ja || T.getMapType() === ja.getMapType()) {
					return
				}
			}
			ja.initialize(this);
			this.dispatchEvent(new e7("onaddtilelayer", ja))
		},
		removeTileLayer: function(e) {
			if (e) {
				e.remove();
				this.dispatchEvent(new e7("onremovetilelayer", e))
			}
		},
		getTileLayer: function(e) {
			if (this.tileMgr) {
				return this.tileMgr.getTileLayer(e)
			}
			return null
		},
		setMapType: function(e) {
			var i = this;
			if (this.mapType === e || this._mapTypeChanging) {
				return
			}
			if (e === BMAP_EARTH_MAP && !this.config.enableEarth) {
				return
			}
			if (this._earth && this._earth.getLock()) {
				return
			}
			this._mapTypeChanging = true;
			this.preMapType = this.mapType;
			this._boundsInPreMapType = this.getBoundsIn();
			if (this.preMapType === BMAP_SATELLITE_MAP) {
				this._preStreetLayerShow = this._isHybridShow
			}
			if (e === BMAP_EARTH_MAP) {
				if (!bo.Earth) {
					gi.load("earth", function() {
						i._syncAndChangeMapType(e)
					});
					return
				}
				i._syncAndChangeMapType(e)
			} else {
				if (this.preMapType !== BMAP_EARTH_MAP) {
					this._changeFlatMapType(e);
					this._mapTypeChanging = false
				} else {
					this._setMapTypeStatus(e, function(T, i9) {
						var ja = i._earth.getEarthCanvas();
						i._changeFlatMapType(e, this.preMapType);
						if (i._mapTypeChangAni) {
							i._mapTypeChangAni.stop()
						}
						i._mapTypeChangAni = cY.start({
							el: ja,
							style: "opacity",
							startValue: 1,
							endValue: 0,
							duration: 200,
							callback: function() {
								i._mapTypeChangAni = null;
								i._mapTypeChanging = false
							}
						});
						T = ia.convertLL2MC(T);
						if (i._renderType === "webgl") {
							es.extend(i, x.prototype);
							i.setCenterIn(T, {
								noAnimation: true
							});
							i.setZoomIn(i9, {
								noAnimation: true
							})
						} else {
							es.extend(i, hV.prototype);
							i.centerAndZoomIn(T, i9)
						}
					})
				}
			}
		},
		_changeFlatMapType: function(jc) {
			if (!jc || !dO[jc]) {
				return
			}
			var jk = this.preMapType;
			this.mapType = jc;
			var i9 = this.getTileLayer(jk);
			if (i9) {
				this.removeTileLayer(i9)
			} else {
				if (this.tileMgr.tileLayers.length) {
					var jj = this.getTileLayer("B_NORMAL_MAP");
					if (jj) {
						this.removeTileLayer(jj)
					} else {
						jj = this.getTileLayer("B_SATELLITE_MAP");
						jj && this.removeTileLayer(jj)
					}
				}
			}
			this._preStreetLayerShow = this.config.showStreetLayer;
			if (jk === BMAP_SATELLITE_MAP && this._preStreetLayerShow) {
				this._removeHybirdMap()
			}
			if (this.mapType !== BMAP_EARTH_MAP || this._renderType !== "webgl" || this.baseLayerAdded !== true) {
				var T = new ha(new cd(-21364736, -10616832), new cd(23855104, 15859712));
				var jh = new h(T, "baidu", jc);
				var ja = new gI({
					mapType: this.mapType,
					copyright: jh,
					dataType: this.mapType === BMAP_SATELLITE_MAP ? fY : gT,
					customLayer: this.mapType === BMAP_SATELLITE_MAP,
					baseLayer: true,
					transparentPng: true,
					tileTypeName: this.mapType === BMAP_SATELLITE_MAP ? "web" : "na"
				});
				ja._isInnerLayer = true;
				ja.setZIndex(0);
				this.addTileLayer(ja);
				if (this._renderType === "webgl" && !this.baseLayerAdded) {
					this.baseLayerAdded = true
				}
			}
			if (jc === BMAP_SATELLITE_MAP) {
				this._featureMgr.clearLabelOverlayData();
				this._featureMgr.setLabelData([]);
				if (this._preStreetLayerShow === true || typeof this._preStreetLayerShow === "undefined") {
					this._addHybirdMap()
				}
			}
			var je = this.tileMgr.tileLayers;
			for (var jd = 0, jb = je.length; jd < jb; jd++) {
				var jf = je[jd];
				var ji = jf.tilesDiv;
				if (!ji) {
					continue
				}
				if (!jf._isInnerLayer && ji.style.visibility === "hidden") {
					ji.style.visibility = ""
				}
			}
			var jg = new e7("onmaptypechange");
			jg.zoomLevel = this.zoomLevel;
			jg.mapType = jc;
			jg.exMapType = jk;
			this.dispatchEvent(jg)
		},
		showStreetLayer: function(e) {
			e ? this._addHybirdMap() : this._removeHybirdMap()
		},
		hideStreetLayer: function(e) {
			this._hideStreetLayerOptions = e;
			this._removeHybirdMap(e)
		},
		_addHybirdMap: function() {
			this._isHybridShow = true;
			if (this.mapType === "B_EARTH_MAP") {
				if (this._earth) {
					this._earth.showStreetLayer()
				}
				return
			}
			if (this._hybridTileLayer) {
				this.addTileLayer(this._hybridTileLayer);
				var jc = new e7("onstreetlayer_show");
				this.dispatchEvent(jc);
				return
			}
			var ja = new ha(new cd(-21364736, -10616832), new cd(23855104, 15859712));
			var T = new h(ja, "", BMAP_HYBRID_MAP);
			var i = new gI({
				copyright: T,
				transparentPng: true,
				tileTypeName: "web"
			});
			i._isInnerLayer = true;
			var i9 = this.isCanvasMap();
			i.getTilesUrl = function(jd, ji) {
				var jg = dO.B_STREET_MAP;
				var jh = iO("ditu", "satelliteStreet");
				var je = jh.ver;
				var e = jh.udt;
				var jf = jg.tileUrls[Math.abs(jd.x + jd.y) % jg.tileUrls.length] + "?qt=vtile&x=" + (jd.x + "")
					.replace(/-/gi, "M") + "&y=" + (jd.y + "")
					.replace(/-/gi, "M") + "&z=" + ji + "&styles=sl&v=" + je + "&udt=" + e + "$scaler=" + fz() + "&showtext=" + (i9 ? 0 : 1);
				return jf
			};
			this._isHybridShow = true;
			this.addTileLayer(i);
			this._hybridTileLayer = i;
			var jb = new e7("onstreetlayer_show");
			this.dispatchEvent(jb)
		},
		_removeHybirdMap: function(i) {
			this._isHybridShow = false;
			if (this.mapType === "B_EARTH_MAP") {
				if (this._earth) {
					this._earth.hideStreetLayer(i)
				}
				return
			}
			if (this._hybridTileLayer) {
				this.removeTileLayer(this._hybridTileLayer);
				var T = new e7("onstreetlayer_hide");
				this.dispatchEvent(T)
			}
		},
		isStreetLayerShow: function() {
			return this._isHybridShow
		},
		getTileId: function(e, jb) {
			var i9 = dO[this.mapType];
			if (typeof i9 !== "object") {
				return null
			}
			var T = i9.baseUnits * Math.pow(2, (i9.zoomLevelBase - jb));
			var ja = parseInt(e.lng / T, 10);
			var i = parseInt(e.lat / T, 10);
			return {
				row: ja,
				column: i,
				level: jb
			}
		},
		reset: function() {
			this.centerAndZoomIn(this.defaultCenter, this.defaultZoomLevel, true)
		},
		setOptions: function(i) {
			i = i || {};
			var ja = this;
			for (var i9 in i) {
				if (i.hasOwnProperty(i9)) {
					var T = true;
					if (typeof i[i9] !== "object") {
						T = i[i9] !== this.config[i9]
					}
					this.config[i9] = i[i9];
					if (i9 === "fixCenterWhenResize") {
						this.config.enableResizeOnCenter = i[i9]
					}
					if (!T) {
						continue
					}
					switch (i9) {
						case "style":
						case "styleUrl":
							var e = {
								os: i.style.os,
								sv: i.style.sv
							};
							if (i9 === "style" && i.styleUrl) {
								break
							}
							this.fire(new e7("onstyle_willchange"));
							this.loadMapStyleFiles(function() {
								var jb = new e7("onlayer_update");
								jb.name = "na";
								ja.fire(jb)
							}, e);
							break;
						case "enableAutoResize":
							if (i[i9] === true) {
								this.enableAutoResize()
							} else {
								this.disableAutoResize()
							}
							break;
						case "displayOptions":
							this.setDisplayOptions(i[i9]);
							break
					}
				}
			}
		},
		setPrivateStatus: function(i) {
			if (typeof i === "boolean") {
				if (this.config.privateOn !== i) {
					this.config.privateOn = i;
					var e = new e7("onlayer_update");
					e.name = "na";
					this.fire(e)
				}
			}
		},
		getPrivateStatus: function() {
			return this.config.privateOn
		},
		setPrivateRegions: function(ja) {
			if (ja && ja instanceof Array) {
				var i9 = true;
				for (var T = 0; T < ja.length; T++) {
					if (ja[T] instanceof cp) {
						continue
					} else {
						i9 = false;
						break
					}
				}
				if (i9) {
					this.config.privateRegions = ja;
					var e = new e7("onlayer_update");
					e.name = "na";
					this.fire(e)
				}
			}
		},
		getPrivateRegions: function() {
			if (!this.config.privateRegions) {
				return null
			} else {
				return this.config.privateRegions
			}
		},
		enableDragging: function() {
			this.config.enableDragging = true
		},
		disableDragging: function() {
			this.config.enableDragging = false
		},
		enableInertialDragging: function() {
			this.config.enableInertialDragging = true
		},
		disableInertialDragging: function() {
			this.config.enableInertialDragging = false
		},
		enableScrollWheelZoom: function() {
			this.config.enableWheelZoom = true
		},
		disableScrollWheelZoom: function() {
			this.config.enableWheelZoom = false
		},
		enableContinuousZoom: function() {
			this.config.enableContinuousZoom = true
		},
		disableContinuousZoom: function() {
			this.config.enableContinuousZoom = false
		},
		enableResizeOnCenter: function() {
			this.config.enableResizeOnCenter = true
		},
		disableResizeOnCenter: function() {
			this.config.enableResizeOnCenter = false
		},
		enableDoubleClickZoom: function() {
			this.config.enableDblclickZoom = true
		},
		disableDoubleClickZoom: function() {
			this.config.enableDblclickZoom = false
		},
		enableKeyboard: function() {
			this.config.enableKeyboard = true
		},
		disableKeyboard: function() {
			this.config.enableKeyboard = false
		},
		getSize: function() {
			return new h3(this.width, this.height)
		},
		enablePinchToZoom: function() {
			this.config.enablePinchZoom = true
		},
		disablePinchToZoom: function() {
			this.config.enablePinchZoom = false
		},
		enableTilt: function() {
			this.config.enableTilt = true
		},
		disableTilt: function() {
			this.config.enableTilt = false
		},
		enableRotate: function() {
			this.config.enableRotate = true
		},
		disableRotate: function() {
			this.config.enableRotate = false
		},
		enableAutoResize: function() {
			this.config.enableAutoResize = true;
			this._watchSize();
			if (!this.temp.autoResizeTimer) {
				this.temp.autoResizeTimer = setInterval(this._watchSize, 16)
			}
		},
		disableAutoResize: function() {
			this.config.enableAutoResize = false;
			if (this.temp.autoResizeTimer) {
				clearInterval(this.temp.autoResizeTimer);
				this.temp.autoResizeTimer = null
			}
		},
		checkResize: function() {
			this._watchSize()
		},
		resize: function() {
			this._watchSize()
		},
		getContainerSize: function() {
			return new h3(this.container.clientWidth, this.container.clientHeight)
		},
		_getProperZoom: function(T) {
			if (!T) {
				T = this.zoomLevel
			}
			var i = this.getMinZoom();
			var e = this.getMaxZoom();
			var i9 = false;
			if (T < i) {
				i9 = true;
				T = i
			}
			if (T > e) {
				i9 = true;
				T = e
			}
			if (this._renderType !== "webgl") {
				T = Math.round(T)
			}
			return {
				zoom: T,
				exceeded: i9
			}
		},
		getContainer: function() {
			return this.container
		},
		getZoomUnits: function(T) {
			if (this.mapType === BMAP_EARTH_MAP) {
				return Math.pow(2, 18 - this._earth.getImageZoom())
			}
			var e = dO[this.mapType];
			if (typeof e !== "object") {
				return null
			}
			var i = T || this.zoomLevel;
			return Math.pow(2, (e.zoomLevelBase - i))
		},
		pointToPixelIn: function(jk, jm) {
			if (!jk) {
				return
			}
			jm = jm || {};
			if (this.mapType === BMAP_EARTH_MAP) {
				var jb;
				if (!jk._llPt) {
					jb = ia.convertMC2LL(jk);
					jk._llPt = jb
				}
				jb = jk._llPt;
				var jg = null;
				var ja = null;
				if (typeof jm.zoom === "number") {
					var jj = this._earth;
					var jl = jj._getEarthZoomByImgZoom(jm.zoom);
					if (jl <= 3) {
						jg = jj._generateTmpPMatrix(jl)
					}
					ja = jj._generateTmpMVMatrix(jj.getCenter(), jl)
				}
				var jc = this._earth.fromLatLngToPixel(jb, {
					useRound: false,
					isCalcOnBack: true,
					matrixInfo: {
						modelViewMatrix: ja,
						projectionMatrix: jg
					}
				});
				return jc
			}
			if ((this._heading % 360 === 0 && this._tilt === 0) || !this._webglMapCamera) {
				var ji = this.getZoomUnits(jm.zoom);
				var je = jm.center || this.centerPoint;
				var i9 = this.width / 2;
				var jd = this.height / 2;
				var jh;
				if (jk.lng * je.lng < 0) {
					var i = Math.abs(jk.lng - je.lng);
					var e = (ev._mc180X * 2 - i) / ji;
					if (je.lng < 0) {
						jh = i9 - e
					} else {
						jh = i9 + e
					}
				} else {
					jh = (jk.lng - je.lng) / ji + i9
				}
				var jf = (je.lat - jk.lat) / ji + jd;
				if (jm.useRound !== false) {
					jh = Math.round(jh);
					jf = Math.round(jf)
				}
				return new eL(jh, jf)
			}
			var T = this._webglMapCamera.fromMCToScreenPixel(jk.lng, jk.lat, jm);
			if (jm.useRound === false) {
				return T
			}
			T.x = Math.round(T.x);
			T.y = Math.round(T.y);
			return T
		},
		pixelToPointIn: function(e, jg) {
			if (!e) {
				return
			}
			jg = jg || {};
			if (this.mapType === BMAP_EARTH_MAP) {
				if (typeof jg.zoom === "number") {
					var je = this._earth;
					var jb = null;
					var T = null;
					var jf = je._getEarthZoomByImgZoom(jg.zoom);
					if (jf <= 3) {
						jb = je._generateTmpPMatrix(jf)
					}
					T = je._generateTmpMVMatrix(je.getCenter(), jf)
				}
				var i = this._earth.fromPixelToLatLng(e, {
					matrixInfo: {
						modelViewMatrix: T,
						projectionMatrix: jb
					}
				});
				if (i === null) {
					return null
				}
				return ia.convertLL2MC(i)
			}
			if ((this._heading % 360 !== 0 || this._tilt > 0) && this._webglMapCamera) {
				return this._webglMapCamera.fromScreenPixelToMC(e.x, e.y, jg)
			}
			var jc = jg.center || this.centerPoint;
			var jd = this.getZoomUnits(jg.zoom);
			var ja = jc.lng + jd * (e.x - this.width / 2);
			var i9 = jc.lat - jd * (e.y - this.height / 2);
			return new cd(ja, i9)
		},
		pointToOverlayPixelIn: function(e, i9) {
			i9 = i9 || {};
			var T = this.pointToPixelIn(e, {
				zoom: i9.zoom,
				center: i9.center,
				forLabel: true,
				frustumTest: true,
				useRound: i9.useRound
			});
			if (!T) {
				return
			}
			if (i9.fixPosition && this.mapType !== "B_EARTH_MAP") {
				var ja = this.getSize();
				var i = this.worldSize(i9.zoom);
				if (T.x > ja.width) {
					while (T.x > ja.width) {
						T.x -= i
					}
				} else {
					if (T.x < 0) {
						while (T.x < 0) {
							T.x += i
						}
					}
				}
			}
			if (this._renderType === "webgl") {
				return T
			}
			T.x -= this.offsetX;
			T.y -= this.offsetY;
			return T
		},
		overlayPixelToPointIn: function(i, e) {
			if (!i) {
				return
			}
			var T = i.clone();
			if (this._renderType !== "webgl") {
				T.x += this.offsetX;
				T.y += this.offsetY
			}
			return this.pixelToPointIn(T, e)
		},
		getProjection: function() {
			return new ia()
		},
		lnglatToMercator: function(e, i9) {
			var i = new cd(e, i9);
			var T = ia.convertLL2MC(i);
			return [T.lng, T.lat]
		},
		mercatorToLnglat: function(i, e) {
			if (isNaN(i) || isNaN(e)) {
				return []
			}
			i = parseFloat(i);
			e = parseFloat(e);
			var i9 = new cd(i, e);
			var T = ia.convertMC2LL(i9);
			return [T.lng, T.lat]
		},
		getBoundsIn: function() {
			var jm = arguments[0];
			if (this.mapType === BMAP_EARTH_MAP && this._earth) {
				var jg = this._earth.getCustomBounds();
				if (!jg) {
					return this.config.defaultMaxBounds
				}
				var jf = jg.getSouthWest();
				var e = jg.getNorthEast();
				if (jf.lng > e.lng) {
					e.lng = 180
				}
				var jD = ia.convertLL2MC(jf);
				var jt = ia.convertLL2MC(e);
				var jj = this.config.defaultMaxBounds;
				var js = Math.max(jD.lng, jj.sw.lng);
				var jr = Math.max(jD.lat, jj.sw.lat);
				var jl = Math.min(jt.lng, jj.ne.lng);
				var jk = Math.min(jt.lat, jj.ne.lat);
				var jo = new ha(new cd(js, jr), new cd(jl, jk));
				jo.pointBottomLeft = new cd(js, jr);
				jo.pointBottomRight = new cd(jl, jr);
				jo.pointTopLeft = new cd(js, jk);
				jo.pointTopRight = new cd(jl, jk);
				jo.setMinMax();
				jo.makeNormalizedPoint(this._earth.getHeading());
				return jo
			}
			jm = jm || {};
			var ja = jm.margins || [0, 0, 0, 0];
			var jy = this.pixelToPointIn({
				x: ja[3],
				y: this.height - ja[2]
			}, jm);
			var jC = this.pixelToPointIn({
				x: this.width - ja[1],
				y: ja[0]
			}, jm);
			var jq = typeof jm.heading === "number" ? jm.heading : (this._heading % 360);
			var T = typeof jm.tilt === "number" ? jm.tilt : this._tilt;
			var ji = this._webglMapCamera;
			if ((jq === 0 && T === 0) || !ji) {
				this._bounds.setSouthWest(jy);
				this._bounds.setNorthEast(jC);
				this._bounds.pointBottomLeft = jy;
				this._bounds.pointBottomRight = new cd(jC.lng, jy.lat);
				this._bounds.pointTopRight = jC;
				this._bounds.pointTopLeft = new cd(jy.lng, jC.lat);
				this._bounds.setMinMax();
				this._bounds.makeNormalizedPoint(jq);
				return this._bounds
			}
			var jp = this.pixelToPointIn({
				x: ja[3],
				y: ja[0]
			}, jm);
			var i9 = ji.getPosition();
			var jE = Math.sqrt(Math.pow(jp.lng - i9[0], 2) + Math.pow(jp.lat - i9[1], 2));
			var jz = this.getZoomUnits();
			var jG = jE / jz;
			var jw = ji._frustumSideLen;
			var je = ji._fovy;
			if (jG > jw || (90 - T) < je / 2) {
				var jF = [jp.lng - i9[0], jp.lat - i9[1]];
				if ((90 - T) < je / 2) {
					jF[0] = -jF[0];
					jF[1] = -jF[1]
				}
				var jx = jw * jz;
				var jd = [jF[0] / jE * jx + i9[0], jF[1] / jE * jx + i9[1]];
				var ju = [jC.lng - i9[0], jC.lat - i9[1]];
				if ((90 - T) < je / 2) {
					ju[0] = -ju[0];
					ju[1] = -ju[1]
				}
				var jb = [ju[0] / jE * jx + i9[0], ju[1] / jE * jx + i9[1]];
				jp.lng = jd[0];
				jp.lat = jd[1];
				jC.lng = jb[0];
				jC.lat = jb[1]
			}
			var jn = this.pixelToPointIn({
				x: this.width - ja[1],
				y: this.height - ja[2]
			}, jm);
			var jv = [jy, jC, jp, jn];
			var jB = jv[0].lng;
			var jH = jv[0].lat;
			var jc = jv[0].lng;
			var jh = jv[0].lat;
			for (var jA = 1; jA < 4; jA++) {
				if (jv[jA].lng < jB) {
					jB = jv[jA].lng
				}
				if (jv[jA].lng > jc) {
					jc = jv[jA].lng
				}
				if (jv[jA].lat < jH) {
					jH = jv[jA].lat
				}
				if (jv[jA].lat > jh) {
					jh = jv[jA].lat
				}
			}
			this._bounds.setSouthWest(new cd(jB, jH));
			this._bounds.setNorthEast(new cd(jc, jh));
			this._bounds.pointTopLeft = jp;
			this._bounds.pointTopRight = jC;
			this._bounds.pointBottomRight = jn;
			this._bounds.pointBottomLeft = jy;
			this._bounds.makeNormalizedPoint(jq);
			this._bounds.setMinMax();
			return this._bounds
		},
		isLoaded: function() {
			return !!this.loaded
		},
		_getBestLevel: function(i, ji) {
			var jb = 0;
			if (this._renderType === "webgl" && !bJ()) {
				jb = 100
			}
			var jc = ji.margins || [10, 10, 10, 10];
			var i9 = ji.zoomFactor || 0;
			var jd = jc[1] + jc[3];
			var ja = jc[0] + jc[2];
			var e = this.getMinZoom();
			var jh = this.getMaxZoom();
			var jg = i.toSpan();
			var jf = jg.width / (this.width - jd - jb);
			var je = jg.height / (this.height - ja - jb);
			var T = 18 - m(Math.max(jf, je));
			if (T < e) {
				T = e
			}
			if (T > jh) {
				T = jh
			}
			T += i9;
			if (this._renderType !== "webgl") {
				T = Math.floor(T)
			}
			return T
		},
		getViewportIn: function(ji, ja) {
			if (this.mapType === BMAP_EARTH_MAP) {
				ji = ji || [];
				var jc = [];
				for (var jj = 0; jj < ji.length; jj++) {
					if (!ji[jj]) {
						continue
					}
					jc.push(ia.convertMC2LL(ji[jj]))
				}
				var jk = this._earth.getViewportIn(jc, ja);
				var i9 = jk.center;
				var jg = jk.zoom;
				var jo = ia.convertLL2MC(i9);
				return {
					center: jo,
					zoom: jg
				}
			}
			var je = {
				center: this.getCenterIn(),
				zoom: this.getZoom()
			};
			if (!ji || ji.length === 0) {
				return je
			}
			ja = ja || {};
			var jd;
			if (ji instanceof ha) {
				jd = ji
			} else {
				var jb = ji;
				jd = new ha();
				for (var jh = jb.length - 1; jh >= 0; jh--) {
					jd.extend(jb[jh])
				}
				if (jd.isEmpty()) {
					return je
				}
			}
			var jn = jd.getCenter();
			var e = this._getBestLevel(jd, ja);
			if (ja.margins) {
				var T = ja.margins;
				var jm = (T[1] - T[3]) / 2;
				var jf = (T[0] - T[2]) / 2;
				var jl = this.getZoomUnits(e);
				jn.lng = jn.lng + jl * jm;
				jn.lat = jn.lat + jl * jf
			}
			return {
				center: jn,
				zoom: e
			}
		},
		setViewportIn: function(i9, ja) {
			if (this.mapType === BMAP_EARTH_MAP) {
				var je;
				if (i9 && i9.center) {
					var T = ia.convertMC2LL(i9.center);
					var jc = this._earth._getEarthZoomByImgZoom(i9.zoom, T);
					je = {
						center: T,
						zoom: jc
					}
				} else {
					je = [];
					for (var jb = 0; jb < i9.length; jb++) {
						var jd = ia.convertMC2LL(i9[jb]);
						je[jb] = new b8(jd.lat, jd.lng)
					}
				}
				this._earth.setViewportIn(je, ja);
				return
			}
			var e;
			if (i9 && i9.center) {
				e = i9
			} else {
				e = this.getViewportIn(i9, ja)
			}
			ja = ja || {};
			if (this._renderType === "webgl") {
				this.centerAndZoomIn(e.center, e.zoom, ja);
				return
			}
			if (e.zoom === this.zoomLevel && ja.enableAnimation !== false) {
				this.panToIn(e.center, {
					duration: 200,
					callback: ja.callback
				})
			} else {
				this.centerAndZoomIn(e.center, e.zoom, ja)
			}
		},
		addSpots: function(T, i) {
			if (!T || T.length === 0) {
				return
			}
			i = i || {};
			var jb = i.zIndex || 0;
			var ja = typeof i.enableMultiResponse === "undefined" ? true : !!i.enableMultiResponse;
			this.spotsPool = this.spotsPool || {};
			var e = "sp" + (this.temp.spotsGuid++);
			this.spotsPool[e] = {
				spots: T.slice(0),
				zIndex: jb,
				enableMultiResponse: ja
			};
			var i9 = this;
			gi.load("hotspot", function() {
				i9._asyncRegister()
			});
			return e
		},
		getSpots: function(e) {
			return this.spotsPool[e] && this.spotsPool[e].spots || []
		},
		removeSpots: function(e) {
			if (!e || !this.spotsPool[e]) {
				return
			}
			delete this.spotsPool[e]
		},
		clearSpots: function() {
			delete this.spotsPool
		},
		getIconByClickPosition: function(i) {
			if (!this.config.enableIconClick || !this._spotsMgr) {
				return null
			}
			var e = this._spotsMgr.getSpotsByScreenPosition(i);
			if (e[0] && e[0].userdata) {
				var T = e[0].userdata;
				return {
					name: T.name,
					uid: T.uid,
					position: T.iconPoint || e[0].pt
				}
			}
			return null
		},
		setBounds: function(e) {
			dO[this.mapType].bounds = e.clone()
		},
		getCoordType: function() {
			return this.config.coordType
		},
		getPanes: function() {
			return this._panes
		},
		getInfoWindow: function() {
			if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
				return this.temp.infoWin
			}
			return null
		},
		getDistanceIn: function(ja, e) {
			if (!ja || !e) {
				return
			}
			if (ja.equals(e)) {
				return 0
			}
			if (this.mapType === BMAP_EARTH_MAP) {
				var i9 = ia.convertMC2LL(ja);
				var T = ia.convertMC2LL(e);
				return this._earth.getDistance(i9, T)
			}
			var i = ia.getDistanceByMC(ja, e);
			return i
		},
		getOverlays: function() {
			var jb = [];
			var jc = this._overlays;
			var ja = this._customOverlays;
			if (jc) {
				for (var i9 in jc) {
					if (jc[i9] instanceof d6) {
						jb.push(jc[i9])
					}
				}
			}
			if (ja) {
				for (var T = 0, e = ja.length; T < e; T++) {
					jb.push(ja[T])
				}
			}
			return jb
		},
		getMapType: function() {
			return this.mapType
		},
		getMapCoordType: function() {
			return this.coordType
		},
		_asyncRegister: function() {
			for (var e = this.temp.registerIndex; e < bo._register.length; e++) {
				bo._register[e](this)
			}
			this.temp.registerIndex = e
		},
		setDefaultCursor: function(e) {
			this.config.defaultCursor = e;
			if (this.platform) {
				this.platform.style.cursor = this.config.defaultCursor
			}
		},
		getDefaultCursor: function() {
			return this.config.defaultCursor
		},
		setOverlayMoveCursor: function(e) {
			this.config.overlayMoveCursor = e
		},
		getOverlayMoveCursor: function() {
			return this.config.overlayMoveCursor
		},
		setDraggingCursor: function(e) {
			this.config.draggingCursor = e
		},
		getDraggingCursor: function() {
			return this.config.draggingCursor
		},
		_syncAndChangeMapType: function(e) {
			var i = this;
			if (i._renderType === "webgl" && i.getTilt() > gV.MAX_DRAG_TILT_L2) {
				i.setTilt(gV.MAX_DRAG_TILT_L2, {
					callback: function() {
						i._changeEarthMapType(e)
					}
				})
			} else {
				i._changeEarthMapType(e)
			}
		},
		_changeEarthMapType: function(T) {
			var i9 = this;
			var jc = i9.tileMgr.tileLayers;
			if (this._mapTypeChangAni) {
				this._mapTypeChangAni.stop()
			}
			var jb;
			if (this._earth) {
				jb = this._earth.getEarthCanvas()
			}
			if (!this._earth) {
				this.maskLayer.style.opacity = 1;
				this.maskLayer.style.zIndex = 999;
				this.maskLayer.style.background = "#000"
			}
			this._mapTypeChangAni = new e0({
				duration: 400,
				render: function(e) {
					if (!i9._earth) {
						return
					}
					jb.style.opacity = e
				},
				finish: function() {
					for (var e = jc.length - 1, jd = e; jd >= 0; jd--) {
						var jf = jc[jd].tilesDiv;
						if (jf) {
							jf.style.visibility = "hidden"
						}
						if (jc[jd]._isInnerLayer && i9._renderType !== "webgl") {
							i9.removeTileLayer(jc[jd])
						}
					}
					i9._mapTypeChangAni = null;
					i9._mapTypeChanging = false;

					function je() {
						var jj = i9.getZoom() - 2;
						var jk = i9.getCenterIn();
						var jh = ia.convertMC2LL(jk);
						i9._earth = new bo.Earth(i9, {
							center: jh,
							zoom: jj,
							showRealSunlight: i9.config.showRealSunlight,
							showMilkyway: i9.config.showMilkyway,
							earthBackground: i9.config.earthBackground
						});
						i9._proxyEarthEvents();
						var jg = i9.mapType;
						i9.mapType = T;
						var ji = new e7("onmaptypechange");
						ji.zoomLevel = this.zoomLevel;
						ji.mapType = T;
						ji.exMapType = jg;
						i9.dispatchEvent(ji);
						i9._setMapTypeStatus(T);
						es.extend(i9, bo.EarthView.prototype);
						if (!i9._navigationCtrl && i9.config.showControls) {
							i9._navigationCtrl = new eu(i9)
						}
					}
					if (!i9._earth) {
						if (bo["FeatureStyle" + i9.config.style]) {
							je()
						} else {
							i9.loadMapStyleFiles(function() {
								je()
							})
						}
					}
					if (parseInt(i9.maskLayer.style.opacity, 10) === 1) {
						setTimeout(function() {
							i9.maskLayer.style.zIndex = 9;
							i9.maskLayer.style.opacity = 0
						}, 1000)
					}
				}
			});
			if (!this._earth) {
				return
			}
			var i = this.mapType;
			this.mapType = T;
			var ja = new e7("onmaptypechange");
			ja.zoomLevel = this.zoomLevel;
			ja.mapType = T;
			ja.exMapType = i;
			this.dispatchEvent(ja);
			i9._setMapTypeStatus(T);
			es.extend(i9, bo.EarthView.prototype)
		},
		getMapStyleId: function() {
			if (typeof this.config.style === "string") {
				return this.config.style
			}
			return this.config.mapStyleId || "custom"
		},
		_setMapTypeStatus: function(T) {
			var jd = arguments[1];
			if (T === BMAP_EARTH_MAP) {
				var jb = this._earth.getEarthCanvas();
				if (jb) {
					jb.style.display = ""
				}
				var je = {
					noAnimation: true
				};
				this._earth.setCenter(ia.convertMC2LL(this.centerPoint), je);
				this._earth.setImageZoom(this.zoomLevel, je);
				this._earth.setTilt(this.getTilt(), je);
				this._earth.setHeading(this.getHeading(), je)
			} else {
				if (this.preMapType === BMAP_EARTH_MAP && this._earth) {
					var jc = this._earth;
					var i9 = jc.getMapZoom();
					var ja = jc._imageRawZoom || i9;
					var i = ja - i9;
					var e = jc.getCenter();
					if (this._renderType === "webgl") {
						this._tilt = jc.getTilt();
						if (this.zoomLevel > 7) {
							this._heading = jc.getHeading();
							jd && jd(e, i9);
							return
						}
						if (jc.getHeading() !== 0) {
							jc.setTilt(this.getTilt());
							jc.setHeading(this.getHeading(), {
								callback: function() {
									jd && jd(e, i9)
								}
							})
						} else {
							jd && jd(e, i9)
						}
						return
					}
					if (i < 0.1 && jc.getTilt() === 0 && jc.getHeading() === 0) {
						jd && jd(e, i9);
						return
					}
					jc.setTilt(0);
					jc.setHeading(0);
					jc.setZoom(jc.getZoom() - i, {
						callback: function() {
							jd && jd(e, i9)
						}
					})
				}
			}
		},
		_proxyEarthEvents: function() {
			var ja = this;
			var jb = this._earth;
			jb.on("tilesload", function(i) {
				ja.fire(i)
			});
			jb.on("centerandzoom", function(i) {
				ja.dispatchEvent(new e7("onmoveend"));
				ja.dispatchEvent(new e7("onzoomend"))
			});

			function i9(i) {
				ja.fire(i)
			}
			var e = ["zoomstart", "zoomend", "tilesload", "sunlighttime_change", "sunlighttime_clear", "centerandzoom", "animation_start", "animation_stop", "movestart", "moveend", "moving", "dragstart", "dragend", "dragging"];
			for (var T = 0; T < e.length; T++) {
				jb.on(e[T], i9)
			}
		},
		forceEnableEarth: function() {
			this.config.forceEnableEarth = true;
			this.config.enableEarth = cH.ifEnableEarth(true);
			this.dispatchEvent(new e7("forceenableearth"));
			return this.config.enableEarth
		},
		setLock: function(e) {
			if (this.mapType === BMAP_EARTH_MAP) {
				this._earth.setLock(e)
			}
			this._lock = e
		},
		getLock: function() {
			if (this.mapType === BMAP_EARTH_MAP) {
				return this._earth.getLock()
			}
			return this._lock
		},
		getEarth: function() {
			return this._earth
		},
		isSupportEarth: function() {
			return this.config.enableEarth
		},
		isCanvasMap: function() {
			return !!(this._renderType === "canvas" && this.getMapType() !== "B_EARTH_MAP")
		},
		getCanvasMapCoordByUid: function(ja) {
			if (this._renderType === "webgl") {
				var jb = this.tileMgr.tileLayers;
				for (var i9 = 0; i9 < jb.length; i9++) {
					if (jb[i9].labelProcessor) {
						return jb[i9].labelProcessor.getLabelByUid(ja, "")
					}
				}
				return null
			}
			var e = this.canvas2dMapMgr._labelClick;
			var T = e.findLabelByUid(ja);
			return T ? new cd(T.iconPos.geoX, T.iconPos.geoY) : null
		},
		loadBizData: function(i) {
			var e = new e7("onloadbizdata");
			e.data = i;
			this.dispatchEvent(e)
		},
		unloadBizData: function() {
			var e = new e7("onunloadbizdata");
			this.dispatchEvent(e)
		},
		zoomIn: function(e) {
			this.setZoomIn(this.zoomLevel + 1, {
				zoomCenter: e
			})
		},
		zoomOut: function(e) {
			this.setZoomIn(this.zoomLevel - 1, {
				zoomCenter: e
			})
		},
		setMaxZoom: function(e) {
			if (this._renderType === "webgl") {
				this.config.maxZoom = e <= 21 ? e : 21
			} else {
				this.config.maxZoom = e <= 19 ? e : 19
			}
		},
		setMinZoom: function(e) {
			this.config.minZoom = e >= 3 ? e : 3
		},
		setCenterIn: function(e, i) {
			this.panToIn(e, i)
		},
		getRenderType: function() {
			return this._renderType
		},
		getSolarInfo: function(i9) {
			i9 = i9 || this._initDate;
			var T = eZ(i9);
			var e = ia.convertLL2MC(new cd(T[0], T[1]));
			var jh = e.latLng;
			var jc = bo.Projection.convertMC2LL(this.centerPoint);
			var je = i9.getUTCHours();
			var jg = je + 24 * jc.lng / 360;
			var jf = jg - 12;
			var jd = jf * 60 * 0.25;
			var jb = Math.asin(Math.sin(hH(jc.lat)) * Math.sin(hH(jh.lat)) + Math.cos(hH(jc.lat)) * Math.cos(hH(jh.lat)) * Math.cos(hH(jd)));
			var ja = Math.asin(Math.sin(hH(jd)) * Math.cos(hH(jh.lat)) / Math.cos(jb));
			var i = "north";
			if (jc.lat < jh.lat) {
				i = "south"
			}
			return {
				zenith: e,
				solarAltitude: jb,
				solarAzimuth: ja,
				centerPosition: i,
				position: e
			}
		},
		setDisplayOptions: function(T) {
			if (!T) {
				return
			}
			for (var e in this._displayOptions) {
				if (this._displayOptions.hasOwnProperty(e)) {
					if (typeof T[e] === "boolean" || (e === "skyColors" && typeof T.skyColors === "object") || (e === "labelMargin" && typeof T.labelMargin === "number")) {
						this._displayOptions[e] = T[e]
					}
				}
			}
			var i = this.getMapType();
			if (i === eT.NORMAL) {
				this.fire(new e7("ondisplayoptions_changed"))
			} else {
				if (i === eT.EARTH && this._earth) {
					this._earth.fire(new e7("ondisplayoptions_changed"))
				}
			}
		},
		getHorizonPosY: function(e) {
			if (!e || !this._webglMapCamera) {
				return null
			}
			var i = this._webglMapCamera.fromMCToScreenPixel(e.lng, e.lat, {
				heading: 0
			});
			return i.y
		},
		getIndoorInfo: function() {
			if (!this._indoorMgr) {
				return
			}
			return this._indoorMgr.getData()
		},
		showIndoor: function(e, T) {
			var i = new e7("onindoor_status_changed");
			i.uid = e;
			i.floor = T;
			this.fire(i)
		},
		addAreaSpot: function(e, T) {
			if (!e || e.length === 0) {
				return
			}
			T = T || {};
			this.areaSpots = this.areaSpots || {};
			var i = T.id || ("sp" + (this.temp.spotsGuid++));
			this.areaSpots[i] = {
				spot: e,
				userData: T.userData
			};
			var i9 = this;
			gi.load("hotspot", function() {
				i9._asyncRegister()
			});
			return i
		},
		getAreaSpot: function(e) {
			if (this.areaSpots && this.areaSpots[e]) {
				return this.areaSpots[e]
			}
			return null
		},
		removeAreaSpot: function(e) {
			if (!e || !this.areaSpots[e]) {
				return
			}
			delete this.areaSpots[e]
		},
		clearAreaSpots: function() {
			this.areaSpots = {}
		},
		resetSpotStatus: function() {
			this.fire(new e7("onspot_status_reset"))
		},
		hightlightSpotByUid: function(e, T) {
			var i = new e7("onspot_highlight");
			i.uid = e;
			i.tilePosStr = T;
			this.fire(i)
		},
		setZoomIn: function(i, e) {
			e = e || {};
			this.zoomTo(i, e.zoomCenter || null, e)
		},
		restrictBounds: function(e) {
			if (e instanceof ha) {
				this.config.restrictBounds = e;
				this.restrictCenter(this.getCenterIn());
				this.fire(new e7("oncenter_changed"))
			}
		},
		getCurrentMaxTilt: function() {
			var e = this.zoomLevel;
			if (this.mapType === "B_EARTH_MAP") {
				return gV.MAX_DRAG_TILT_L2
			}
			if (this.config.restrictCenter === false) {
				return gV.MAX_DRAG_TILT
			}
			if (e >= 19) {
				return gV.MAX_DRAG_TILT
			} else {
				if (e <= 18) {
					if (e < this._enableTiltZoom) {
						if (e >= this._enableTiltZoom - 2) {
							return (1 - (this._enableTiltZoom - e) / 2) * gV.MAX_DRAG_TILT_L2
						}
						return 0
					}
					return gV.MAX_DRAG_TILT_L2
				} else {
					return (gV.MAX_DRAG_TILT - gV.MAX_DRAG_TILT_L2) * (e - 18) + gV.MAX_DRAG_TILT_L2
				}
			}
		},
		worldSize: function(i) {
			var e = i || this.zoomLevel;
			return gV.WORLD_SIZE_MC / this.getZoomUnits(e)
		},
		setTrafficOn: function(e) {
			if (e && Number(e) > 1) {
				iC.setZIndex(Number(e))
			}
			this.addTileLayer(iC)
		},
		setTrafficOff: function() {
			this.removeTileLayer(iC)
		},
		showOverlayContainer: function() {
			this.setDisplayOptions({
				overlay: true
			})
		},
		hideOverlayContainer: function() {
			this.setDisplayOptions({
				overlay: false
			})
		},
		addLabelsToMapTile: function(T) {
			for (var e = 0; e < T.length; e++) {
				if (typeof T[e].type === "undefined") {
					T[e].type = "fixed"
				}
				if (typeof T[e].rank !== "number") {
					T[e].rank = 50000
				}
				T[e].pt = T[e].position;
				T[e].custom = true;
				T[e].processedInZoom = 0;
				this._customTileLabels.push(T[e])
			}
			this.dispatchEvent(new e7("onadd_tile_labels"))
		},
		removeLabelsFromMapTile: function(T) {
			for (var i9 = 0; i9 < T.length; i9++) {
				for (var e = 0; e < this._customTileLabels.length; e++) {
					if (this._customTileLabels[e].uid === T[i9]) {
						this._customTileLabels.splice(e, 1)
					}
				}
			}
			this.dispatchEvent(new e7("onremove_tile_labels"))
		},
		clearLabels: function() {
			this._customTileLabels.length = 0;
			this.dispatchEvent(new e7("onclear_labels"))
		},
		loadMapStyleFiles: function(jb, e) {
			this.customLoaded = false;
			var T = this.config.style;
			var ja = this.config.styleUrl;
			var i9 = this;
			this._setTextRenderType();
			if (typeof T === "string" && !ja) {
				if (bo["FeatureStyle" + T]) {
					this.customLoaded = true;
					i9.fire(new e7("onstyle_loaded"));
					jb();
					return
				}
				bo["FeatureStyle" + T] = window.FeatureStyle;
				bo["iconSetInfo" + T] = window.iconSetInfo_high;
				bo.indoorStyle = window.indoorStyle;
				f5.load(w.getMapStyleFiles(T), function() {
					if (i9.config.style === T) {
						bo["FeatureStyle" + T] = window.FeatureStyle;
						bo["iconSetInfo" + T] = window.iconSetInfo_high;
						bo.indoorStyle = window.indoorStyle;
						i9.customLoaded = true;
						i9.fire(new e7("onstyle_loaded"));
						jb()
					}
				})
			} else {
				var i = T;
				t.init(i9);
				t.getStyleJson(i, function(jd) {
					var ji = ei;
					var jk = bo.getGUID("custom");
					i9.config.mapStyleId = jk;
					var jg = {};
					es.extend(jg, jd);
					var je = Math.floor(i9.getZoom());
					var jh;
					window["styleCbk_" + jk] = function(jl, jm) {
						if (jm !== jh) {
							return
						}
						if (typeof jl === "string") {
							jl = JSON.parse(jl)
						}
						t.onStyleDataBack(jl, je, jk, jg, ji, bo["customStyleInfo_" + jk]);
						i9.customLoaded = true;
						i9.fire(new e7("onstyle_loaded"));
						jb()
					};
					bo["customStyleInfo_" + jk] = {
						zoomRegion: {},
						zoomStyleBody: [],
						zoomFrontStyle: {}
					};
					var jj = t.getStyleUrl(jd, ji, "styleCbk_" + jk, je, e, bo["customStyleInfo_" + jk]);
					var jc = jj.split("?")[0];
					jh = jj.split("?")[1];
					if (ja) {
						jc = ja;
						jh = jc.split("?")[1]
					}
					if (!bo.iconSetInfoCustom) {
						var jf = w.getMapStyleFiles("default");
						jf.splice(1, 1);
						f5.load(jf, function() {
							bo.iconSetInfoCustom = window.iconSetInfo_high;
							bo.indoorStyle = window.indoorStyle;
							if (jc.indexOf("jsonp") > "-1") {
								f5.load(jc)
							} else {
								bo["customStyleInfo_" + jk].xhr = hh.post(jc, jh, window["styleCbk_" + jk])
							}
						})
					} else {
						if (jc.indexOf("jsonp") > "-1") {
							f5.load(jc)
						} else {
							bo["customStyleInfo_" + jk].xhr = hh.post(jc, jh, window["styleCbk_" + jk])
						}
					}
				})
			}
		},
		getFeatureStyleTags: function() {
			var e = [];
			var ja = Object.keys(bo);
			for (var i9 = 0; i9 < ja.length; i9++) {
				var T = ja[i9];
				if (T.indexOf("FeatureStyle") > -1 && bo[T]) {
					e.push(T)
				}
			}
			return e
		},
		setCopyrightOffset: function(i9, i) {
			var T = new e7("oncopyrightoffsetchange", {
				logo: i9,
				cpy: i
			});
			this.dispatchEvent(T)
		},
		_setTextRenderType: function(e) {
			if (e) {
				this.config.textRenderType = e;
				return
			}
			if (this.config.textRenderType !== null) {
				return
			}
			if (bJ()) {
				this.config.textRenderType = "canvas"
			} else {
				if (typeof this.config.style === "string") {
					this.config.textRenderType = "image"
				} else {
					this.config.textRenderType = "canvas"
				}
			}
		},
		destroy: function() {
			this._destroyed = true;
			this.fire(new e7("ondestroy"))
		},
		centerAndZoom: function(e, jc, T) {
			if (Object.prototype.toString.call(jc) !== "[object Undefined]") {
				jc = parseInt(jc, 10)
			}
			if (typeof e === "string") {
				var i9 = this;
				var jb = new a6();
				jb.getPoint(e, function(jd) {
					e = jd;
					var je = ia.convertLL2MC(e);
					i9.centerAndZoomIn(je, jc, T)
				})
			} else {
				if (this.config.coordType === BMAP_COORD_GCJ02) {
					var ja = hA(e, 3);
					var i = ia.convertLL2MC(ja)
				} else {
					var i = ia.convertLL2MC(e)
				}
				this.centerAndZoomIn(i, jc, T)
			}
		},
		pointToPixel: function(e, T) {
			var i = ia.convertLL2MC(e);
			var i9 = {};
			es.extend(i9, T);
			if (i9 && i9.center) {
				i9.center = ia.convertLL2MC(i9.center)
			}
			return this.pointToPixelIn(i, i9)
		},
		pixelToPoint: function(T, i) {
			var i9 = {};
			es.extend(i9, i);
			if (i9 && i9.center) {
				i9.center = ia.convertLL2MC(i9.center)
			}
			var e = this.pixelToPointIn(T, i9);
			return ia.convertMC2LL(e)
		},
		pointToOverlayPixel: function(e, T) {
			var i = ia.convertLL2MC(e);
			var i9 = {};
			es.extend(i9, T);
			if (i9 && i9.center) {
				i9.center = ia.convertLL2MC(i9.center)
			}
			return this.pointToOverlayPixelIn(i, i9)
		},
		overlayPixelToPoint: function(T, i) {
			var i9 = {};
			es.extend(i9, i);
			if (i9 && i9.center) {
				i9.center = ia.convertLL2MC(i9.center)
			}
			var e = this.overlayPixelToPointIn(T, i9);
			return ia.convertMC2LL(e)
		},
		setViewport: function(T, i9) {
			var e;
			if (T && T.center) {
				e = {};
				es.extend(e, T);
				e.center = ia.convertLL2MC(e.center)
			} else {
				e = [];
				for (var ja = 0; ja < T.length; ja++) {
					e[ja] = ia.convertLL2MC(T[ja])
				}
			}
			this.setViewportIn(e, i9)
		},
		getViewport: function(jb, i9) {
			var T;
			if (jb && jb.length) {
				T = [];
				for (var ja = 0; ja < jb.length; ja++) {
					T[ja] = ia.convertLL2MC(jb[ja])
				}
			} else {
				if (jb instanceof ha) {
					T = new ha(ia.convertLL2MC(jb.getSouthWest()), ia.convertLL2MC(jb.getNorthEast()));
					T.setMinMax()
				}
			}
			var e = this.getViewportIn(T, i9);
			e.center = ia.convertMC2LL(e.center);
			return e
		},
		getDistance: function(ja, T) {
			var i = ia.convertLL2MC(ja);
			var i9 = ia.convertLL2MC(T);
			var e = this.getDistanceIn(i, i9);
			return e
		},
		setCenter: function(e, T) {
			if (typeof e === "string") {
				var i9 = this;
				var jb = new a6();
				jb.getPoint(e, function(jc) {
					e = jc;
					var jd = ia.convertLL2MC(e);
					i9.setCenterIn(jd, T)
				})
			} else {
				if (this.config.coordType === BMAP_COORD_GCJ02) {
					var ja = hA(e, 3);
					var i = ia.convertLL2MC(ja)
				} else {
					var i = ia.convertLL2MC(e)
				}
				this.setCenterIn(i, T)
			}
		},
		setZoom: function(T, e) {
			var i = {};
			es.extend(i, e);
			if (i && i.zoomCenter) {
				i.zoomCenter = ia.convertLL2MC(i.zoomCenter)
			}
			this.setZoomIn(T, i)
		},
		flyTo: function(e, ja, T) {
			if (this.config.coordType === BMAP_COORD_GCJ02) {
				var i9 = hA(e, 3);
				var i = ia.convertLL2MC(i9)
			} else {
				var i = ia.convertLL2MC(e)
			}
			this.flyToIn(i, ja, T)
		},
		panTo: function(e, T) {
			var i = ia.convertLL2MC(e);
			this.panToIn(i, T)
		},
		getCenter: function() {
			var e = this.getCenterIn();
			if (this.config.coordType === BMAP_COORD_GCJ02) {
				var i = ia.convertMC2LL(e);
				return ec(i)
			}
			return ia.convertMC2LL(e)
		},
		getBounds: function() {
			var e = this.getBoundsIn();
			var i = new ha(ia.convertMC2LL(e.getSouthWest()), ia.convertMC2LL(e.getNorthEast()));
			return i
		},
		setMapStyleV2: function(e) {
			if (typeof e === "string") {
				this._setTextRenderType("image")
			} else {
				this._setTextRenderType("canvas")
			}
			this.setOptions({
				style: e
			})
		},
		startViewAnimation: function(T) {
			var e = T._options.delay;
			var i = this;
			setTimeout(function() {
				T._start(i)
			}, e)
		},
		pauseViewAnimation: function(e) {
			e._pause(this)
		},
		continueViewAnimation: function(e) {
			e._continue(this)
		},
		cancelViewAnimation: function(e) {
			e._cancel(this)
		},
		getMapScreenshot: function() {
			return this._webglMapScene._painter._canvas.toDataURL()
		}
	});
	window.BMAP_NORMAL_MAP = "B_NORMAL_MAP";
	window.BMAPGL_NORMAL_MAP = "B_NORMAL_MAP";
	window.BMAP_SATELLITE_MAP = "B_SATELLITE_MAP";
	window.BMAP_HYBRID_MAP = "B_STREET_MAP";
	window.BMAP_EARTH_MAP = "B_EARTH_MAP";
	window.BMAP_NONE_MAP = "B_NONE_MAP";
	window.BMAP_COORD_MERCATOR = 1;
	window.BMAP_COORD_GCJ02 = 2;
	window.BMAP_SYS_DRAWER = 0;
	window.BMAP_SVG_DRAWER = 1;
	window.BMAP_VML_DRAWER = 2;
	window.BMAP_CANVAS_DRAWER = 3;
	var t = {
		environment: "jsapi",
		map: null,
		ontilesloaded: false,
		onstyle_loaded: false,
		init: function(i) {
			var e = this;
			e.map = i;
			this.changeCopyright();
			this.setEnvironment(e.map.config.style);
			this.resetEventListener()
		},
		resetEventListener: function() {
			var e = this;
			this.ontilesloaded = false;
			this.onstyle_loaded = false;
			e.map.addEventListener("ontilesloaded", e.checkLoadedStatus);
			e.map.addEventListener("onstyle_loaded", e.checkLoadedStatus)
		},
		checkLoadedStatus: function(i) {
			t[i.type] = true;
			if (t.ontilesloaded && t.onstyle_loaded) {
				this.dispatchEvent(new e7("onstylechangetilesloaded"));
				this.removeEventListener("ontilesloaded", t.checkLoadedStatus);
				this.removeEventListener("onstyle_loaded", t.checkLoadedStatus)
			}
		},
		changeCopyright: function() {
			var e = this;
			if (e.map.cpyCtrl) {
				e.map.cpyCtrl.hide();
				if (e.environment !== "customEditor") {
					e.map.setCopyrightOffset(new h3(1, 1))
				}
			} else {
				e.map.addEventListener("oncopyrightaddend", function() {
					e.map.cpyCtrl.hide();
					if (e.environment !== "customEditor") {
						e.map.setCopyrightOffset(new h3(1, 1))
					}
				})
			}
		},
		setEnvironment: function(e) {
			if (e.customEditor) {
				this.environment = "customEditor";
				aN.map = this.map
			} else {
				if (e.sharing) {
					this.environment = "sharing"
				} else {
					if (e.preview) {
						this.environment = "preview"
					} else {
						this.environment = "jsapi"
					}
				}
			}
		},
		getStyleJson: function(i9, jb) {
			var ja = this;
			if (i9.styleJson) {
				jb && jb(i9.styleJson)
			} else {
				if (i9.styleId) {
					var i = i9.styleId;
					var e = (Math.random() * 100000)
						.toFixed(0);
					bo["_cbk_si_phpui" + e] = function(jd) {
						var jc = [];
						if (jd.result && jd.result["error"] === 0 && jd.content && jd.content["status"] === 0) {
							jc = ja.parseJson(jd.content["data"]["json"]);
							jb && jb(jc)
						} else {
							jb && jb("default")
						}
					};
					bo["_cbk_si_api" + e] = function(jd) {
						var jc = [];
						if (jd.status === 0) {
							if (jd.info) {
								jc = ja.parseJson(jd.info["json"])
							} else {
								jc = ja.parseJson(jd.data["json"])
							}
							jb && jb(jc)
						} else {
							jb && jb("default")
						}
					};
					var T = "";
					switch (this.environment) {
						case "jsapi":
							T = dZ.apiHost + "/?qt=custom_map&v=3.0&style_id=" + i + "&type=publish&ak=" + ei;
							T += "&callback=" + eV + "._cbk_si_phpui" + e;
							break;
						case "sharing":
							T += "/apiconsole/custommap/getSharingJson";
							T += "?styleid=" + i + "&type=edit";
							T += "&ck=" + eV + "._cbk_si_api" + e;
							break;
						case "preview":
							T += "/apiconsole/custommap/getJson";
							T += "?styleid=" + i + "&type=edit";
							T += "&ck=" + eV + "._cbk_si_api" + e;
							break
					}
					f5.load(T)
				} else {
					jb && jb("default")
				}
			}
		},
		parseJson: function(T) {
			if (T === null || T === "") {
				return []
			}
			var i = {
				t: "featureType",
				e: "elementType",
				v: "visibility",
				c: "color",
				o: "opacity",
				l: "lightness",
				s: "saturation",
				w: "weight",
				z: "level",
				h: "hue",
				f: "fontsize",
				zri: "curZoomRegionId",
				zr: "curZoomRegion"
			};
			var ja = {
				all: "all",
				g: "geometry",
				"g.f": "geometry.fill",
				"g.s": "geometry.stroke",
				l: "labels",
				"l.t.f": "labels.text.fill",
				"l.t.s": "labels.text.stroke",
				"l.t": "labels.text",
				"l.i": "labels.icon",
				"g.tf": "geometry.topfill",
				"g.sf": "geometry.sidefill"
			};
			var i9 = T.split(",");
			var e = i9.map(function(je) {
				var jd = je.split("|")
					.map(function(jk) {
						var ji = i[jk.split(":")[0]];
						var jh = (ja[jk.split(":")[1]] ? ja[jk.split(":")[1]] : jk.split(":")[1]);
						switch (jh) {
							case "poi":
								jh = "poilabel";
								break;
							case "districtlabel":
								jh = "districtlabel";
								break
						}
						var jj = {};
						jj[ji] = jh;
						return jj
					});
				var jb = jd[0];
				var jg = 1;
				if (jd[1]["elementType"]) {
					jg = 2;
					es.extend(jb, jd[1])
				}
				var jf = {};
				for (var jc = jg; jc < jd.length; jc++) {
					es.extend(jf, jd[jc])
				}
				return es.extend(jb, {
					stylers: jf
				})
			});
			return e
		},
		getStyleUrl: function(i, jc, ja, T, i9, je) {
			this.styleJson = i;
			var e = w.apiHost + "/custom/v2/mapstyle?version=" + 4 + "&ak=" + jc + "&qt=custom_v2&is_all=true&is_new=1&";
			var jd = this.styleJson2styleStringV2(i, T, je);
			e += "styles=" + encodeURIComponent(jd);
			if (i9 && i9.os && i9.sv) {
				e += "&os=" + i9.os + "&sv=" + i9.sv
			}
			var jb = new Date()["getTime"]();
			e += "&timeStamp=" + jb;
			e += io()(e);
			return e
		},
		styleJson2styleStringV2: function(e, jh, jd) {
			var ji = {
				featureType: "t",
				elementType: "e",
				visibility: "v",
				color: "c",
				opacity: "o",
				lightness: "l",
				saturation: "s",
				weight: "w",
				level: "z",
				hue: "h",
				fontsize: "f"
			};
			var jj = {
				all: "all",
				geometry: "g",
				"geometry.fill": "g.f",
				"geometry.stroke": "g.s",
				labels: "l",
				"labels.text.fill": "l.t.f",
				"labels.text.stroke": "l.t.s",
				"labels.text": "l.t",
				"labels.icon": "l.i",
				"geometry.topfill": "g.tf",
				"geometry.sidefill": "g.sf"
			};
			var jk = [];
			for (var i9 = this.map.getMinZoom(); i9 <= this.map.getMaxZoom(); i9++) {
				jd.zoomFrontStyle[i9] = {}
			}
			jd.zoomFrontStyle.main = {};
			var T = false;
			for (var i9 = 0; !!e[i9]; i9++) {
				var jg = e[i9];
				if (this.isOnlyZoomStyler(jg)) {
					continue
				}
				jh = this.getFrontZoom(jg, jh);
				if ((jg.featureType === "land" || jg.featureType === "all" || jg.featureType === "background") && typeof jg.elementType === "string" && (jg.elementType === "geometry" || jg.elementType === "geometry.fill" || jg.elementType === "all") && jg.stylers && !T) {
					if (jg.stylers["color"]) {
						jd.bmapLandColor = jg.stylers["color"]
					}
					if (jg.stylers["opacity"]) {
						jd.bmapLandColor = jg.stylers["opacity"]
					}
					if (jg.stylers["visibility"] && jg.stylers["visibility"] === "off") {
						jd.bmapLandColor = "#00000000"
					}
					if (jg.featureType === "land") {
						T = true
					}
				}
				if (jg.featureType === "building" && typeof jg.elementType === "string" && jg.elementType === "geometry.fill") {
					jd.buildingFill = true
				}
				if (jg.featureType === "roadarrow" && jg.elementType === "labels.icon" && jg.stylers) {
					var je = jg.stylers["visibility"];
					jd.zoomFrontStyle[jh]["bmapRoadarrowVisibility"] = je
				}
				var ja = {};
				es.extend(ja, jg);
				var jc = ja.stylers;
				delete ja.stylers;
				es.extend(ja, jc);
				var jb = [];
				for (var jf in ji) {
					if (ja[jf]) {
						if (this.isEditorZoomKeys(jf)) {
							continue
						}
						if (jf === "elementType") {
							jb.push(ji[jf] + ":" + jj[ja[jf]])
						} else {
							switch (ja[jf]) {
								case "poilabel":
									ja[jf] = "poi";
									break;
								case "districtlabel":
									ja[jf] = "label";
									break
							}
							jb.push(ji[jf] + ":" + ja[jf])
						}
					}
				}
				if (jb.length > 2) {
					jk.push(jb.join("|"))
				}
			}
			return jk.join(",")
		},
		getFrontZoom: function(i, e) {
			var T = i.stylers["level"];
			if (T === undefined) {
				return "main"
			} else {
				return parseInt(T, 10)
			}
		},
		isZoomConfig: function(e) {
			var i = e.stylers["level"];
			if (i === undefined) {
				return false
			} else {
				return true
			}
		},
		isOnlyZoomStyler: function(e) {
			var i = {};
			es.extend(i, e.stylers);
			delete i.curZoomRegionId;
			delete i.curZoomRegion;
			delete i.level;
			if (es.isEmptyObject(i)) {
				return true
			} else {
				return false
			}
		},
		isSelectZoom: function(i, e) {
			var T = i.stylers["level"];
			if (T === undefined) {
				return true
			} else {
				if (T === e + "") {
					return true
				} else {
					return false
				}
			}
		},
		isEditorZoomKeys: function(e) {
			var i = {
				curZoomRegionId: true,
				curZoomRegion: true
			};
			if (i[e]) {
				return true
			} else {
				return false
			}
		},
		getZoomRegion: function(e, i) {
			var i9 = e.stylers["level"];
			var T = {};
			es.extend(T, i);
			if (i9 === undefined) {
				return T
			} else {
				T[parseInt(i9, 10)] = true;
				return T
			}
		},
		onStyleDataBack: function(ja, e, i, i9, jc, T) {
			if (ja.status !== 0) {
				return
			}
			if (ja.data.style.length === 3) {
				if (!T.baseFs) {
					T.baseFs = ja.data.style
				}
				bo.StyleBody = ja.data.style[2]
			} else {
				bo.StyleBody = ja.data.style
			}
			var jb = T.baseFs;
			bo["FeatureStyle" + i] = jb;
			this.updateFrontFeatureStyle(T)
		},
		updateFrontFeatureStyle: function(T) {
			if (T.zoomFrontStyle.main["bmapRoadarrowVisibility"]) {
				for (var e = this.map.getMinZoom(); e <= this.map.getMaxZoom(); e++) {
					if (!T.zoomFrontStyle[e]["bmapRoadarrowVisibility"]) {
						T.zoomFrontStyle[e]["bmapRoadarrowVisibility"] = T.zoomFrontStyle.main["bmapRoadarrowVisibility"]
					}
				}
			}
		}
	};
	var aN = {
		map: null,
		labelCache: {},
		calcDrawMc: function(T, i, e) {
			var i9 = [];
			switch (i) {
				case "fill":
					i9 = this.calcFill(T, e);
					break;
				case "line":
					break;
				case "building3d":
					i9 = this.calcBuilding3d(T, e);
					break
			}
			return i9
		},
		calcFill: function(ja, T) {
			var jb = [];
			for (var i9 = 0; i9 < ja.length; i9 = i9 + 5) {
				var e = this.coordToMc({
					x: ja[i9],
					y: ja[i9 + 1]
				}, T.row, T.col, T.mercatorSize, T.baseTileSize);
				jb.push(e[0], e[1])
			}
			return jb
		},
		calcLine: function(ja, T) {
			var jb = [];
			var jc = new Int16Array(ja.buffer);
			for (var i9 = 0; i9 < jc.length; i9 = i9 + 10) {
				var e = this.coordToMc({
					x: jc[i9] / 10,
					y: jc[i9 + 1] / 10
				}, T.row, T.col, T.mercatorSize, T.baseTileSize);
				jb.push(e[0], e[1])
			}
			return jb
		},
		calcBuilding3d: function(jb, T) {
			var jc = [];
			var i9 = {};
			for (var ja = 0; ja < jb.length / 2; ja = ja + 7) {
				if (jb[ja] === jb[ja - 7] && jb[ja + 1] === jb[ja - 6]) {
					continue
				}
				if (i9[jb[ja].toString() + jb[ja + 1].toString()]) {
					continue
				}
				i9[jb[ja].toString() + jb[ja + 1].toString()] = true;
				var e = this.coordToMc({
					x: jb[ja],
					y: jb[ja + 1]
				}, T.row, T.col, T.mercatorSize, T.baseTileSize);
				jc.push(e[0], e[1])
			}
			return jc
		},
		coordToMc: function(ja, i9, e, i, T) {
			return [ja.x * (i / T) + e * i, ja.y * (i / T) + i9 * i]
		},
		addDrawIntoAreaSpots: function(e, ja) {
			if (t.environment !== "customEditor") {
				return
			}
			if (!ja.styleIds) {
				return
			}
			for (var T = 0; T < ja.styleIds.length; T++) {
				var jd = 0;
				if (T > 0) {
					jd = ja.verticesLength[T - 1]
				}
				end = ja.verticesLength[T];
				var jb = [];
				var i9 = "";
				if (ja.vertex) {
					jb = ja.vertex;
					i9 = "building3d"
				} else {
					if (ja.data[0]) {
						jb = ja.data[0];
						i9 = ja.type
					} else {
						continue
					}
				}
				var jc = this.calcDrawMc(jb.slice(jd, end), i9, e);
				this.map.addAreaSpot(jc, {
					userData: {
						styleId: ja.styleIds[T],
						type: "mapstyle"
					}
				})
			}
		},
		addLabelIntoAreaSpots: function(e) {
			if (t.environment !== "customEditor") {
				return
			}
			for (var ja = 0; ja < e.length; ja++) {
				var jb = e[ja];
				for (var i9 = 0; i9 < jb.fixedLabel.length; i9++) {
					var T = jb.fixedLabel[i9];
					if (!T._mcBds) {
						continue
					}
					var jc = [T._mcBds[0].lng, T._mcBds[0].lat, T._mcBds[0].lng, T._mcBds[1].lat, T._mcBds[1].lng, T._mcBds[1].lat, T._mcBds[1].lng, T._mcBds[0].lat];
					if (!this.labelCache[jc.join()]) {
						this.labelCache[jc.join()] = true;
						this.map.addAreaSpot(jc, {
							userData: {
								styleId: T.styleId,
								type: "mapstyle",
								name: T.name
							}
						})
					}
				}
			}
		}
	};

	function b4(i, e, i9, T) {
		this.cx = 3 * i;
		this.bx = 3 * (i9 - i) - this.cx;
		this.ax = 1 - this.cx - this.bx;
		this.cy = 3 * e;
		this.by = 3 * (T - e) - this.cy;
		this.ay = 1 - this.cy - this.by;
		this.p1x = i;
		this.p1y = T;
		this.p2x = i9;
		this.p2y = T
	}
	b4.prototype.sampleCurveX = function(e) {
		return ((this.ax * e + this.bx) * e + this.cx) * e
	};
	b4.prototype.sampleCurveY = function(e) {
		return ((this.ay * e + this.by) * e + this.cy) * e
	};
	b4.prototype.sampleCurveDerivativeX = function(e) {
		return (3 * this.ax * e + 2 * this.bx) * e + this.cx
	};
	b4.prototype.solveCurveX = function(e, je) {
		if (typeof je === "undefined") {
			je = 0.000001
		}
		var jd;
		var jc;
		var ja;
		var T;
		var i9;
		for (ja = e, i9 = 0; i9 < 8; i9++) {
			T = this.sampleCurveX(ja) - e;
			if (Math.abs(T) < je) {
				return ja
			}
			var jb = this.sampleCurveDerivativeX(ja);
			if (Math.abs(jb) < 0.000001) {
				break
			}
			ja = ja - T / jb
		}
		jd = 0;
		jc = 1;
		ja = e;
		if (ja < jd) {
			return jd
		}
		if (ja > jc) {
			return jc
		}
		while (jd < jc) {
			T = this.sampleCurveX(ja);
			if (Math.abs(T - e) < je) {
				return ja
			}
			if (e > T) {
				jd = ja
			} else {
				jc = ja
			}
			ja = (jc - jd) * 0.5 + jd
		}
		return ja
	};
	b4.prototype.solve = function(e, i) {
		return this.sampleCurveY(this.solveCurveX(e, i))
	};
	var fT = {};

	function e0(T) {
		var e = {
			duration: 1000,
			fps: 30,
			delay: 0,
			transition: fT.linear,
			dropLastAnimation: false
		};
		if (T) {
			for (var i9 in T) {
				e[i9] = T[i9]
			}
		}
		if (T.beginTime) {
			this._beginTime = T.beginTime
		}
		this._callbacks = [];
		this._options = e;
		if (e.delay) {
			var ja = this;
			setTimeout(function() {
				ja._doStart()
			}, e.delay)
		} else {
			this._doStart()
		}
		this._pauseTime = 0
	}
	e0.INFINITE = "INFINITE";
	e0.prototype._doStart = function() {
		if (this._isPausing) {
			var e = performance.now() || new Date()
				.getTime();
			this._pauseTime += e - this._isPausing;
			this._isPausing = undefined
		}
		if (window.requestAnimationFrame) {
			var i = this;
			i._timer = window.requestAnimationFrame(function(T) {
				i._loop(T)
			})
		} else {
			this._beginTime = new Date()
				.getTime();
			if (this._options.duration === e0.INFINITE) {
				this._endTime = null
			} else {
				this._endTime = this._beginTime + this._options.duration
			}
			this._loop()
		}
	};
	e0.prototype._loop = function(i9) {
		var jc = this;
		i9 = i9 || new Date()
			.getTime();
		i9 = i9 - this._pauseTime;
		if (!this._beginTime) {
			this._beginTime = i9
		}
		if (!this._endTime && typeof this._options.duration === "number") {
			this._endTime = this._beginTime + this._options.duration
		}
		if (jc._endTime !== null && i9 >= jc._endTime) {
			if (jc._options.dropLastAnimation === false) {
				jc._options.render(jc._options.transition(1), 1, i9)
			}
			if (typeof jc._options.finish === "function") {
				jc._options.finish(i9, this)
			}
			for (var jb = 0, e = jc._callbacks.length; jb < e; jb++) {
				jc._callbacks[jb]()
			}
			return
		}
		var ja;
		if (typeof jc._options.duration === "number") {
			ja = (i9 - jc._beginTime) / jc._options.duration;
			jc.schedule = jc._options.transition(ja)
		} else {
			ja = i9 - jc._beginTime;
			jc.schedule = 0
		}
		jc._options.render(jc.schedule, ja, i9);
		if (!jc.terminative) {
			if (window.requestAnimationFrame) {
				jc._timer = requestAnimationFrame(function T(i) {
					jc._loop(i)
				})
			} else {
				jc._timer = setTimeout(function() {
					jc._loop()
				}, 1000 / jc._options.fps)
			}
		}
	};
	e0.prototype.stop = function(i, e) {
		this.terminative = true;
		if (this._timer) {
			if (window.cancelAnimationFrame) {
				cancelAnimationFrame(this._timer)
			} else {
				clearTimeout(this._timer)
			}
			this._timer = null;
			if (typeof this._options.onStop === "function") {
				this._options.onStop(e)
			}
		}
		if (i) {
			this._endTime = this._beginTime;
			this._loop()
		}
	};
	e0.prototype.pause = function() {
		if (!this._isPausing) {
			this.stop();
			this.terminative = undefined;
			this._isPausing = performance.now() || new Date()
				.getTime()
		}
	};
	e0.prototype.cancel = function() {
		this.stop()
	};
	e0.prototype.append = function(e) {
		this._callbacks.push(e);
		return this
	};
	fT = {
		_p1: 1,
		_p2: 1 * 1.525,
		linear: function(e) {
			return e
		},
		reverse: function(e) {
			return 1 - e
		},
		easeInQuad: function(e) {
			return e * e
		},
		easeInCubic: function(e) {
			return Math.pow(e, 3)
		},
		easeInBiquad: function(e) {
			return Math.pow(e, 4)
		},
		easeInBack: function(e) {
			return e * e * ((fT._p1 + 1) * e - fT._p1)
		},
		easeOutQuad: function(e) {
			return -(e * (e - 2))
		},
		easeOutCubic: function(e) {
			return Math.pow((e - 1), 3) + 1
		},
		easeOutBiquad: function(e) {
			return 1 - Math.pow((e - 1), 4)
		},
		easeOutBack: function(e) {
			return ((e = e - 1) * e * ((fT._p1 + 1) * e + fT._p1) + 1)
		},
		easeInOutQuad: function(e) {
			if (e < 0.5) {
				return e * e * 2
			} else {
				return -2 * (e - 2) * e - 1
			}
		},
		easeInOutCubic: function(e) {
			if (e < 0.5) {
				return Math.pow(e, 3) * 4
			} else {
				return Math.pow(e - 1, 3) * 4 + 1
			}
		},
		easeInOutBiquad: function(e) {
			if (e < 0.5) {
				return Math.pow(e, 4) * 8
			} else {
				return 1 - (Math.pow(e - 1, 4) * 8)
			}
		},
		easeInOutSine: function(e) {
			return (1 - Math.cos(Math.PI * e)) / 2
		}
	};
	fT.ease = (function() {
		var e = new b4(0.4, 0, 0.6, 1);
		return function(i) {
			return e.solve(i)
		}
	})();
	fT["ease-in"] = fT.easeInQuad;
	fT["ease-out"] = fT.easeOutQuad;
	var cY = {
		start: function(jf) {
			var i9 = jf.el;
			var e = jf.style;
			var i = jf.startValue;
			var jc = jf.endValue;
			var ja = jf.duration || 1400;
			var jb = jf.transition || fT.linear;
			var je = jf.callback;
			var jd = jc - i;
			var T = jf.unit || "";
			return new e0({
				fps: 60,
				duration: ja,
				transition: jb,
				render: function(jg) {
					i9.style[e] = i + jd * jg + T
				},
				finish: function() {
					je && je()
				}
			})
		}
	};

	function n(ja, T) {
		cJ.call(this);
		this.keyframes = ja;
		var e = {
			duration: 1000,
			delay: 0,
			transition: fT.linear,
			interation: 1
		};
		if (T) {
			for (var i9 in T) {
				e[i9] = T[i9]
			}
		}
		this._options = e
	}
	n.inherits(cJ, "ViewAnimation");
	n.prototype._start = function(jb) {
		var T = this;
		T.map = jb;
		var ja = new e7("onanimationstart");
		T.dispatchEvent(ja);
		this._initStatus(T.map);
		var i9 = this._options.duration;
		var i = this._options.interation;
		var jc = this._options.transition;
		var jd = 0;
		T.poiStatus = T.map._displayOptions.poi;
		if (T.poiStatus) {
			T.map.setDisplayOptions({
				poi: false
			})
		}
		T.map.viewAnimationTime = new Date()
			.getTime();
		this.animation = new e0({
			duration: i9,
			transition: jc,
			start: function(e) {},
			render: function(je, e) {
				if (je === 0) {
					T._initStatus(T.map)
				} else {
					T._setViewByRate(je)
				}
			},
			finish: function(jf, je) {
				if (++jd < i || i === "INFINITE") {
					var jg = new e7("onanimationiterations");
					T.dispatchEvent(jg);
					delete je._beginTime;
					delete je._endTime;
					je._doStart()
				} else {
					var jg = new e7("onanimationend");
					T.dispatchEvent(jg);
					delete T.map.viewAnimationTime;
					T.map.setDisplayOptions({
						poi: T.poiStatus
					})
				}
			}
		})
	};
	n.prototype._getTotalDuration = function(e, i) {
		if (e === e0.INFINITE) {
			return e0.INFINITE
		} else {
			return e * i
		}
	};
	n.prototype._initStatus = function(e) {
		if (this.keyframes[0]) {
			e.setCenter(this.keyframes[0].center, {
				noAnimation: true
			});
			e.setZoom(this.keyframes[0].zoom, {
				noAnimation: true
			});
			e.setTilt(this.keyframes[0].tilt, {
				noAnimation: true
			});
			e.setHeading(this.keyframes[0].heading, {
				noAnimation: true
			})
		}
	};
	n.prototype._setViewByRate = function(i9) {
		for (var e = 0; e < this.keyframes.length - 1; e++) {
			var ja = this.keyframes[e];
			var T = this.keyframes[e + 1];
			if (i9 >= ja.percentage && i9 < T.percentage) {
				this.map.setHeading(this._getHeadingDelta(ja, T, i9), {
					noAnimation: true
				});
				this.map.setTilt(this._getTiltDelta(ja, T, i9), {
					noAnimation: true
				});
				this.map.setCenter(this._getCenterDelta(ja, T, i9), {
					noAnimation: true
				});
				this.map.setZoom(this._getZoomDelta(ja, T, i9), {
					noAnimation: true
				})
			}
		}
	};
	n.prototype._getHeadingDelta = function(T, i, e) {
		var ja = (e - T.percentage) / (i.percentage - T.percentage);
		var i9 = T.heading + (i.heading - T.heading) * ja;
		return i9
	};
	n.prototype._getTiltDelta = function(T, i, e) {
		var ja = (e - T.percentage) / (i.percentage - T.percentage);
		var i9 = T.tilt + (i.tilt - T.tilt) * ja;
		return i9
	};
	n.prototype._getCenterDelta = function(T, i, e) {
		var ja = (e - T.percentage) / (i.percentage - T.percentage);
		var i9 = T.center.add(i.center.sub(T.center)
			.mult(ja));
		return i9
	};
	n.prototype._getZoomDelta = function(i9, T, i) {
		var ja = (i - i9.percentage) / (T.percentage - i9.percentage);
		var e = i9.zoom + (T.zoom - i9.zoom) * ja;
		return e
	};
	n.prototype._pause = function(e) {
		this.animation.pause()
	};
	n.prototype._continue = function(e) {
		this.animation._doStart()
	};
	n.prototype._cancel = function(T) {
		T.setDisplayOptions({
			poi: this.poiStatus
		});
		this.animation.cancel();
		delete T.viewAnimationTime;
		var i = new e7("onanimationcancel");
		this.dispatchEvent(i)
	};
	var cm = undefined;
	var eW = {
		is64Bit: function() {
			if (/Windows/.test(navigator.userAgent)) {
				if (/Win64; x64/.test(navigator.userAgent)) {
					return true
				} else {
					if (/WOW64/.test(navigator.userAgent)) {
						return true
					} else {
						return false
					}
				}
			}
			return true
		},
		isIOS112: function aW(e) {
			return /11_2/.test(navigator.userAgent)
		},
		canUseWebAssembly: function(i) {
			if (cm !== undefined) {
				i && i(cm);
				return
			}
			if (window.WebAssembly && this.is64Bit()) {
				if (window.disableWebAssembly === true) {
					cm = false;
					i && i(cm)
				} else {
					if (!b9()) {
						cm = true;
						i && i(cm)
					} else {
						if (this.isIOS112()) {
							cm = false;
							i && i(cm)
						} else {
							var e = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 133, 128, 128, 128, 0, 1, 96, 0, 1, 127, 3, 130, 128, 128, 128, 0, 1, 0, 4, 132, 128, 128, 128, 0, 1, 112, 0, 0, 5, 131, 128, 128, 128, 0, 1, 0, 1, 6, 129, 128, 128, 128, 0, 0, 7, 145, 128, 128, 128, 0, 2, 6, 109, 101, 109, 111, 114, 121, 2, 0, 4, 109, 97, 105, 110, 0, 0, 10, 138, 128, 128, 128, 0, 1, 132, 128, 128, 128, 0, 0, 65, 42, 11]);
							WebAssembly.instantiate(e)
								.then(function(T) {
									cm = true;
									i && i(cm)
								}, function(T) {
									cm = false;
									i && i(cm)
								})
						}
					}
				}
			} else {
				cm = false;
				i && i(cm)
			}
		}
	};
	var aA = {};
	bo.Utils = aA;

	function i1(e) {
		return e.style
	}

	function hc(i) {
		if (es.Browser.ie > 0) {
			i.unselectable = "on";
			i.selectstart = function() {
				return false
			};
			i.onmousedown = function(T) {
				T.preventDefault();
				return false
			}
		} else {
			var e = i1(i);
			e.MozUserSelect = "none";
			e.WebkitUserSelect = "none";
			i.addEventListener("mousedown", function(T) {
				T.preventDefault()
			}, false)
		}
	}

	function aI(e) {
		return e && e.parentNode && e.parentNode.nodeType !== 11
	}

	function bA(i, e) {
		i.insertAdjacentHTML("beforeEnd", e);
		return i.lastChild
	}

	function fb(T, i) {
		var i9 = document.createElement("div");
		i9.innerHTML = i;
		var e = i9.childNodes[0];
		return T.parentNode.insertBefore(e, T)
	}

	function ad(i) {
		i = i || window.event;
		i.stopPropagation ? i.stopPropagation() : i.cancelBubble = true
	}

	function b(i) {
		i = i || window.event;
		i.preventDefault ? i.preventDefault() : i.returnValue = false;
		return false
	}

	function gC(i) {
		ad(i);
		return b(i)
	}

	function f9() {
		var e = document.documentElement;
		var i = document.body;
		if (e && (e.scrollTop || e.scrollLeft)) {
			return [e.scrollTop, e.scrollLeft]
		} else {
			if (i) {
				return [i.scrollTop, i.scrollLeft]
			} else {
				return [0, 0]
			}
		}
	}

	function hu(ja) {
		if (!ja) {
			return
		}
		ja.onload = ja.onerror = null;
		var T = ja.attributes,
			i9, e, jb;
		if (T) {
			e = T.length;
			for (i9 = 0; i9 < e; i9 += 1) {
				jb = T[i9].name;
				if (typeof ja[jb] === "function") {
					ja[jb] = null
				}
			}
		}
		T = ja.children;
		if (T) {
			e = T.length;
			for (i9 = 0; i9 < e; i9 += 1) {
				hu(ja.children[i9])
			}
		}
	}

	function fd(i, jc, jb) {
		var ja = jc.lng - jb.lng;
		var i9 = jc.lat - jb.lat;
		if (ja === 0) {
			return Math.abs(i.lng - jc.lng)
		}
		if (i9 === 0) {
			return Math.abs(i.lat - jc.lat)
		}
		var T = i9 / ja;
		var e = jc.lat - T * jc.lng;
		return Math.abs(T * i.lng - i.lat + e) / Math.sqrt(T * T + 1)
	}

	function b1(i, e) {
		if (!i || !e) {
			return
		}
		return Math.round(Math.sqrt(Math.pow(i.x - e.x, 2) + Math.pow(i.y - e.y, 2)))
	}

	function dW(i, e) {
		if (!i || !e) {
			return 0
		}
		return Math.round(Math.sqrt(Math.pow(i.lng - e.lng, 2) + Math.pow(i.lat - e.lat, 2)))
	}

	function eE(T, i) {
		var e = Math.round((T.x + i.x) / 2);
		var i9 = Math.round((T.y + i.y) / 2);
		return new eL(e, i9)
	}

	function il(e, T) {
		var i = [];
		T = T || function(ja) {
			return ja
		};
		for (var i9 in e) {
			i.push(i9 + "=" + T(e[i9]))
		}
		return i.join("&")
	}

	function bK(T, i, jb) {
		var jc = document.createElement(T);
		if (jb) {
			jc = document.createElementNS(jb, T)
		}
		i = i || {};
		for (var i9 in i) {
			var ja = {
				"for": "htmlFor",
				"class": "cssClass"
			} [i9] || i9;
			if (i9 === "style") {
				jc.style.cssText = i[i9];
				continue
			}
			if (i9 === "class") {
				es.ac(jc, i[i9]);
				continue
			}
			if (jc.setAttribute) {
				jc.setAttribute(ja, i[i9])
			} else {
				try {
					jc[ja] = i[i9]
				} catch (jc) {}
			}
		}
		return jc
	}

	function b0(e) {
		if (e.currentStyle) {
			return e.currentStyle
		} else {
			if (e.ownerDocument && e.ownerDocument.defaultView) {
				return e.ownerDocument.defaultView.getComputedStyle(e, null)
			}
		}
	}

	function bG(e) {
		return typeof e === "function"
	}

	function fy(e) {
		return e === void 0
	}

	function iA(e, i) {
		return Object.prototype.hasOwnProperty.call(e, i)
	}

	function f(ja, jb) {
		if (fy(ja.length)) {
			for (var i9 in ja) {
				if (iA(ja, i9)) {
					jb.call(null, i9, ja[i9])
				}
			}
		} else {
			var T = ja.length;
			if (T) {
				for (var e = 0; e < T; e++) {
					jb.call(null, e, ja[e])
				}
			}
		}
	}

	function ak(i, e) {
		if (!e) {
			return i
		}
		f(e, function(T, i9) {
			i[T] = i9
		});
		return i
	}
	var gm = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

	function cV(ja) {
		var T = "";
		var jh;
		var jf;
		var jd = "";
		var jg;
		var je;
		var jc;
		var jb = "";
		var i9 = 0;
		var e = /[^A-Za-z0-9+/=]/g;
		if (!ja || e.exec(ja)) {
			return ja
		}
		ja = ja.replace(/[^A-Za-z0-9+/=]/g, "");
		do {
			jg = gm.indexOf(ja.charAt(i9++));
			je = gm.indexOf(ja.charAt(i9++));
			jc = gm.indexOf(ja.charAt(i9++));
			jb = gm.indexOf(ja.charAt(i9++));
			jh = (jg << 2) | (je >> 4);
			jf = ((je & 15) << 4) | (jc >> 2);
			jd = ((jc & 3) << 6) | jb;
			T = T + String.fromCharCode(jh);
			if (jc !== 64) {
				T = T + String.fromCharCode(jf)
			}
			if (jb !== 64) {
				T = T + String.fromCharCode(jd)
			}
			jh = jf = jd = "";
			jg = je = jc = jb = ""
		} while (i9 < ja.length);
		return T
	}

	function ik(e) {
		return btoa(encodeURIComponent(e))
	}

	function fk(e) {
		return decodeURIComponent(atob(e))
	}(function(e) {
		if (!e.Utils) {
			e.Utils = {}
		}
		var i = e.Utils;
		i.format = (function() {
			function T(jc, jb, jd) {
				var ja = jd[+jb];
				return typeof(ja) === "function" ? ja(jb) : ja
			}

			function i9(jc, jb, jd) {
				var jf = jb;
				var jg = [];
				var ja = jb.split(":");
				if (ja.length === 2) {
					jf = ja[0];
					jg.push(ja[1])
				}
				var je = typeof(jd[jf]);
				if (je === "function") {
					return jd[jf].apply(undefined, jg)
				} else {
					if (je === "undefined") {
						return jc
					} else {
						return String(jd[jf])
					}
				}
			}
			return function(ja, jb) {
				var jd = jb.splice ? T : i9;
				var jc = ja.splice ? ja.join("") : ja;
				return jc.replace(/{([a-zA-Z0-9_$:.]+)}/g, function(jf, je) {
					return jd(jf, je, jb)
				})
			}
		})();
		i.ErrorMonitor = function(i9, T, ja) {};
		eW.canUseWebAssembly(function(T) {
			i.canUseWebAssembly = T
		})
	})(bo);

	function bJ() {
		return (b9() || g4())
	}

	function b9() {
		var e = navigator.userAgent;
		if (e.indexOf("iPhone") > -1 || e.indexOf("iPad") > -1) {
			return true
		}
		return false
	}

	function g4() {
		var e = navigator.userAgent;
		if (e.indexOf("Android") > -1) {
			return true
		}
		return false
	}

	function hH(e) {
		return e * Math.PI / 180
	}

	function eD(e) {
		return e / Math.PI * 180
	}

	function bs(e, ja) {
		var i9 = Math.pow(10, ja);
		if (typeof e === "number") {
			return Math.round(e * i9) / i9
		}
		for (var T = 0; T < e.length; T++) {
			e[T] = bs(e[T], ja)
		}
		return e
	}

	function bV(T, i, e) {
		if (T < i) {
			T = i
		} else {
			if (T > e) {
				T = e
			}
		}
		return T
	}

	function dJ(e, i) {
		while (e < 0) {
			e += i
		}
		return e % i
	}

	function g0(i, e) {
		return (i >= 0 && e >= 0) || (i < 0 && e < 0)
	}

	function G(i) {
		if (i._gl) {
			return i._gl
		}
		var e = {
			alpha: true,
			antialias: false,
			failIfMajorPerformanceCaveat: false,
			preserveDrawingBuffer: false,
			stencil: false
		};
		var T = i.getContext("webgl", e) || i.getContext("experimental-webgl", e);
		i._gl = T;
		return T
	}

	function hF(i9, T) {
		for (var e = 0; e < T.length; e++) {
			es.on(i9, T[e], ad)
		}
	}

	function em(i, T, e) {
		T[e] = i.getUniformLocation(T, e)
	}

	function bM(ja, jb, e, T, i) {
		var i9 = "";
		switch (i) {
			case "mat4":
				ja.uniformMatrix4fv(jb[e], false, T);
				return;
			case "v3":
				i9 = "uniform3fv";
				break;
			case "f":
				i9 = "uniform1f";
				break;
			case "i":
				i9 = "uniform1i";
				break
		}
		if (i9 === "") {
			throw "error"
		}
		ja[i9](jb[e], T)
	}

	function gL(jh, e) {
		while (jh < 0) {
			jh += 360
		}
		jh = jh % 360;
		var i9 = e.width;
		var jg = e.height;
		var jc = i9;
		var T = jg;
		if (jh < 90) {
			var i = Math.sin(hH(jh)) * i9;
			var je = Math.sin(hH(jh)) * jg;
			var jf = Math.cos(hH(jh)) * i9;
			var jb = Math.cos(hH(jh)) * jg;
			var jc = Math.ceil(jf + je);
			var T = Math.ceil(i + jb)
		} else {
			if (jh < 180) {
				var jh = jh - 90;
				var i = Math.sin(hH(jh)) * i9;
				var je = Math.sin(hH(jh)) * jg;
				var jf = Math.cos(hH(jh)) * i9;
				var jb = Math.cos(hH(jh)) * jg;
				var jc = Math.ceil(i + jb);
				var T = Math.ceil(jf + je)
			} else {
				if (jh < 270) {
					var jh = jh - 180;
					var i = Math.sin(hH(jh)) * i9;
					var je = Math.sin(hH(jh)) * jg;
					var jf = Math.cos(hH(jh)) * i9;
					var jb = Math.cos(hH(jh)) * jg;
					var jc = Math.ceil(jf + je);
					var T = Math.ceil(i + jb)
				} else {
					var jh = jh - 270;
					var i = Math.sin(hH(jh)) * i9;
					var je = Math.sin(hH(jh)) * jg;
					var jf = Math.cos(hH(jh)) * i9;
					var jb = Math.cos(hH(jh)) * jg;
					var jc = Math.ceil(i + jb);
					var T = Math.ceil(jf + je)
				}
			}
		}
		var jd = jc - i9;
		var ja = T - jg;
		return [0 - jd / 2, 0 - ja / 2, i9 + jd / 2, jg + ja / 2]
	}

	function bU(e) {
		if (e.toDataURL() === bU._blankData) {
			return true
		}
		return false
	}

	function P(ja, i9, T) {
		var i = [T.lng - ja.lng, T.lat - ja.lat];
		var e = [i9.lng - ja.lng, i9.lat - ja.lat];
		return i[0] * e[1] - i[1] * e[0]
	}

	function h1(jb, ja, T) {
		var e;
		var jc;
		var i9;
		var i;
		if (jb.lng < ja.lng) {
			e = jb.lng;
			i9 = ja.lng
		} else {
			e = ja.lng;
			i9 = jb.lng
		}
		if (jb.lat < ja.lat) {
			jc = jb.lat;
			i = ja.lat
		} else {
			jc = ja.lat;
			i = jb.lat
		}
		if (T.lng < e || T.lng > i9 || T.lat < jc || T.lat > i) {
			return false
		}
		return true
	}

	function h9(jd, jc, jb, i9) {
		var ja = P(jb, i9, jd);
		var T = P(jb, i9, jc);
		var i = P(jd, jc, jb);
		var e = P(jd, jc, i9);
		if (ja * T < 0 && i * e < 0) {
			return true
		} else {
			if (ja === 0 && h1(jb, i9, jd)) {
				return true
			} else {
				if (T === 0 && h1(jb, i9, jc)) {
					return true
				} else {
					if (i === 0 && h1(jd, jc, jb)) {
						return true
					} else {
						if (e === 0 && h1(jd, jc, i9)) {
							return true
						} else {
							return false
						}
					}
				}
			}
		}
	}

	function gO(T, i) {
		var e = i.parentNode;
		if (e.lastChild === i) {
			e.appendChild(T)
		} else {
			e.insertBefore(T, i.nextSibling)
		}
	}

	function dp(jf, jg) {
		if (jg === 0) {
			return jf
		}
		var je = 0;
		var jc = 0;
		if (!jf) {
			throw "异常"
		}
		if (jf.length === 0) {
			return []
		}
		for (var ja = 1, T = jf.length - 1; ja < T; ja++) {
			var jd = fd(jf[ja], jf[0], jf[jf.length - 1]);
			if (jd > je) {
				jc = ja;
				je = jd
			}
		}
		var e = [];
		if (je >= jg) {
			var ji = jf.slice(0, jc);
			var jh = jf.slice(jc, jf.length);
			var jb = dp(ji, jg);
			var i9 = dp(jh, jg);
			for (var ja = 0, T = jb.length; ja < T; ja++) {
				e.push(jb[ja])
			}
			for (var ja = 0, T = i9.length; ja < T; ja++) {
				e.push(i9[ja])
			}
		} else {
			e.push(jf[0]);
			e.push(jf[jf.length - 1])
		}
		return e
	}

	function m(e) {
		if (Math.log2) {
			return Math.log2(e)
		}
		return Math.log(e) / Math.LN2
	}

	function cO(T, i, e) {
		return Math.min(e, Math.max(i, T))
	}

	function aj(e, i) {
		if (!i) {
			return e
		}
		var jb = i[0];
		var ja = i[1];
		var i9 = i[2];
		var T = i[3];
		var jd = [];
		var jc = [];
		jd[0] = T * e[0] + i9 * e[2];
		jd[1] = e[1];
		jd[2] = -i9 * e[0] + T * e[2];
		jc[0] = jd[0];
		jc[1] = ja * jd[1] - jb * jd[2];
		jc[2] = jb * jd[1] + ja * jd[2];
		return jc
	}
	var k = Math.PI / 180;
	var f4 = 180 / Math.PI;

	function eZ(T) {
		var i = (T - Date.UTC(2000, 0, 1, 12)) / 86400000 / 36525;
		var e = (d3.utcDay.floor(T) - T) / 86400000 * 360 - 180;
		return [e - eO(i) * f4, dv(i) * f4]
	}

	function eO(i9) {
		var ja = bf(i9);
		var i = dB(i9);
		var T = hC(i9);
		var jb = Math.tan(hB(i9) / 2);
		jb *= jb;
		return jb * Math.sin(2 * T) - 2 * ja * Math.sin(i) + 4 * ja * jb * Math.sin(i) * Math.cos(2 * T) - 0.5 * jb * jb * Math.sin(4 * T) - 1.25 * ja * ja * Math.sin(2 * i)
	}

	function dv(e) {
		return Math.asin(Math.sin(hB(e)) * Math.sin(bk(e)))
	}

	function bk(e) {
		return iW(e) - (0.00569 + 0.00478 * Math.sin((125.04 - 1934.136 * e) * k)) * k
	}

	function iW(e) {
		return hC(e) + ie(e)
	}

	function dB(e) {
		return (357.52911 + e * (35999.05029 - 0.0001537 * e)) * k
	}

	function hC(i) {
		var e = (280.46646 + i * (36000.76983 + i * 0.0003032)) % 360;
		return (e < 0 ? e + 360 : e) / 180 * Math.PI
	}

	function ie(i) {
		var e = dB(i);
		return (Math.sin(e) * (1.914602 - i * (0.004817 + 0.000014 * i)) + Math.sin(e + e) * (0.019993 - 0.000101 * i) + Math.sin(e + e + e) * 0.000289) * k
	}

	function hB(e) {
		return c4(e) + 0.00256 * Math.cos((125.04 - 1934.136 * e) * k) * k
	}

	function c4(e) {
		return (23 + (26 + (21.448 - e * (46.815 + e * (0.00059 - e * 0.001813))) / 60) / 60) * k
	}

	function bf(e) {
		return 0.016708634 - e * (0.000042037 + 1.267e-7 * e)
	}

	function fz() {
		return window.devicePixelRatio || 1
	}

	function hO(T) {
		var i;
		var e;
		var i9;
		if (T >= 0) {
			i9 = Math.floor(T / 65536) * 65536;
			i = i9;
			e = T - i9
		} else {
			i9 = Math.floor(-T / 65536) * 65536;
			i = -i9;
			e = T + i9
		}
		return [i, e]
	}

	function ch(e) {
		if (e.lng >= 0 && e.lat >= 0) {
			return new cd(e.lng - 10000000, e.lat - 6000000)
		}
		if (e.lng >= 0 && e.lat < 0) {
			return new cd(e.lng - 10000000, e.lat + 6000000)
		}
		if (e.lng < 0 && e.lat >= 0) {
			return new cd(e.lng + 10000000, e.lat - 6000000)
		}
		if (e.lng < 0 && e.lat < 0) {
			return new cd(e.lng + 10000000, e.lat + 6000000)
		}
	}
	var hl = null;
	if (window.performance && window.performance.now) {
		hl = function() {
			return performance.now()
		}
	} else {
		if (Date.now) {
			hl = function() {
				return Date.now()
			}
		} else {
			hl = function() {
				return (new Date)
					.getTime()
			}
		}
	}

	function gZ(i9, e, i) {
		var T = "mouseWheel";
		if (es.Platform.macintosh) {
			if (!isNaN(i9) && (i9 < 10 || i9 !== 120) && (e % 1 === 0 && e < 5)) {
				T = "padScroll"
			}
			if (es.Browser.firefox && (e % 1 === 0 && e < 5 && i === 0)) {
				T = "padScroll"
			}
		}
		if (es.Browser.safari && i9 === 12) {
			T = "mouseWheel"
		}
		return T
	}

	function bB(ji, jd) {
		var jh = ji[0];
		var jg = ji[1];
		var i9 = false;
		for (var jc = 0, jb = jd.length - 2; jc < jd.length; jc += 2) {
			var jf = jd[jc];
			var ja = jd[jc + 1];
			var je = jd[jb];
			var T = jd[jb + 1];
			var e = ((ja > jg) !== (T > jg)) && (jh < (je - jf) * (jg - ja) / (T - ja) + jf);
			if (e) {
				i9 = !i9
			}
			jb = jc
		}
		return i9
	}

	function am(ja, jc) {
		var e = jc.length;
		var T = 0;
		var jb = false;
		for (var i9 = 0; i9 < e; i9++) {
			T = (i9 === e - 1) ? 0 : T + 1;
			if ((jc[i9].lat !== jc[T].lat) && (((ja.lat >= jc[i9].lat) && (ja.lat < jc[T].lat)) || ((ja.lat >= jc[T].lat) && (ja.lat < jc[i9].lat))) && (ja.lng < (jc[T].lng - jc[i9].lng) * (ja.lat - jc[i9].lat) / (jc[T].lat - jc[i9].lat) + jc[i9].lng)) {
				jb = !jb
			}
		}
		return jb
	}

	function dm(T, e, i, i9) {
		i9 = i9 || 0.4;
		if (T > i) {
			T = Math.pow(T - i + 1, i9) + i - 1
		} else {
			if (T < e) {
				T = e - Math.pow(e - T + 1, i9) + 1
			}
		}
		return T
	}

	function eo(jd) {
		var jb = "";
		for (var T = 0; T < jd.length; T++) {
			var je = jd.charCodeAt(T) << 1;
			var e = je.toString(2);
			var ja = e.length;
			var jh = e;
			if (ja < 8) {
				jh = "00000000" + e;
				jh = jh.substr(e.length, 8)
			}
			jb += jh
		}
		var jf = 5 - jb.length % 5;
		var i9 = [];
		for (var T = 0; T < jf; T++) {
			i9[T] = "0"
		}
		jb = i9.join("") + jb;
		var jg = [];
		for (var T = 0; T < jb.length / 5; T++) {
			var je = jb.substr(T * 5, 5);
			var jc = parseInt(je, 2) + 50;
			jg.push(String.fromCharCode(jc))
		}
		return jg.join("") + jf.toString()
	}

	function iO(T, i) {
		var e = bo.TILE_VERSION || window.TILE_VERSION;
		if (!e || !e[T] || !e[T][i] || !e[T][i].version || !e[T][i].updateDate) {
			e = w.tvc
		}
		return {
			ver: e[T][i].version,
			udt: e[T][i].updateDate
		}
	}

	function bp() {
		var e = bo.MSV || window.MSV;
		if (!e || !e.mapstyle || !e.mapstyle.updateDate || !e.mapstyle.version) {
			e = w.msv
		}
		return {
			ver: e.mapstyle.version,
			udt: e.mapstyle.updateDate
		}
	}

	function c8(e, ja) {
		var i9 = e.slice(0);
		for (var T = 0; T < i9.length; T++) {
			i9[T] += ja
		}
		return i9
	}
	var gg = null;

	function gv(e) {
		if (gg) {
			return
		}
		e.fire(new e7("onloadtile"));
		gg = setTimeout(function() {
			gg = null
		}, 1000)
	}

	function aC() {
		if (y("//map.baidu.com") || y("//maps.baidu.com") || y("//ditu.baidu.com")) {
			return true
		}
		return false
	}
	aA.inMapHost = aC();
	if (typeof window._inMapHost === "boolean") {
		aA.inMapHost = window._inMapHost
	}

	function y(i) {
		var T = window.location;
		var e = document.createElement("a");
		e.href = i;
		return e.hostname === T.hostname && e.port === T.port && e.protocol === T.protocol
	}
	var du = [72.685732, 0.193351, 136.10888, 54.392257];
	var er = [72.6892532, 0.1939743381, 136.1168614, 54.392257];
	var s = [72.69566833, 0.1999420909, 136.1232863, 54.39791217];
	var hD = 158;
	var cX = [98.789081, 122.948721, 107.857301, 118.082148, 119.126627, 128.021934, 79.939914, 99.021873, 119.912937, 122.084572, 127.906381, 130.933385, 106.496057, 108.066113, 119.818772, 126.367919, 111.789929, 119.311401, 100.742164, 102.220151, 99.853589, 100.781289, 97.522631, 98.834615, 99.092638, 99.892947, 122.905967, 123.761867, 123.716213, 125.494726, 123.723977, 124.755034, 125.475833, 126.398284, 125.471687, 126.065118, 130.817003, 133.605851, 127.900156, 128.656536, 128.646633, 129.625389, 132.88057, 134.104549, 117.365548, 119.230813, 116.073074, 117.416898, 114.406274, 116.123791, 116.479038, 119.591534, 110.566812, 111.851324, 74.465162, 79.993155, 82.858046, 91.345214, 85.71485, 98.969834, 127.651377, 129.532029, 129.462275, 130.209769, 133.716214, 134.731053, 134.366834, 135.103133, 130.854579, 131.32966, 115.499125, 117.530421, 115.765224, 116.734157, 108.524336, 110.601747, 121.351282, 124.612037, 126.151954, 127.332751, 91.273562, 95.604179, 79.87318, 82.935667, 76.413314, 78.336484, 78.275229, 79.993668, 83.956612, 85.725267, 85.500637, 89.346601, 97.990127, 98.94176, 106.641956, 108.599215, 111.386259, 111.810312, 111.578597, 111.803167, 115.99273, 117.010413, 116.24461, 116.675246, 119.422198, 119.909078, 120.646056, 121.38098, 120.335038, 120.662183, 124.579855, 125.773243, 126.207803, 126.774849, 95.565331, 102.037736, 95.576121, 96.158028, 95.556699, 97.799055, 91.296205, 93.348146, 93.321994, 94.690522, 89.339313, 90.540241, 82.263039, 82.882528, 78.335615, 80.023512, 76.623947, 78.352608, 73.495149, 74.48155, 74.846872, 76.479412, 91.560058, 94.871116, 88.759515, 89.235995, 83.237883, 83.965264, 82.292123, 83.246813, 81.876477, 83.253307, 80.75212, 81.463265, 86.463409, 88.267232, 102.199623, 104.225963, 112.153727, 116.823265, 108.965663, 113.021145, 111.166575, 117.972799];
	var cW = [22.548416, 42.276971, 17.227969, 22.7346, 41.292761, 50.741667, 30.365133, 42.324913, 21.701924, 22.69335, 42.4176, 48.936335, 21.429059, 22.648399, 50.650499, 52.914825, 42.20449, 45.199078, 21.13391, 22.568612, 21.441033, 22.583349, 23.73862, 25.298628, 22.00409, 22.563095, 38.97849, 41.338631, 40.287973, 41.330108, 39.732801, 40.343252, 40.966852, 41.323446, 40.719312, 41.05937, 44.869472, 48.009884, 41.336325, 42.443362, 42.008104, 42.434713, 45.873151, 48.205746, 45.132322, 46.784582, 45.133383, 46.392803, 45.148771, 45.740273, 47.478161, 50.064393, 42.216229, 43.461282, 37.014302, 40.662281, 42.219985, 47.31417, 27.726965, 30.466651, 48.911271, 49.642488, 48.831706, 49.434487, 46.941762, 48.37425, 47.651781, 48.463782, 42.851964, 44.905396, 47.598273, 48.438467, 48.409141, 48.901651, 42.22756, 42.906402, 52.821047, 53.578094, 50.701837, 51.654278, 42.292419, 44.392214, 42.295918, 45.385017, 34.680866, 37.027803, 30.743515, 37.066586, 28.245649, 30.406053, 47.270872, 48.497371, 25.238932, 27.778469, 42.215754, 42.540416, 43.427677, 44.689208, 44.685587, 44.994131, 48.878657, 49.318659, 49.281099, 49.624515, 50.710468, 51.306809, 52.90717, 53.331981, 52.903016, 53.107959, 52.900867, 53.250033, 51.638073, 52.400678, 42.229657, 42.691928, 43.061242, 43.891083, 42.663095, 43.074222, 44.37174, 45.180155, 44.375135, 44.974219, 47.3035, 48.053221, 45.352401, 46.807875, 40.563053, 42.040289, 40.581871, 41.405172, 38.516328, 40.178756, 35.790476, 37.02337, 26.825605, 27.761303, 27.197399, 27.74932, 29.147561, 30.37813, 29.570893, 30.062042, 30.045026, 30.380952, 29.998038, 30.385203, 48.487385, 49.16832, 22.395733, 22.598229, 7.441114, 11.501436, 3.767491, 9.000793, 12.642067, 17.406563];
	var bR = [98.795985, 122.960792, 107.867379, 118.093451, 119.139658, 128.035888, 79.948212, 99.029524, 119.923388, 122.094977, 127.918527, 130.94789, 106.50606, 108.076783, 119.8329, 126.382207, 111.803567, 119.324928, 100.749858, 102.227985, 99.860885, 100.788921, 97.529435, 98.841564, 99.100017, 99.90035, 122.917416, 123.774367, 123.728314, 125.507211, 123.736065, 124.767299, 125.488463, 126.410675, 125.484326, 126.07764, 130.830784, 133.620042, 127.912178, 128.668957, 128.658937, 129.638599, 132.894179, 134.119086, 117.379378, 119.244569, 116.086736, 117.431212, 114.420233, 116.137458, 116.492775, 119.605527, 110.579401, 111.86488, 74.468228, 80.001908, 82.867432, 91.353788, 85.721075, 98.976964, 127.664757, 129.546833, 129.476893, 130.22449, 133.730358, 134.745235, 134.381034, 135.1178, 130.868117, 131.34409, 115.513245, 117.544751, 115.779271, 116.748045, 108.536254, 110.614326, 121.365534, 124.626434, 126.165992, 127.347013, 91.281869, 95.611754, 79.879648, 82.945041, 76.413314, 78.345207, 78.275229, 80.002329, 83.956612, 85.734098, 85.510186, 89.356499, 97.997001, 98.948845, 106.653208, 108.610811, 111.400183, 111.824179, 111.592224, 111.817136, 116.00682, 117.024631, 116.258574, 116.689291, 119.436876, 119.922961, 120.659806, 121.395479, 120.349116, 120.676014, 124.59389, 125.787788, 126.221756, 126.788962, 95.572955, 102.046581, 95.583772, 96.165551, 95.564318, 97.806095, 91.30446, 93.356438, 93.330319, 94.698145, 89.349129, 90.548677, 82.268802, 82.892025, 78.335615, 80.032266, 76.625755, 78.361413, 73.498248, 74.490992, 74.846872, 76.488771, 91.563521, 94.878444, 88.768214, 89.244787, 83.247076, 83.974127, 82.29595, 83.256003, 81.885315, 83.26249, 80.760619, 81.472404, 86.470983, 88.276988, 102.207537, 104.234614, 112.164795, 116.833667, 108.965663, 113.032246, 111.166575, 117.983363];
	var bQ = [22.551183, 42.284787, 17.227969, 22.738314, 41.300981, 50.749638, 30.368087, 42.332701, 21.705055, 22.696452, 42.426047, 48.944674, 21.432184, 22.651387, 50.657409, 52.92296, 42.212192, 45.206905, 21.137031, 22.57186, 21.444502, 22.586566, 23.741571, 25.301472, 22.006806, 22.56637, 38.985114, 41.346531, 40.295617, 41.338581, 39.740021, 40.351012, 40.974644, 41.331562, 40.726852, 41.067192, 44.877158, 48.018285, 41.344597, 42.451798, 42.016305, 42.443235, 45.880906, 48.214001, 45.140027, 46.792775, 45.141083, 46.400433, 45.156418, 45.748281, 47.485889, 50.071879, 42.223667, 43.469487, 37.019867, 40.668675, 42.226823, 47.321605, 27.72944, 30.469853, 48.919002, 49.650614, 48.840188, 49.443166, 46.949801, 48.382798, 47.660603, 48.472692, 42.859946, 44.913298, 47.605896, 48.445914, 48.41698, 48.909667, 42.23507, 42.914193, 52.8281, 53.585952, 50.709311, 51.662219, 42.29968, 44.399225, 42.302746, 45.391958, 34.680866, 37.03377, 30.743515, 37.07228, 28.245649, 30.408935, 47.277693, 48.504255, 25.241528, 27.780726, 42.223363, 42.548418, 43.435888, 44.696952, 44.693193, 45.00187, 48.886267, 49.326755, 49.288642, 49.632304, 50.717486, 51.314369, 52.914204, 53.33964, 52.910094, 53.115926, 52.908382, 53.258095, 51.64533, 52.408305, 42.236825, 42.699126, 43.068466, 43.898632, 42.670403, 43.082219, 44.379045, 45.187742, 44.382336, 44.981379, 47.310362, 48.06019, 45.359099, 46.814439, 40.569751, 42.047741, 40.587956, 41.41263, 38.519192, 40.185033, 35.790476, 37.029005, 26.825605, 27.763896, 27.199658, 27.751649, 29.150192, 30.381073, 29.573886, 30.065162, 30.047775, 30.384089, 30.001277, 30.388525, 48.494118, 49.173841, 22.398528, 22.601198, 7.441114, 11.505968, 3.767491, 9.005209, 12.642067, 17.410886];
	var Y = 95;
	var cE = [110.3961374, 105.0743788, 96.8991824, 95.61810411, 93.82412598, 91.3892353, 91.38931858, 89.08325955, 87.22469808, 86.26278402, 85.17353, 85.23741211, 82.86627441, 81.90481038, 79.59687147, 80.39829237, 79.93319363, 77.80279948, 75.2557704, 73.49357829, 73.1892532, 73.87758816, 74.4064738, 74.10215224, 75.46409695, 76.77739692, 78.28299615, 78.15499485, 78.37920654, 78.89145345, 79.69282199, 81.19938178, 81.80830295, 83.89093424, 85.94149523, 87.86447266, 89.03414958, 90.05918132, 91.10026937, 92.15733832, 93.74361735, 95.82597331, 97.95655545, 97.12363037, 98.2129739, 99.2068571, 101.6587874, 102.5239084, 102.2356106, 105.0249238, 106.0992342, 107.8617093, 111.6439372, 109.591869, 112.284586, 117.7961157, 118.9495128, 114.2076584, 118.693565, 123.1475225, 122.730705, 120.9361393, 123.4207441, 122.3787782, 122.1385425, 121.5904281, 121.1773763, 120.6805404, 120.2483355, 122.795807, 122.8759077, 121.3060262, 122.1392177, 123.7418799, 126.4177599, 128.5647409, 129.7194884, 131.2259136, 131.9950494, 133.6289931, 135.6168614, 131.3875545, 130.8743365, 128.6303223, 126.0997773, 124.4015375, 122.22161, 119.6586483, 119.7866827, 118.5685878, 116.5177976, 114.819101, 119.0812964, 116.453265, 111.7431171];
	var cC = [43.2190351, 42.38053385, 43.17417589, 44.42226915, 45.09863634, 45.56708116, 47.33599718, 48.68832709, 49.62448486, 48.9482175, 48.4800472, 47.33564399, 47.43948676, 46.03452067, 45.20221788, 43.34563043, 42.32965739, 41.39690972, 40.82972331, 39.95567654, 39.25892877, 38.36098768, 38.05441569, 37.16878445, 36.38899414, 35.36126817, 34.30953451, 32.58503879, 31.56975694, 30.77800266, 30.43559814, 29.7744892, 30.0931977, 28.71103299, 27.70739665, 27.5775472, 27.01096137, 27.77857883, 27.50707954, 26.50328315, 26.70387804, 27.95548557, 27.29428901, 23.64685493, 23.62310601, 21.67493381, 20.77751465, 21.32070991, 22.1824113, 22.31232964, 22.51316054, 16.80037679, 13.19749864, 0.6939743381, 1.541660428, 10.50208252, 15.58926975, 17.89090007, 19.94928467, 22.18490153, 25.37285292, 25.61456434, 30.62532552, 31.08099284, 31.89238173, 32.50092692, 32.80325765, 34.25546956, 35.15486138, 36.90170139, 37.8348272, 37.941604, 38.6480797, 38.96797201, 40.98146918, 41.25573296, 42.07218153, 42.49132813, 44.65259766, 44.69330702, 48.62286865, 48.09383952, 49.19628499, 50.03402317, 53.27678901, 53.62976345, 53.89420546, 52.98933322, 52.01872884, 50.23210259, 50.18807048, 47.49769857, 47.34362712, 46.50502143, 45.24770128];
	var ea = [98.7895, 122.954182, 107.860913, 118.087007, 119.133165, 128.029533, 79.941749, 99.023087, 119.916883, 122.08841, 127.912143, 130.941471, 106.499502, 108.070244, 119.826245, 126.375818, 111.797006, 119.318387, 100.743285, 102.221517, 99.854448, 100.782445, 97.522928, 98.835028, 99.093518, 99.893783, 122.910927, 123.767769, 123.721954, 125.50077, 123.729657, 124.760724, 125.481902, 126.404079, 125.477737, 126.071019, 130.824331, 133.613395, 127.905767, 128.662524, 128.652527, 129.6321, 132.887552, 134.11249, 117.37297, 119.237999, 116.080154, 117.424589, 114.413586, 116.130948, 116.486264, 119.598927, 110.5728, 111.858437, 74.465162, 79.995337, 82.860821, 91.347291, 85.716024, 98.970481, 127.658331, 129.540202, 129.470528, 130.21808, 133.723748, 134.738785, 134.374555, 135.111443, 130.861475, 131.337438, 115.506627, 117.538123, 115.772783, 116.741632, 108.529656, 110.60782, 121.358945, 124.619773, 126.159424, 127.340582, 91.275275, 95.605228, 79.874427, 82.938601, 76.413314, 78.338763, 78.275229, 79.995765, 83.956612, 85.727511, 85.503554, 89.349858, 97.990418, 98.942257, 106.646704, 108.604437, 111.393667, 111.817723, 111.585811, 111.810645, 116.000232, 117.018216, 116.252108, 116.682705, 119.430384, 119.916417, 120.653168, 121.38883, 120.342727, 120.669383, 124.587426, 125.781376, 126.215282, 126.782323, 95.566367, 102.040026, 95.577158, 96.159009, 95.557772, 97.799728, 91.298032, 93.350057, 93.323794, 94.691771, 89.342471, 90.542019, 82.264229, 82.885485, 78.335615, 80.025844, 76.623947, 78.355027, 73.495149, 74.484473, 74.846872, 76.482208, 91.560117, 94.871859, 88.761692, 89.23822, 83.240549, 83.967602, 82.292367, 83.2495, 81.878825, 83.256003, 80.75421, 81.465955, 86.465421, 88.270356, 102.201019, 104.228033, 112.158282, 116.827153, 108.965663, 113.025767, 111.166575, 117.97687];
	var d9 = [22.545421, 42.279053, 17.226272, 22.731982, 41.294917, 50.743316, 30.361986, 42.326603, 21.699185, 22.690751, 42.419757, 48.938435, 21.426505, 22.64567, 50.651745, 52.916705, 42.20641, 45.201064, 21.131326, 22.565685, 21.438288, 22.580379, 23.735785, 25.295582, 22.001087, 22.560315, 38.979333, 41.340757, 40.28938, 41.332289, 39.734164, 40.344718, 40.968803, 41.325813, 40.721073, 41.061503, 44.871533, 48.012179, 41.338366, 42.445601, 42.010343, 42.436934, 45.875217, 48.208327, 45.134237, 46.786509, 45.135376, 46.394665, 45.150734, 45.742257, 47.480099, 50.065931, 42.217982, 43.46329, 37.014057, 40.662848, 42.221079, 47.315558, 27.723432, 30.46385, 48.913298, 49.644555, 48.83396, 49.436824, 46.944059, 48.376613, 47.654503, 48.466331, 42.854333, 44.907682, 47.600253, 48.440245, 48.410926, 48.903468, 42.229292, 42.908294, 52.822466, 53.58012, 50.703491, 51.656037, 42.29378, 44.393379, 42.296912, 45.385809, 34.679282, 37.027699, 30.740622, 37.066377, 28.241967, 30.403134, 47.271949, 48.49848, 25.235818, 27.774976, 42.217425, 42.542102, 43.429763, 44.691016, 44.687044, 44.995758, 48.880431, 49.320551, 49.282865, 49.626267, 50.711607, 51.308382, 52.908547, 53.333963, 52.904419, 53.109706, 52.902338, 53.251938, 51.639701, 52.402205, 42.231045, 42.693581, 43.062756, 43.892771, 42.664519, 43.075927, 44.372942, 45.1815, 44.376327, 44.975476, 47.304623, 48.054453, 45.353174, 46.808493, 40.563653, 42.041556, 40.582164, 41.4064, 38.51618, 40.179105, 35.789745, 37.023144, 26.825402, 27.757641, 27.193806, 27.745766, 29.144229, 30.375186, 29.567889, 30.059102, 30.041938, 30.378006, 29.995047, 30.382338, 48.48834, 49.169021, 22.392816, 22.595333, 7.439914, 11.500161, 3.766676, 9.000793, 12.640512, 17.406563];
	var e6 = 3000;
	var f8 = 0.00002;
	var f7 = 0.000003;
	var hY = 0.0174532925194;
	var gR = 0.0065;
	var gQ = 0.006;
	var dg = 40000;
	var eX = 0;
	var ig = 1;
	var ar = 2;
	var he = 3;
	var eQ = 4;
	var gy = 1e-10;
	var hK = 6370996.81;
	var e9 = 100000000;

	function gG(T, ja, i, i9) {
		var e = arguments.length;
		this.ll = {};
		this.ru = {};
		if (e === 0) {} else {
			if (e === 4) {
				this.normalize(T, ja, i, i9)
			}
		}
	}
	gG.prototype.contains = function(e) {
		if (e.lng > this.ll.lng && e.lng < this.ru.lng && e.lat > this.ll.lat && e.lat < this.ru.lat) {
			return he
		}
		if (Math.abs(e.lng - this.ll.lng) < gy || Math.abs(e.lng - this.ru.lng) < gy || Math.abs(e.lat - this.ll.lat) < gy || Math.abs(e.y - this.ru.lat) > gy) {
			return ar
		}
		return eX
	};
	gG.prototype.normalize = function(i, i9, e, T) {
		if (i > e) {
			this.ll.lng = e;
			this.ru.lng = i
		} else {
			this.ll.lng = i;
			this.ru.lng = e
		}
		if (i9 > T) {
			this.ll.lat = T;
			this.ru.lat = i9
		} else {
			this.ll.lat = i9;
			this.ru.lat = T
		}
	};

	function d0(i, i9, e, T) {
		this.sp = {
			lng: i,
			lat: i9
		};
		this.ep = {
			lng: e,
			lat: T
		};
		this.mbr = new gG(i, i9, e, T)
	}

	function hm(i9, e, jb, ja) {
		for (var T = 0; T < ja; T = T + 2) {
			if (i9.lng >= e[T] && i9.lng <= e[T + 1] && i9.lat >= jb[T] && i9.lat <= jb[T + 1]) {
				return true
			}
		}
		return false
	}

	function fE(je) {
		var i = je.lng;
		var jd = je.lat;
		var i9 = Math.sqrt(i * i + jd * jd);
		var jb = Math.atan2(jd, i);
		var T = i9 + fO(jd);
		var ja = jb + fN(i);
		var e = T * Math.cos(ja);
		var jc = T * Math.sin(ja);
		return {
			lng: e + gR,
			lat: jc + gQ
		}
	}

	function aQ(je) {
		var i = je.lng - gR;
		var jd = je.lat - gQ;
		var i9 = Math.sqrt(i * i + jd * jd);
		var jb = Math.atan2(jd, i);
		var T = i9 - fO(jd);
		var ja = jb - fN(i);
		var e = T * Math.cos(ja);
		var jc = T * Math.sin(ja);
		return {
			lng: e,
			lat: jc
		}
	}

	function fO(e) {
		return Math.sin(e * e6 * hY) * f8
	}

	function fN(e) {
		return Math.cos(e * e6 * hY) * f7
	}

	function al(T, i, e) {
		return ((i.lng - T.lng) * (e.lat - T.lat) - (e.lng - T.lng) * (i.lat - T.lat))
	}

	function gW(i, e) {
		return Math.abs(i - e) <= gy
	}

	function fU(i9, T) {
		var i = i9.lat * hY;
		var je = i9.lng * hY;
		var e = T.lat * hY;
		var jd = T.lng * hY;
		var jb = Math.cos(i) * Math.cos(e);
		var ja = Math.cos(je) * Math.cos(jd);
		var jg = Math.sin(i) * Math.sin(e);
		var jf = Math.sin(je) * Math.sin(jd);
		var jh = jb * ja + jb * jf + jg;
		if (jh < -1) {
			jh = -1
		} else {
			if (jh > 1) {
				jh = 1
			}
		}
		var jc = Math.acos(jh) * hK;
		return jc
	}

	function g(jd, jc) {
		var i = jd.lat * hY;
		var e = jc.lat * hY;
		var i9 = jd.lng * hY;
		var T = jc.lng * hY;
		var jb = i - e;
		var ja = i9 - T;
		var je = Math.sin(jb / 2) * Math.sin(jb / 2) + Math.cos(i) * Math.cos(e) * Math.sin(ja / 2) * Math.sin(ja / 2);
		return 2 * Math.asin(Math.sqrt(je)) * hK
	}

	function fS(je, T) {
		var jg = bq(je, T);
		var jf = 180;
		var jd = 90;
		var jc = -180;
		var ja = -90;
		var jb = T.sp;
		var i9 = T.ep;
		jf = jb.lng < i9.lng ? jb.lng : i9.lng;
		jd = jb.lat < i9.lat ? jb.lat : i9.lat;
		jc = jb.lng < i9.lng ? jb.lng : i9.lng;
		ja = jb.lat < i9.lat ? jb.lat : i9.lat;
		if (jg.lng <= jc && jg.lng >= jf && jg.lng <= ja && jg.lat >= jd) {
			return fU(je, jg)
		} else {
			var i = g(je, T.sp);
			var e = g(je, T.ep);
			return i < e ? i : e
		}
	}

	function aR(i, e) {}

	function bu(i, i9, e, T) {
		return Math.sqrt((i - e) * (i - e) + (i9 - T) * (i9 - T))
	}

	function bq(jk, jc) {
		var jb = jk.lng;
		var jj = jk.lat;
		var ja = jc.sp.lng;
		var ji = jc.sp.lat;
		var T = jc.ep.lng;
		var jg = jc.ep.lat;
		var jh = jg - ji;
		var jf = ja - T;
		if (gW(jh, 0) && gW(jf, 0)) {
			return jc.sp
		}
		var je = T * ji - ja * jg;
		var jd = jf * jb - jh * jj;
		var e = jh * jh - jf * jf;
		var i9 = jf * jd - jh * je;
		var i = jh * jd + jf * je;
		return {
			lng: i9 / e,
			lat: -i / e
		}
	}

	function by(i9) {
		var T = 0;
		for (var e = 0; e < Y; ++e) {
			if (cC[e] <= i9.lat) {
				if (cC[(e + 1) % Y] > i9.lat) {
					if (al({
						lng: cE[e],
						lat: cC[e]
					}, {
						lng: cE[(e + 1) % Y],
						lat: cC[(e + 1) % Y]
					}, i9) > 0) {
						++T
					}
				}
			} else {
				if (cC[(e + 1) % Y] <= i9.lat) {
					if (al({
						lng: cE[e],
						lat: cC[e]
					}, {
						lng: cE[(e + 1) % Y],
						lat: cC[(e + 1) % Y]
					}, i9) < 0) {
						--T
					}
				}
			}
		}
		return T === 0 ? eX : he
	}

	function iR(i9) {
		var jc = {};
		if (i9.lng < er[0] - 0.4 || i9.lat < er[1] - 0.4 || i9.lng > er[2] + 0.4 || i9.lat > er[3] + 0.4) {
			jc.lng = i9.lng;
			jc.lat = i9.lat;
			return jc
		} else {
			if (hm(i9, ea, d9, hD)) {
				jc = fE(i9);
				return jc
			}
		}
		var e = 0;
		var jf = dg;
		var T = 0;
		var jd = new gG();
		var je = 1;
		if (by(i9) === eX) {
			for (var jb = 0; jb < Y; ++jb) {
				var ja = new d0(cE[jb], cC[jb], cE[(jb + 1) % Y], cC[(jb + 1) % Y]);
				jd.ll.lng = ja.mbr.ll.lng - 0.5;
				jd.ll.lat = ja.mbr.ll.lat - 0.5;
				jd.ru.lng = ja.mbr.ru.lng + 0.5;
				jd.ru.lat = ja.mbr.ru.lat + 0.5;
				if (jd.contains(i9) === eX) {
					continue
				}
				T = fS(i9, ja);
				if (T < jf) {
					jf = T
				}
			}
			if (jf < dg) {
				e = (dg - jf) / dg;
				je = 2
			}
		} else {
			je = 3;
			e = 1
		}
		var jg = fE(i9);
		jc = {
			lng: i9.lng + (jg.lng - i9.lng) * e,
			lat: i9.lat + (jg.lat - i9.lat) * e
		};
		return jc
	}

	function et(i) {
		var T = {};
		if (i.lng < s[0] - 0.4 || i.lat < s[1] - 0.4 || i.lng > s[2] + 0.4 || i.lat > s[3] + 0.4) {
			T.lng = i.lng;
			T.lat = i.lat;
			return T
		} else {
			if (hm(i, bR, bQ, hD)) {
				T = aQ(i);
				return T
			}
		}
		var e = iR(i);
		if (i.lng === e.lng && i.lat === e.lng) {
			T.lng = i.lng;
			T.lat = i.lat;
			return T
		}
		return decryptPt1(i, iR)
	}

	function hA(i, e) {
		if (e === 3 && i instanceof cd) {
			var T = iR(i);
			return new cd(T.lng, T.lat)
		} else {
			return i
		}
	}

	function ec(i, e) {
		if (e === 3 && i instanceof cd) {
			var T = et(i);
			return new cd(T.lng, T.lat)
		} else {
			if (e === 5 && i instanceof cd) {
				return new cd(i.lng, i.lat)
			} else {
				return i
			}
		}
	}

	function l(jb) {
		var jc = JSON.stringify(jb);
		var ja = 0,
			T, i9, e;
		if (jc.length === 0) {
			return ja
		}
		for (T = 0, e = jc.length; T < e; T++) {
			i9 = jc.charCodeAt(T);
			ja = ((ja << 5) - ja) + i9;
			ja |= 0
		}
		return ja
	}

	function cF() {
		var i = new Date()
			.getTime();
		var e = "xxxyxxxy".replace(/[xy]/g, function(i9) {
			var T = (i + Math.random() * 16) % 16 | 0;
			i = Math.floor(i / 16);
			return (i9 == "x" ? T : (T & 3 | 8))
				.toString(16)
		});
		return e
	}

	function io() {
		var T = function(js, jr) {
			var jq = {
				"\x61\x78\x65\x68\x61": function(jv, ju) {
					return jv !== ju
				},
				"\x78\x6d\x69\x63\x69": "\x65\x68\x65",
				"\x78\x65\x78\x69\x68": function(jv, ju) {
					return jv < ju
				},
				"\x6c\x65\x78\x78\x68": function(jv, ju) {
					return jv(ju)
				},
				"\x65\x61\x63\x65\x61": "\x65\x69\x61",
				"\x61\x78\x61\x6c\x69": "\x65\x6c\x61",
				"\x61\x64\x6d\x6c\x61": "\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72",
				"\x64\x61\x61\x6d\x78": function(jv, ju) {
					return jv + ju
				},
				"\x64\x61\x68\x78\x61": "\x31\x2e\x31\x2e\x32",
				"\x78\x65\x6c\x65\x65": function(jw, jv, ju) {
					return jw(jv, ju)
				}
			};
			var jn = jq["\x64\x61\x68\x78\x61"];

			function jm(jz, ju) {
				var jA = "\x65\x6c\x61";
				while (jq["\x61\x78\x65\x68\x61"](jA, "\x68\x78\x65\x65")) {
					switch (jA) {
						case jq["\x78\x6d\x69\x63\x69"]:
							for (var jy = 0; jq["\x78\x65\x78\x69\x68"](jy, jw); jy++) {
								var jx = jq["\x6c\x65\x78\x78\x68"](ju, jz[jy]);
								jv["\x70\x75\x73\x68"](jx)
							}
							jA = jq["\x65\x61\x63\x65\x61"];
							break;
						case jq["\x61\x78\x61\x6c\x69"]:
							var jw = jz["\x6c\x65\x6e\x67\x74\x68"];
							jA = "\x61\x68\x61";
							break;
						case "\x61\x68\x61":
							var jv = [];
							jA = jq["\x78\x6d\x69\x63\x69"];
							break;
						case jq["\x65\x61\x63\x65\x61"]:
							return jv
					}
				}
			}
			var jp, jo, jl, jk, jj, ji = decodeURIComponent,
				jh = "\x43\x68\x61\x72",
				jg = "";
			var jf = [T];
			jp = "\x64\x65";
			jo = "\x66\x72";
			jl = "\x6f";
			jj = jo + jl + "\x6d";
			jk = "\x43\x6f" + jp;
			var je = function(ju) {
				return (ju + jg)[jq["\x61\x64\x6d\x6c\x61"]][jq["\x64\x61\x61\x6d\x78"](jj, jh) + jk](ju)
			};
			var jd = function(ju) {
				return jm(ju, function(jv) {
					return jq["\x6c\x65\x78\x78\x68"](je, jv)
				})
			};
			var jc = jd["\x63\x61\x6c\x6c"](je, [39, 34, 37, 96, 60, 120, 97, 65, 98, 66, 99, 67, 100, 68, 101, 69, 102, 70, 103, 110, 109, 111, 112, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);
			var jb = jm([28782, 27702, 26416, 25167, 24183], function(ju) {
				return ji(ju)
			});
			var ja = jd["\x63\x61\x6c\x6c"](jb, [22354, 22749, 24415, 23346, 22257, 22688, 24306, 25174, 23595, 25547, 22984, 25690, 22212, 27547, 21594, 27210, 23090, 29193, 22394, 29368, 29532, 29459, 29530, 24146, 24500, 26352, 27441, 28788, 29370, 27673, 26925, 25249, 24430]),
				i9 = {};
			jb = jq["\x6c\x65\x78\x78\x68"](jd, jb);
			var jt = new RegExp(jb["\x6a\x6f\x69\x6e"]("\x7c"));
			for (var jp = 0; jp < jc["\x6c\x65\x6e\x67\x74\x68"]; jp++) {
				i9[ja[jp]] = jc[jp]
			}
			jr = jq["\x78\x65\x6c\x65\x65"](jm, jr["\x73\x70\x6c\x69\x74"](jg), function(ju) {
				return i9[ju] || ju
			})["\x6a\x6f\x69\x6e"](jg);
			return jm(jr["\x73\x70\x6c\x69\x74"](jt), function(ju) {
				return jq["\x6c\x65\x78\x78\x68"](ji, ju)
			})
		}(this, "\u56c4\u545a\u58a0\u735c\x68\u6c36\x73\x75\u5c2b\x73\x74\x72\x69\u72b8\u577a\u6c36\x6c\u545a\u72b8\u577a\x74\x68\u624f\u7209\u72ba\x4c\u66f0\x4f\u6c19\x52\u6c19\u6256\u6b9b\u62a1\u5f6e\u5f6e\u5e52\x4f\u706e\x48\u5e52\u6256\u5f6e\x50\u62a1\x50\u692d\x59\u6c19\u6256\u63cb\x51\x4f\u5e52\u5e77\u5f5f\u66f0\u6c19\x73\x69\u577a\u72b8\u5f5f\u6b31\u6b9b\u6c36\x6c\x6c\u545a\x6c\u5ef2\u6c36\x73\x75\u5c2b\x73\x74\x72\u5e77\u58a0\x69\x68\u545a\u5ef2\u5e77\x69\u72b8\u56c4\u545a\u58a0\x4f\u5a32\u5e77\u5ef2\u5ef2\u545a\u59c8\x69");
		(function(jb, ja) {
			var i9 = function(jc) {
				while (--jc) {
					jb.push(jb.shift())
				}
			};
			i9(++ja)
		}(T, 410));
		var i = function(jb, ja) {
			jb = jb - 0;
			var i9 = T[jb];
			return i9
		};

		function e(jb) {
			var ja = {
				"\x6d\x6c\x65\x78\x61": i("0x0"),
				"\x6c\x6c\x65\x6c\x61": i("0x1"),
				"\x78\x69\x68\x65\x61": function(jg, jf) {
					return jg + jf
				},
				"\x61\x61\x65\x63\x69": function(jg, jf) {
					return jg(jf)
				},
				"\x64\x65\x78\x6d\x68": i("0x2")
			};
			var i9 = ja["\x6d\x6c\x65\x78\x61"];
			var je = ja[i("0x3")];
			var jd = jb[i("0x4")](ja[i("0x5")](jb[i("0x6")]("\x3f"), 1));
			var jc = ja[i("0x7")](md5, ja[i("0x7")](md5, ja[i("0x5")](jd, i9)) + je);
			return ja[i("0x5")](ja[i("0x8")], jc[i("0x9")](jc[i("0xa")] - 12))
		}
		return e
	}

	function gi() {}
	es.extend(gi, {
		Request: {
			INITIAL: -1,
			WAITING: 0,
			LOADED: 1,
			COMPLETED: 2
		},
		Dependency: {
			poly: ["marker"],
			layer: ["poly"],
			hotspot: ["poly"],
			infowindow: ["marker", "hotspot"],
			simpleInfowindow: ["marker"],
			tools: ["marker", "poly"],
			mapgl: ["glcommon", "poly"],
			earth: ["glcommon"],
			control: ["scommon"],
			scommon: [],
			localSearch: ["scommon"],
			otherSearch: ["scommon"],
			route: ["scommon"],
			buslineSearch: ["route"],
			autocomplete: ["scommon"]
		},
		MD5Mapping: {
			control: "b1nkho",
			marker: "haoprj",
			poly: "bqme35",
			layer: "$layer$",
			infowindow: "eeffeh",
			simpleInfowindow: "ai3ubs",
			hotspot: "a2rjgv",
			menu: "shojrn",
			tools: "2alxwv",
			oppc: "bdc1pp",
			oppcgl: "ldgwsa",
			mapgl: "0xhmul",
			markeranimation: "rvcm5k",
			earth: "j4pmhf",
			glcommon: "wnomcp",
			localSearch: "5ne5tg",
			scommon: "xnujuz",
			otherSearch: "umft3k",
			route: "2gkz3v",
			buslineSearch: "yalkps",
			autocomplete: "es0e0z"
		},
		Config: {
			baseUrl: w.apiHost + "/getmodules?v=1.0&type=webgl",
			jsModPath: (aA.inMapHost ? "" : w.mapHost) + "/res/newui/",
			timeout: 5000
		},
		delayFlag: false,
		Module: {
			modules: {},
			modulesNeedToLoad: []
		},
		_getMd5ModsStr: function(jb) {
			var ja = [];
			for (var jd = 0, T = jb.length; jd < T; jd++) {
				var jc = jb[jd];
				var e = this.MD5Mapping[jc];
				var i9 = "$" + jc + "$";
				if (e !== i9) {
					ja.push(jc + "_" + e)
				}
			}
			return ja.join(",")
		},
		load: function(i, jb, i9) {
			var e = this.getModuleInfo(i);
			if (e.status === this.Request.COMPLETED) {
				if (i9 === true) {
					jb()
				}
			} else {
				if (e.status === this.Request.INITIAL) {
					this.combine(i);
					this.addToLoadQueue(i);
					var T = this;
					if (T.delayFlag === false) {
						T.delayFlag = true;
						setTimeout(function() {
							var jc = T.Config.baseUrl + "&mod=" + T._getMd5ModsStr(T.Module.modulesNeedToLoad);
							f5.load(jc);
							T.Module.modulesNeedToLoad.length = 0;
							T.delayFlag = false
						}, 1)
					}
					e.status = this.Request.WAITING;

					function ja(je) {
						var jd = T.getModuleInfo(i);
						if (jd.status !== T.Request.COMPLETED) {
							if (window.map) {
								var jc = new e7("onmod_timeout");
								jc.timeout = je / 1000;
								jc.moduleName = i;
								window.map.fire(jc)
							}
						}
					}
					setTimeout(ja, this.Config.timeout, this.Config.timeout);
					setTimeout(ja, this.Config.timeout * 2, this.Config.timeout * 2)
				}
				if (jb) {
					e.callbacks.push(jb)
				}
			}
		},
		combine: function(e) {
			if (e && this.Dependency[e]) {
				var i9 = this.Dependency[e];
				for (var T = 0; T < i9.length; T++) {
					this.combine(i9[T]);
					if (!this.Module.modules[i9[T]]) {
						this.addToLoadQueue(i9[T])
					}
				}
			}
		},
		addToLoadQueue: function(e) {
			var i = this.getModuleInfo(e);
			if (i.status === this.Request.INITIAL) {
				i.status = this.Request.WAITING;
				this.Module.modulesNeedToLoad.push(e)
			}
		},
		run: function(T, i9) {
			var jd = this.getModuleInfo(T);
			var jg = this.Dependency[T];
			if (jg) {
				for (var jb = 0; jb < jg.length; jb++) {
					var jc = this.getModuleInfo(jg[jb]);
					if (jc.status !== this.Request.COMPLETED) {
						jc.modsNeedToRun.push({
							name: T,
							code: i9
						});
						return
					}
				}
			}
			try {
				eval(i9)
			} catch (je) {
				return
			}
			jd.status = this.Request.COMPLETED;
			for (var jb = 0, ja = jd.callbacks.length; jb < ja; jb++) {
				jd.callbacks[jb]()
			}
			jd.callbacks.length = 0;
			for (jb = 0; jb < jd.modsNeedToRun.length; jb++) {
				var jf = jd.modsNeedToRun[jb];
				this.run(jf.name, jf.code)
			}
			jd.modsNeedToRun.length = 0
		},
		getModuleInfo: function(i) {
			var e;
			if (!this.Module.modules[i]) {
				this.Module.modules[i] = {
					status: this.Request.INITIAL,
					callbacks: [],
					modsNeedToRun: []
				}
			}
			e = this.Module.modules[i];
			return e
		}
	});
	window._jsload = function(ja, jb) {
		var i = gi.getModuleInfo(ja);
		i.status = gi.Request.LOADED;
		if (jb !== "") {
			gi.run(ja, jb)
		} else {
			if (window.map) {
				var e = new e7("ongetmodules_fail");
				e.moduleName = ja;
				window.map.fire(e)
			}
			var T = document.createElement("script");
			var i9 = gi.MD5Mapping[ja];
			T.src = gi.Config.jsModPath + ja + "_" + i9 + ".js";
			document.getElementsByTagName("head")[0].appendChild(T)
		}
	};

	function cB() {
		this._timeData = {}
	}
	var bm;
	if (typeof window !== "undefined") {
		bm = window
	} else {
		bm = self
	}
	cB.prototype.mark = function(e) {
		this._timeData[e] = this._getTime()
	};
	cB.prototype.getMark = function(e) {
		return this._timeData[e]
	};
	cB.prototype.getTime = function(i, e) {
		return parseFloat((this._timeData[e] - this._timeData[i])
			.toFixed(2))
	};
	cB.prototype.print = function() {};
	cB.prototype.clear = function() {
		this._timeData = {}
	};
	if (bm.performance && bm.performance.now) {
		cB.prototype._getTime = function() {
			return performance.now()
		}
	} else {
		cB.prototype._getTime = function() {
			return Date.now()
		}
	}! function(i, T) {
		T(i.d3 = i.d3 || {})
	}(window, function(jM) {
		function j4(kb, kc, T, ka) {
			function e(i) {
				return kb(i = new Date(+i)), i
			}
			return e.floor = e, e.ceil = function(i) {
				return kb(i = new Date(i - 1)), kc(i, 1), kb(i), i
			}, e.round = function(i) {
				var kd = e(i),
					ke = e.ceil(i);
				return ke - i > i - kd ? kd : ke
			}, e.offset = function(i, kd) {
				return kc(i = new Date(+i), null == kd ? 1 : Math.floor(kd)), i
			}, e.range = function(ke, i, kd) {
				var kf = [];
				if (ke = e.ceil(ke), kd = null == kd ? 1 : Math.floor(kd), !(i > ke && kd > 0)) {
					return kf
				}
				do {
					kf.push(new Date(+ke))
				} while (kc(ke, kd), kb(ke), i > ke);
				return kf
			}, e.filter = function(i) {
				return j4(function(kd) {
					for (; kb(kd), !i(kd);) {
						kd.setTime(kd - 1)
					}
				}, function(kd, ke) {
					for (; --ke >= 0;) {
						for (; kc(kd, 1), !i(kd);) {}
					}
				})
			}, T && (e.count = function(i, kd) {
				return jO.setTime(+i), jS.setTime(+kd), kb(jO), kb(jS), Math.floor(T(jO, jS))
			}, e.every = function(i) {
				return i = Math.floor(i), isFinite(i) && i > 0 ? i > 1 ? e.filter(ka ? function(kd) {
					return ka(kd) % i === 0
				} : function(kd) {
					return e.count(0, kd) % i === 0
				}) : e : null
			}), e
		}

		function jT(e) {
			return j4(function(i) {
				i.setDate(i.getDate() - (i.getDay() + 7 - e) % 7), i.setHours(0, 0, 0, 0)
			}, function(i, T) {
				i.setDate(i.getDate() + 7 * T)
			}, function(i, T) {
				return (T - i - (T.getTimezoneOffset() - i.getTimezoneOffset()) * jN) / j1
			})
		}

		function jL(e) {
			return j4(function(i) {
				i.setUTCDate(i.getUTCDate() - (i.getUTCDay() + 7 - e) % 7), i.setUTCHours(0, 0, 0, 0)
			}, function(i, T) {
				i.setUTCDate(i.getUTCDate() + 7 * T)
			}, function(i, T) {
				return (T - i) / j1
			})
		}
		var jO = new Date,
			jS = new Date,
			jZ = j4(function() {}, function(i, T) {
				i.setTime(+i + T)
			}, function(i, T) {
				return T - i
			});
		jZ.every = function(e) {
			return e = Math.floor(e), isFinite(e) && e > 0 ? e > 1 ? j4(function(i) {
				i.setTime(Math.floor(i / e) * e)
			}, function(i, T) {
				i.setTime(+i + T * e)
			}, function(i, T) {
				return (T - i) / e
			}) : jZ : null
		};
		var j8 = jZ.range,
			j6 = 1000,
			jN = 60000,
			j3 = 3600000,
			jV = 86400000,
			j1 = 604800000,
			jf = j4(function(e) {
				e.setTime(Math.floor(e / j6) * j6)
			}, function(i, T) {
				i.setTime(+i + T * j6)
			}, function(i, T) {
				return (T - i) / j6
			}, function(e) {
				return e.getUTCSeconds()
			}),
			j5 = jf.range,
			jU = j4(function(e) {
				e.setTime(Math.floor(e / jN) * jN)
			}, function(i, T) {
				i.setTime(+i + T * jN)
			}, function(i, T) {
				return (T - i) / jN
			}, function(e) {
				return e.getMinutes()
			}),
			jn = jU.range,
			jH = j4(function(i) {
				var T = i.getTimezoneOffset() * jN % j3;
				0 > T && (T += j3), i.setTime(Math.floor((+i - T) / j3) * j3 + T)
			}, function(i, T) {
				i.setTime(+i + T * j3)
			}, function(i, T) {
				return (T - i) / j3
			}, function(e) {
				return e.getHours()
			}),
			j0 = jH.range,
			jx = j4(function(e) {
				e.setHours(0, 0, 0, 0)
			}, function(i, T) {
				i.setDate(i.getDate() + T)
			}, function(i, T) {
				return (T - i - (T.getTimezoneOffset() - i.getTimezoneOffset()) * jN) / jV
			}, function(e) {
				return e.getDate() - 1
			}),
			je = jx.range,
			ju = jT(0),
			jw = jT(1),
			ja = jT(2),
			js = jT(3),
			jh = jT(4),
			jK = jT(5),
			jR = jT(6),
			jc = ju.range,
			jJ = jw.range,
			jl = ja.range,
			jG = js.range,
			jW = jh.range,
			jI = jK.range,
			j7 = jR.range,
			jY = j4(function(e) {
				e.setDate(1), e.setHours(0, 0, 0, 0)
			}, function(i, T) {
				i.setMonth(i.getMonth() + T)
			}, function(i, T) {
				return T.getMonth() - i.getMonth() + 12 * (T.getFullYear() - i.getFullYear())
			}, function(e) {
				return e.getMonth()
			}),
			j9 = jY.range,
			jr = j4(function(e) {
				e.setMonth(0, 1), e.setHours(0, 0, 0, 0)
			}, function(i, T) {
				i.setFullYear(i.getFullYear() + T)
			}, function(i, T) {
				return T.getFullYear() - i.getFullYear()
			}, function(e) {
				return e.getFullYear()
			});
		jr.every = function(e) {
			return isFinite(e = Math.floor(e)) && e > 0 ? j4(function(i) {
				i.setFullYear(Math.floor(i.getFullYear() / e) * e), i.setMonth(0, 1), i.setHours(0, 0, 0, 0)
			}, function(i, T) {
				i.setFullYear(i.getFullYear() + T * e)
			}) : null
		};
		var jk = jr.range,
			jP = j4(function(e) {
				e.setUTCSeconds(0, 0)
			}, function(i, T) {
				i.setTime(+i + T * jN)
			}, function(i, T) {
				return (T - i) / jN
			}, function(e) {
				return e.getUTCMinutes()
			}),
			jz = jP.range,
			jy = j4(function(e) {
				e.setUTCMinutes(0, 0, 0)
			}, function(i, T) {
				i.setTime(+i + T * j3)
			}, function(i, T) {
				return (T - i) / j3
			}, function(e) {
				return e.getUTCHours()
			}),
			jv = jy.range,
			jt = j4(function(e) {
				e.setUTCHours(0, 0, 0, 0)
			}, function(i, T) {
				i.setUTCDate(i.getUTCDate() + T)
			}, function(i, T) {
				return (T - i) / jV
			}, function(e) {
				return e.getUTCDate() - 1
			}),
			jq = jt.range,
			jp = jL(0),
			jo = jL(1),
			jm = jL(2),
			jj = jL(3),
			ji = jL(4),
			jd = jL(5),
			jb = jL(6),
			i9 = jp.range,
			jF = jo.range,
			j2 = jm.range,
			jQ = jj.range,
			jX = ji.range,
			jE = jd.range,
			jD = jb.range,
			jC = j4(function(e) {
				e.setUTCDate(1), e.setUTCHours(0, 0, 0, 0)
			}, function(i, T) {
				i.setUTCMonth(i.getUTCMonth() + T)
			}, function(i, T) {
				return T.getUTCMonth() - i.getUTCMonth() + 12 * (T.getUTCFullYear() - i.getUTCFullYear())
			}, function(e) {
				return e.getUTCMonth()
			}),
			jB = jC.range,
			jg = j4(function(e) {
				e.setUTCMonth(0, 1), e.setUTCHours(0, 0, 0, 0)
			}, function(i, T) {
				i.setUTCFullYear(i.getUTCFullYear() + T)
			}, function(i, T) {
				return T.getUTCFullYear() - i.getUTCFullYear()
			}, function(e) {
				return e.getUTCFullYear()
			});
		jg.every = function(e) {
			return isFinite(e = Math.floor(e)) && e > 0 ? j4(function(i) {
				i.setUTCFullYear(Math.floor(i.getUTCFullYear() / e) * e), i.setUTCMonth(0, 1), i.setUTCHours(0, 0, 0, 0)
			}, function(i, T) {
				i.setUTCFullYear(i.getUTCFullYear() + T * e)
			}) : null
		};
		var jA = jg.range;
		jM.timeInterval = j4, jM.timeMillisecond = jZ, jM.timeMilliseconds = j8, jM.utcMillisecond = jZ, jM.utcMilliseconds = j8, jM.timeSecond = jf, jM.timeSeconds = j5, jM.utcSecond = jf, jM.utcSeconds = j5, jM.timeMinute = jU, jM.timeMinutes = jn, jM.timeHour = jH, jM.timeHours = j0, jM.timeDay = jx, jM.timeDays = je, jM.timeWeek = ju, jM.timeWeeks = jc, jM.timeSunday = ju, jM.timeSundays = jc, jM.timeMonday = jw, jM.timeMondays = jJ, jM.timeTuesday = ja, jM.timeTuesdays = jl, jM.timeWednesday = js, jM.timeWednesdays = jG, jM.timeThursday = jh, jM.timeThursdays = jW, jM.timeFriday = jK, jM.timeFridays = jI, jM.timeSaturday = jR, jM.timeSaturdays = j7, jM.timeMonth = jY, jM.timeMonths = j9, jM.timeYear = jr, jM.timeYears = jk, jM.utcMinute = jP, jM.utcMinutes = jz, jM.utcHour = jy, jM.utcHours = jv, jM.utcDay = jt, jM.utcDays = jq, jM.utcWeek = jp, jM.utcWeeks = i9, jM.utcSunday = jp, jM.utcSundays = i9, jM.utcMonday = jo, jM.utcMondays = jF, jM.utcTuesday = jm, jM.utcTuesdays = j2, jM.utcWednesday = jj, jM.utcWednesdays = jQ, jM.utcThursday = ji, jM.utcThursdays = jX, jM.utcFriday = jd, jM.utcFridays = jE, jM.utcSaturday = jb, jM.utcSaturdays = jD, jM.utcMonth = jC, jM.utcMonths = jB, jM.utcYear = jg, jM.utcYears = jA, Object.defineProperty(jM, "__esModule", {
			value: !0
		})
	});

	function eC(e) {
		this._elemType = e;
		this._objCollection = {}
	}
	eC.prototype.get = function() {
		var i = null;
		for (var e in this._objCollection) {
			if (this._objCollection[e] && this._objCollection[e]._free === true) {
				this._objCollection[e]._free = false;
				return this._objCollection[e]
			}
		}
		i = bK(this._elemType);
		e = bo.getGUID("obj_pool_");
		this._objCollection[e] = i;
		return i
	};
	eC.prototype.free = function(e) {
		if (!e) {
			return
		}
		e._free = true;
		if (e.tagName.toLowerCase() === "img") {
			e.src = "";
			e.crossOrigin = null;
			e.onload = e.onerror = null
		}
	};
	eC.prototype.clear = function() {
		for (var e in this._objCollection) {
			if (this._objCollection[e] && this._objCollection[e].tagName.toLowerCase === "img") {
				this._objCollection[e].onload = this._objCollection[e].onerror = null
			}
		}
		this._objCollection = {}
	};
	var hh = {
		get: function(i, ja, e, T) {
			var i9 = new XMLHttpRequest();
			i9.open("GET", i, true);
			i9.timeout = 10000;
			i9.ontimeout = function() {
				T && T()
			};
			i9.onreadystatechange = function(jb) {
				if (this.readyState === 4) {
					if (this.status === 200) {
						ja && ja(i9.responseText)
					} else {
						e && e()
					}
				}
			};
			i9.send()
		},
		post: function(i, jb, ja, e, T) {
			var i9 = new XMLHttpRequest();
			i9.open("POST", i, true);
			i9.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
			i9.timeout = 10000;
			i9.ontimeout = function() {
				T && T()
			};
			i9.onreadystatechange = function(jc) {
				if (this.readyState === 4) {
					if (this.status === 200) {
						ja && ja(i9.responseText, jb)
					} else {
						e && e()
					}
				}
			};
			i9.send(jb);
			return i9
		}
	};
	var f5 = (function(e) {
		function i(jb, T, ja) {
			var i9 = bK("script", {
				src: jb,
				type: "text/javascript",
				charset: "utf-8"
			});
			if (i9.addEventListener) {
				i9.addEventListener("load", function(jd) {
					var jc = jd.target;
					jc.parentNode.removeChild(jc);
					T && T()
				}, false);
				i9.addEventListener("error", function(jd) {
					if (jd) {
						var jc = jd.target;
						jc && jc.parentNode && jc.parentNode.removeChild(jc)
					}
					ja && ja(null)
				}, false)
			} else {
				if (i9.attachEvent) {
					i9.attachEvent("onreadystatechange", function(jd) {
						var jc = window.event.srcElement;
						if (jc && (jc.readyState === "loaded" || jc.readyState === "complete")) {
							jc.parentNode.removeChild(jc)
						}
						T && T()
					})
				}
			}
			e.getElementsByTagName("head")[0].appendChild(i9)
		}
		return {
			load: function(jc, T, i9) {
				if (typeof jc === "string") {
					i(jc, T, i9)
				} else {
					if (jc.length > 0) {
						var jb = jc.length;
						for (var ja = 0; ja < jb; ja++) {
							i(jc[ja], function() {
								jb--;
								if (jb === 0 && T) {
									T()
								}
							})
						}
					}
				}
			}
		}
	})(window.document);

	function hb() {}
	hb.instances = {};
	hb.getInstance = function(i, T) {
		if (hb.instances[i]) {
			return hb.instances[i]
		}
		var e = new i4(i, T);
		hb.instances[i] = e;
		return e
	};

	function i4(e, i) {
		this._name = e;
		this._baseZoom = 18;
		this._opts = {
			tileSize: 256
		};
		es.extend(this._opts, i || {})
	}
	i4.mapZoomBaseIndex = [8, 8, 8, 8, 7, 7, 6, 6, 5, 5, 4, 3, 3, 3, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0];
	i4.baseScaleZoom = [19, 17, 15, 12, 10, 9, 7, 5, 3];
	i4.baseScaleZoomMercatorSize = [512, 2048, 4096, 32768, 65536, 262144, 1048576, 4194304, 8388608];
	i4.mapZoomBaseZoomMapping = [3, 3, 3, 3, 5, 5, 7, 7, 9, 9, 10, 12, 12, 12, 15, 15, 17, 17, 19, 19, 19, 19, 19, 19, 19, 19];
	i4.mapZoomStartZoomMapping = [3, 3, 3, 3, 4, 4, 6, 6, 8, 8, 10, 11, 11, 11, 14, 14, 16, 16, 18, 18, 18, 18, 18, 18, 18, 18];
	i4.baseScaleTileSize = [1024, 1024, 512, 512, 256, 512, 512, 512, 256];
	i4.mapZoomTileSize = [256, 256, 256, 256, 256, 512, 256, 512, 256, 512, 256, 256, 512, 1024, 256, 512, 512, 1024, 512, 1024, 2048, 4096, 4096 * 2, 4096 * 2 * 2, 4096 * 2 * 2 * 2, 4096 * 2 * 2 * 2 * 2];
	i4.baseZoomInfo = {
		"3": [3],
		"5": [4, 5],
		"7": [6, 7],
		"9": [8, 9],
		"10": [10],
		"12": [11, 12, 13],
		"15": [14, 15],
		"17": [16, 17],
		"19": [18, 19, 20, 21, 22, 23, 24, 25]
	};
	i4.prototype = {
		getName: function() {
			return this._name
		},
		getTileSize: function(e) {
			e = Math.floor(e);
			if (e < 3) {
				e = 3
			}
			if (this._name === "na") {
				return i4.mapZoomTileSize[e]
			}
			return this._opts.tileSize
		},
		getBaseTileSize: function(i) {
			i = Math.floor(i);
			if (this._name === "na") {
				var e = i4.mapZoomBaseZoomMapping[i];
				return i4.mapZoomTileSize[e]
			}
			return this._opts.tileSize
		},
		getDataZoom: function(e) {
			e = Math.floor(e);
			if (this._name === "na") {
				return i4.mapZoomBaseZoomMapping[e]
			}
			return e
		},
		getZoomUnits: function(e) {
			return Math.pow(2, (this._baseZoom - e))
		},
		getMercatorSize: function(T, i) {
			if (this._name === "na") {
				T = Math.floor(T);
				var e = i4.mapZoomBaseIndex[T];
				return i4.baseScaleZoomMercatorSize[e]
			}
			return this._opts.tileSize * this.getZoomUnits(i)
		},
		getBaseZoom: function() {
			return this._baseZoom
		},
		getParentTile: function(i9, jf, je, T, i) {
			if (this._name === "na") {
				var ja = i4.baseZoomInfo[je];
				T--;
				if (ja.indexOf(T) > -1) {
					return {
						col: i9,
						row: jf,
						zoom: je,
						useZoom: T
					}
				} else {
					var jc = i4.mapZoomBaseIndex[je];
					var jb = i4.baseScaleZoom[jc + 1];
					if (!jb) {
						return null
					}
					var jd = this.getFactorByZooms(jb, je);
					var e = i4.baseZoomInfo[jb];
					return {
						col: Math.floor(i9 / jd),
						row: Math.floor(jf / jd),
						zoom: jb,
						useZoom: e[e.length - 1]
					}
				}
				return null
			}
			if (je - 1 < i) {
				return null
			}
			return {
				col: Math.floor(i9 / 2),
				row: Math.floor(jf / 2),
				zoom: je - 1,
				useZoom: je - 1
			}
		},
		getChildTiles: function(ja, jc, e, T, jj, jp) {
			if (this._name === "na") {
				var i9 = i4.baseZoomInfo[e];
				T += jp;
				if (i9.indexOf(T) > -1) {
					return [{
						col: ja,
						row: jc,
						zoom: e,
						useZoom: T
					}]
				} else {
					var jn = 0;
					var jk = e;
					while (jn < jp) {
						var jo = i4.mapZoomBaseIndex[jk];
						var je = i4.baseScaleZoom[jo - 1];
						if (!je) {
							return null
						}
						var jf = i4.baseZoomInfo[je];
						if (jf[jp - 1]) {
							var jg = [];
							var ji = this.getFactorByZooms(e, je);
							var i = ja * ji;
							var jh = jc * ji;
							for (var jm = 0; jm < ji; jm++) {
								var jb = i + jm;
								for (var jl = 0; jl < ji; jl++) {
									var jd = jh + jl;
									jg.push({
										col: jb,
										row: jd,
										zoom: je,
										useZoom: jf[jp - 1]
									})
								}
							}
							return jg
						}
						jn += jf.length;
						if (jp === jf.length) {
							jk = je
						}
					}
				}
				return null
			}
			var jg = [];
			if (e + jp > jj) {
				return null
			}
			var ji = Math.pow(2, jp);
			var i = ja * ji;
			var jh = jc * ji;
			var je = e + jp;
			var jg = [];
			for (var jm = 0; jm < 2; jm++) {
				var jb = i + jm;
				for (var jl = 0; jl < 2; jl++) {
					var jd = jh + jl;
					jg.push({
						col: jb,
						row: jd,
						zoom: je,
						useZoom: je
					})
				}
			}
			return jg
		},
		getFactorByZooms: function(i, i9) {
			var T = i4.mapZoomBaseIndex[i];
			var ja = i4.mapZoomBaseIndex[i9];
			var e = i4.baseScaleZoomMercatorSize[T];
			var jb = i4.baseScaleZoomMercatorSize[ja];
			return e / jb
		}
	};
	var cH = {};
	var V = ["swiftshader", "microsoft basic render driver"];
	var gB = ["intel", "nvidia", "amd", "apple", "geforce"];

	function fW(e) {
		e = e.toLowerCase();
		if (V.indexOf(e) >= 0) {
			return true
		}
		if (e.indexOf("mobile") >= 0) {
			return true
		}
		return false
	}

	function ce(T) {
		T = T.toLowerCase();
		for (var e = 0; e < gB.length; e++) {
			if (T.indexOf(gB[e]) >= 0) {
				return true
			}
		}
		return false
	}

	function i3(e) {
		if (!e) {
			return false
		}
		if (fW(e)) {
			return false
		}
		if (ce(e)) {
			return true
		}
		return false
	}
	cH.ifEnableEarth = function(i) {
		var e = cH.ifEnableEarth;
		if (!i && typeof e._enable === "boolean") {
			return e._enable
		}
		if (cH.ifSupportWebGL()) {
			e._enable = true;
			return true
		}
		e._enable = false;
		return false
	};
	cH.ifEnableWebGLMap = function(i) {
		var e = cH.ifEnableWebGLMap;
		if (!i && typeof e._enable === "boolean") {
			return e._enable
		}
		if (cH.ifSupportWebGL()) {
			if (aA.inMapHost) {
				e._enable = true;
				return true
			} else {
				if (window.Blob || window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder) {
					e._enable = true;
					return true
				} else {
					e._enable = false;
					return false
				}
			}
		}
		e._enable = false;
		return false
	};
	cH.params = {};
	cH.ifSupportWebGL = function() {
		var i = cH.ifSupportWebGL;
		if (typeof i._supportWebGL === "boolean") {
			return i._supportWebGL
		}
		if (!window.WebGLRenderingContext) {
			i._supportWebGL = false;
			return false
		}
		var T = document.createElement("canvas");
		T.width = 300;
		T.height = 150;
		var ja = null;
		var jg = {
			alpha: true,
			antialias: false,
			failIfMajorPerformanceCaveat: true,
			preserveDrawingBuffer: false,
			stencil: false
		};
		try {
			ja = T.getContext("webgl", jg) || T.getContext("experimental-webgl", jg)
		} catch (jc) {
			i._supportWebGL = false
		}
		if (ja === null) {
			i._supportWebGL = false
		} else {
			i._supportWebGL = true;
			var je = ja.getExtension("WEBGL_debug_renderer_info");
			var jd = "";
			if (je) {
				jd = ja.getParameter(je.UNMASKED_RENDERER_WEBGL);
				if (i3(jd) === true) {
					i._supportWebGL = true
				}
				var jf = ja.getParameter(je.UNMASKED_VENDOR_WEBGL);
				i._renderer = jd;
				i._vendor = jf
			}
			if (!je && es.Browser.firefox) {
				i._supportWebGL = true
			}
			if (!je && es.Platform.macintosh) {
				i._supportWebGL = true
			}
			if (ja.drawingBufferWidth !== T.width || ja.drawingBufferHeight !== T.height) {
				i._supportWebGL = false
			}
			if (ja.getParameter(ja.MAX_VERTEX_TEXTURE_IMAGE_UNITS) < 4) {
				i._supportWebGL = false
			}
			var i9 = ja.getParameter(ja.MAX_TEXTURE_SIZE);
			cH.params.maxTextureSize = i9;
			if (i9 < 4096) {
				i._supportWebGL = false
			}
			var jb = ja.getParameter(ja.MAX_TEXTURE_IMAGE_UNITS);
			if (jb < 8) {
				i._supportWebGL = false
			}
			if (!ja.getShaderPrecisionFormat || ja.getShaderPrecisionFormat(ja.FRAGMENT_SHADER, ja.HIGH_FLOAT)
				.precision < 23) {
				i._supportWebGL = false
			}
		}
		return i._supportWebGL
	};
	cH.ifSupportCanvas2d = function() {
		var ja = cH.ifSupportCanvas2d;
		if (typeof ja.supportCanvas2d === "boolean") {
			return ja.supportCanvas2d
		}
		var T = document.createElement("canvas");
		var i = null;
		try {
			i = T.getContext("2d")
		} catch (i9) {
			ja.supportCanvas2d = false
		}
		if (i === null) {
			ja.supportCanvas2d = false
		} else {
			ja.supportCanvas2d = true
		}
		return ja.supportCanvas2d
	};
	cH.ifCanvas2dInBlackList = function() {
		return true
	};
	cH.ifEnableCanvas2dMap = function() {
		return false;
		var i = navigator.userAgent;
		var e = 0;
		var i9 = 0;
		var ja = 0;
		if (/macintosh/ig.test(i)) {
			var T = 0;
			if (/(\d+\.\d)?(?:\.\d)?\s+safari\/?(\d+\.\d+)?/i.test(i) && !/chrome/i.test(i)) {
				T = parseInt((RegExp["\x241"] || RegExp["\x242"]), 10)
			}
			if (T > 0) {
				return false
			}
			return true
		}
		if (/windows nt (\d+\.\d)/ig.test(i)) {
			i9 = parseFloat(RegExp.$1);
			if (i9 >= 6.1) {
				if (/chrome\/(\d+\.\d)/i.test(i)) {
					e = parseFloat(RegExp.$1);
					if (e >= 31) {
						return true
					}
				}
				if (/MSIE (\d+(\.\d+)?)/.test(i)) {
					ja = parseFloat(RegExp.$1);
					if (ja >= 10) {
						return true
					}
				}
				if (/Firefox/.test(i)) {
					return true
				}
				if (/rv:11.0/ig.test(i)) {
					return true
				}
				if (/edge/ig.test(i)) {
					return true
				}
			}
		}
		return false
	};
	cH.ifSupportCSS3 = function(jd, i) {
		var jc = document.createElement("div");
		var jb = "Webkit Moz O ms".split(" ");
		var e = jb.length;
		var T = "";
		var i9 = jc.style;
		if (jd in i9) {
			T = jd
		}
		jd = jd.replace(/^[a-z]/, function(je) {
			return je.toUpperCase()
		});
		while (e--) {
			var ja = jb[e] + jd;
			if (ja in i9) {
				T = ja;
				break
			}
		}
		if (i) {
			return T
		} else {
			return T.length > 0 ? true : false
		}
	};
	cH.isModernBrowser = cH.ifSupportCanvas2d() && cH.ifSupportCSS3("transform");

	function at(i, e) {
		this._size = i;
		this._curSize = 0;
		this._cache = {};
		this._least = null;
		this._most = null;
		this._options = {
			clearCallback: null,
			removeOldCallback: null
		};
		e = e || {};
		for (var T in e) {
			this._options[T] = e[T]
		}
		this._getDataTimes = 0;
		this._hitTimes = 0
	}
	at.prototype.setData = function(i9, jb) {
		var i = this._cache;
		var T = this._size;
		if (T === 0) {
			return
		}
		var e = this._curSize;
		if (e === T) {
			this._removeOld()
		}
		var ja;
		if (!i[i9]) {
			ja = {
				key: i9,
				data: jb,
				older: null,
				newwer: null
			};
			i[i9] = ja;
			if (this._least === null) {
				this._least = ja
			}
			if (this._most === null) {
				this._most = ja
			}
			this._curSize++
		} else {
			ja = i[i9];
			ja.data = jb;
			if (this._most === ja) {
				return
			}
			ja.older && (ja.older.newer = ja.newer);
			ja.newer && (ja.newer.older = ja.older);
			if (this._least === ja) {
				this._least = ja.newer
			}
		}
		if (this._most && this._most !== ja) {
			this._most.newer = ja;
			ja.older = this._most;
			this._most = ja;
			ja.newer = null
		}
	};
	at.prototype.getData = function(e) {
		var i = this._cache[e];
		this._getDataTimes++;
		if (i) {
			this._hitTimes++;
			var T = i.data;
			if (this._most === i) {
				return T
			}
			i.older && (i.older.newer = i.newer);
			i.newer && (i.newer.older = i.older);
			if (this._least === i) {
				this._least = i.newer
			}
			this._most.newer = i;
			i.older = this._most;
			i.newer = null;
			this._most = i;
			return T
		}
		return null
	};
	at.prototype.getAllData = function() {
		return this._cache
	};
	at.prototype.getHitRate = function() {
		return this._hitTimes / this._getDataTimes
	};
	at.prototype.removeData = function(i) {
		var e = this._cache;
		var T = e[i];
		if (!T) {
			return
		}
		if (this._options.clearCallback) {
			this._options.clearCallback(T.data, T.key)
		}
		T.older && (T.older.newer = T.newer);
		T.newer && (T.newer.older = T.older);
		if (this._least === T) {
			this._least = T.newer
		}
		if (this._most === T) {
			this._most = T.older
		}
		delete e[i];
		this._curSize--
	};
	at.prototype._removeOld = function() {
		var e = this._cache;
		var i9 = Math.round(this._size * 0.6);
		var T = 0;
		while (this._least && T < i9) {
			var i = this._least;
			this._least = i.newer;
			i.newer && (i.newer.older = null);
			if (this._options.clearCallback) {
				this._options.clearCallback(i.data, i.key)
			}
			delete e[i.key];
			T++
		}
		this._curSize -= T;
		if (this._options.removeOldCallback) {
			this._options.removeOldCallback()
		}
	};
	at.prototype.clear = function() {
		var e = this._cache;
		var i = this._least;
		if (this._options.clearCallback) {
			while (i) {
				this._options.clearCallback(i.data, i.key);
				i = i.newer
			}
		}
		this._least = this._most = null;
		this._cache = {};
		this._curSize = 0
	};
	at.prototype.forEach = function(e) {
		var i = this._least;
		while (i) {
			e(i.data);
			i = i.newer
		}
	};
	at.prototype.clearExcept = function(i) {
		var e = this._cache;
		var T = this._least;
		while (T) {
			if (!i[T.key]) {
				if (this._options.clearCallback) {
					this._options.clearCallback(T.data, T.key)
				}
				T.older && (T.older.newer = T.newer);
				T.newer && (T.newer.older = T.older);
				if (this._least === T) {
					this._least = T.newer
				}
				if (this._most === T) {
					this._most = T.older
				}
				delete e[T.key];
				this._curSize--
			}
			T = T.newer
		}
	};
	! function(T, i) {
		"object" == typeof bo && "undefined" != typeof module ? module.exports = i() : "function" == typeof define && define.amd ? define(i) : (T = "undefined" != typeof globalThis ? globalThis : T || self)
			.gcoord = i()
	}(this, (function() {
		/* *****************************************************************************
		        Copyright (c) Microsoft Corporation.

		        Permission to use, copy, modify, and/or distribute this software for any
		        purpose with or without fee is hereby granted.

		        THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
		        REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
		        AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
		        INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
		        LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
		        OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
		        PERFORMANCE OF THIS SOFTWARE.
		        ***************************************************************************** */
		var jN = function() {
				return (jN = Object.assign || function(jS) {
						for (var i, T = 1, jU = arguments.length; T < jU; T++) {
							for (var jT in i = arguments[T]) {
								Object.prototype.hasOwnProperty.call(i, jT) && (jS[jT] = i[jT])
							}
						}
						return jS
					})
					.apply(this, arguments)
			},
			jy = Math.sin,
			jA = Math.cos,
			jE = Math.sqrt,
			jD = Math.abs,
			jR = Math.PI,
			jJ = 6378245,
			jx = 0.006693421622965823;

		function jM(T, i) {
			return T >= 72.004 && T <= 137.8347 && i >= 0.8293 && i <= 55.8271
		}

		function jP(jU, jT) {
			var jX, i, jZ, T = (jZ = 300 + (jX = jU - 105) + 2 * (i = jT - 35) + 0.1 * jX * jX + 0.1 * jX * i + 0.1 * jE(jD(jX)), jZ += 2 * (20 * jy(6 * jX * jR) + 20 * jy(2 * jX * jR)) / 3, (jZ += 2 * (20 * jy(jX * jR) + 40 * jy(jX / 3 * jR)) / 3) + 2 * (150 * jy(jX / 12 * jR) + 300 * jy(jX / 30 * jR)) / 3),
				jS = function(j2, j1) {
					var j0 = 2 * j2 - 100 + 3 * j1 + 0.2 * j1 * j1 + 0.1 * j2 * j1 + 0.2 * jE(jD(j2));
					return j0 += 2 * (20 * jy(6 * j2 * jR) + 20 * jy(2 * j2 * jR)) / 3, j0 += 2 * (20 * jy(j1 * jR) + 40 * jy(j1 / 3 * jR)) / 3, j0 + 2 * (160 * jy(j1 / 12 * jR) + 320 * jy(j1 * jR / 30)) / 3
				}(jU - 105, jT - 35),
				jW = jT / 180 * jR,
				jV = jy(jW),
				jY = jE(jV = 1 - jx * jV * jV);
			return [T = 180 * T / (jJ / jY * jA(jW) * jR), jS = 180 * jS / (jJ * (1 - jx) / (jV * jY) * jR)]
		}

		function jG(jS) {
			var i = jS[0],
				T = jS[1];
			if (!jM(i, T)) {
				return [i, T]
			}
			var jT = jP(i, T);
			return [i + jT[0], T + jT[1]]
		}

		function jz(jU) {
			var jY = jU[0],
				T = jU[1];
			if (!jM(jY, T)) {
				return [jY, T]
			}
			for (var jS = [jY, T], jW = jS[0], jT = jS[1], jX = jG([jW, jT]), jV = jX[0] - jY, jZ = jX[1] - T; jD(jV) > 0.000001 || jD(jZ) > 0.000001;) {
				jV = (jX = jG([jW -= jV, jT -= jZ]))[0] - jY, jZ = jX[1] - T
			}
			return [jW, jT]
		}
		var jK = Math.sin,
			jL = Math.cos,
			jh = Math.atan2,
			jO = Math.sqrt,
			jw = 3000 * Math.PI / 180;

		function jC(jS) {
			var i = jS[0] - 0.0065,
				T = jS[1] - 0.006,
				jU = jO(i * i + T * T) - 0.00002 * jK(T * jw),
				jT = jh(T, i) - 0.000003 * jL(i * jw);
			return [jU * jL(jT), jU * jK(jT)]
		}

		function jl(jS) {
			var i = jS[0],
				T = jS[1],
				jU = jO(i * i + T * T) + 0.00002 * jK(T * jw),
				jT = jh(T, i) + 0.000003 * jL(i * jw);
			return [jU * jL(jT) + 0.0065, jU * jK(jT) + 0.006]
		}
		var jt = 180 / Math.PI,
			jc = Math.PI / 180,
			je = 6378137,
			jQ = 20037508.342789244;

		function jq(i) {
			return [i[0] * jt / je, (0.5 * Math.PI - 2 * Math.atan(Math.exp(-i[1] / je))) * jt]
		}

		function jF(jS) {
			var i = Math.abs(jS[0]) <= 180 ? jS[0] : jS[0] - 360 * (jS[0] < 0 ? -1 : 1),
				T = [je * i * jc, je * Math.log(Math.tan(0.25 * Math.PI + 0.5 * jS[1] * jc))];
			return T[0] > jQ && (T[0] = jQ), T[0] < -jQ && (T[0] = -jQ), T[1] > jQ && (T[1] = jQ), T[1] < -jQ && (T[1] = -jQ), T
		}
		var jp, jo, jn, jv, jk, i9, ju = Math.abs,
			jH = [12890594.86, 8362377.87, 5591021, 3481989.83, 1678043.12, 0],
			jj = [75, 60, 45, 30, 15, 0],
			jb = [
				[1.410526172116255e-8, 0.00000898305509648872, -1.9939833816331, 200.9824383106796, -187.2403703815547, 91.6087516669843, -23.38765649603339, 2.57121317296198, -0.03801003308653, 17337981.2],
				[-7.435856389565537e-9, 0.000008983055097726239, -0.78625201886289, 96.32687599759846, -1.85204757529826, -59.36935905485877, 47.40033549296737, -16.50741931063887, 2.28786674699375, 10260144.86],
				[-3.030883460898826e-8, 0.00000898305509983578, 0.30071316287616, 59.74293618442277, 7.357984074871, -25.38371002664745, 13.45380521110908, -3.29883767235584, 0.32710905363475, 6856817.37],
				[-1.981981304930552e-8, 0.000008983055099779535, 0.03278182852591, 40.31678527705744, 0.65659298677277, -4.44255534477492, 0.85341911805263, 0.12923347998204, -0.04625736007561, 4482777.06],
				[3.09191371068437e-9, 0.000008983055096812155, 0.00006995724062, 23.10934304144901, -0.00023663490511, -0.6321817810242, -0.00663494467273, 0.03430082397953, -0.00466043876332, 2555164.4],
				[2.890871144776878e-9, 0.000008983055095805407, -3.068298e-8, 7.47137025468032, -0.00000353937994, -0.02145144861037, -0.00001234426596, 0.00010322952773, -0.00000323890364, 826088.5]
			],
			jI = [
				[-0.0015702102444, 111320.7020616939, 1704480524535203, -10338987376042340, 26112667856603880, -35149669176653700, 26595700718403920, -10725012454188240, 1800819912950474, 82.5],
				[0.0008277824516172526, 111320.7020463578, 647795574.6671607, -4082003173.641316, 10774905663.51142, -15171875531.51559, 12053065338.62167, -5124939663.577472, 913311935.9512032, 67.5],
				[0.00337398766765, 111320.7020202162, 4481351.045890365, -23393751.19931662, 79682215.47186455, -115964993.2797253, 97236711.15602145, -43661946.33752821, 8477230.501135234, 52.5],
				[0.00220636496208, 111320.7020209128, 51751.86112841131, 3796837.749470245, 992013.7397791013, -1221952.21711287, 1340652.697009075, -620943.6990984312, 144416.9293806241, 37.5],
				[-0.0003441963504368392, 111320.7020576856, 278.2353980772752, 2485758.690035394, 6070.750963243378, 54821.18345352118, 9540.606633304236, -2710.55326746645, 1405.483844121726, 22.5],
				[-0.0003218135878613132, 111320.7020701615, 0.00369383431289, 823725.6402795718, 0.46104986909093, 2351.343141331292, 1.58060784298199, 8.77738589078284, 0.37238884252424, 7.45]
			];

		function ji(jT, T, jS) {
			var jV = ju(T) / jS[9],
				jU = jS[0] + jS[1] * ju(jT),
				i = jS[2] + jS[3] * jV + jS[4] * Math.pow(jV, 2) + jS[5] * Math.pow(jV, 3) + jS[6] * Math.pow(jV, 4) + jS[7] * Math.pow(jV, 5) + jS[8] * Math.pow(jV, 6);
			return [jU *= jT < 0 ? -1 : 1, i *= T < 0 ? -1 : 1]
		}

		function jB(jS) {
			for (var i = jS[0], T = jS[1], jU = [], jT = 0; jT < jj.length; jT++) {
				if (ju(T) > jj[jT]) {
					jU = jI[jT];
					break
				}
			}
			return ji(i, T, jU)
		}

		function jg(jS) {
			for (var i = jS[0], T = jS[1], jU = [], jT = 0; jT < jH.length; jT++) {
				if (T >= jH[jT]) {
					jU = jb[jT];
					break
				}
			}
			return ji(i, T, jU)
		}

		function jf(T, i) {
			if (!T) {
				throw new Error(i)
			}
		}

		function jr(i) {
			return !!i && "[object Array]" === Object.prototype.toString.call(i)
		}

		function jm(i) {
			return !isNaN(Number(i)) && null !== i && !jr(i)
		}

		function jd() {
			for (var jS = [], i = 0; i < arguments.length; i++) {
				jS[i] = arguments[i]
			}
			var T = jS.length - 1;
			return function() {
				for (var jT = [], jV = 0; jV < arguments.length; jV++) {
					jT[jV] = arguments[jV]
				}
				for (var jU = T, e = jS[T].apply(null, jT); jU--;) {
					e = jS[jU].call(null, e)
				}
				return e
			}
		}

		function ja(j9, jY, j0) {
			if (void 0 === j0 && (j0 = !1), null !== j9) {
				for (var j3, j2, kc, j5, jX, j8, kb, j4, jZ = 0, j6 = 0, j7 = j9.type, jT = "FeatureCollection" === j7, ka = "Feature" === j7, jW = jT ? j9.features.length : 1, j1 = 0; j1 < jW; j1++) {
					jX = (j4 = !!(kb = jT ? j9.features[j1].geometry : ka ? j9.geometry : j9) && "GeometryCollection" === kb.type) ? kb.geometries.length : 1;
					for (var jV = 0; jV < jX; jV++) {
						var jU = 0,
							T = 0;
						if (null !== (j5 = j4 ? kb.geometries[jV] : kb)) {
							var jS = j5.type;
							switch (jZ = !j0 || "Polygon" !== jS && "MultiPolygon" !== jS ? 0 : 1, jS) {
								case null:
									break;
								case "Point":
									if (!1 === jY(j8 = j5.coordinates, j6, j1, jU, T)) {
										return !1
									}
									j6++, jU++;
									break;
								case "LineString":
								case "MultiPoint":
									for (j8 = j5.coordinates, j3 = 0; j3 < j8.length; j3++) {
										if (!1 === jY(j8[j3], j6, j1, jU, T)) {
											return !1
										}
										j6++, "MultiPoint" === jS && jU++
									}
									"LineString" === jS && jU++;
									break;
								case "Polygon":
								case "MultiLineString":
									for (j8 = j5.coordinates, j3 = 0; j3 < j8.length; j3++) {
										for (j2 = 0; j2 < j8[j3].length - jZ; j2++) {
											if (!1 === jY(j8[j3][j2], j6, j1, jU, T)) {
												return !1
											}
											j6++
										}
										"MultiLineString" === jS && jU++, "Polygon" === jS && T++
									}
									"Polygon" === jS && jU++;
									break;
								case "MultiPolygon":
									for (j8 = j5.coordinates, j3 = 0; j3 < j8.length; j3++) {
										for (T = 0, j2 = 0; j2 < j8[j3].length; j2++) {
											for (kc = 0; kc < j8[j3][j2].length - jZ; kc++) {
												if (!1 === jY(j8[j3][j2][kc], j6, j1, jU, T)) {
													return !1
												}
												j6++
											}
											T++
										}
										jU++
									}
									break;
								case "GeometryCollection":
									for (j3 = 0; j3 < j5.geometries.length; j3++) {
										if (!1 === ja(j5.geometries[j3], jY, j0)) {
											return !1
										}
									}
									break;
								default:
									throw new Error("Unknown Geometry Type")
							}
						}
					}
				}
			}
		}! function(i) {
			i.WGS84 = "WGS84", i.WGS1984 = "WGS84", i.EPSG4326 = "WGS84", i.GCJ02 = "GCJ02", i.AMap = "GCJ02", i.BD09 = "BD09", i.BD09LL = "BD09", i.Baidu = "BD09", i.BMap = "BD09", i.BD09MC = "BD09MC", i.BD09Meter = "BD09MC", i.EPSG3857 = "EPSG3857", i.EPSG900913 = "EPSG3857", i.EPSG102100 = "EPSG3857", i.WebMercator = "EPSG3857", i.WM = "EPSG3857"
		}(i9 || (i9 = {}));
		var js = {
			WGS84: {
				to: (jp = {}, jp[i9.GCJ02] = jG, jp[i9.BD09] = jd(jl, jG), jp[i9.BD09MC] = jd(jB, jl, jG), jp[i9.EPSG3857] = jF, jp)
			},
			GCJ02: {
				to: (jo = {}, jo[i9.WGS84] = jz, jo[i9.BD09] = jl, jo[i9.BD09MC] = jd(jB, jl), jo[i9.EPSG3857] = jd(jF, jz), jo)
			},
			BD09: {
				to: (jn = {}, jn[i9.WGS84] = jd(jz, jC), jn[i9.GCJ02] = jC, jn[i9.EPSG3857] = jd(jF, jz, jC), jn[i9.BD09MC] = jB, jn)
			},
			EPSG3857: {
				to: (jv = {}, jv[i9.WGS84] = jq, jv[i9.GCJ02] = jd(jG, jq), jv[i9.BD09] = jd(jl, jG, jq), jv[i9.BD09MC] = jd(jB, jl, jG, jq), jv)
			},
			BD09MC: {
				to: (jk = {}, jk[i9.WGS84] = jd(jz, jC, jg), jk[i9.GCJ02] = jd(jC, jg), jk[i9.EPSG3857] = jd(jF, jz, jC, jg), jk[i9.BD09] = jg, jk)
			}
		};
		return jN(jN({}, i9), {
			CRSTypes: i9,
			transform: function(jW, jU, jV) {
				if (jf(!!jW, "The args[0] input coordinate is required"), jf(!!jU, "The args[1] original coordinate system is required"), jf(!!jV, "The args[2] target coordinate system is required"), jU === jV) {
					return jW
				}
				var jY = js[jU];
				jf(!!jY, "Invalid original coordinate system: " + jU);
				var jX = jY.to[jV];
				jf(!!jX, "Invalid target coordinate system: " + jV);
				var T = typeof jW;
				if (jf("string" === T || "object" === T, "Invalid input coordinate type: " + T), "string" === T) {
					try {
						jW = JSON.parse(jW)
					} catch (jU) {
						throw new Error("Invalid input coordinate: " + jW)
					}
				}
				var jT = !1;
				jr(jW) && (jf(jW.length >= 2, "Invalid input coordinate: " + jW), jf(jm(jW[0]) && jm(jW[1]), "Invalid input coordinate: " + jW), jW = jW.map(Number), jT = !0);
				var jS = jX;
				return jT ? jS(jW) : (ja(jW, (function(jZ) {
					var i;
					i = jS(jZ), jZ[0] = i[0], jZ[1] = i[1]
				})), jW)
			}
		})
	}));
	var gM = {
		ColorRefTable: {
			aliceblue: ["#f0f8ff", "rgb(240,248,255)"],
			antiquewhite: ["#faebd7", "rgb(250,235,215)"],
			aqua: ["#00ffff", "rgb(0,255,255)"],
			aquamarine: ["#7fffd4", "rgb(127,255,212)"],
			azure: ["#f0ffff", "rgb(240,255,255)"],
			beige: ["#f5f5dc", "rgb(245,245,220)"],
			bisque: ["#ffe4c4", "rgb(255,228,196)"],
			black: ["#000000", "rgb(0,0,0)"],
			blanchedalmond: ["#ffebcd", "rgb(255,235,205)"],
			blue: ["#0000ff", "rgb(0,0,255)"],
			blueviolet: ["#8a2be2", "rgb(138,43,226)"],
			brown: ["#a52a2a", "rgb(165,42,42)"],
			burlywood: ["#deb887", "rgb(222,184,135)"],
			cadetblue: ["#5f9ea0", "rgb(95,158,160)"],
			chartreuse: ["#7fff00", "rgb(127,255,0)"],
			chocolate: ["#d2691e", "rgb(210,105,30)"],
			coral: ["#ff7f50", "rgb(255,127,80)"],
			cornflowerblue: ["#6495ed", "rgb(100,149,237)"],
			cornsilk: ["#fff8dc", "rgb(255,248,220)"],
			crimson: ["#dc143c", "rgb(220,20,60)"],
			cyan: ["#00ffff", "rgb(0,255,255)"],
			darkblue: ["#00008b", "rgb(0,0,139)"],
			darkcyan: ["#008b8b", "rgb(0,139,139)"],
			darkgoldenrod: ["#b8860b", "rgb(184,134,11)"],
			darkgray: ["#a9a9a9", "rgb(169,169,169)"],
			darkgreen: ["#006400", "rgb(0,100,0)"],
			darkgrey: ["#a9a9a9", "rgb(169,169,169)"],
			darkkhaki: ["#bdb76b", "rgb(189,183,107)"],
			darkmagenta: ["#8b008b", "rgb(139,0,139)"],
			darkolivegreen: ["#556b2f", "rgb(85,107,47)"],
			darkorange: ["#ff8c00", "rgb(255,140,0)"],
			darkorchid: ["#9932cc", "rgb(153,50,204)"],
			darkred: ["#8b0000", "rgb(139,0,0)"],
			darksalmon: ["#e9967a", "rgb(233,150,122)"],
			darkseagreen: ["#8fbc8f", "rgb(143,188,143)"],
			darkslateblue: ["#483d8b", "rgb(72,61,139)"],
			darkslategray: ["#2f4f4f", "rgb(47,79,79)"],
			darkslategrey: ["#2f4f4f", "rgb(47,79,79)"],
			darkturquoise: ["#00ced1", "rgb(0,206,209)"],
			darkviolet: ["#9400d3", "rgb(148,0,211)"],
			deeppink: ["#ff1493", "rgb(255,20,147)"],
			deepskyblue: ["#00bfff", "rgb(0,191,255)"],
			dimgray: ["#696969", "rgb(105,105,105)"],
			dimgrey: ["#696969", "rgb(105,105,105)"],
			dodgerblue: ["#1e90ff", "rgb(30,144,255)"],
			firebrick: ["#b22222", "rgb(178,34,34)"],
			floralwhite: ["#fffaf0", "rgb(255,250,240)"],
			forestgreen: ["#228b22", "rgb(34,139,34)"],
			fuchsia: ["#ff00ff", "rgb(255,0,255)"],
			gainsboro: ["#dcdcdc", "rgb(220,220,220)"],
			ghostwhite: ["#f8f8ff", "rgb(248,248,255)"],
			gold: ["#ffd700", "rgb(255,215,0)"],
			goldenrod: ["#daa520", "rgb(218,165,32)"],
			gray: ["#808080", "rgb(128,128,128)"],
			green: ["#008000", "rgb(0,128,0)"],
			greenyellow: ["#adff2f", "rgb(173,255,47)"],
			grey: ["#808080", "rgb(128,128,128)"],
			honeydew: ["#f0fff0", "rgb(240,255,240)"],
			hotpink: ["#ff69b4", "rgb(255,105,180)"],
			indianred: ["#cd5c5c", "rgb(205,92,92)"],
			indigo: ["#4b0082", "rgb(75,0,130)"],
			ivory: ["#fffff0", "rgb(255,255,240)"],
			khaki: ["#f0e68c", "rgb(240,230,140)"],
			lavender: ["#e6e6fa", "rgb(230,230,250)"],
			lavenderblush: ["#fff0f5", "rgb(255,240,245)"],
			lawngreen: ["#7cfc00", "rgb(124,252,0)"],
			lemonchiffon: ["#fffacd", "rgb(255,250,205)"],
			lightblue: ["#add8e6", "rgb(173,216,230)"],
			lightcoral: ["#f08080", "rgb(240,128,128)"],
			lightcyan: ["#e0ffff", "rgb(224,255,255)"],
			lightgoldenrodyellow: ["#fafad2", "rgb(250,250,210)"],
			lightgray: ["#d3d3d3", "rgb(211,211,211)"],
			lightgreen: ["#90ee90", "rgb(144,238,144)"],
			lightgrey: ["#d3d3d3", "rgb(211,211,211)"],
			lightpink: ["#ffb6c1", "rgb(255,182,193)"],
			lightsalmon: ["#ffa07a", "rgb(255,160,122)"],
			lightseagreen: ["#20b2aa", "rgb(32,178,170)"],
			lightskyblue: ["#87cefa", "rgb(135,206,250)"],
			lightslategray: ["#778899", "rgb(119,136,153)"],
			lightslategrey: ["#778899", "rgb(119,136,153)"],
			lightsteelblue: ["#b0c4de", "rgb(176,196,222)"],
			lightyellow: ["#ffffe0", "rgb(255,255,224)"],
			lime: ["#00ff00", "rgb(0,255,0)"],
			limegreen: ["#32cd32", "rgb(50,205,50)"],
			linen: ["#faf0e6", "rgb(250,240,230)"],
			magenta: ["#ff00ff", "rgb(255,0,255)"],
			maroon: ["#800000", "rgb(128,0,0)"],
			mediumaquamarine: ["#66cdaa", "rgb(102,205,170)"],
			mediumblue: ["#0000cd", "rgb(0,0,205)"],
			mediumorchid: ["#ba55d3", "rgb(186,85,211)"],
			mediumpurple: ["#9370db", "rgb(147,112,219)"],
			mediumseagreen: ["#3cb371", "rgb(60,179,113)"],
			mediumslateblue: ["#7b68ee", "rgb(123,104,238)"],
			mediumspringgreen: ["#00fa9a", "rgb(0,250,154)"],
			mediumturquoise: ["#48d1cc", "rgb(72,209,204)"],
			mediumvioletred: ["#c71585", "rgb(199,21,133)"],
			midnightblue: ["#191970", "rgb(25,25,112)"],
			mintcream: ["#f5fffa", "rgb(245,255,250)"],
			mistyrose: ["#ffe4e1", "rgb(255,228,225)"],
			moccasin: ["#ffe4b5", "rgb(255,228,181)"],
			navajowhite: ["#ffdead", "rgb(255,222,173)"],
			navy: ["#000080", "rgb(0,0,128)"],
			oldlace: ["#fdf5e6", "rgb(253,245,230)"],
			olive: ["#808000", "rgb(128,128,0)"],
			olivedrab: ["#6b8e23", "rgb(107,142,35)"],
			orange: ["#ffa500", "rgb(255,165,0)"],
			orangered: ["#ff4500", "rgb(255,69,0)"],
			orchid: ["#da70d6", "rgb(218,112,214)"],
			palegoldenrod: ["#eee8aa", "rgb(238,232,170)"],
			palegreen: ["#98fb98", "rgb(152,251,152)"],
			paleturquoise: ["#afeeee", "rgb(175,238,238)"],
			palevioletred: ["#db7093", "rgb(219,112,147)"],
			papayawhip: ["#ffefd5", "rgb(255,239,213)"],
			peachpuff: ["#ffdab9", "rgb(255,218,185)"],
			peru: ["#cd853f", "rgb(205,133,63)"],
			pink: ["#ffc0cb", "rgb(255,192,203)"],
			plum: ["#dda0dd", "rgb(221,160,221)"],
			powderblue: ["#b0e0e6", "rgb(176,224,230)"],
			purple: ["#800080", "rgb(128,0,128)"],
			red: ["#ff0000", "rgb(255,0,0)"],
			rosybrown: ["#bc8f8f", "rgb(188,143,143)"],
			royalblue: ["#4169e1", "rgb(65,105,225)"],
			saddlebrown: ["#8b4513", "rgb(139,69,19)"],
			salmon: ["#fa8072", "rgb(250,128,114)"],
			sandybrown: ["#f4a460", "rgb(244,164,96)"],
			seagreen: ["#2e8b57", "rgb(46,139,87)"],
			seashell: ["#fff5ee", "rgb(255,245,238)"],
			sienna: ["#a0522d", "rgb(160,82,45)"],
			silver: ["#c0c0c0", "rgb(192,192,192)"],
			skyblue: ["#87ceeb", "rgb(135,206,235)"],
			slateblue: ["#6a5acd", "rgb(106,90,205)"],
			slategray: ["#708090", "rgb(112,128,144)"],
			slategrey: ["#708090", "rgb(112,128,144)"],
			snow: ["#fffafa", "rgb(255,250,250)"],
			springgreen: ["#00ff7f", "rgb(0,255,127)"],
			steelblue: ["#4682b4", "rgb(70,130,180)"],
			tan: ["#d2b48c", "rgb(210,180,140)"],
			teal: ["#008080", "rgb(0,128,128)"],
			thistle: ["#d8bfd8", "rgb(216,191,216)"],
			tomato: ["#ff6347", "rgb(255,99,71)"],
			turquoise: ["#40e0d0", "rgb(64,224,208)"],
			violet: ["#ee82ee", "rgb(238,130,238)"],
			wheat: ["#f5deb3", "rgb(245,222,179)"],
			white: ["#ffffff", "rgb(255,255,255)"],
			whitesmoke: ["#f5f5f5", "rgb(245,245,245)"],
			yellow: ["#ffff00", "rgb(255,255,0)"],
			yellowgreen: ["#9acd32", "rgb(154,205,50)"]
		},
		parseHexToRgbaArray: function(jb) {
			var jc = jb.replace("#", "");
			if (jc.length === 3) {
				jc += "f"
			} else {
				if (jc.length === 6) {
					jc += "ff"
				}
			}
			var e = [];
			var ja = jc.length;
			var i9 = ja === 8 ? 2 : 1;
			for (var T = 0; T < ja; T = T + i9) {
				if (i9 === 2) {
					e.push(parseInt(jc.slice(T, T + 2), 16))
				} else {
					e.push(parseInt(jc.slice(T, T + 1) + jc.slice(T, T + 1), 16))
				}
			}
			return e
		},
		parseRgbaStrToArray: function(i) {
			var e = [0, 0, 0, 255];
			if (i.indexOf("rgba(") === 0) {
				var i9 = i.replace("rgba(", "")
					.replace(")", "");
				var T = i9.split(",");
				e[0] = parseInt(T[0], 10);
				e[1] = parseInt(T[1], 10);
				e[2] = parseInt(T[2], 10);
				e[3] = Math.round(parseFloat(T[3]) * 255)
			} else {
				if (i.indexOf("rgb(") === 0) {
					var i9 = i.replace("rgb(", "")
						.replace(")", "");
					var ja = i9.split(",");
					e[0] = parseInt(ja[0], 10);
					e[1] = parseInt(ja[1], 10);
					e[2] = parseInt(ja[2], 10);
					e[3] = 255
				}
			}
			return e
		},
		parseHexAndOpacityToRgbaArray: function(ja, jb) {
			var T = [];
			var je = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;
			var jd = ja.toLowerCase();
			if (je.test(jd)) {
				if (jd.length === 4) {
					var e = "#";
					for (var jc = 1; jc < 4; jc++) {
						e += jd.slice(jc, jc + 1)
							.concat(jd.slice(jc, jc + 1))
					}
					jd = e
				}
				for (var i9 = 1; i9 < 7; i9 += 2) {
					T.push(parseInt(jd.slice(i9, i9 + 2), 16))
				}
				T.push(jb)
			}
			return T
		},
		parseCSSColor: function(e) {
			if (e.indexOf("#") === 0) {
				return gM.parseHexToRgbaArray(e)
			}
			return gM.parseRgbaStrToArray(e)
		},
		rgbToHSV: function(ja) {
			var e = ja[0] / 255;
			var T = ja[1] / 255;
			var jb = ja[2] / 255;
			var je = Math.max(e, T, jb);
			var i9 = Math.min(e, T, jb);
			var jd = je - i9;
			var i;
			if (jd === 0) {
				i = 0
			} else {
				if (je === e) {
					i = 60 * (((T - jb) / jd) % 6)
				} else {
					if (je === T) {
						i = 60 * ((jb - e) / jd + 2)
					} else {
						if (je === jb) {
							i = 60 * ((e - T) / jd + 4)
						}
					}
				}
			}
			var jf = je === 0 ? 0 : (jd / je);
			var jc = je;
			while (i < 0) {
				i += 360
			}
			return [i, jf, jc]
		},
		hsvToRGB: function(i9) {
			var jd = i9[2] * i9[1];
			var T = jd * (1 - Math.abs((i9[0] / 60) % 2 - 1));
			var i = i9[2] - jd;
			var ja = i9[0];
			var jc;
			var jb;
			var e;
			if (ja >= 0 && ja < 60) {
				jc = jd;
				jb = T;
				e = 0
			} else {
				if (ja >= 60 && ja < 120) {
					jc = T;
					jb = jd;
					e = 0
				} else {
					if (ja >= 120 && ja < 180) {
						jc = 0;
						jb = jd;
						e = T
					} else {
						if (ja >= 180 && ja < 240) {
							jc = 0;
							jb = T;
							e = jd
						} else {
							if (ja >= 240 && ja < 300) {
								jc = T;
								jb = 0;
								e = jd
							} else {
								if (ja >= 300 && ja < 360) {
									jc = jd;
									jb = 0;
									e = T
								}
							}
						}
					}
				}
			}
			jc = (jc + i) * 255 > 255 ? 255 : (jc + i) * 255;
			jb = (jb + i) * 255 > 255 ? 255 : (jb + i) * 255;
			e = (e + i) * 255 > 255 ? 255 : (e + i) * 255;
			return [Math.round(jc), Math.round(jb), Math.round(e)]
		},
		formatColorCssToRgbaArray: function(jb, T, i9) {
			i9 = (typeof i9 !== "boolean") ? true : i9;
			if (typeof jb !== "string") {
				return i9 ? [0, 0, 0, 1] : [0, 0, 0, 255]
			}
			var i = (jb || "Black")
				.trim()
				.toLowerCase();
			var e = [];
			var ja = gM.ColorRefTable[i];
			if (ja !== undefined) {
				i = ja[0]
			}
			e = gM.parseCSSColor(i);
			if (T !== undefined && !isNaN(Number(T))) {
				T = Number(T);
				e[3] = gM.fitTo(T, 0, 1)
			} else {
				e[3] = Number((e[3] / 255)
					.toFixed(2))
			}
			if (!i9) {
				e[3] = Math.floor(e[3] * 255)
			}
			return e
		},
		fitTo: function(T, i, e) {
			if (T < i) {
				T = i
			} else {
				if (T > e) {
					T = e
				}
			}
			return T
		},
		generateColorRamp: function(e, jf, jg, i9, jl) {
			jg = jg || [];
			i9 = i9 || "#ccc";
			jl = jl || 1;
			const T = document.createElement("canvas");
			const jm = T.getContext("2d");
			T.width = 256;
			T.height = jl;
			const jb = jf[0];
			const ji = jf[jf.length - 1];
			if (e.length === jf.length) {
				const jj = jm.createLinearGradient(0, 0, 256, 1);
				for (var je = 0; je < e.length; ++je) {
					var jk = (jf[je] - jb) / (ji - jb);
					jj.addColorStop(jk, e[je])
				}
				jm.fillStyle = jj;
				jm.fillRect(0, 0, 256, jl)
			} else {
				if (e.length - jf.length === -1) {
					var jd = 0;
					var ja = 1;
					for (var je = 0; je < e.length; ++je) {
						var jh = (jf[ja] - jb) / (ji - jb);
						var jk = Math.floor(jh * 256);
						jm.fillStyle = e[je];
						jm.fillRect(jd, 0, jk, jl);
						jd = jk;
						ja++
					}
				} else {
					jm.fillStyle = i9 || "#ccc";
					jm.fillRect(0, 0, 256, jl)
				}
			}
			if (e.length - jf.length <= -1 && jg.length === 2) {
				jm.fillStyle = i9 || "#ccc";
				var jh = (jg[0] - jb) / (ji - jb);
				var jk = Math.floor(jh * 256);
				jm.fillRect(0, 0, jk, jl);
				jh = (jg[1] - jb) / (ji - jb);
				jk = Math.floor(jh * 256);
				jm.fillRect(jk, 0, 255, jl)
			}
			var jc = new Uint8Array(new Uint8ClampedArray(jm.getImageData(0, 0, 256, jl)
				.data));
			return {
				canvas: T,
				data: jc,
				width: 256,
				height: jl
			}
		}
	};
	(function(jb) {
		function jl(jq, jt) {
			var js = (jq & 65535) + (jt & 65535);
			var jr = (jq >> 16) + (jt >> 16) + (js >> 16);
			return (jr << 16) | (js & 65535)
		}

		function jk(jq, jr) {
			return (jq << jr) | (jq >>> (32 - jr))
		}

		function jf(jv, js, jr, jq, ju, jt) {
			return jl(jk(jl(jl(js, jv), jl(jq, jt)), ju), jr)
		}

		function e(js, jr, jw, jv, jq, ju, jt) {
			return jf((jr & jw) | (~jr & jv), js, jr, jq, ju, jt)
		}

		function jc(js, jr, jw, jv, jq, ju, jt) {
			return jf((jr & jv) | (jw & ~jv), js, jr, jq, ju, jt)
		}

		function ji(js, jr, jw, jv, jq, ju, jt) {
			return jf(jr ^ jw ^ jv, js, jr, jq, ju, jt)
		}

		function jo(js, jr, jw, jv, jq, ju, jt) {
			return jf(jw ^ (jr | ~jv), js, jr, jq, ju, jt)
		}

		function T(jA, jv) {
			jA[jv >> 5] |= 128 << (jv % 32);
			jA[((jv + 64) >>> 9 << 4) + 14] = jv;
			var js;
			var ju;
			var jt;
			var jr;
			var jq;
			var jz = 1732584193;
			var jy = -271733879;
			var jx = -1732584194;
			var jw = 271733878;
			for (js = 0; js < jA.length; js += 16) {
				ju = jz;
				jt = jy;
				jr = jx;
				jq = jw;
				jz = e(jz, jy, jx, jw, jA[js], 7, -680876936);
				jw = e(jw, jz, jy, jx, jA[js + 1], 12, -389564586);
				jx = e(jx, jw, jz, jy, jA[js + 2], 17, 606105819);
				jy = e(jy, jx, jw, jz, jA[js + 3], 22, -1044525330);
				jz = e(jz, jy, jx, jw, jA[js + 4], 7, -176418897);
				jw = e(jw, jz, jy, jx, jA[js + 5], 12, 1200080426);
				jx = e(jx, jw, jz, jy, jA[js + 6], 17, -1473231341);
				jy = e(jy, jx, jw, jz, jA[js + 7], 22, -45705983);
				jz = e(jz, jy, jx, jw, jA[js + 8], 7, 1770035416);
				jw = e(jw, jz, jy, jx, jA[js + 9], 12, -1958414417);
				jx = e(jx, jw, jz, jy, jA[js + 10], 17, -42063);
				jy = e(jy, jx, jw, jz, jA[js + 11], 22, -1990404162);
				jz = e(jz, jy, jx, jw, jA[js + 12], 7, 1804603682);
				jw = e(jw, jz, jy, jx, jA[js + 13], 12, -40341101);
				jx = e(jx, jw, jz, jy, jA[js + 14], 17, -1502002290);
				jy = e(jy, jx, jw, jz, jA[js + 15], 22, 1236535329);
				jz = jc(jz, jy, jx, jw, jA[js + 1], 5, -165796510);
				jw = jc(jw, jz, jy, jx, jA[js + 6], 9, -1069501632);
				jx = jc(jx, jw, jz, jy, jA[js + 11], 14, 643717713);
				jy = jc(jy, jx, jw, jz, jA[js], 20, -373897302);
				jz = jc(jz, jy, jx, jw, jA[js + 5], 5, -701558691);
				jw = jc(jw, jz, jy, jx, jA[js + 10], 9, 38016083);
				jx = jc(jx, jw, jz, jy, jA[js + 15], 14, -660478335);
				jy = jc(jy, jx, jw, jz, jA[js + 4], 20, -405537848);
				jz = jc(jz, jy, jx, jw, jA[js + 9], 5, 568446438);
				jw = jc(jw, jz, jy, jx, jA[js + 14], 9, -1019803690);
				jx = jc(jx, jw, jz, jy, jA[js + 3], 14, -187363961);
				jy = jc(jy, jx, jw, jz, jA[js + 8], 20, 1163531501);
				jz = jc(jz, jy, jx, jw, jA[js + 13], 5, -1444681467);
				jw = jc(jw, jz, jy, jx, jA[js + 2], 9, -51403784);
				jx = jc(jx, jw, jz, jy, jA[js + 7], 14, 1735328473);
				jy = jc(jy, jx, jw, jz, jA[js + 12], 20, -1926607734);
				jz = ji(jz, jy, jx, jw, jA[js + 5], 4, -378558);
				jw = ji(jw, jz, jy, jx, jA[js + 8], 11, -2022574463);
				jx = ji(jx, jw, jz, jy, jA[js + 11], 16, 1839030562);
				jy = ji(jy, jx, jw, jz, jA[js + 14], 23, -35309556);
				jz = ji(jz, jy, jx, jw, jA[js + 1], 4, -1530992060);
				jw = ji(jw, jz, jy, jx, jA[js + 4], 11, 1272893353);
				jx = ji(jx, jw, jz, jy, jA[js + 7], 16, -155497632);
				jy = ji(jy, jx, jw, jz, jA[js + 10], 23, -1094730640);
				jz = ji(jz, jy, jx, jw, jA[js + 13], 4, 681279174);
				jw = ji(jw, jz, jy, jx, jA[js], 11, -358537222);
				jx = ji(jx, jw, jz, jy, jA[js + 3], 16, -722521979);
				jy = ji(jy, jx, jw, jz, jA[js + 6], 23, 76029189);
				jz = ji(jz, jy, jx, jw, jA[js + 9], 4, -640364487);
				jw = ji(jw, jz, jy, jx, jA[js + 12], 11, -421815835);
				jx = ji(jx, jw, jz, jy, jA[js + 15], 16, 530742520);
				jy = ji(jy, jx, jw, jz, jA[js + 2], 23, -995338651);
				jz = jo(jz, jy, jx, jw, jA[js], 6, -198630844);
				jw = jo(jw, jz, jy, jx, jA[js + 7], 10, 1126891415);
				jx = jo(jx, jw, jz, jy, jA[js + 14], 15, -1416354905);
				jy = jo(jy, jx, jw, jz, jA[js + 5], 21, -57434055);
				jz = jo(jz, jy, jx, jw, jA[js + 12], 6, 1700485571);
				jw = jo(jw, jz, jy, jx, jA[js + 3], 10, -1894986606);
				jx = jo(jx, jw, jz, jy, jA[js + 10], 15, -1051523);
				jy = jo(jy, jx, jw, jz, jA[js + 1], 21, -2054922799);
				jz = jo(jz, jy, jx, jw, jA[js + 8], 6, 1873313359);
				jw = jo(jw, jz, jy, jx, jA[js + 15], 10, -30611744);
				jx = jo(jx, jw, jz, jy, jA[js + 6], 15, -1560198380);
				jy = jo(jy, jx, jw, jz, jA[js + 13], 21, 1309151649);
				jz = jo(jz, jy, jx, jw, jA[js + 4], 6, -145523070);
				jw = jo(jw, jz, jy, jx, jA[js + 11], 10, -1120210379);
				jx = jo(jx, jw, jz, jy, jA[js + 2], 15, 718787259);
				jy = jo(jy, jx, jw, jz, jA[js + 9], 21, -343485551);
				jz = jl(jz, ju);
				jy = jl(jy, jt);
				jx = jl(jx, jr);
				jw = jl(jw, jq)
			}
			return [jz, jy, jx, jw]
		}

		function jj(jr) {
			var js;
			var jq = "";
			var jt = jr.length * 32;
			for (js = 0; js < jt; js += 8) {
				jq += String.fromCharCode((jr[js >> 5] >>> (js % 32)) & 255)
			}
			return jq
		}

		function je(jr) {
			var jt;
			var jq = [];
			jq[(jr.length >> 2) - 1] = undefined;
			for (jt = 0; jt < jq.length; jt += 1) {
				jq[jt] = 0
			}
			var js = jr.length * 8;
			for (jt = 0; jt < js; jt += 8) {
				jq[jt >> 5] |= (jr.charCodeAt(jt / 8) & 255) << (jt % 32)
			}
			return jq
		}

		function jd(jq) {
			return jj(T(je(jq), jq.length * 8))
		}

		function jp(js, jv) {
			var jr;
			var ju = je(js);
			var jq = [];
			var jt = [];
			var jw;
			jq[15] = jt[15] = undefined;
			if (ju.length > 16) {
				ju = T(ju, js.length * 8)
			}
			for (jr = 0; jr < 16; jr += 1) {
				jq[jr] = ju[jr] ^ 909522486;
				jt[jr] = ju[jr] ^ 1549556828
			}
			jw = T(jq.concat(je(jv)), 512 + jv.length * 8);
			return jj(T(jt.concat(jw), 512 + 128))
		}

		function jn(jt) {
			var js = "0123456789abcdef";
			var jr = "";
			var jq;
			var ju;
			for (ju = 0; ju < jt.length; ju += 1) {
				jq = jt.charCodeAt(ju);
				jr += js.charAt((jq >>> 4) & 15) + js.charAt(jq & 15)
			}
			return jr
		}

		function jg(jq) {
			return unescape(encodeURIComponent(jq))
		}

		function i9(jq) {
			return jd(jg(jq))
		}

		function jh(jq) {
			return jn(i9(jq))
		}

		function i(jq, jr) {
			return jp(jg(jq), jg(jr))
		}

		function jm(jq, jr) {
			return jn(i(jq, jr))
		}

		function ja(jr, js, jq) {
			if (!js) {
				if (!jq) {
					return jh(jr)
				}
				return i9(jr)
			}
			if (!jq) {
				return jm(js, jr)
			}
			return i(js, jr)
		}
		if (typeof define === "function" && define.amd) {
			define(function() {
				return ja
			})
		} else {
			if (typeof module === "object" && module.exports) {
				module.exports = ja
			} else {
				jb.md5 = ja
			}
		}
	})(this);
	var co = {
		levels: {
			INFO: "info",
			WARNING: "warning",
			ERROR: "error"
		},
		category: {
			JS: "js",
			RESOURCE: "resource",
			AJAX: "ajax"
		},
		config: {
			jsError: true,
			resourceError: true,
			ajaxError: true
		},
		hosts: "api.map.baidu.com|webmap0.bdimg.com|maponline0.bdimg.com|",
		ignoreUrl: "api.map.baidu.com/images/blank.gif",
		sender: true,
		collections: [],
		sendError: function() {},
		init: function(i, e, T) {
			this.hosts += i ? i : "";
			ak && ak(this.config, e);
			this.sender = true;
			if (T) {
				this.sender = false
			}
			this.hosts = this.urlScope(this.hosts);
			this.sendError = this.notifyError();
			var i9 = typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
			this.config.jsError && this.handleJavaScriptError(i9);
			this.config.resourceError && this.handleResourceError(i9);
			this.config.ajaxError && this.handleAjaxError(i9)
		},
		handleJavaScriptError: function(T) {
			var e = this;
			var i = T.onerror;
			T.onerror = function(jd, jc, i9, jb, ja) {
				if (e.isFetch(e.category.JS) && e.hostExit(jc)) {
					if (ja && ja.stack) {
						e.sendError({
							title: jd,
							msg: ja.stack,
							category: e.category.JS,
							level: e.levels.ERROR
						})
					} else {
						if (typeof jd === "string") {
							e.sendError({
								title: jd,
								msg: JSON.stringify({
									resourceUrl: jc,
									rowNum: i9,
									colNum: jb
								}),
								category: "js",
								level: e.levels.ERROR
							})
						}
					}
				}
				if (i && bG(i)) {
					i && i.apply(T, arguments)
				}
			}
		},
		handleResourceError: function(i) {
			var e = this;
			i.addEventListener("error", function(jb) {
				if (jb) {
					var jc = jb.target || jb.srcElement;
					var ja = jc instanceof HTMLScriptElement || jc instanceof HTMLLinkElement || jc instanceof HTMLImageElement;
					if (!ja) {
						if (!i.onerror) {
							var T = jb.filename || null;
							if (!e.isFetch(e.category.JS) || !e.hostExit(T)) {
								return
							}
							if (jb.error && jb.error.stack) {
								e.sendError({
									title: jb.message,
									msg: jb.error.stack,
									category: e.category.JS,
									level: e.levels.ERROR
								})
							} else {
								if (typeof jb.message === "string") {
									e.sendError({
										title: jb.message,
										msg: JSON.stringify({
											resourceUrl: T,
											rowNum: jb.lineno,
											colNum: jb.cowno
										}),
										category: e.category.JS,
										level: e.levels.ERROR
									})
								}
							}
						}
						return
					}
					var i9 = jc.src || jc.href;
					if (e.isFetch(e.category.RESOURCE) && e.hostExit(i9)) {
						e.sendError({
							title: jc.nodeName,
							msg: i9,
							category: e.category.RESOURCE,
							level: e.levels.ERROR
						})
					}
				}
			}, true)
		},
		handleAjaxError: function(jb) {
			var e = this;
			var ja = jb.location.protocol;
			if (ja === "file:") {
				return
			}
			if (!jb.XMLHttpRequest) {
				return
			}
			var i = jb.XMLHttpRequest;
			var T = i.prototype.send;
			var i9 = function(jd) {
				if (jd && jd.currentTarget && jd.currentTarget.status !== 200) {
					var jc = jd.target.responseURL;
					if (e.isFetch(e.category.AJAX) && e.hostExit(jc)) {
						e.sendError({
							title: jc,
							msg: JSON.stringify({
								response: jd.target.response,
								responseURL: jc,
								status: jd.target.status,
								statusText: jd.target.statusText
							}),
							category: e.category.AJAX,
							level: e.levels.ERROR
						})
					}
				}
			};
			i.prototype.send = function() {
				if (this["addEventListener"]) {
					this["addEventListener"]("error", i9);
					this["addEventListener"]("load", i9);
					this["addEventListener"]("abort", i9)
				} else {
					var jc = this["onreadystatechange"];
					this["onreadystatechange"] = function(jd) {
						if (this.readyState === 4) {
							i9(jd)
						}
						jc && jc.apply(this, arguments)
					}
				}
				return T.apply(this, arguments)
			}
		},
		notifyError: function(T) {
			var i = T || 1000;
			this._idleWorkerTicker = (function(i9) {
				return function() {
					i9.runJob()
				}
			})(this);
			var e = this;
			return function(ja) {
				if (ja.url) {
					if (!e.isFetch(ja.category)) {
						return
					}
					var i9 = ja.url || "";
					if (!e.hostExit(i9)) {
						return
					}
					delete ja.url
				}
				if (!navigator.onLine) {
					return
				}
				e.collections.push(ja);
				e.checkJob(i)
			}
		},
		runJob: function() {
			if (this.collections.length === 0) {
				clearInterval(this.idleWork);
				this.idleWork = null;
				return
			}
			var ja = this.collections.slice(0, 2);
			var T = ik(JSON.stringify({
				dataset: ja
			}));
			var i9 = new Date()
				.getTime();
			var i = dZ.apiIMG + "/blank.gif?product=jsapi&v=gl&l=" + T + "&ak=" + ei + "&t=" + i9;
			if (this.sender) {
				try {
					var jc = document.createElement("div");
					jc.style = "width:0;height:0;visibility: hidden;opacity: 0;z-index:-999;background-image: url(" + i + ");";
					document.querySelector("BODY")
						.appendChild(jc);
					setTimeout(function() {
						document.querySelector("BODY")
							.removeChild(jc)
					})
				} catch (jb) {}
			}
			this.collections.splice(0, 2);
			if (this.collections.length === 0) {
				clearInterval(this.idleWork);
				this.idleWork = null
			}
		},
		checkJob: function(e) {
			if (!this.idleWork && this._idleWorkerTicker) {
				this.idleWork = setInterval(this._idleWorkerTicker, e)
			}
		},
		urlScope: function(i9) {
			var T = {};
			var jb = Object.keys(w);
			if (w && jb.length > 0) {
				for (var ja in w) {
					if (w[ja] && (typeof w[ja] !== "function")) {
						T[ja] = w[ja]
					}
				}
			}
			try {
				var jd = JSON.stringify(T);
				if (jd.length > 2) {
					return i9 + "|" + jd
				} else {
					return i9
				}
			} catch (jc) {
				return i9
			}
		},
		hostExit: function(i) {
			try {
				if (i && i.indexOf("//") === 0) {
					i = window.location.protocol + i
				}
				var T = new URL(i);
				if (!T || !T.host) {
					return false
				}
				var ja = T.host + T.pathname;
				if (this.ignoreUrl.indexOf(ja) === -1 && this.hosts.indexOf(T.host) > -1) {
					return true
				}
				return false
			} catch (i9) {
				return false
			}
		},
		isFetch: function(e) {
			return this.config[e + "Error"] || false
		}
	};
	bo.fetchDebug = co;
	var iU = {
		request: function(jh, jd, i9, jk, jb) {
			var je = new Date()["getTime"]();
			var jg = (Math.random() * 100000)["toFixed"](0);
			bo._rd["_cbk" + jg] = function(jl) {
				if (jl.result && jl.result["error"] && jl.result["error"] === 202) {
					alert("该AK因为恶意行为已经被管理员封禁！");
					return
				}
				i9 = i9 || {};
				jh && jh(jl, i9);
				delete bo._rd["_cbk" + jg]
			};
			jk = jk || "";
			var jj;
			var ja;
			if (i9 && i9.useEncodeURI) {
				jj = il(jd, encodeURI);
				ja = il(jd)
			} else {
				jj = il(jd, encodeURIComponent);
				ja = il(jd)
			}
			var i = w.apiHost + "/" + jk + "?" + jj + "&ie=utf-8&oue=1&fromproduct=jsapi";
			var jf = w.apiHost + "/" + jk + "?" + ja + "&ie=utf-8&oue=1&fromproduct=jsapi";
			if (!jb) {
				i += "&res=api";
				jf += "&res=api"
			}
			i += "&callback=" + eV + "._rd._cbk" + jg;
			jf += "&callback=" + eV + "._rd._cbk" + jg;
			var jc = window.___abvk ? window.___abvk : iU.getSeckeyCidItem("SECKEY_ABVK");
			var e = iU.getSeckeyCidItem("BMAP_SECKEY");
			var ji = encodeURIComponent(jc + "," + e);
			var T = jc + "," + e;
			i += "&ak=" + ei + "&v=gl&seckey=" + ji + "&timeStamp=" + je;
			jf += "&ak=" + ei + "&v=gl&seckey=" + T + "&timeStamp=" + je;
			i += io()(jf);
			f5.load(i)
		},
		getSeckeyCidItem: function(i) {
			if (navigator.cookieEnabled) {
				var T = new RegExp("(^| )" + i + "=([^;]*)(;|$)");
				var e = document.cookie.match(T);
				if (e) {
					return unescape(e[2])
				}
				return -1
			}
			if (localStorage) {
				return localStorage.getItem(i) ? localStorage.getItem(i) : -1
			}
			if (sessionStorage) {
				return sessionStorage.getItem(i) ? localStorage.getItem(i) : -1
			}
		}
	};
	window.srqtimer = null;
	window.firstTime = true;
	window.srqcount = 0;
	bo._rd = {};
	var cS = {
		request: function(jc, e) {
			if (e) {
				var jb = (Math.random() * 100000)
					.toFixed(0);
				BMapGL._rd["_cbk" + jb] = function(je) {
					e && e(je);
					delete BMapGL._rd["_cbk" + jb]
				};
				jc += "&callback=BMapGL._rd._cbk" + jb
			}

			function ja(jf) {
				var je;
				var jg = new RegExp("(^| )" + jf + "=([^;]*)(;|$)");
				if (je = document.cookie.match(jg)) {
					return unescape(je[2])
				} else {
					return -1
				}
			}
			var T = window.___abvk ? window.___abvk : this.getSeckeyCidItem("SECKEY_ABVK");
			var jd = this.getSeckeyCidItem("BMAP_SECKEY");
			var i = encodeURIComponent(T + "," + jd);
			jc += "&seckey=" + i;
			var i9 = bK("script", {
				src: jc,
				type: "text/javascript",
				charset: "utf-8"
			});
			if (i9.addEventListener) {
				i9.addEventListener("load", function(jf) {
					var je = jf.target;
					je.parentNode.removeChild(je)
				}, false);
				i9.addEventListener("error", function(je) {
					e && e([, , , , , ])
				}, false)
			} else {
				if (i9.attachEvent) {
					i9.attachEvent("onreadystatechange", function(jf) {
						var je = window.event.srcElement;
						if (je && (je.readyState == "loaded" || je.readyState == "complete")) {
							je.parentNode.removeChild(je)
						}
					})
				}
			}
			document.getElementsByTagName("head")[0].appendChild(i9);
			i9 = null
		},
		getSeckeyCidItem: function(i) {
			if (navigator.cookieEnabled) {
				var T = new RegExp("(^| )" + i + "=([^;]*)(;|$)");
				var e = document.cookie.match(T);
				if (e) {
					return unescape(e[2])
				}
				return -1
			}
			if (localStorage) {
				return localStorage.getItem(i) ? localStorage.getItem(i) : -1
			}
			if (sessionStorage) {
				return sessionStorage.getItem(i) ? localStorage.getItem(i) : -1
			}
		}
	};

	function f0() {
		this._map = null;
		this._container;
		this._type = "control";
		this.blockInfoWindow = true;
		this._visible = true
	}
	f0.inherits(cJ, "Control");
	es.extend(f0.prototype, {
		initialize: function(e) {
			this._map = e;
			if (this._container) {
				if (this._opts && this._opts.container) {
					this._opts.container.appendChild(this._container)
				} else {
					e.container.appendChild(this._container)
				}
				return this._container
			}
			return
		},
		_i: function(e) {
			if (!this._container && this.initialize && bG(this.initialize)) {
				this._container = this.initialize(e)
			}
			this._opts = this._opts || {
				printable: false
			};
			this._setStyle();
			this._setPosition();
			if (this._container) {
				this._container._jsobj = this
			}
		},
		_setStyle: function() {
			var i = this._container;
			if (i) {
				var e = i.style;
				e.position = "absolute";
				e.zIndex = this._cZIndex || "10";
				e.MozUserSelect = "none";
				if (!this._opts.printable) {
					es.ac(i, "BMap_noprint")
				}
				es.on(i, "contextmenu", gC)
			}
		},
		remove: function() {
			this._map = null;
			if (!this._container) {
				return
			}
			this._container.parentNode && this._container.parentNode.removeChild(this._container);
			this._container._jsobj = null;
			this._container = null
		},
		_render: function(e) {
			if (this._opts && this._opts.container) {
				this._container = bA(this._opts.container, '<div unselectable="on"></div>')
			} else {
				var i = '<div unselectable="on"></div>';
				if (e && e.config.autoSafeArea && b9()) {
					this._safeAreaContainer = bA(this._map.container, i);
					this._safeAreaContainer.style.position = "absolute";
					this._safeAreaContainer.style.bottom = "env(safe-area-inset-bottom)";
					this._container = bA(this._safeAreaContainer, i)
				} else {
					this._container = bA(this._map.container, i)
				}
			}
			if (this._visible === false) {
				this._container.style.display = "none"
			}
			return this._container
		},
		_setPosition: function() {
			this.setAnchor(this._opts.anchor)
		},
		setAnchor: function(i9) {
			if (this.anchorFixed || typeof i9 !== "number" || isNaN(i9) || i9 < BMAP_ANCHOR_TOP_LEFT || i9 > BMAP_ANCHOR_BOTTOM_RIGHT) {
				i9 = this.defaultAnchor
			}
			this._opts.offset = this._opts.offset || this.defaultOffset;
			var T = this._opts.anchor;
			this._opts.anchor = i9;
			if (!this._container) {
				return
			}
			var jb = this._container;
			var e = this._opts.offset.width;
			var ja = this._opts.offset.height;
			jb.style.left = jb.style.top = jb.style.right = jb.style.bottom = "auto";
			switch (i9) {
				case BMAP_ANCHOR_TOP_LEFT:
					jb.style.top = ja + "px";
					jb.style.left = e + "px";
					break;
				case BMAP_ANCHOR_TOP_RIGHT:
					jb.style.top = ja + "px";
					jb.style.right = e + "px";
					break;
				case BMAP_ANCHOR_BOTTOM_LEFT:
					jb.style.bottom = ja + "px";
					jb.style.left = e + "px";
					break;
				case BMAP_ANCHOR_BOTTOM_RIGHT:
					jb.style.bottom = ja + "px";
					jb.style.right = e + "px";
					break;
				default:
					break
			}
			var i = ["TL", "TR", "BL", "BR"];
			es.rc(this._container, "anchor" + i[T]);
			es.ac(this._container, "anchor" + i[i9])
		},
		getAnchor: function() {
			return this._opts.anchor
		},
		setOffset: function(e) {
			if (!e) {
				return
			}
			this._opts = this._opts || {};
			this._opts.offset = new h3(e.width, e.height);
			if (!this._container) {
				return
			}
			this.setAnchor(this._opts.anchor)
		},
		getOffset: function() {
			return this._opts.offset
		},
		getDom: function() {
			return this._container
		},
		show: function() {
			if (this._visible === true) {
				return
			}
			this._visible = true;
			if (this._container) {
				this._container.style.display = ""
			}
			this.dispatchEvent(new e7("onshow"))
		},
		hide: function() {
			if (this._visible === false) {
				return
			}
			this._visible = false;
			if (this._container) {
				this._container.style.display = "none"
			}
			this.dispatchEvent(new e7("onhide"))
		},
		isPrintable: function() {
			return !!this._opts.printable
		},
		isVisible: function() {
			if (!this._container && !this._map) {
				return false
			}
			return !!this._visible
		},
		_asyncLoadCode: function() {
			var e = this;
			gi.load("control", function() {
				if (e._asyncDraw) {
					e._asyncDraw()
				}
			})
		}
	});
	var dL = {
		TOP_LEFT: 0,
		TOP_RIGHT: 1,
		BOTTOM_LEFT: 2,
		BOTTOM_RIGHT: 3
	};
	bo.ControlAnchor = dL;
	window.BMAP_ANCHOR_TOP_LEFT = 0;
	window.BMAP_ANCHOR_TOP_RIGHT = 1;
	window.BMAP_ANCHOR_BOTTOM_LEFT = 2;
	window.BMAP_ANCHOR_BOTTOM_RIGHT = 3;

	function fr(e) {
		f0.call(this);
		e = e || {};
		this._opts = {
			printable: false
		};
		es.extend(this._opts, e);
		this._copyrightCollection = [];
		this.defaultAnchor = BMAP_ANCHOR_BOTTOM_LEFT;
		this.defaultOffset = new h3(5, 2);
		this.setAnchor(e.anchor);
		this._canShow = true;
		this.sateMapStyle = false;
		this.blockInfoWindow = false;
		this._asyncLoadCode()
	}
	fr.inherits(f0, "CopyrightControl");
	es.extend(fr.prototype, {
		initialize: function(e) {
			this._map = e;
			return this._container
		},
		addCopyright: function(i9) {
			var e = {
				minZoom: 0,
				bounds: null,
				content: "",
				mapType: ""
			};
			for (var T in i9) {
				e[T] = i9[T]
			}
			if (this._map) {
				var jc = e.minZoom;
				if (jc === -1 || jc < this._map.getMinZoom() || jc > this._map.getMaxZoom()) {
					e.minZoom = this._map.getMinZoom()
				}
				if (e.mapType !== "" && !dO[e.mapType]) {
					e.mapType = BMAPGL_NORMAL_MAP
				}
			}
			var ja = this.getCopyright(i9.id);
			if (ja) {
				for (var jb in e) {
					ja[jb] = e[jb]
				}
			} else {
				this._copyrightCollection.push(e)
			}
		},
		getCopyright: function(i9) {
			for (var T = 0, e = this._copyrightCollection.length; T < e; T++) {
				if (this._copyrightCollection[T].id === i9) {
					return this._copyrightCollection[T]
				}
			}
		},
		addSateMapStyle: function() {
			this.sateMapStyle = true;
			if (this._container) {
				es.ac(this._container, "BMap_cpyCtrl_w")
			}
		},
		removeSateMapStyle: function() {
			this.sateMapStyle = false;
			if (this._container) {
				es.rc(this._container, "BMap_cpyCtrl_w")
			}
		}
	});

	function bj(e) {
		f0.call(this);
		e = e || {};
		this.canCheckSize = e.canCheckSize === false ? false : true;
		this.curCityName = "";
		this.curCityCode = "";
		this.defaultOffset = new h3(10, 10);
		this.defaultAnchor = dL.TOP_LEFT;
		this.onChangeBefore = [];
		this.onChangeAfter = [];
		this.onChangeSuccess = [];
		this._opts = {
			printable: false,
			offset: e.offset || this.defaultOffset,
			anchor: e.anchor || this.defaultAnchor,
			expand: !!(e.expand)
		};
		if (e.onChangeBefore && bG(e.onChangeBefore)) {
			this.onChangeBefore.push(e.onChangeBefore)
		}
		if (e.onChangeAfter && bG(e.onChangeAfter)) {
			this.onChangeAfter.push(e.onChangeAfter)
		}
		if (e.onChangeSuccess && bG(e.onChangeSuccess)) {
			this.onChangeSuccess.push(e.onChangeSuccess)
		}
		this.setAnchor(e.anchor);
		this._asyncLoadCode()
	}
	bj.inherits(f0, "CityListControl");
	es.extend(bj.prototype, {
		initialize: function(e) {
			this._map = e;
			return this._container
		}
	});

	function i8(e) {
		f0.call(this);
		e = e || {};
		this._opts = {
			printable: false
		};
		this._opts = es.extend(es.extend(this._opts, {
			unit: "metric"
		}), e);
		this.defaultAnchor = BMAP_ANCHOR_BOTTOM_LEFT;
		this.defaultOffset = new h3(81, 18);
		if (bJ()) {
			this.defaultOffset = new h3(75, 10)
		}
		this.setAnchor(e.anchor);
		this._units = {
			metric: {
				name: "metric",
				conv: 1,
				incon: 1000,
				u1: "米",
				u2: "公里"
			},
			us: {
				name: "us",
				conv: 3.2808,
				incon: 5280,
				u1: "英尺",
				u2: "英里"
			}
		};
		this.sateMapStyle = false;
		if (!this._units[this._opts.unit]) {
			this._opts.unit = "metric"
		}
		this._scaleText = null;
		this._numberArray = {};
		this._asyncLoadCode()
	}
	window.BMAP_UNIT_METRIC = "metric";
	window.BMAP_UNIT_IMPERIAL = "us";
	i8.inherits(f0, "ScaleControl");
	es.extend(i8.prototype, {
		initialize: function(e) {
			this._map = e;
			return this._container
		},
		setUnit: function(e) {
			this._opts.unit = this._units[e] && this._units[e].name || this._opts.unit
		},
		getUnit: function() {
			return this._opts.unit
		},
		addSateMapStyle: function() {
			this.sateMapStyle = true;
			var e = this._container;
			if (e) {
				es.ac(e.children[0], "dark")
			}
		},
		removeSateMapStyle: function() {
			this.sateMapStyle = false;
			var e = this._container;
			if (e) {
				es.rc(e.children[0], "dark")
			}
		}
	});
	window.BMAP_NAVIGATION_CONTROL_LARGE = 0;
	window.BMAP_NAVIGATION_CONTROL_SMALL = 1;
	window.BMAP_NAVIGATION_CONTROL_PAN = 2;
	window.BMAP_NAVIGATION_CONTROL_ZOOM = 3;
	window.BMAP_NAVIGATION_CONTROL_ANIM = 4;

	function iF(e) {
		f0.call(this);
		e = e || {};
		this._opts = {
			printable: false
		};
		es.extend(this._opts, e);
		this.controlHeight = [{
			width: 65,
			height: 227,
			zoomHeight: 227,
			zoomWidth: 37,
			sliderHeight: 180
		}, {
			width: 65,
			height: 47,
			zoomHeight: (this._opts.forceNew === true) ? 56 : 47,
			zoomWidth: 37,
			sliderHeight: 0
		}, {
			width: 37,
			height: 57,
			zoomHeight: 0,
			zoomWidth: 0,
			sliderHeight: 0
		}, {
			width: 26,
			height: 56,
			zoomHeight: 56,
			zoomWidth: 6,
			sliderHeight: 0
		}, {
			width: 56,
			height: 47,
			zoomHeight: 47,
			zoomWidth: 37,
			sliderHeight: 180
		}];
		this.defaultAnchor = BMAP_ANCHOR_TOP_LEFT;
		this.defaultOffset = new h3(10, 10);
		this.setAnchor(e.anchor);
		this.setType(e.type);
		this._maxTotalZoomLv = 19;
		this._minZoomLevel = -1;
		this._maxZoomLevel = -1;
		this._totalZoomLv = -1;
		this._sliderInterval = 10;
		this._sliderHeight = 180;
		this._minBarY = 1;
		this._maxBarY = -1;
		this._curBarY = -1;
		this._zoomDom = null;
		this._zoomBtnDom = null;
		this._sliderDom = null;
		this._sliderBaseDom = null;
		this._cZIndex = "1100";
		this._asyncLoadCode()
	}
	iF.inherits(f0, "NavigationControl");
	es.extend(iF.prototype, {
		initialize: function(e) {
			this._map = e;
			return this._container
		},
		setType: function(e) {
			if (typeof e == "number" && e >= BMAP_NAVIGATION_CONTROL_LARGE && e <= BMAP_NAVIGATION_CONTROL_ANIM) {
				this._opts.type = e
			} else {
				this._opts.type = BMAP_NAVIGATION_CONTROL_LARGE
			}
		},
		getType: function() {
			return this._opts.type
		}
	});

	function u(i) {
		f0.call(this);
		i = i || {};
		this._opts = {
			printable: false
		};
		this.defaultAnchor = BMAP_ANCHOR_TOP_RIGHT;
		this.defaultOffset = new h3(10, 10);
		this.setAnchor(i.anchor);
		this._opts = es.extend(es.extend(this._opts, {
			offset: this.defaultOffset,
			enableSwitch: true
		}), i);
		var e = this;
		gi.load("control", function() {
			e._asyncDraw()
		})
	}
	u.inherits(f0, "MapTypeControl");
	es.extend(u.prototype, {
		initialize: function(e) {
			this._map = e;
			return this._container
		},
		showStreetLayer: function(e) {
			this._map.showStreetLayer(e)
		}
	});

	function id(e) {
		f0.call(this);
		e = e || {};
		this._opts = {};
		this._opts = es.extend(this._opts, e);
		this._zoomInDisabled = false;
		this._zoomOutDisabled = false;
		this._zoomInTapped = false;
		this._zoomOutTapped = false;
		this.defaultAnchor = dL.BOTTOM_RIGHT;
		this.defaultOffset = new h3(15, 20);
		this.setAnchor(e.anchor);
		this._asyncLoadCode()
	}
	id.inherits(f0, "ZoomControl");
	es.extend(id.prototype, {
		initialize: function(e) {
			this._map = e;
			return this._container
		}
	});

	function fJ(e) {
		f0.call(this);
		e = e || {};
		this._opts = {
			autoZoom: true,
			autoViewport: true
		};
		this._opts = es.extend(this._opts, e);
		this.defaultAnchor = dL.BOTTOM_LEFT;
		this.defaultOffset = new h3(10, 50);
		this.watchPosition = this._opts.watchPosition || false;
		this.useCompass = this._opts.useCompass || false;
		this.locMarker = null;
		this.locLevel = 16;
		this.setAnchor(this._opts.anchor);
		this.onLocationStart = e.onLocationStart || null;
		this._asyncLoadCode()
	}
	fJ.inherits(f0, "LocationControl");
	es.extend(fJ.prototype, {
		initialize: function(e) {
			this._map = e;
			return this._container
		},
		startLocation: function() {
			this._startLocationCalled = true
		},
		stopLocationTrace: function() {},
		setOptions: function(e) {
			e = e || {};
			es.extend(this._opts, e)
		}
	});

	function br(e) {
		f0.call(this);
		e = e || {};
		this._opts = {};
		this._opts = es.extend(this._opts, e);
		this.defaultAnchor = dL.BOTTOM_LEFT;
		this.defaultOffset = new h3(5, 15);
		if (bJ()) {
			this.defaultOffset = new h3(10, 10)
		}
		this.setAnchor(e.anchor)
	}
	br.inherits(f0, "LogoControl");
	es.extend(br.prototype, {
		initialize: function(i) {
			this._map = i;
			var e = this._container = document.createElement("div");
			e.innerHTML = '<img src="' + w.apiHost + '/images/logo_hd.png"  style="height:21px;width:62px;"/>';
			i.getContainer()
				.appendChild(e);
			return e
		}
	});

	function an(e, i) {
		this._map = e;
		this._indoorInfo = i;
		this._visible = true;
		this._adjustVisible = true;
		this._isMobile = bJ();
		this._sizeConfig = {
			FLOOR_BTN_HEIGHT: this._isMobile ? 35 : 26,
			SWITCH_ARROW_HEIGHT: this._isMobile ? 20 : 15
		};
		this._init()
	}
	an.prototype._init = function() {
		this._render();
		this._bindDom();
		this._bind();
		this._adjustDisplayHeight();
		var e = new e7("onindoor_bar_show");
		e.uid = this._indoorInfo.uid;
		this._map.dispatchEvent(e)
	};
	an.prototype._render = function() {
		if (!this._indoorInfo) {
			return
		}
		var jd = this._isMobile;
		var e = this._div = bK("div");
		es.ac(e, "floor-select-container");
		jd && es.ac(e, "mobile");
		jd && es.ac(e, "all-border-radius");
		var i = this._btnTop = bK("button");
		es.ac(i, "floor-switch-top");
		es.ac(i, "top-border-radius");
		var jb = bK("div");
		es.ac(jb, "floor-switch-top-icon");
		i.appendChild(jb);
		var ja = this._btnBottom = bK("button");
		var T = bK("div");
		es.ac(T, "floor-switch-bottom-icon");
		ja.appendChild(T);
		es.ac(ja, "floor-switch-bottom");
		es.ac(ja, "bottom-border-radius");
		var i9 = this._floorsContainer = bK("div");
		es.ac(i9, "floors-container");
		i9.appendChild(this._createFloorsDom());
		this._div.appendChild(i);
		this._div.appendChild(i9);
		this._div.appendChild(ja);
		var je = 0;
		if (this._btnTop.style.display === "") {
			je = 2 * this._sizeConfig.SWITCH_ARROW_HEIGHT
		}
		this._div.style.height = parseInt(this._floorsContainer.style.height, 10) + je + "px";
		this._map.getContainer()
			.appendChild(this._div);
		if (!jd) {
			var jc = this;
			setTimeout(function() {
				jc._div.style.right = "20px"
			}, 20)
		}
	};
	an.prototype._createFloorsDom = function() {
		if (!this._indoorInfo) {
			return
		}
		var T = this._ol = bK("ol");
		var jb = this._indoorInfo.currentFloor;
		for (var ja = this._indoorInfo.floors.length - 1; ja >= 0; ja--) {
			var jc = this._indoorInfo.floors[ja].floorName;
			var e = bK("li");
			var i9 = bK("button");
			es.ac(i9, "btn-select-floor");
			if (ja === jb) {
				es.ac(i9, "selected")
			}
			i9.setAttribute("data-floor", ja);
			i9.innerHTML = jc;
			e.appendChild(i9);
			T.appendChild(e)
		}
		return T
	};
	an.prototype._updateUI = function() {
		if (!this._ol) {
			this._render();
			this._bind();
			this._adjustDisplayHeight();
			return
		}
		this._ol = null;
		this._ol = this._createFloorsDom();
		this._floorsContainer.innerHTML = "";
		this._floorsContainer.appendChild(this._ol);
		this._adjustDisplayHeight()
	};
	an.prototype._bindDom = function() {
		var e = this;
		es.on(this._floorsContainer, "click", function(i9) {
			var T = i9.target || i9.srcElement;
			if (T.tagName.toLowerCase() === "button") {
				e._map.showIndoor(e._indoorInfo.uid, parseInt(T.getAttribute("data-floor"), 10));
				var i = new e7("onindoor_bar_click");
				i.uid = e._indoorInfo.uid;
				e._map.dispatchEvent(i)
			}
		});
		es.on(this._floorsContainer, "mouseover", function(T) {
			var i = T.target;
			if (i.tagName.toLowerCase() === "button") {
				es.ac(i, "hover")
			}
		});
		es.on(this._floorsContainer, "mouseout", function(T) {
			var i = T.target;
			if (i.tagName.toLowerCase() === "button") {
				es.rc(i, "hover")
			}
		});
		es.on(this._floorsContainer, "touchstart", function(T) {
			var i = T.target;
			if (i.tagName.toLowerCase() === "button") {
				es.ac(i, "onmousedown")
			}
		});
		es.on(this._floorsContainer, "touchend", function(T) {
			var i = T.target;
			if (i.tagName.toLowerCase() === "button") {
				es.rc(i, "onmousedown")
			}
		});
		es.on(this._btnTop, "mouseover", function(i) {
			if (this._disable) {
				return
			}
			es.ac(this, "hover")
		});
		es.on(this._btnTop, "mouseout", function(i) {
			es.rc(this, "hover")
		});
		es.on(this._btnBottom, "mouseover", function(i) {
			if (this._disable) {
				return
			}
			es.ac(this, "hover")
		});
		es.on(this._btnBottom, "mouseout", function(i) {
			es.rc(this, "hover")
		});
		es.on(this._btnTop, "touchstart", function(i) {
			if (this.className.indexOf("disable") > -1) {
				return
			}
			es.ac(this, "onmousedown")
		});
		es.on(this._btnTop, "touchend", function(i) {
			es.rc(this, "onmousedown")
		});
		es.on(this._btnBottom, "touchstart", function(i) {
			if (this.className.indexOf("disable") > -1) {
				return
			}
			es.ac(this, "onmousedown")
		});
		es.on(this._btnBottom, "touchend", function(i) {
			es.rc(this, "onmousedown")
		});
		es.on(this._btnTop, "click", function(i) {
			e._setBarSliderTop(parseInt(e._ol.style.top, 10) + 26)
		});
		es.on(this._btnBottom, "click", function(i) {
			e._setBarSliderTop(parseInt(e._ol.style.top, 10) - 26)
		});
		es.on(this._div, "mousemove", ad);
		es.on(this._div, "wheel", gC);
		es.on(this._div, "mousewheel", gC);
		this._map.addEventListener("resize", function() {
			e._adjustDisplayHeight()
		})
	};
	an.prototype._adjustDisplayHeight = function() {
		if (!this._indoorInfo) {
			return
		}
		var jb = this._map.getSize()
			.height;
		var jc = this._sizeConfig.FLOOR_BTN_HEIGHT;
		var jd = jb - 291 - 100;
		if (this._isMobile) {
			jd = jb - 12 - 108 - this._map.config.bottomOffset
		}
		var e = this._indoorInfo.floors.length;
		var T = e * jc;
		var i9 = e;
		var jf = 0;
		var jg = this._floorsContainer.children[0];
		if (T > jd) {
			this._showArrow = true;
			es.rc(jg.children[0].children[0], "top-border-radius");
			es.rc(jg.children[e - 1].children[0], "bottom-border-radius")
		} else {
			this._showArrow = false;
			es.ac(jg.children[0].children[0], "top-border-radius");
			es.ac(jg.children[e - 1].children[0], "bottom-border-radius")
		}
		while (T > jd) {
			if (i9 === 0) {
				break
			}
			i9--;
			jf = 2 * this._sizeConfig.SWITCH_ARROW_HEIGHT;
			T = i9 * jc + jf
		}
		this._currentDisplayHeight = T;
		if (i9 < 3) {
			this._setAdjustVisbile(false)
		} else {
			this._setAdjustVisbile(true)
		}
		this._floorsContainer.style.height = i9 * jc + "px";
		var ja = this._indoorInfo.currentFloor;
		var i = e - ja;
		var je = ja - 1;
		this._div.style.height = parseInt(this._floorsContainer.style.height, 10) + jf + "px";
		var jh = -(e - (ja + Math.round(i9 / 2))) * jc;
		this._setBarSliderTop(jh);
		if (i9 < e) {
			es.show(this._btnTop);
			es.show(this._btnBottom)
		} else {
			es.hide(this._btnTop);
			es.hide(this._btnBottom);
			this._setBarSliderTop(0)
		}
		if (this._isMobile) {
			this._div.style.bottom = 108 + this._map.config.bottomOffset + "px"
		}
	};
	an.prototype._setBarSliderTop = function(i9) {
		var T = 26;
		var i = this._indoorInfo.floors.length;
		var e = i * T;
		if (this._currentDisplayHeight) {
			if (this._showArrow) {
				e = this._currentDisplayHeight - 30
			} else {
				e = this._currentDisplayHeight
			}
		}
		if (e - i9 >= i * T) {
			i9 = e - i * T;
			es.ac(this._btnBottom, "disable");
			es.rc(this._btnBottom, "hover");
			this._btnBottom._disable = true
		} else {
			es.rc(this._btnBottom, "disable");
			this._btnBottom._disable = false
		}
		if (i9 >= 0) {
			i9 = 0;
			es.ac(this._btnTop, "disable");
			es.rc(this._btnTop, "hover");
			this._btnTop._disable = true
		} else {
			es.rc(this._btnTop, "disable");
			this._btnTop._disable = false
		}
		this._ol.style.top = i9 + "px"
	};
	an.prototype._setAdjustVisbile = function(e) {
		if (this._adjustVisible === e) {
			return
		}
		this._adjustVisible = e;
		if (e && this._visible) {
			this._div.style.right = "20px"
		} else {
			this._div.style.right = "-30px"
		}
	};
	an.prototype._bind = function() {
		var i = this._map;
		var e = this;
		i.on("indoor_status_changed", function(jd) {
			if (e._visible === false) {
				return
			}
			var T = e._ol;
			var jb = jd.uid;
			if (!jb) {
				return
			}
			var jc = jd.floor;
			for (var ja = 0; ja < T.children.length; ja++) {
				var i9 = T.children[ja].children[0];
				if (parseInt(i9.getAttribute("data-floor"), 10) === jc) {
					es.ac(i9, "selected")
				} else {
					es.rc(i9, "selected")
				}
			}
		});
		i.on("zoomend", function(T) {
			if (this.getZoom() < 17) {
				e._setAdjustVisbile(false)
			} else {
				e._setAdjustVisbile(true)
			}
		})
	};
	an.prototype.setInfo = function(e) {
		if (this._indoorInfo && this._indoorInfo.uid === e.uid) {
			return
		}
		this._indoorInfo = e;
		this._updateUI()
	};
	an.prototype.show = function() {
		if (this._visible === true) {
			return
		}
		this._visible = true;
		if (!this._isMobile) {
			this._div.style.right = "20px"
		} else {
			this._div.style.display = ""
		}
		var e = new e7("onindoor_bar_show");
		e.uid = this._indoorInfo.uid;
		this._map.dispatchEvent(e)
	};
	an.prototype.hide = function() {
		if (this._visible === false) {
			return
		}
		this._visible = false;
		if (!this._isMobile) {
			this._div.style.right = "-30px"
		} else {
			this._div.style.display = "none"
		}
	};

	function eu(e) {
		this._opts = e || {};
		this.defaultOffset = new h3(2, 80);
		this.defaultAnchor = BMAP_ANCHOR_TOP_RIGHT;
		if (this._opts.anchor === undefined) {
			this.setAnchor(this.defaultAnchor)
		} else {
			this.setAnchor(this._opts.anchor)
		}
		this._firstAnimation = true
	}
	eu.inherits(f0, "NavigationControl3D");
	es.extend(eu.prototype, {
		initialize: function(T) {
			this._map = T;
			this._createDom();
			this._bindDom();
			this._bind();
			if (!bJ()) {
				this._headingControl = new hL(this._map, this._div)
			}
			this._tiltControl = new cv(this._map, this._div);
			this._render();
			var i = this._map.getMapType();
			var e = this;
			if (i === "B_EARTH_MAP" || this._map._renderType === "webgl") {
				e._div.style.opacity = "1";
				e._div.style.visibility = "visible"
			} else {
				e._div.style.opacity = "0";
				e._div.style.visibility = "hidden"
			}
			return this._container
		},
		_createDom: function() {
			var i = this._div = document.createElement("div");
			this._container = i;
			var e = i.style;
			e.position = "absolute";
			e.zIndex = 5;
			e.width = "52px";
			e.height = "82px";
			e.right = "-3px";
			e.bottom = "79px";
			e.opacity = "0";
			e.visibility = "hidden";
			e.WebkitTransition = e.transition = "opacity .3s ease-out,visibility .3s ease-out"
		},
		_render: function() {
			var e = document.getElementById("map-operate");
			if (e) {
				e.appendChild(this._div)
			} else {
				this._map.getContainer()
					.appendChild(this._div)
			}
		},
		_bindDom: function() {
			this._div.addEventListener("mousemove", ad)
		},
		_bind: function() {
			if (this._map._renderType === "webgl") {
				return
			}
			var e = this;
			this._map.on("maptypechange", function() {
				if (this.mapType === "B_EARTH_MAP") {
					if (e._firstAnimation) {
						e._firstAnimation = false;
						setTimeout(function() {
							e._div.style.opacity = "1";
							e._div.style.visibility = "visible"
						}, 300)
					} else {
						e._div.style.opacity = "1";
						e._div.style.visibility = "visible"
					}
				} else {
					e._div.style.opacity = "0";
					e._div.style.visibility = "hidden"
				}
			})
		}
	});

	function hL(T, i) {
		this._map = T;
		this._target = T;
		var i9 = T.temp.originMapType || T.mapType;
		if (i9 === "B_EARTH_MAP" && T._earth) {
			this._target = T._earth
		}
		this._outContainer = i || T.getContainer();
		this._imgRatio = fz() >= gV.HIGH_RES_MIN_RATIO ? 2 : 1;
		this._imgPath = w.imgPath + "earth-navi-control-pc4" + (this._imgRatio === 2 ? "-2x.png" : ".png");
		this._enabled = true;
		var e = this;
		this._setHeadingOptions = {
			callback: function() {
				e._target.setLock(false)
			}
		};
		this._init()
	}
	es.extend(hL.prototype, {
		_init: function() {
			this._createDom();
			this._render();
			this._bindDom();
			this._bind();
			this._updateUI();
			this._checkEnable()
		},
		_checkEnable: function() {
			if (this._target.getZoom() >= this._target._enableHeadingZoom) {
				this.enable()
			} else {
				this.disable()
			}
		},
		_createDom: function() {
			var i = this._div = bK("div");
			var e = i.style;
			e.position = "absolute";
			e.zIndex = 5;
			e.top = "0";
			e.left = "0";
			e.width = "52px";
			e.height = "54px";
			e.background = "url(" + this._imgPath + ") no-repeat";
			e.backgroundSize = "266px auto";
			this._rotateCCW = this._createButton();
			this._rotateCCW.title = "逆时针转动";
			e = this._rotateCCW.style;
			e.left = "2px";
			e.top = "5px";
			e.zIndex = "1";
			e.width = "15px";
			e.height = "42px";
			e.backgroundPosition = "-75px -5px";
			this._rotateCW = this._createButton();
			this._rotateCW.title = "顺时针转动";
			e = this._rotateCW.style;
			e.right = "2px";
			e.top = "5px";
			e.zIndex = "1";
			e.width = "15px";
			e.height = "42px";
			e.backgroundPosition = "-75px -5px";
			e.WebkitTransform = e.transform = "scaleX(-1)";
			this._compass = this._createButton();
			this._compass.title = "恢复正北方向";
			e = this._compass.style;
			e.left = "19px";
			e.top = "4px";
			e.width = "14px";
			e.height = "44px";
			e.backgroundPosition = "-56px -4px";
			e.WebkitTransform = e.transform = "rotate(0deg)";
			this._div.appendChild(this._rotateCCW);
			this._div.appendChild(this._compass);
			this._div.appendChild(this._rotateCW);
			this._domRendered = true
		},
		_createButton: function() {
			var e = bK("button");
			var i = e.style;
			i.position = "absolute";
			i.outline = "none";
			i.border = "none";
			i.background = "url(" + this._imgPath + ") no-repeat";
			i.backgroundSize = "266px auto";
			i.cursor = "pointer";
			return e
		},
		_render: function() {
			this._outContainer.appendChild(this._div)
		},
		enable: function() {
			this._enabled = true;
			if (this._domRendered) {
				this._rotateCCW.style.cursor = "pointer";
				this._rotateCCW.style.opacity = 1;
				this._rotateCW.style.cursor = "pointer";
				this._rotateCW.style.opacity = 1;
				this._compass.style.cursor = "pointer";
				this._compass.style.opacity = 1
			}
		},
		disable: function() {
			this._enabled = false;
			if (this._domRendered) {
				this._rotateCCW.style.cursor = "";
				this._rotateCCW.style.opacity = 0.4;
				this._rotateCW.style.cursor = "";
				this._rotateCW.style.opacity = 0.4;
				this._compass.style.cursor = "";
				this._compass.style.opacity = 0.4
			}
		},
		_bindDom: function() {
			hF(this._div, ["mousedown", "click", "dblclick"]);
			var i = this._map;
			var e = this;
			this._rotateCW.addEventListener("click", function() {
				if (e._isOperating || e._enabled === false) {
					return
				}
				if (e._target.getLock()) {
					return
				}
				if (e._target.getHeading() === 360) {
					e._target.setHeading(0)
				}
				e._target.setLock(true);
				e._target.setHeading(e._target.getHeading() + 90, e._setHeadingOptions);
				i.fire(new e7("onrotatecwclick"))
			}, false);
			this._rotateCCW.addEventListener("click", function() {
				if (e._isOperating || e._enabled === false) {
					return
				}
				if (e._target.getLock()) {
					return
				}
				if (e._target.getHeading() === -360) {
					e._target.setHeading(0)
				}
				e._target.setLock(true);
				e._target.setHeading(e._target.getHeading() - 90, e._setHeadingOptions);
				i.fire(new e7("onrotateccwclick"))
			}, false);
			this._rotateCW.addEventListener("mouseover", function() {
				if (e._enabled === false) {
					return
				}
				this.style.backgroundPosition = "-89px -5px"
			}, false);
			this._rotateCW.addEventListener("mouseout", function() {
				if (e._enabled === false) {
					return
				}
				this.style.backgroundPosition = "-75px -5px"
			}, false);
			this._rotateCCW.addEventListener("mouseover", function() {
				if (e._enabled === false) {
					return
				}
				this.style.backgroundPosition = "-89px -5px"
			}, false);
			this._rotateCCW.addEventListener("mouseout", function() {
				if (e._enabled === false) {
					return
				}
				this.style.backgroundPosition = "-75px -5px"
			}, false);
			this._compass.addEventListener("click", function() {
				if (e._isOperating || e._enabled === false) {
					return
				}
				if (e._target.getLock()) {
					return
				}
				e._target.setLock(true);
				var T = false;
				if (e._target.getTilt() !== 0) {
					T = true;
					e._target.setTilt(0, e._setHeadingOptions)
				}
				if (e._target.getHeading() % 360 !== 0) {
					T = true;
					e._target.resetHeading(e._setHeadingOptions)
				}
				if (!T) {
					e._target.setLock(false)
				}
				i.fire(new e7("oncompassclick"))
			}, false)
		},
		_bind: function() {
			var e = this;
			this._bindTarget(this._target);
			if (this._map._renderType === "webgl") {
				this._map.addEventListener("maptypechange", function(i) {
					if (this.mapType === "B_EARTH_MAP") {
						e._target = e._map._earth
					} else {
						e._target = e._map
					}
					e._bindTarget(e._target);
					e._checkEnable()
				})
			}
		},
		_bindTarget: function(i) {
			if (i === this._map && this._mapBinded) {
				return
			}
			if (i === this._map._earth && this._earthBinded) {
				return
			}
			var e = this;
			i.addEventListener("heading_changed", function(T) {
				e._updateUI()
			});
			i.addEventListener("animation_start", function(T) {
				e._isOperating = true
			});
			i.addEventListener("animation_end", function(T) {
				e._isOperating = false
			});
			i.on("load", function() {
				e._checkEnable()
			});
			i.on("zoom_changed", function() {
				e._checkEnable()
			});
			if (i === this._map) {
				this._mapBinded = true
			} else {
				this._earthBinded = true
			}
		},
		_updateUI: function() {
			var e = this._target.getHeading();
			var i = this._compass.style;
			i.WebkitTransform = i.transform = "rotate(" + e + "deg)"
		},
		hide: function() {
			this._div.style.display = "none"
		},
		show: function() {
			this._div.style.display = "block"
		}
	});

	function cv(T, i) {
		this._map = T;
		this._target = T;
		var i9 = T.temp.originMapType || T.mapType;
		if (i9 === "B_EARTH_MAP" && T._earth) {
			this._target = T._earth
		}
		this._outContainer = i || T.getContainer();
		this._imgRatio = fz() >= gV.HIGH_RES_MIN_RATIO ? 2 : 1;
		this._imgPath = w.imgPath + "gl-navi-control-pc4" + (this._imgRatio === 2 ? "-2x.png" : ".png");
		this._enabled = true;
		var e = this;
		this._setTiltOptions = {
			callback: function() {
				e._target.setLock(false)
			}
		};
		this._init()
	}
	es.extend(cv.prototype, {
		_init: function() {
			this._createDom();
			this._render();
			this._bindDom();
			this._bind();
			this._checkEnable()
		},
		_checkEnable: function() {
			if (this._target.getZoom() >= this._target._enableTiltZoom) {
				this.enable()
			} else {
				this.disable()
			}
		},
		_createDom: function() {
			var e = this._div = bK("button");
			e.title = "倾斜";
			var i = e.style;
			i.position = "absolute";
			i.zIndex = 5;
			i.outline = "none";
			i.border = "none";
			i.cursor = "pointer";
			i.width = "26px";
			i.height = "26px";
			i.top = "56px";
			i.right = "13px";
			i.background = "url(" + this._imgPath + ") no-repeat #fff";
			i.backgroundSize = "266px auto";
			i.backgroundPosition = "-110px 1px";
			i.boxShadow = "1px 2px 1px rgba(0, 0, 0, 0.15)"
		},
		enable: function() {
			this._enabled = true;
			if (this._div) {
				this._div.style.cursor = "pointer"
			}
			this._updateUI()
		},
		disable: function() {
			this._enabled = false;
			if (this._div) {
				this._div.style.cursor = ""
			}
			this._updateUI()
		},
		_render: function() {
			this._outContainer.appendChild(this._div)
		},
		_bindDom: function() {
			var e = this;
			this._div.addEventListener("mousedown", function(i9) {
				if (!e._enabled) {
					return
				}
				if (e._target.getLock()) {
					return
				}
				var i = e._target.getTilt();
				var T;
				if (i === e._map.getCurrentMaxTilt()) {
					T = "out"
				} else {
					if (i === 0) {
						T = "in"
					} else {
						T = e._preTrend ? e._preTrend : "in"
					}
				}
				e._curTrend = T;
				e._clickTimer = setTimeout(function() {
					e._map.fire(new e7("ontiltmsdown"));
					e._tiltAni = new e0({
						duration: 9999999,
						render: function(ja) {
							i = e._target.getTilt();
							if (T === "in" && i < e._map.getCurrentMaxTilt()) {
								e._target.setTilt(i + 1, {
									noAnimation: true
								})
							} else {
								if (T === "out" && i > 0) {
									e._target.setTilt(i - 1, {
										noAnimation: true
									})
								}
							}
						},
						finish: function() {
							e._tiltAni = null
						}
					});
					e._clickTimer = null
				}, 200);
				i9.stopPropagation()
			}, false);
			this._div.addEventListener("mouseup", function(i) {
				if (!e._enabled) {
					return
				}
				if (e._tiltAni) {
					e._tiltAni.stop()
				}
				e._preTrend = e._curTrend
			}, false);
			this._div.addEventListener("click", function(i9) {
				if (!e._enabled) {
					return
				}
				if (!e._clickTimer) {
					return
				}
				if (e._target.getLock()) {
					return
				}
				clearTimeout(e._clickTimer);
				e._map.fire(new e7("ontiltclick"));
				var i = e._target.getTilt();
				e._target.setLock(true);
				i9.stopPropagation();
				var T = e._map.getCurrentMaxTilt();
				if (e._curTrend === "in") {
					e._target.setTilt(T, e._setTiltOptions)
				} else {
					if (e._curTrend === "out") {
						e._target.setTilt(0, e._setTiltOptions)
					} else {
						if (i < T) {
							e._target.setTilt(T, e._setTiltOptions)
						} else {
							e._target.setTilt(0, e._setTiltOptions)
						}
					}
				}
			}, false);
			this._div.addEventListener("mouseover", function(i) {
				if (!e._enabled) {
					return
				}
				e._mouseOver = true;
				e._updateUI()
			}, false);
			this._div.addEventListener("mouseout", function(i) {
				if (!e._enabled) {
					return
				}
				e._mouseOver = false;
				e._updateUI()
			}, false);
			hF(this._div, ["mousedown", "click", "dblclick"])
		},
		_bind: function() {
			var e = this;
			var i = this._map;
			this._bindTarget(this._target);
			if (this._map._renderType === "webgl") {
				this._map.addEventListener("maptypechange", function(T) {
					if (this.mapType === "B_EARTH_MAP") {
						e._target = e._map._earth
					} else {
						e._target = e._map
					}
					e._bindTarget(e._target);
					e._checkEnable()
				})
			}
		},
		_bindTarget: function(i) {
			if (i === this._map && this._mapBinded) {
				return
			}
			if (i === this._map._earth && this._earthBinded) {
				return
			}
			var e = this;
			i.on("load", function() {
				e._checkEnable()
			});
			i.on("zoom_changed", function() {
				e._checkEnable()
			});
			i.on("tilt_changed", function() {
				e._updateUI()
			});
			if (i === this._map) {
				this._mapBinded = true
			} else {
				this._earthBinded = true
			}
		},
		_updateUI: function() {
			var T = this._target.getTilt();
			var i = 0;
			var i9 = 0;
			var e = 0;
			if (T > 0) {
				i = 78
			}
			if (this._mouseOver) {
				e = 52
			}
			if (this._enabled === false) {
				i9 = 26;
				e = 0;
				i = 0
			}
			var ja = "-" + (110 + i + i9 + e) + "px 1px";
			this._div && (this._div.style.backgroundPosition = ja);
			if (this._enabled) {
				if (T > 0) {
					this._div && (this._div.title = "恢复")
				} else {
					this._div && (this._div.title = "倾斜")
				}
			} else {
				this._div && (this._div.title = "请放大地图后操作")
			}
		},
		hide: function() {
			this._div.style.display = "none"
		},
		show: function() {
			this._div.style.display = "block"
		}
	});

	function gz(i) {
		cJ.call(this);
		this._opts = {
			container: null,
			cursor: "default"
		};
		this._opts = es.extend(this._opts, i);
		this._type = "contextmenu";
		this._map = null;
		this._container;
		this._left = 0;
		this._top = 0;
		this._items = [];
		this._rItems = [];
		this._dividers = [];
		this._enable = true;
		this.curPixel = null;
		this.curPoint = null;
		this._isOpen = false;
		var e = this;
		gi.load("menu", function() {
			e._draw()
		})
	}
	gz.inherits(cJ, "ContextMenu");
	es.extend(gz.prototype, {
		initialize: function(e) {
			this._map = e
		},
		remove: function() {
			this._map = null
		},
		addItem: function(ja, e) {
			if (!ja || ja._type != "menuitem" || ja._text == "" || ja._width <= 0) {
				return
			}
			for (var i9 = 0, T = this._items.length; i9 < T; i9++) {
				if (this._items[i9] === ja) {
					return
				}
			}
			if (e === undefined || e > this._items.length - 1) {
				e = -1
			}
			ja._insertIndex = e;
			if (e === -1) {
				this._items.push(ja);
				this._rItems.push(ja)
			} else {
				this._items.splice(e, 0, ja);
				this._rItems.splice(e, 0, ja)
			}
		},
		removeItem: function(i9) {
			if (!i9 || i9._type != "menuitem") {
				return
			}
			for (var T = 0, e = this._items.length; T < e; T++) {
				if (this._items[T] === i9) {
					this._items[T].remove();
					this._items.splice(T, 1);
					delete i9._insertIndex;
					e--
				}
			}
			for (var T = 0, e = this._rItems.length; T < e; T++) {
				if (this._rItems[T] === i9) {
					this._rItems[T].remove();
					this._rItems.splice(T, 1);
					delete i9._insertIndex;
					e--
				}
			}
		},
		addSeparator: function(e) {
			if (e === undefined || e > this._items.length - 1) {
				e = -1
			}
			var i = {
				_type: "divider",
				_dIndex: this._dividers.length,
				_insertIndex: e
			};
			this._dividers.push({
				dom: null
			});
			if (e === -1) {
				this._items.push(i)
			} else {
				this._items.splice(e, 0, i)
			}
		},
		removeSeparator: function(T) {
			if (!this._dividers[T]) {
				return
			}
			for (var i9 = 0, e = this._items.length; i9 < e; i9++) {
				if (this._items[i9] && this._items[i9]._type == "divider" && this._items[i9]._dIndex == T) {
					this._items.splice(i9, 1);
					e--
				}
				if (this._items[i9] && this._items[i9]._type == "divider" && this._items[i9]._dIndex > T) {
					this._items[i9]._dIndex--
				}
			}
			this._dividers.splice(T, 1)
		},
		getDom: function() {
			return this._container
		},
		show: function() {
			if (this._isOpen == true) {
				return
			}
			this._isOpen = true
		},
		hide: function() {
			if (this._isOpen == false) {
				return
			}
			this._isOpen = false
		},
		setCursor: function(e) {
			if (!e) {
				return
			}
			this._opts.cursor = e
		},
		getItem: function(e) {
			return this._rItems[e]
		},
		enable: function() {
			this._enable = true
		},
		disable: function() {
			this._enable = false
		}
	});

	function g8(T, i9, i) {
		if (!T || !i9 || typeof i9 != "function") {
			return
		}
		cJ.call(this);
		this._opts = {
			width: 100,
			id: ""
		};
		i = i || {};
		this._opts.width = (i.width * 1) ? i.width : 100;
		this._opts.id = i.id ? i.id : "";
		this._text = T + "";
		this._callback = i9;
		this._map = null;
		this._type = "menuitem";
		this._contextmenu = null;
		this._container = null;
		this._enabled = true;
		var e = this;
		gi.load("menu", function() {
			e._draw()
		})
	}
	g8.inherits(cJ, "MenuItem");
	es.extend(g8.prototype, {
		initialize: function(e, i) {
			this._map = e;
			this._contextmenu = i
		},
		remove: function() {
			this._contextmenu = null;
			this._map = null
		},
		setText: function(e) {
			if (!e) {
				return
			}
			this._text = e + ""
		},
		getDom: function() {
			return this._container
		},
		enable: function() {
			this._enabled = true
		},
		disable: function() {
			this._enabled = false
		}
	});

	function ha(e, i) {
		this.setSouthWest(e);
		this.setNorthEast(i)
	}
	es.extend(ha.prototype, {
		isEmpty: function() {
			return this.sw === null && this.ne === null
		},
		equals: function(e) {
			if (!e || e.isEmpty() || this.isEmpty()) {
				return false
			}
			return this.sw.equals(e.sw) && this.ne.equals(e.ne)
		},
		containsBounds: function(e) {
			if (!e || e.isEmpty() || this.isEmpty()) {
				return false
			}
			return (e.sw.lng > this.sw.lng && e.ne.lng < this.ne.lng && e.sw.lat > this.sw.lat && e.ne.lat < this.ne.lat)
		},
		getCenter: function() {
			if (this.isEmpty()) {
				return null
			}
			return new cd((this.sw.lng + this.ne.lng) / 2, (this.sw.lat + this.ne.lat) / 2)
		},
		intersects: function(T) {
			if (!T || T.isEmpty() || this.isEmpty()) {
				return null
			}
			if (Math.max(T.sw.lng, T.ne.lng) < Math.min(this.sw.lng, this.ne.lng) || Math.min(T.sw.lng, T.ne.lng) > Math.max(this.sw.lng, this.ne.lng) || Math.max(T.sw.lat, T.ne.lat) < Math.min(this.sw.lat, this.ne.lat) || Math.min(T.sw.lat, T.ne.lat) > Math.max(this.sw.lat, this.ne.lat)) {
				return null
			}
			var ja = Math.max(this.sw.lng, T.sw.lng);
			var i = Math.min(this.ne.lng, T.ne.lng);
			var i9 = Math.max(this.sw.lat, T.sw.lat);
			var e = Math.min(this.ne.lat, T.ne.lat);
			return new ha(new cd(ja, i9), new cd(i, e))
		},
		setMinMax: function() {
			this.minX = this.sw ? this.sw.lng : null;
			this.minY = this.sw ? this.sw.lat : null;
			this.maxX = this.ne ? this.ne.lng : null;
			this.maxY = this.ne ? this.ne.lat : null
		},
		containsPoint: function(e) {
			if (!e) {
				return
			}
			return (e.lng >= this.sw.lng && e.lng <= this.ne.lng && e.lat >= this.sw.lat && e.lat <= this.ne.lat)
		},
		extend: function(e) {
			if (!e) {
				return
			}
			var i = e.lng;
			var T = e.lat;
			if (!this.sw) {
				this.sw = e.clone()
			}
			if (!this.ne) {
				this.ne = e.clone()
			}
			if (this.sw.lng > i) {
				this.sw.lng = i
			}
			if (this.ne.lng < i) {
				this.ne.lng = i
			}
			if (this.sw.lat > T) {
				this.sw.lat = T
			}
			if (this.ne.lat < T) {
				this.ne.lat = T
			}
		},
		getMin: function() {
			return this.sw
		},
		getMax: function() {
			return this.ne
		},
		getSouthWest: function() {
			return this.sw
		},
		getNorthEast: function() {
			return this.ne
		},
		setSouthWest: function(e) {
			this.sw = e ? e.clone() : null
		},
		setNorthEast: function(e) {
			this.ne = e ? e.clone() : null
		},
		clone: function() {
			return new ha(this.sw, this.ne)
		},
		toSpan: function() {
			if (this.isEmpty()) {
				return new h3(0, 0)
			}
			return new h3(Math.abs(this.ne.lng - this.sw.lng), Math.abs(this.ne.lat - this.sw.lat))
		},
		div: function(e) {
			if (!e || e.isEmpty() || this.isEmpty()) {
				return 0
			}
			return ((this.ne.lng - this.sw.lng) * (this.ne.lat - this.sw.lat)) / ((e.ne.lng - e.sw.lng) * (e.ne.lat - e.sw.lat))
		},
		makeNormalizedPoint: function(e) {
			this.normalizedTopLeft = this.pointTopLeft.clone();
			this.normalizedTopRight = this.pointTopRight.clone();
			this.normalizedBottomRight = this.pointBottomRight.clone();
			this.normalizedBottomLeft = this.pointBottomLeft.clone();
			while (e < 0) {
				e += 360
			}
			e = e % 360;
			if (e >= 0 && e < 90 || e >= 270 && e < 360) {
				if (this.normalizedTopRight.lng < this.normalizedTopLeft.lng) {
					this.normalizedTopRight.lng += gV.WORLD_SIZE_MC
				}
				if (this.normalizedBottomRight.lng < this.normalizedBottomLeft.lng) {
					this.normalizedBottomRight.lng += gV.WORLD_SIZE_MC
				}
			} else {
				if (this.normalizedTopLeft.lng < this.normalizedTopRight.lng) {
					this.normalizedTopLeft.lng += gV.WORLD_SIZE_MC
				}
				if (this.normalizedBottomLeft.lng < this.normalizedBottomRight.lng) {
					this.normalizedBottomLeft.lng += gV.WORLD_SIZE_MC
				}
			}
		},
		toString: function() {
			return "Bounds"
		}
	});

	function cd(e, i) {
		if (isNaN(e)) {
			e = cV(e);
			e = isNaN(e) ? 0 : e
		}
		if (typeof e === "string") {
			e = parseFloat(e)
		}
		if (isNaN(i)) {
			i = cV(i);
			i = isNaN(i) ? 0 : i
		}
		if (typeof i === "string") {
			i = parseFloat(i)
		}
		this.lng = e;
		this.lat = i
	}
	cd.prototype.equals = function(i) {
		if (!i) {
			return false
		}
		var i9 = Math.abs(this.lat - i.lat);
		var T = Math.abs(this.lng - i.lng);
		var e = 1e-8;
		if (i9 < e && T < e) {
			return true
		}
		return false
	};
	cd.prototype.clone = function() {
		return new cd(this.lng, this.lat)
	};
	cd.prototype.add = function(e) {
		return new cd(this.lng + e.lng, this.lat + e.lat)
	};
	cd.prototype.sub = function(e) {
		return new cd(this.lng - e.lng, this.lat - e.lat)
	};
	cd.prototype.mult = function(e) {
		return new cd(this.lng * e, this.lat * e)
	};
	cd.prototype.div = function(e) {
		return new cd(this.lng / e, this.lat / e)
	};
	cd.prototype.mag = function() {
		return Math.sqrt(this.lng * this.lng + this.lat * this.lat)
	};
	cd.prototype.toString = function() {
		return "Point"
	};

	function ia() {}
	es.extend(ia, {
		EARTHRADIUS: 6370996.81,
		MCBAND: [12890594.86, 8362377.87, 5591021, 3481989.83, 1678043.12, 0],
		LLBAND: [86, 60, 45, 30, 15, 0],
		MC2LL: [
			[1.410526172116255e-8, 0.00000898305509648872, -1.9939833816331, 200.9824383106796, -187.2403703815547, 91.6087516669843, -23.38765649603339, 2.57121317296198, -0.03801003308653, 17337981.2],
			[-7.435856389565537e-9, 0.000008983055097726239, -0.78625201886289, 96.32687599759846, -1.85204757529826, -59.36935905485877, 47.40033549296737, -16.50741931063887, 2.28786674699375, 10260144.86],
			[-3.030883460898826e-8, 0.00000898305509983578, 0.30071316287616, 59.74293618442277, 7.357984074871, -25.38371002664745, 13.45380521110908, -3.29883767235584, 0.32710905363475, 6856817.37],
			[-1.981981304930552e-8, 0.000008983055099779535, 0.03278182852591, 40.31678527705744, 0.65659298677277, -4.44255534477492, 0.85341911805263, 0.12923347998204, -0.04625736007561, 4482777.06],
			[3.09191371068437e-9, 0.000008983055096812155, 0.00006995724062, 23.10934304144901, -0.00023663490511, -0.6321817810242, -0.00663494467273, 0.03430082397953, -0.00466043876332, 2555164.4],
			[2.890871144776878e-9, 0.000008983055095805407, -3.068298e-8, 7.47137025468032, -0.00000353937994, -0.02145144861037, -0.00001234426596, 0.00010322952773, -0.00000323890364, 826088.5]
		],
		LL2MC: [
			[-0.0015702102444, 111320.7020616939, 1704480524535203, -10338987376042340, 26112667856603880, -35149669176653700, 26595700718403920, -10725012454188240, 1800819912950474, 82.5],
			[0.0008277824516172526, 111320.7020463578, 647795574.6671607, -4082003173.641316, 10774905663.51142, -15171875531.51559, 12053065338.62167, -5124939663.577472, 913311935.9512032, 67.5],
			[0.00337398766765, 111320.7020202162, 4481351.045890365, -23393751.19931662, 79682215.47186455, -115964993.2797253, 97236711.15602145, -43661946.33752821, 8477230.501135234, 52.5],
			[0.00220636496208, 111320.7020209128, 51751.86112841131, 3796837.749470245, 992013.7397791013, -1221952.21711287, 1340652.697009075, -620943.6990984312, 144416.9293806241, 37.5],
			[-0.0003441963504368392, 111320.7020576856, 278.2353980772752, 2485758.690035394, 6070.750963243378, 54821.18345352118, 9540.606633304236, -2710.55326746645, 1405.483844121726, 22.5],
			[-0.0003218135878613132, 111320.7020701615, 0.00369383431289, 823725.6402795718, 0.46104986909093, 2351.343141331292, 1.58060784298199, 8.77738589078284, 0.37238884252424, 7.45]
		],
		getDistanceByMC: function(jb, i9) {
			if (!jb || !i9) {
				return 0
			}
			var i;
			var ja;
			var e;
			var T;
			jb = this.convertMC2LL(jb);
			if (!jb) {
				return 0
			}
			i = hH(jb.lng);
			ja = hH(jb.lat);
			i9 = this.convertMC2LL(i9);
			if (!i9) {
				return 0
			}
			e = hH(i9.lng);
			T = hH(i9.lat);
			return this.getDistance(i, e, ja, T)
		},
		getDistanceByLL: function(jb, i9) {
			if (!jb || !i9) {
				return 0
			}
			jb.lng = this.getLoop(jb.lng, -180, 180);
			jb.lat = this.getRange(jb.lat, -80, 84);
			i9.lng = this.getLoop(i9.lng, -180, 180);
			i9.lat = this.getRange(i9.lat, -80, 84);
			var i;
			var e;
			var ja;
			var T;
			i = hH(jb.lng);
			ja = hH(jb.lat);
			e = hH(i9.lng);
			T = hH(i9.lat);
			return this.getDistance(i, e, ja, T)
		},
		proximityCovertMC2LL: function(e) {
			if (e === null) {
				return e
			}
			if (e.lng < 180 && e.lng > -180 && e.lat < 90 && e.lat > -90) {
				return e
			}
			return this.convertMC2LL(e)
		},
		convertMC2LL: function(e) {
			if (e === null) {
				return e
			}
			if (!e) {
				return new cd(0, 0)
			}
			var T;
			var ja;
			T = new cd(Math.abs(e.lng), Math.abs(e.lat));
			for (var i9 = 0; i9 < this.MCBAND.length; i9++) {
				if (T.lat >= this.MCBAND[i9]) {
					ja = this.MC2LL[i9];
					break
				}
			}
			var jb = this.convertor(e, ja);
			return new b8(jb.lat, jb.lng)
		},
		convertLL2MC: function(jc) {
			if (!jc) {
				return new cd(0, 0)
			}
			var je = jc.lat;
			var i9 = jc.lng;
			i9 = this.getLoop(jc.lng, -180, 180);
			je = bV(je, -85, 85);
			var jb;
			for (var ja = 0; ja < this.LLBAND.length; ja++) {
				if (je >= this.LLBAND[ja]) {
					jb = this.LL2MC[ja];
					break
				}
			}
			if (!jb) {
				for (ja = 0; ja < this.LLBAND.length; ja++) {
					if (je <= -this.LLBAND[ja]) {
						jb = this.LL2MC[ja];
						break
					}
				}
			}
			var T = new cd(i9, je);
			var jd = this.convertor(T, jb);
			var e = new cd(jd.lng, jd.lat);
			e.latLng = new b8(jc.lat, jc.lng);
			return e
		},
		convertor: function(T, i9) {
			if (!T || !i9) {
				return
			}
			var e = i9[0] + i9[1] * Math.abs(T.lng);
			var i = Math.abs(T.lat) / i9[9];
			var ja = i9[2] + i9[3] * i + i9[4] * i * i + i9[5] * i * i * i + i9[6] * i * i * i * i + i9[7] * i * i * i * i * i + i9[8] * i * i * i * i * i * i;
			e *= (T.lng < 0 ? -1 : 1);
			ja *= (T.lat < 0 ? -1 : 1);
			return new cd(e, ja)
		},
		getDistance: function(i, e, i9, T) {
			return this.EARTHRADIUS * Math.acos((Math.sin(i9) * Math.sin(T) + Math.cos(i9) * Math.cos(T) * Math.cos(e - i)))
		},
		getRange: function(T, i, e) {
			if (i != null) {
				T = Math.max(T, i)
			}
			if (e != null) {
				T = Math.min(T, e)
			}
			return T
		},
		getLoop: function(T, i, e) {
			while (T > e) {
				T -= e - i
			}
			while (T < i) {
				T += e - i
			}
			return T
		}
	});
	es.extend(ia.prototype, {
		lnglatToMercator: function(e) {
			return ia.convertLL2MC(e)
		},
		lngLatToPoint: function(e) {
			var i = ia.convertLL2MC(e);
			return new eL(i.lng, i.lat)
		},
		mercatorToLnglat: function(e) {
			return ia.convertMC2LL(e)
		},
		pointToLngLat: function(i) {
			var e = new cd(i.x, i.y);
			var T = ia.convertMC2LL(e);
			return new b8(T.lat, T.lng)
		},
		pointToPixel: function(i, jb, ja, i9) {
			if (!i) {
				return
			}
			i = this.lnglatToMercator(i);
			var T = this.getZoomUnits(jb);
			var e = Math.round((i.lng - ja.lng) / T + i9.width / 2);
			var jc = Math.round((ja.lat - i.lat) / T + i9.height / 2);
			return new eL(e, jc)
		},
		mercatorToPixel: function(jb, ja, i9, T) {
			if (!jb) {
				return
			}
			var i = this.getZoomUnits(ja);
			var e = Math.round((jb.lng - i9.lng) / i + T.width / 2);
			var jc = Math.round((i9.lat - jb.lat) / i + T.height / 2);
			return new eL(e, jc)
		},
		pixelToPoint: function(i9, jc, jb, ja) {
			if (!i9) {
				return
			}
			var i = this.getZoomUnits(jc);
			var T = jb.lng + i * (i9.x - ja.width / 2);
			var jd = jb.lat - i * (i9.y - ja.height / 2);
			var e = new cd(T, jd);
			return this.mercatorToLnglat(e)
		},
		tileToBound: function(i9, jd) {
			var i = i9.col;
			var jg = i9.row;
			var jf = i9.baseTileSize;
			var je = this.getZoomUnits(i9.zoom);
			var T = {
				x: Math.round(jd.lng / je),
				y: Math.round(jd.lat / je)
			};
			var jb = {
				lbx: i * jf,
				lby: jg * jf,
				rtx: (i + 1) * jf,
				rty: (jg + 1) * jf
			};
			var e = {
				lbx: jd.lng + (jb.lbx - T.x) * je,
				lby: jd.lat + (jb.lby - T.y) * je,
				rtx: jd.lng + (jb.rtx - T.x) * je,
				rty: jd.lat + (jb.rty - T.y) * je
			};
			var ja = ia.convertMC2LL(new cd(e.lbx, e.lby));
			var jc = ia.convertMC2LL(new cd(e.rtx, e.rty));
			return {
				MC: new ha(new cd(e.lbx, e.lby), new cd(e.rtx, e.rty)),
				LL: new ha(ja, jc)
			}
		},
		getZoomUnits: function(e) {
			return Math.pow(2, (18 - e))
		},
		setCoordType: function(e) {
			this.coordsType = e
		}
	});

	function da() {}
	es.extend(da, {
		RADIUS: 6378137,
		EXTENT4326: [-180, -90, 180, 90],
		WORLD_EXTENT: [-180, -85, 180, 85],
		HALF_SIZE: 20037508.342789244,
		METERS_PER_UNIT: 111319.49079327358,
		EXTENT3857: [-20037508.342789244, -20037508.342789244, 20037508.342789244, 20037508.342789244],
		MAX_SAFE_Y: 238107693.26496765,
		origin: [-20037508.342789244, 20037508.342789244],
		size: 156543.03392804097,
		gridSize: [256, 256],
		resolutions: [156543.03392804097, 78271.51696402048, 39135.75848201024, 19567.87924100512, 9783.93962050256, 4891.96981025128, 2445.98490512564, 1222.99245256282, 611.49622628141, 305.748113140705, 152.8740565703525, 76.43702828517625, 38.21851414258813, 19.109257071294063, 9.554628535647032, 4.777314267823516, 2.388657133911758, 1.194328566955879, 0.5971642834779395, 0.29858214173896974, 0.14929107086948487, 0.07464553543474244, 0.03732276771737122],
		calcResolutions: function(i) {
			this.resolutions = [];
			for (var e = 0; e < i; ++e) {
				this.resolutions.push(this.size / Math.pow(2, e))
			}
			return this.resolutions
		},
		forEachTileCoord: function(jf, je, T, jc) {
			var e = this.getTileRangeForExtentFactory(jf, je, T);
			for (var ja = e.minX, jd = e.maxX; ja <= jd; ++ja) {
				for (var i9 = e.minY, jb = e.maxY; i9 <= jb; ++i9) {
					jc([je, ja, i9])
				}
			}
		},
		getTileRangeForExtentFactory: function(T, ja, i, i9) {
			var e;
			switch (i.source) {
				case "BD09MC":
					e = this.getBDTileRangeForExtentAndZ(T, ja, i9);
					break;
				case "EPSG3857":
					e = this.getTileRangeForExtentAndZ(T, ja, i9);
					break;
				default:
					e = this.getTileRangeForExtentAndZ(T, ja, i9);
					break
			}
			return e
		},
		getBDTileRangeForExtentAndZ: function(T, ja, i9) {
			var i = [0, 0, 0];
			this.getBDTileCoordForXYAndZ_(T[0], T[1], ja, false, i);
			var e = i[1];
			var jb = i[2];
			this.getBDTileCoordForXYAndZ_(T[2], T[3], ja, true, i);
			return this.createOrUpdateTileRange(e, i[1], jb, i[2], i9)
		},
		getTileRangeForExtentAndZ: function(T, ja, i9) {
			var i = [0, 0, 0];
			this.getTileCoordForXYAndZ_(T[0], T[3], ja, false, i);
			var e = i[1];
			var jb = i[2];
			this.getTileCoordForXYAndZ_(T[2], T[1], ja, true, i);
			return this.createOrUpdateTileRange(e, i[1], jb, i[2], i9)
		},
		getBDTileCoordForXYAndZ_: function(e, jd, jb, ja, i9) {
			var jc = 256 * Math.pow(2, (18 - jb));
			var T = e / jc;
			var i = jd / jc;
			if (ja) {
				T = Math.ceil(T) - 1;
				i = Math.ceil(i) - 1
			} else {
				T = Math.floor(T);
				i = Math.floor(i)
			}
			return this.createOrUpdateTileCoord(jb, T, i, i9)
		},
		getTileCoordForXYAndZ_: function(jg, jf, jd, je, e) {
			var jh = this.origin;
			var i = (this.resolutions.length === 0 ? this.calcResolutions(21)[jd] : this.resolutions[jd]);
			var jj = this.gridSize;
			var i9 = je ? 0.5 : 0;
			var T = je ? 0.5 : 0;
			var ji = Math.floor((jg - jh[0]) / i + i9);
			var jb = Math.floor((jh[1] - jf) / i + T);
			var jc = ji / jj[0];
			var ja = jb / jj[1];
			if (je) {
				jc = Math.ceil(jc) - 1;
				ja = Math.ceil(ja) - 1
			} else {
				jc = Math.floor(jc);
				ja = Math.floor(ja)
			}
			return this.createOrUpdateTileCoord(jd, jc, ja, e)
		},
		getTileCoordForCoordAndZ: function(T, i, e) {
			return this.getTileCoordForXYAndZ_(T[0], T[1], i, false, e)
		},
		getTileRangeExtent: function(T, jc) {
			var jd = this.origin;
			if (this.resolutions.length === 0) {
				this.calcResolutions(23)
			}
			var ja = this.resolutions[T[0]];
			var je = this.gridSize;
			var jb = jd[0] + T[1] * je[0] * ja;
			var i9 = jd[1] - (T[2] + 1) * je[1] * ja;
			var i = jb + je[0] * ja;
			var e = i9 + je[1] * ja;
			return this.createOrUpdateTileRange(jb, i, i9, e, jc)
		},
		getRangeExtent: function(i, jh, jd, jj, i9) {
			var je = this.calPiexlResolution(jj, i9);
			var jc = jh / 2 * je;
			var jf = jd / 2 * je;
			var jb = i[0] - jc;
			var T = i[0] + jc;
			var ja = i[1] - jf;
			var e = i[1] + jf;
			var jg = gcoord.transform([jb, ja], gcoord[i9.target], gcoord[i9.source]);
			var ji = gcoord.transform([T, e], gcoord[i9.target], gcoord[i9.source]);
			return this.createOrUpdateTileRange(jg[0], ji[0], jg[1], ji[1])
		},
		getMousePoint: function(jc, jb, i, ja, T) {
			var i9 = i5(jc, jb);
			return this.calLngLatByMapViewPixelInverse(i9.clientPos, i, jb.width, jb.height, ja, T)
		},
		calLngLatByMapViewPixelInverse: function(i9, e, i, jg, jh, T) {
			var jc = this.calPiexlResolution(jh, T);
			var jb = i9.x - i / 2;
			var ja = i9.y - jg / 2;
			var je = e[0] + jb * jc;
			var jd = e[1] - ja * jc;
			var jf = gcoord.transform([je, jd], gcoord[T.target], gcoord[T.source]);
			return jf
		},
		calPiexlResolution: function(T, i) {
			var e;
			switch (i.target) {
				case "BD09MC":
					e = Math.pow(2, (18 - T));
					break;
				case "EPSG3857":
					e = this.resolutions[Math.floor(T)];
					break;
				default:
					e = Math.pow(2, (18 - T));
					break
			}
			return e
		},
		getXYZCellPixelCoor: function(jc, ja, i9, i) {
			var je = this.gridSize;
			var jd;
			var jb;
			switch (i.source) {
				case "EPSG3857":
					var T = Math.pow(2, i9 - 1) - (ja + 1);
					var e = jc - Math.pow(2, i9 - 1);
					jd = e * je[0];
					jb = T * je[1];
					break;
				case "BD09MC":
					jd = jc * je[0];
					jb = ja * je[1];
				default:
					break
			}
			return {
				x: jd,
				y: jb
			}
		},
		getBaiduCellPixelCoor: function(e, i9, T) {
			var i = 256;
			return {
				x: e * i,
				y: i9 * i
			}
		},
		getPointPixelCoor: function(e, je, i) {
			var jc;
			var jb;
			var T = Math.pow(2, (18 - je));
			var i9 = this.resolutions[Math.floor(je)];
			var ja = ia.convertMC2LL(e);
			switch (i.source) {
				case "EPSG3857":
					var jd = gcoord.transform([ja.lng, ja.lat], gcoord.BD09LL, gcoord.EPSG3857);
					jc = jd[0] / i9;
					jb = jd[1] / i9;
					break;
				case "BD09MC":
					jc = e.lng / T;
					jb = e.lat / T;
				default:
					break
			}
			return [jc, jb]
		},
		getResolutionScale: function(i9, T) {
			var ja;
			var i = this.resolutions[Math.floor(i9)];
			var e = Math.pow(2, (18 - i9));
			switch (T.target) {
				case "BD09MC":
					ja = i / e;
					break;
				case "EPSG3857":
					ja = e / i;
					break;
				default:
					ja = i / e;
					break
			}
			return ja
		},
		getBaiduResolutionScale: function(T) {
			var i = this.resolutions[Math.floor(T)];
			var e = Math.pow(2, (18 - T));
			var i9 = e / i;
			return i9
		},
		getTileCoordCenter: function(T) {
			var e = this.origin;
			if (this.resolutions.length === 0) {
				this.calcResolutions(23)
			}
			var i = this.resolutions[T[0]];
			var i9 = this.gridSize;
			return [e[0] + (T[1] + 0.5) * i9[0] * i, e[1] - (T[2] + 0.5) * i9[1] * i, ]
		},
		transformBDmcPoint: function(i9, e) {
			e = e || "EPSG3857";
			var i = ia.convertMC2LL(new cd(i9.lng, i9.lat));
			var T = gcoord.transform([i.lng, i.lat], gcoord.BD09LL, gcoord[e]);
			return T
		},
		getTilesLoop: function(T, e) {
			var i = Math.pow(2, T);
			while (e > i - 1) {
				e = e - i
			}
			while (e < 0) {
				e = e + i
			}
			return e
		},
		getLoopBox: function(e, i9) {
			var i = this.HALF_SIZE * 2;
			if (e[0] > 0 && i9[2] < 0) {
				i9[2] = i9[2] + i
			} else {
				if (e[0] < 0 && i9[0] > 0) {
					i9[0] = i9[0] - i
				}
			}
			return i9
		},
		createOrUpdateTileCoord: function(T, e, i9, i) {
			if (i !== undefined) {
				i[0] = T;
				i[1] = e;
				i[2] = i9;
				return i
			} else {
				return [T, e, i9]
			}
		},
		createOrUpdateTileRange: function(e, i9, ja, T, i) {
			if (i !== undefined) {
				i.minX = e;
				i.maxX = i9;
				i.minY = ja;
				i.maxY = T;
				return i
			} else {
				return {
					minX: e,
					maxX: i9,
					minY: ja,
					maxY: T
				}
			}
		},
		fromEPSG4326: function(T, je, jc) {
			var ja = T.length;
			var jb = jc > 1 ? jc : 2;
			var e = je;
			if (e === undefined) {
				if (jb > 2) {
					e = T.slice()
				} else {
					e = new Array(ja)
				}
			}
			for (var i9 = 0; i9 < ja; i9 += jb) {
				e[i9] = (this.HALF_SIZE * T[i9]) / 180;
				var jd = this.RADIUS * Math.log(Math.tan((Math.PI * (+T[i9 + 1] + 90)) / 360));
				if (jd > this.MAX_SAFE_Y) {
					jd = this.MAX_SAFE_Y
				} else {
					if (jd < -this.MAX_SAFE_Y) {
						jd = -this.MAX_SAFE_Y
					}
				}
				e[i9 + 1] = jd
			}
			return e
		},
		toEPSG4326: function(T, jd, jc) {
			var ja = T.length;
			var jb = jc > 1 ? jc : 2;
			var e = jd;
			if (e === undefined) {
				if (jb > 2) {
					e = T.slice()
				} else {
					e = new Array(ja)
				}
			}
			for (var i9 = 0; i9 < ja; i9 += jb) {
				e[i9] = (180 * T[i9]) / this.HALF_SIZE;
				e[i9 + 1] = (360 * Math.atan(Math.exp(T[i9 + 1] / this.RADIUS))) / Math.PI - 90
			}
			return e
		},
		findParentGridAndPosition: function(i9, jj, ji, jd, je, jg, jc) {
			if (ji - 1 < 0) {
				return false
			}
			var jk = i9;
			var jf = jj;
			var T = ji;
			for (var jb = 1; jb <= jc; jb++) {
				var e = this.findParent(jk, jf, T, jb);
				if (!e) {
					return false
				}
				var jh = this.getTileKey(e);
				var ja = jd.getData(jh);
				if (ja && ja.status === "ready") {
					if (je[jh]) {
						continue
					}
					jg.setData(ja, this.drawIndex, 0);
					je[jh] = true;
					return true
				}
				jk = e.col;
				jf = e.row;
				T = e.zoom
			}
		},
		findParent: function(i, ja, T, i9) {
			if (T - 1 < 0) {
				return null
			}
			var e = i % 2;
			var jb = ja % 2;
			return {
				col: Math.floor(i / 2),
				row: Math.floor(ja / 2),
				sonX: e,
				sonY: jb,
				thumbLB: [e * 0.5, 1 - jb * 0.5 - 0.5],
				thumbRT: [e * 0.5 + 0.5, 1 - jb * 0.5],
				radio: Math.pow(2, i9),
				zoom: T - 1,
				useZoom: T - 1
			}
		},
		getTileKey: function(e, i9) {
			i9 = i9 || {};
			var i = typeof i9.useZoom === "number" ? i9.useZoom : e.useZoom;
			var T = e.style || this.mapStyleId || "default";
			return this.mapType + "_" + T + "_" + e.col + "_" + e.row + "_" + e.zoom + "_" + i
		},
		lon2tile: function(i, e) {
			return (Math.floor((i + 180) / 360 * Math.pow(2, e)))
		},
		lat2tile: function(T, i) {
			var e = Math.tan(T * Math.PI / 180) + 1 / Math.cos(T * Math.PI / 180);
			return (Math.floor((1 - Math.log(e) / Math.PI) / 2 * Math.pow(2, i)))
		},
		tile2long: function(e, i) {
			return (e / Math.pow(2, i) * 360 - 180)
		},
		tile2lat: function(T, e) {
			var i = Math.PI - 2 * Math.PI * T / Math.pow(2, e);
			return (180 / Math.PI * Math.atan(0.5 * (Math.exp(i) - Math.exp(-i))))
		}
	});

	function b8(i, e) {
		if (i < -90) {
			i = -90
		} else {
			if (i > 90) {
				i = 90
			}
		}
		while (e < -180) {
			e += 360
		}
		while (e > 180) {
			e -= 360
		}
		e = e || 0;
		i = i || 0;
		cd.call(this, e, i)
	}
	b8.inherits(cd, "LatLng");
	es.extend(b8.prototype, {
		equals: function(e) {
			return (this.lat === e.lat && this.lng === e.lng)
		},
		clone: function() {
			return new b8(this.lat, this.lng)
		},
		add: function(e) {
			return new b8(this.lng + e.lng, this.lat + e.lat)
		},
		sub: function(e) {
			return new b8(this.lat - e.lat, this.lng - e.lng)
		},
		mult: function(e) {
			return new b8(this.lng * e, this.lat * e)
		},
		div: function(e) {
			return new b8(this.lng / e, this.lat / e)
		},
		mag: function() {
			return Math.sqrt(this.lng * this.lng + this.lat * this.lat)
		},
		getLngSpan: function(e) {
			var i = this.lng;
			var T = Math.abs(e - i);
			if (T > 180) {
				T = 360 - T
			}
			return T
		},
		toString: function() {
			return "LatLng"
		}
	});

	function ck(e, i) {
		if (e && !i) {
			i = e
		}
		this._sw = this._ne = null;
		this._swLng = this._swLat = null;
		this._neLng = this._neLat = null;
		if (e) {
			this._sw = new b8(e.lat, e.lng);
			this._ne = new b8(i.lat, i.lng);
			this._swLng = e.lng;
			this._swLat = e.lat;
			this._neLng = i.lng;
			this._neLat = i.lat
		}
	}
	es.extend(ck.prototype, {
		isEmpty: function() {
			return !this._sw || !this._ne
		},
		equals: function(e) {
			if (this.isEmpty()) {
				return false
			}
			return this.getSouthWest()
				.equals(e.getSouthWest()) && this.getNorthEast()
				.equals(e.getNorthEast())
		},
		getSouthWest: function() {
			return this._sw
		},
		getNorthEast: function() {
			return this._ne
		},
		containsBounds: function(e) {
			if (this.isEmpty() || e.isEmpty()) {
				return false
			}
			return (e._swLng > this._swLng && e._neLng < this._neLng && e._swLat > this._swLat && e._neLat < this._neLat)
		},
		getCenter: function() {
			if (this.isEmpty()) {
				return null
			}
			return new b8((this._swLat + this._neLat) / 2, (this._swLng + this._neLng) / 2)
		},
		intersects: function(T) {
			if (Math.max(T._swLng, T._neLng) < Math.min(this._swLng, this._neLng) || Math.min(T._swLng, T._neLng) > Math.max(this._swLng, this._neLng) || Math.max(T._swLat, T._neLat) < Math.min(this._swLat, this._neLat) || Math.min(T._swLat, T._neLat) > Math.max(this._swLat, this._neLat)) {
				return false
			}
			var ja = Math.max(this._swLng, T._swLng);
			var i = Math.min(this._neLng, T._neLng);
			var i9 = Math.max(this._swLat, T._swLat);
			var e = Math.min(this._neLat, T._neLat);
			this._sw = new b8(i9, ja);
			this._ne = new b8(e, i);
			this._swLng = ja;
			this._swLat = i9;
			this._neLng = i;
			this._neLat = e;
			return true
		},
		containsPoint: function(e) {
			if (this.isEmpty()) {
				return false
			}
			return (e.lng >= this._swLng && e.lng <= this._neLng && e.lat >= this._swLat && e.lat <= this._neLat)
		},
		extend: function(e) {
			var i = e.lng;
			var T = e.lat;
			if (!this._sw) {
				this._sw = new b8(0, 0)
			}
			if (!this._ne) {
				this._ne = new b8(0, 0)
			}
			if (!this._swLng || this._swLng > i) {
				this._sw.lng = this._swLng = i
			}
			if (!this._neLng || this._neLng < i) {
				this._ne.lng = this._neLng = i
			}
			if (!this._swLat || this._swLat > T) {
				this._sw.lat = this._swLat = T
			}
			if (!this._neLat || this._neLat < T) {
				this._ne.lat = this._neLat = T
			}
		},
		toSpan: function() {
			if (this.isEmpty()) {
				return new b8(0, 0)
			}
			return new b8(Math.abs(this._neLat - this._swLat), Math.abs(this._neLng - this._swLng))
		},
		union: function(i) {
			if (i.isEmpty()) {
				return false
			}
			var e = i.getSouthWest();
			var T = i.getNorthEast();
			if (this._swLat > e.lat) {
				this._swLat = e.lat
			}
			if (this._swLng > e.lng) {
				this._swLng = e.lng
			}
			if (this._neLat < T.lat) {
				this._neLat = T.lat
			}
			if (this._neLng < T.lng) {
				this._neLng = T.lng
			}
			this._sw = new b8(this._swLat, this._swLng);
			this._ne = new b8(this._neLat, this._neLng);
			return true
		},
		toString: function() {
			return this._swLat + ", " + this._swLng + ", " + this._neLat + ", " + this._neLng
		}
	});
	window.COORDINATES_WGS84 = 1;
	window.COORDINATES_WGS84_MC = 2;
	window.COORDINATES_GCJ02 = 3;
	window.COORDINATES_GCJ02_MC = 4;
	window.COORDINATES_BD09 = 5;
	window.COORDINATES_BD09_MC = 6;
	window.COORDINATES_MAPBAR = 7;
	window.COORDINATES_51 = 8;

	function fg() {}
	fg.inherits(cJ, "Convertor");
	es.extend(fg.prototype, {
		translate: function(i, ja, i9, T) {
			ja = ja || 1;
			i9 = i9 || 5;
			if (i.length > 10) {
				T && T({
					status: 25
				});
				return
			}
			var e = w.apiHost + "/geoconv/v1/?coords=";
			es.each(i, function(jb) {
				e += jb.lng + "," + jb.lat + ";"
			});
			e = e.replace(/;$/gi, "");
			e = e + "&from=" + ja + "&to=" + i9 + "&v=gl&type=webgl&ak=" + ei;
			cS.request(e, function(jc) {
				if (jc.status === 0) {
					var jb = [];
					es.each(jc.result, function(jd) {
						jb.push(new cd(jd.x, jd.y))
					});
					delete jc.result;
					jc.points = jb
				}
				T && T(jc)
			})
		}
	});
	var dI = {
		idle: 0,
		freeze: 1,
		zooming: 2,
		dragging: 3,
		moving: 4,
		readyToDrag: 5,
		readyToPinch: 6,
		pinching: 7,
		stdMapCtrlDrag: 8,
		KEY_LEFT: 37,
		KEY_UP: 38,
		KEY_RIGHT: 39,
		KEY_DOWN: 40,
		arrowOpCodes: {
			37: 1,
			38: 2,
			39: 4,
			40: 8
		}
	};
	var ae = {
		_map: null,
		_html: "<div class='BMap_opMask' unselectable='on'></div>",
		_maskElement: null,
		_cursor: "default",
		inUse: false,
		show: function(e) {
			if (!this._map) {
				this._map = e
			}
			this.inUse = true;
			if (!this._maskElement) {
				this._createMask(e)
			}
			this._maskElement.style.display = "block"
		},
		_createMask: function(i) {
			if (!this._map) {
				this._map = i
			}
			if (!this._map) {
				return
			}
			var e = this._maskElement = bA(this._map.container, this._html);
			es.on(e, "mouseup", function(T) {
				if (T.button == 2) {
					gC(T)
				}
			});
			es.on(e, "contextmenu", gC);
			e.style.display = "none"
		},
		getDrawPoint: function(i9, jc, ja) {
			i9 = window.event || i9;
			var i = i9.offsetX || i9.layerX || 0;
			var jb = parseInt(i9.offsetY) || parseInt(i9.layerY) || 0;
			var T = i9.target || i9.srcElement;
			if (T != ae.getDom(this._map) && jc == true) {
				while (T && T != this._map.container) {
					if (!(T.clientWidth == 0 && T.clientHeight == 0 && T.offsetParent && T.offsetParent.nodeName.toLowerCase() == "td")) {
						i += T.offsetLeft;
						jb += T.offsetTop
					}
					T = T.offsetParent
				}
			}
			if (T != ae.getDom(this._map) && T != this._map.container) {
				return
			}
			if (typeof i === "undefined" || typeof jb === "undefined") {
				return
			}
			if (isNaN(i) || isNaN(jb)) {
				return
			}
			if (ja) {
				i = i + ja.x;
				jb = jb + ja.y
			}
			return this._map.pixelToPointIn(new eL(i, jb))
		},
		hide: function() {
			if (!this._map) {
				return
			}
			this.inUse = false;
			if (this._maskElement) {
				this._maskElement.style.display = "none"
			}
		},
		getDom: function(e) {
			if (!this._maskElement) {
				this._createMask(e)
			}
			return this._maskElement
		},
		setCursor: function(e) {
			this._cursor = e || "default";
			if (this._maskElement) {
				this._maskElement.style.cursor = this._cursor
			}
		}
	};

	function aH() {
		this._type = "overlay"
	}
	aH.inherits(es.BaseClass, "Overlay");
	aH.getZIndex = function(i, e) {
		i = i * 1;
		if (!i) {
			return 0
		}
		if (e) {
			i = ia.convertMC2LL(new cd(0, i))
				.lat
		}
		return (i * -100000) << 1
	};
	es.extend(aH.prototype, {
		_i: function(e) {
			this._map = e;
			if (!this.domElement && bG(this.initialize)) {
				this.domElement = this.initialize(e);
				if (this.domElement) {
					this.domElement.style.WebkitUserSelect = "none"
				}
			}
			this.draw()
		},
		initialize: function(e) {
			throw "initialize方法未实现"
		},
		draw: function() {
			throw "draw方法未实现"
		},
		remove: function() {
			if (this.domElement && this.domElement.parentNode) {
				this.domElement.parentNode.removeChild(this.domElement)
			}
			this.domElement = null;
			this.dispatchEvent(new e7("onremove"))
		},
		hide: function() {
			this._visible = false;
			es.hide(this.domElement)
		},
		show: function() {
			this._visible = true;
			es.show(this.domElement)
		},
		getMap: function() {
			return this._map
		},
		dispose: function() {
			es.BaseClass.prototype.decontrol.call(this)
		}
	});

	function d6() {
		es.BaseClass.call(this);
		aH.call(this);
		this._visible = true;
		this._visibleInternal = true;
		this.infoWindow = null;
		this._dblclickTime = 0
	}
	d6.inherits(aH, "OverlayInternal");
	es.extend(d6.prototype, {
		initialize: function(e) {
			this.map = e;
			es.BaseClass.call(this, this.hashCode);
			return null
		},
		draw: function() {},
		remove: function() {
			this.decontrol();
			aH.prototype.remove.call(this)
		},
		hide: function() {
			this._visible = false
		},
		show: function() {
			this._visible = true
		},
		getDom: function() {
			return this.domElement
		},
		getContainer: function() {
			return this.domElement
		},
		setClassName: function() {},
		setConfig: function(i) {
			if (!i) {
				return
			}
			for (var e in i) {
				if (i.hasOwnProperty(e)) {
					this._config[e] = i[e]
				}
			}
		},
		getPoint: function(T, i9) {
			if (!T) {
				return this.point
			} else {
				var e = i9 ? i9.width : 0;
				var ja = i9 ? i9.height : 0;
				if (this.map) {
					var i = this.map.pointToPixelIn(this.point);
					if (this._config && this._config.offset) {
						i.x = i.x + this._config.offset.width + e;
						i.y = i.y + this._config.offset.height + ja
					} else {
						i.x = i.x + e;
						i.y = i.y + ja
					}
					return this.map.pixelToPointIn(i)
				}
			}
		},
		setZIndex: function(e) {
			this.zIndex = e
		},
		isVisible: function() {
			if (!this.domElement) {
				return false
			}
			return !!this._visible
		},
		enableMassClear: function() {
			this._config.enableMassClear = true
		},
		disableMassClear: function() {
			this._config.enableMassClear = false
		},
		showInternal: function() {
			this._visibleInternal = true
		},
		hideInternal: function(e) {
			this._visibleInternal = false;
			this._hideInternalReason = e
		}
	});

	function aF(e) {
		this.map = e;
		this._overlays = {};
		this._overlayArray = [];
		this._customOverlays = [];
		e._overlays = this._overlays;
		e._overlayArray = this._overlayArray;
		e._customOverlays = this._customOverlays;
		this._zoomingOrMoving = false;
		this._init()
	}
	aF.prototype._init = function() {
		if (this.map._renderType !== "webgl") {
			this._createOverlayContainers()
		} else {
			this._createWebGLOverlayContainers()
		}
		this._bind()
	};
	aF.prototype._createOverlayContainers = function() {
		var e = this.map;
		e.temp.overlayDiv = e.overlayDiv = this._createOverlayDiv(e.platform, 200);
		e.temp.overlayDivEx = e.overlayDivEx = this._createOverlayDiv(e.platform, 50);
		e._panes.floatPane = this._createOverlayDiv(e.temp.overlayDiv, 800);
		e._panes.markerMouseTarget = this._createOverlayDiv(e.temp.overlayDiv, 700);
		e._panes.floatShadow = this._createOverlayDiv(e.temp.overlayDiv, 600);
		e._panes.labelPane = this._createOverlayDiv(e.temp.overlayDiv, 500);
		e._panes.markerPane = this._createOverlayDiv(e.temp.overlayDiv, 400);
		if (e.isCanvasMap()) {
			e._panes.mapPane = this._createOverlayDiv(e.temp.overlayDivEx, 50)
		} else {
			e._panes.mapPane = this._createOverlayDiv(e.temp.overlayDiv, 200)
		}
	};
	aF.prototype._createWebGLOverlayContainers = function() {
		var e = this.map;
		e.temp.overlayDiv = e.overlayDiv = this._createOverlayDiv(e.platform, 200);
		e._panes.floatPane = this._createOverlayDiv(e.temp.overlayDiv, 800);
		e._panes.markerMouseTarget = this._createOverlayDiv(e.temp.overlayDiv, 700);
		e._panes.floatShadow = this._createOverlayDiv(e.temp.overlayDiv, 600);
		e._panes.labelPane = this._createOverlayDiv(e.temp.overlayDiv, 500);
		e._panes.markerPane = this._createOverlayDiv(e.temp.overlayDiv, 400)
	};
	aF.prototype._createOverlayDiv = function(e, i9) {
		var T = bK("div");
		var i = T.style;
		i.position = "absolute";
		i.top = i.left = i.width = i.height = "0";
		i.zIndex = i9;
		e.appendChild(T);
		return T
	};
	aF.prototype._bind = function() {
		var ja = this.map;
		var i9 = this;

		function i(jc) {
			i9.draw(jc)
		}
		if (ja._renderType !== "webgl") {
			ja.addEventListener("load", i);
			ja.addEventListener("moveend", i);
			ja.addEventListener("resize", i);
			ja.addEventListener("zoomend", i);
			ja.addEventListener("zooming_inner", i)
		} else {
			ja.on("update", i)
		}
		ja.addEventListener("zoomend", function(jc) {
			if (this.mapType === "B_EARTH_MAP") {
				if (this._earth.getZoom() < this._earth.zoomForNight + 1) {
					this.temp.overlayDiv.style.display = "none";
					if (this.temp.overlayDivEx) {
						this.temp.overlayDivEx.style.display = "none"
					}
				} else {
					if (this.temp.overlayDiv.style.display === "none") {
						this.temp.overlayDiv.style.display = "";
						if (this.temp.overlayDivEx) {
							this.temp.overlayDivEx.style.display = ""
						}
						if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
							this.temp.infoWin.redraw()
						}
					}
				}
			}
		});
		ja.addEventListener("oncenterandzoom", function(jc) {
			i9.draw(jc);
			if (this.mapType === "B_EARTH_MAP") {
				if (this._earth.getZoom() < this._earth.zoomForNight + 1) {
					this.temp.overlayDiv.style.display = "none";
					if (this.temp.overlayDivEx) {
						this.temp.overlayDivEx.style.display = "none"
					}
				} else {
					if (this.temp.overlayDiv.style.display === "none") {
						this.temp.overlayDiv.style.display = "";
						if (this.temp.overlayDivEx) {
							this.temp.overlayDivEx.style.display = ""
						}
						if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
							this.temp.infoWin.redraw()
						}
					}
				}
			}
		});
		ja.addEventListener("maptypechange", function(jc) {
			if (this.mapType === "B_EARTH_MAP") {
				if (this._panes.mapPane) {
					this._panes.mapPane.style.display = "none"
				}
				if (this._earth.getZoom() < this._earth.zoomForNight + 1) {
					this.temp.overlayDiv.style.display = "none";
					if (this.temp.overlayDivEx) {
						this.temp.overlayDivEx.style.display = "none"
					}
				} else {
					if (this.temp.overlayDiv.style.display === "none") {
						this.temp.overlayDiv.style.display = "";
						if (this.temp.overlayDivEx) {
							this.temp.overlayDivEx.style.display = ""
						}
						if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
							this.temp.infoWin.redraw()
						}
					}
				}
				if (this._panes.markerPane) {
					this._panes.markerPane.style.display = "none"
				}
			} else {
				if (this._panes.mapPane) {
					this._panes.mapPane.style.display = ""
				}
				if (this._panes.markerPane) {
					this._panes.markerPane.style.display = ""
				}
				if (this.temp.overlayDiv.style.display === "none") {
					this.temp.overlayDiv.style.display = "";
					if (this.temp.overlayDivEx) {
						this.temp.overlayDivEx.style.display = ""
					}
					if (this.temp.infoWin && this.temp.infoWin.isOpen()) {
						this.temp.infoWin.redraw()
					}
				}
			}
			i9.draw(jc)
		});
		ja.on("earthstatuschange", function jb(jc) {
			i9.draw(jc)
		});
		ja.addEventListener("addoverlay", function(jg) {
			var jd = jg.target;
			if (jd instanceof d6) {
				if (!i9._overlays[jd.hashCode]) {
					i9._overlays[jd.hashCode] = jd;
					i9._overlayArray.push(jd)
				}
			} else {
				var jf = false;
				for (var je = 0, jc = i9._customOverlays.length; je < jc; je++) {
					if (i9._customOverlays[je] === jd) {
						jf = true;
						break
					}
				}
				if (!jf) {
					i9._customOverlays.push(jd)
				}
			}
		});
		ja.addEventListener("removeoverlay", function(jf) {
			var jd = jf.target;
			if (jd instanceof d6) {
				delete i9._overlays[jd.hashCode];
				for (var je = 0; je < i9._overlayArray.length; je++) {
					if (i9._overlayArray[je] === jd) {
						i9._overlayArray.splice(je, 1);
						break
					}
				}
			} else {
				for (var je = 0, jc = i9._customOverlays.length; je < jc; je++) {
					if (i9._customOverlays[je] === jd) {
						i9._customOverlays.splice(je, 1);
						break
					}
				}
			}
		});
		ja.addEventListener("clearoverlays", function(je) {
			this.closeInfoWindow();
			this.closeSimpleInfoWindow();
			for (var jd in i9._overlays) {
				if (i9._overlays[jd]._config.enableMassClear) {
					this.removeOverlay(i9._overlays[jd])
				}
			}
			for (var jc = i9._customOverlays.length - 1; jc > 0; jc--) {
				if (i9._customOverlays[jc].enableMassClear !== false) {
					this.removeOverlay(i9._customOverlays[jc]);
					i9._customOverlays.splice(jc, 1)
				}
			}
		});
		ja.addEventListener("infowindowopen", function(jd) {
			var jc = this.infoWindow;
			if (jc) {
				es.hide(jc.popDom);
				es.hide(jc.shadowDom)
			}
		});

		function T() {
			if (this.getMapType() === "B_EARTH_MAP" || this._renderType === "webgl") {
				if (i9._zoomingOrMoving === false) {
					this._panes.markerMouseTarget.style.display = "none";
					i9._zoomingOrMoving = true
				}
			}
		}

		function e(je) {
			if (this.getMapType() === "B_EARTH_MAP" || this._renderType === "webgl") {
				if (i9._zoomingOrMoving === true) {
					this._panes.markerMouseTarget.style.display = "";
					i9._zoomingOrMoving = false;
					for (var jd = 0; jd < i9._overlayArray.length; jd++) {
						var jc = i9._overlayArray[jd];
						if (jc instanceof iP === true) {
							jc.draw(je)
						}
					}
				}
			}
		}
		ja.addEventListener("movestart", T);
		ja.addEventListener("moveend", e);
		ja.addEventListener("zoomstart", T);
		ja.addEventListener("zoomend", e);
		ja.addEventListener("animation_start", T);
		ja.addEventListener("animation_end", e);
		ja.addEventListener("displayoptions_changed", function(jc) {
			if (this._displayOptions.overlay === false) {
				this.temp.overlayDiv.style.display = "none"
			} else {
				this.temp.overlayDiv.style.display = ""
			}
		})
	};
	aF.prototype.draw = function(jc) {
		jc = jc || {};
		if (this.map.getMapType() === "B_EARTH_MAP") {
			for (var ja = 0; ja < this._overlayArray.length; ja++) {
				var T = this._overlayArray[ja];
				if (T instanceof hG === true) {
					continue
				}
				if (this._zoomingOrMoving) {
					if (T instanceof iP === true) {
						continue
					}
				}
				T.draw(jc)
			}
		} else {
			for (var ja = 0, i9 = this._overlayArray.length; ja < i9; ja++) {
				var T = this._overlayArray[ja];
				if (this._zoomingOrMoving && T instanceof iP === true) {
					continue
				}
				T.draw(jc)
			}
		}
		es.each(this._customOverlays, function(e) {
			e.draw(jc)
		});
		if (this.map.temp.infoWin) {
			this.map.temp.infoWin.setPosition(jc.center, jc.zoom)
		}
		if (this.map.getMapType() !== "B_EARTH_MAP" && this.map._renderType !== "webgl") {
			if (bo.DrawerSelector) {
				var jb = bo.DrawerSelector.getDrawer(this.map);
				jb.setPalette()
			}
		}
	};
	bo.register(function(e) {
		e._overlayMgr = new aF(e)
	});

	function hG(e) {
		d6.call(this);
		this._config = {
			strokeColor: "#000",
			strokeWeight: 2,
			strokeOpacity: 1,
			strokeStyle: "solid",
			dashArray: null,
			strokeLineCap: "round",
			strokeLineJoin: "round",
			enableMassClear: true,
			getParseTolerance: null,
			getParseCacheIndex: null,
			enableParse: true,
			enableEditing: false,
			mouseOverTolerance: 5,
			geodesic: false,
			clip: true,
			texture: null,
			textureSize: null,
			textureZoomWithMap: false,
			textureRepeat: true
		};
		this.setConfig(e);
		if (this._config.strokeOpacity < 0 || this._config.strokeOpacity > 1) {
			this._config.strokeOpacity = 1
		}
		if (this._config.fillOpacity < 0 || this._config.fillOpacity > 1) {
			this._config.fillOpacity = 1
		}
		if (this._config.strokeStyle !== "solid" && this._config.strokeStyle !== "dashed" && this._config.strokeStyle !== "dotted") {
			this._config.strokeStyle = "solid"
		}
		this.domElement = null;
		this._bounds = new ha();
		this.points = [];
		this.greatCirclePoints = [];
		this._parseCache = [];
		this._holesCache = [];
		this._parseCacheGL = [];
		this._parseCacheGLRaw = [];
		this._areaCacheGL = [];
		this._strokeStyleInfoForGL = [
			[]
		];
		this._fillStyleInfoForGL = "";
		this.vertexMarkers = [];
		this._temp = {}
	}
	hG.JOININDEX = {
		miter: 0,
		round: 1,
		bevel: 2
	};
	hG.CAPINDEX = {
		round: 0,
		butt: 1,
		square: 2
	};
	hG.inherits(d6, "Graph");
	hG.getGraphPoints = function(i) {
		var e = [];
		if (!i || i.length === 0) {
			return e
		}
		if (typeof i === "string") {
			var T = i.split(";");
			es.each(T, function(ja) {
				var i9 = ja.split(",");
				e.push(new cd(i9[0], i9[1]))
			})
		}
		if (i.constructor === Array && i.length > 0) {
			e = i
		}
		return e
	};
	hG.parseTolerance = {
		0: [0.09, 0.005, 0.0001, 0.00001],
		1: [9000, 500, 20, 1]
	};
	es.extend(hG.prototype, {
		initialize: function(e) {
			this.map = e;
			return null
		},
		draw: function() {},
		setPoints: function(e) {
			this._clearCache();
			this.points = hG.getGraphPoints(e)
				.slice(0);
			this._calcBounds()
		},
		setPathIn: function(e) {
			this.setPoints(e)
		},
		_calcBounds: function() {
			if (!this.points) {
				return
			}
			var e = this;
			e._bounds = new ha();
			if (!this.hasMultipleParts) {
				es.each(this.points, function(i) {
					e._bounds.extend(i)
				})
			} else {
				es.each(this.points, function(i) {
					es.each(i, function(T) {
						e._bounds.extend(T)
					})
				})
			}
		},
		getPoints: function() {
			return this.points
		},
		getPathIn: function() {
			return this.points
		},
		setPointAt: function(i, e) {
			if (!e || !this.points[i]) {
				return
			}
			this._clearCache();
			this.points[i] = new cd(e.lng, e.lat);
			this._calcBounds()
		},
		setPositionAt: function(i, e) {
			if (!e || !this.points[i]) {
				return
			}
			var T = ia.convertLL2MC(e);
			this.setPointAt(i, T)
		},
		setOptions: function(i) {
			i = i || {};
			for (var e in i) {
				if (i.hasOwnProperty(e)) {
					this._config[e] = i[e]
				}
			}
		},
		setStrokeColor: function(e) {
			this._config.strokeColor = e
		},
		getStrokeColor: function() {
			return this._config.strokeColor
		},
		setStrokeLineCap: function(e) {
			this._config.strokeLineCap = e
		},
		getStrokeLineCap: function() {
			return this._config.strokeLineCap
		},
		setStrokeLineJoin: function(e) {
			this._config.strokeLineJoin = e
		},
		getStrokeLineJoin: function() {
			return this._config.strokeLineJoin
		},
		setStrokeWeight: function(e) {
			if (e > 0) {
				this._config.strokeWeight = e
			}
		},
		getStrokeWeight: function() {
			return this._config.strokeWeight
		},
		setStrokeOpacity: function(e) {
			if (!e || e > 1 || e < 0) {
				return
			}
			this._config.strokeOpacity = e
		},
		getStrokeOpacity: function() {
			return this._config.strokeOpacity
		},
		setFillOpacity: function(e) {
			if (e > 1 || e < 0) {
				return
			}
			this._config.fillOpacity = e
		},
		getFillOpacity: function() {
			return this._config.fillOpacity
		},
		setStrokeStyle: function(e) {
			if (e !== "solid" && e !== "dashed" && e !== "dotted") {
				return
			}
			this._config.strokeStyle = e
		},
		getStrokeStyle: function() {
			return this._config.strokeStyle
		},
		setFillColor: function(e) {
			this._config.fillColor = e || ""
		},
		getFillColor: function() {
			return this._config.fillColor
		},
		getBoundsIn: function() {
			this._bounds.setMinMax();
			return this._bounds
		},
		getBounds: function() {
			var e = this.getBoundsIn();
			var i = new ha(ia.convertMC2LL(e.getSouthWest()), ia.convertMC2LL(e.getNorthEast()));
			i.setMinMax();
			return i
		},
		remove: function() {
			if (this.map) {
				this.map.removeEventListener("onmousemove", this._graphMouseEvent);
				this.map.removeEventListener("onclick", this._graphClickEvent)
			}
			d6.prototype.remove.call(this);
			this._clearCache();
			var e = new e7("onlineupdate");
			e.action = "remove";
			e.overlay = this;
			this.fire(e)
		},
		enableEditing: function() {
			if (this.points.length < 2) {
				return
			}
			this._config.enableEditing = true;
			var e = this;
			gi.load("poly", function() {
				e.addVertexs()
			}, true)
		},
		disableEditing: function() {
			this._config.enableEditing = false;
			var e = this;
			gi.load("poly", function() {
				e.clearVertexs()
			}, true)
		},
		getLength: function() {
			if (typeof this._length === "number") {
				return this._length
			}
			if (typeof this._config.totalLength === "number") {
				this._length = this._config.totalLength;
				return this._length
			}
			var T = 0;
			if (this.points.length <= 1) {
				this._length = 0;
				return T
			}
			for (var e = 0; e < this.points.length - 1; e++) {
				T += dW(this.points[e], this.points[e + 1])
			}
			this._length = T;
			return T
		},
		getParsedPoints: function() {
			var e = this._simplification(this.points);
			if (this.hasMultipleParts) {
				return e
			}
			return [e]
		},
		_simplification: function(je) {
			var e = this.map;
			var jd = this.getParseCacheIndex(e.getZoom());
			var jg;
			if (this._parseCache[jd]) {
				jg = this._parseCache[jd]
			} else {
				var jb = je;
				if (this.greatCirclePoints.length > 0) {
					jb = this.greatCirclePoints
				}
				var ja = e.config.coordType === 2 ? 1 : e.config.coordType;
				var jc = this.getParseTolerance(e.getZoom(), ja);
				if (!this.hasMultipleParts) {
					var jf = dp(jb, jc)
				} else {
					var jf = [];
					for (var T = 0; T < jb.length; T++) {
						var i9 = dp(jb[T], jc);
						jf.push(i9)
					}
				}
				jg = this._parseCache[jd] = jf
			}
			return jg
		},
		_clearCache: function() {
			this._length = null;
			this._parseCache.length = 0;
			this._parseCacheGL.length = 0;
			this._parseCacheGLRaw.length = 0;
			this._areaCacheGL.length = 0
		},
		canRenderDataBeMerged: function() {
			var e = this._config;
			if (e.texture) {
				return false
			}
			return true
		}
	});
	if (es.Browser.ie && document.namespaces && !document.namespaces.olv) {
		document.namespaces.add("olv", "urn:schemas-microsoft-com:vml")
	}

	function it(jb, i9, T) {
		if (!jb || !i9) {
			return
		}
		this.imageUrl = null;
		this.imageDom = null;
		if (typeof jb === "string") {
			this.imageUrl = jb
		} else {
			this.imageDom = jb;
			if (!this.imageDom.id) {
				this.imageDom.id = bo.getGUID("icon_dom_")
			}
		}
		this.size = i9;
		var ja = new h3(Math.floor(i9.width / 2), Math.floor(i9.height / 2));
		var i = {
			offset: ja,
			imageOffset: new h3(0, 0)
		};
		T = T || {};
		for (var e in T) {
			i[e] = T[e]
		}
		if (T.anchor) {
			i.offset = T.anchor
		}
		this.anchor = this.offset = i.offset;
		this.imageOffset = i.imageOffset;
		this.infoWindowOffset = T.infoWindowOffset || this.offset;
		this.printImageUrl = T.printImageUrl || "";
		this.imageSize = T.imageSize || this.size;
		this.srcSetObject = {};
		this.setImageSrcset(T.srcset || T.srcSet)
	}
	it.prototype.setImageUrl = function(e) {
		if (!e) {
			return
		}
		this.imageUrl = e;
		this._renderData = null
	};
	it.prototype.getCurrentImageUrl = function() {
		if (window.devicePixelRatio > 1 && this.srcSetObject["2x"]) {
			return this.srcSetObject["2x"]
		}
		return this.imageUrl
	};
	it.prototype.setPrintImageUrl = function(e) {
		if (!e) {
			return
		}
		this.printImageUrl = e
	};
	it.prototype.setSize = function(e) {
		if (!e) {
			return
		}
		this.size = new h3(e.width, e.height);
		this._renderData = null
	};
	it.prototype.setOffset = function(e) {
		if (!e) {
			return
		}
		this.anchor = this.offset = new h3(e.width, e.height);
		this._renderData = null
	};
	it.prototype.setAnchor = function(e) {
		this.setOffset(e)
	};
	it.prototype.setImageOffset = function(e) {
		if (!e) {
			return
		}
		this.imageOffset = new h3(e.width, e.height);
		this._renderData = null
	};
	it.prototype.setInfoWindowOffset = function(e) {
		if (!e) {
			return
		}
		this.infoWindowOffset = new h3(e.width, e.height)
	};
	it.prototype.setImageSize = function(e) {
		if (!e) {
			return
		}
		this.imageSize = new h3(e.width, e.height)
	};
	it.prototype.setImageSrcset = function(T) {
		var e = "";
		if (!T) {
			return
		}
		for (var i in T) {
			if (T.hasOwnProperty(i)) {
				this.srcSetObject[i] = T[i];
				e = T[i] + " " + i + ","
			}
		}
		this.srcSet = e
	};
	it.prototype.toString = function() {
		return "Icon"
	};
	it.prototype.generateRenderData = function(jb) {
		var T = this.offset;
		var e = this.size;
		var jd = this.imageOffset;
		var jc = [];
		jc.push(-T.width, T.height - e.height, 0);
		jc.push(e.width - T.width, T.height - e.height, 0);
		jc.push(e.width - T.width, T.height, 0);
		jc.push(-T.width, T.height - e.height, 0);
		jc.push(e.width - T.width, T.height, 0);
		jc.push(-T.width, T.height, 0);
		if (jb !== 0) {
			for (var ja = 0; ja < jc.length; ja += 3) {
				var i9 = vec2.fromValues(jc[ja], jc[ja + 1]);
				vec2.rotate(i9, i9, [0, 0], hH(-jb));
				jc[ja] = i9[0];
				jc[ja + 1] = i9[1]
			}
		}
		return {
			vertex: jc
		}
	};
	it.prototype.getRenderData = function(e) {
		this._renderData = this.generateRenderData(e);
		return this._renderData
	};

	function dz(T, i) {
		es.BaseClass.call(this);
		this.content = T;
		this.map = null;
		this._config = {
			width: 0,
			height: 0,
			maxWidth: 600,
			offset: new h3(0, 0),
			title: "",
			maxContent: "",
			enableMaximize: false,
			enableAutoPan: true,
			enableCloseOnClick: true,
			margin: [10, 10, 40, 10],
			collisions: [
				[10, 10],
				[10, 10],
				[10, 10],
				[10, 10]
			],
			ifMaxScene: false,
			onClosing: function() {
				return true
			}
		};
		this.setConfig(i);
		if (this._config.width !== 0) {
			if (this._config.width < 220) {
				this._config.width = 220
			}
			if (this._config.width > 730) {
				this._config.width = 730
			}
		}
		if (this._config.height !== 0) {
			if (this._config.height < 60) {
				this._config.height = 60
			}
			if (this._config.height > 650) {
				this._config.height = 650
			}
		}
		if (this._config.maxWidth !== 0) {
			if (this._config.maxWidth < 220) {
				this._config.maxWidth = 220
			}
			if (this._config.maxWidth > 730) {
				this._config.maxWidth = 730
			}
		}
		this.isWinMax = false;
		this.IMG_PATH = w.imgPath;
		this.overlay = null;
		var e = this;
		gi.load("infowindow", function() {
			e._draw()
		})
	}
	dz.inherits(es.BaseClass, "InfoWindow");
	es.extend(dz.prototype, {
		setWidth: function(e) {
			e = e * 1;
			if (!e && e !== 0 || isNaN(e) || e < 0) {
				return
			}
			if (e !== 0) {
				if (e < 220) {
					e = 220
				}
				if (e > 730) {
					e = 730
				}
			}
			this._config.width = e
		},
		setHeight: function(e) {
			e = e * 1;
			if (!e && e !== 0 || isNaN(e) || e < 0) {
				return
			}
			if (e !== 0) {
				if (e < 60) {
					e = 60
				}
				if (e > 650) {
					e = 650
				}
			}
			this._config.height = e
		},
		setMaxWidth: function(e) {
			e = e * 1;
			if (!e && e !== 0 || isNaN(e) || e < 0) {
				return
			}
			if (e !== 0) {
				if (e < 220) {
					e = 220
				}
				if (e > 730) {
					e = 730
				}
			}
			this._config.maxWidth = e
		},
		setTitle: function(e) {
			this._config.title = e || ""
		},
		setContent: function(e) {
			this.content = e || ""
		},
		getContent: function() {
			return this.content
		},
		setMaxContent: function(e) {
			this._config.maxContent = e || ""
		},
		redraw: function() {},
		enableAutoPan: function() {
			this._config.enableAutoPan = true
		},
		disableAutoPan: function() {
			this._config.enableAutoPan = false
		},
		enableCloseOnClick: function() {
			this._config.enableCloseOnClick = true
		},
		disableCloseOnClick: function() {
			this._config.enableCloseOnClick = false
		},
		enableMaximize: function() {
			this._config.enableMaximize = true
		},
		disableMaximize: function() {
			this._config.enableMaximize = false
		},
		show: function() {
			this._visible = true
		},
		hide: function() {
			this._visible = false
		},
		close: function() {
			this.hide()
		},
		dispose: function() {
			es.BaseClass.prototype.decontrol.call(this)
		},
		maximize: function() {
			this.isWinMax = true
		},
		restore: function() {
			this.isWinMax = false
		},
		setConfig: function(i) {
			if (!i) {
				return
			}
			for (var e in i) {
				if (typeof(this._config[e]) === typeof(i[e])) {
					this._config[e] = i[e]
				}
			}
		},
		isVisible: function() {
			return this.isOpen()
		},
		isOpen: function() {
			return false
		},
		getPointIn: function() {
			if (this.overlay && this.overlay.getPoint) {
				return this.overlay.getPoint()
			}
		},
		getTitle: function() {
			return this._config.title || ""
		},
		getPosition: function() {
			return this.latLng
		},
		getPoint: function() {
			var e = this.getPointIn();
			if (this.map.config.coordType === BMAP_COORD_GCJ02) {
				var i = ia.convertMC2LL(e);
				return ec(i)
			}
			return ia.convertMC2LL(e)
		},
		getOffset: function() {
			return this._config.offset
		},
		dispose: function() {
			es.BaseClass.prototype.decontrol.call(this)
		},
		toString: function() {
			return "InfoWindow"
		}
	});
	gV.prototype.openInfoWindow = function(T, e) {
		T.latLng = new b8(e.lat, e.lng);
		var i = ia.convertLL2MC(e);
		this.openInfoWindowIn(T, i)
	};
	gV.prototype.closeInfoWindow = function() {
		var e = this.temp.infoWin || this.temp._infoWin;
		if (e && e.overlay) {
			e.overlay.closeInfoWindow()
		}
	};
	gV.prototype.openInfoWindowIn = function(i9, e) {
		if (!i9 || i9.toString() !== "InfoWindow" || !e || e.toString() !== "Point") {
			return
		}
		var i = this.temp;
		if (!i.marker) {
			var T = new it(w.imgPath + "blank.gif", {
				width: 1,
				height: 1
			});
			i.marker = new iP(e, {
				icon: T,
				width: 1,
				height: 1,
				offset: new h3(0, 0),
				infoWindowOffset: new h3(0, 0),
				clickable: false
			});
			i.marker._fromMap = 1
		} else {
			i.marker.setPoint(e)
		}
		this.addOverlay(i.marker);
		i.marker.show();
		i.marker.openInfoWindow(i9)
	};
	d6.prototype.openInfoWindow = function(e) {
		if (this.map) {
			this.map.closeInfoWindow();
			e._visible = true;
			this.map.temp._infoWin = e;
			e.overlay = this;
			es.BaseClass.call(e, e.hashCode)
		}
	};
	d6.prototype.closeInfoWindow = function() {
		if (this.map && this.map.temp._infoWin) {
			this.map.temp._infoWin._visible = false;
			this.map.temp._infoWin.decontrol();
			this.map.temp._infoWin = null
		}
	};

	function a4(T, i) {
		d6.call(this);
		this.content = T;
		this.map = null;
		this.domElement = null;
		this._config = {
			width: 0,
			offset: new h3(0, 0),
			styles: {
				backgroundColor: "#fff",
				border: "1px solid #f00",
				padding: "1px",
				whiteSpace: "nowrap",
				fontSize: "12px",
				zIndex: "80",
				MozUserSelect: "none"
			},
			point: null,
			enableMassClear: true
		};
		i = i || {};
		this.setConfig(i);
		if (this._config.width < 0) {
			this._config.width = 0
		}
		this.point = this._config.point;
		var e = this;
		gi.load("marker", function() {
			e._draw()
		})
	}
	a4.inherits(d6, "Label");
	es.extend(a4.prototype, {
		setPoint: function(e) {
			if (e && e.toString() === "Point" && !this.getMarker()) {
				if (this.coordType === BMAP_COORD_GCJ02) {
					var i = hA(e, 3);
					this.point = this._config.point = new cd(i.lng, i.lat)
				} else {
					this.point = this._config.point = new cd(e.lng, e.lat)
				}
			}
		},
		setContent: function(e) {
			this.content = e
		},
		getContent: function(e) {
			return this.content
		},
		setOpacity: function(e) {
			if (e >= 0 && e <= 1) {
				this._config.opacity = e
			}
		},
		setOffset: function(e) {
			if (!e || e.toString() !== "Size") {
				return
			}
			this._config.offset = new h3(e.width, e.height)
		},
		getOffset: function() {
			return this._config.offset
		},
		setStyle: function(e) {
			e = e || {};
			this._config.styles = es.extend(this._config.styles, e)
		},
		setStyles: function(e) {
			this.setStyle(e)
		},
		setTitle: function(e) {
			this._config.title = e || ""
		},
		getTitle: function() {
			return this._config.title
		},
		setMarker: function(e) {
			if (this._marker && this._marker !== e) {
				this._marker._config.label = null
			}
			this._marker = e;
			if (e) {
				this.point = this._config.point = e.getPoint()
			} else {
				this.point = this._config.point = null
			}
		},
		getMarker: function() {
			return this._marker || null
		},
		getPositionIn: function() {
			return this.getPoint()
		},
	});

	function g3(T, i) {
		var i9 = {};
		for (var e in i) {
			if (i.hasOwnProperty(e)) {
				if (e === "position") {
					i9.point = ia.convertLL2MC(i[e]);
					this.latLng = new b8(i[e]["lat"], i[e]["lng"])
				} else {
					i9[e] = i[e]
				}
			}
		}
		a4.call(this, T, i9)
	}
	g3.inherits(a4, "LabelOut");
	es.extend(g3.prototype, {
		toString: function() {
			return "Label"
		},
		setPosition: function(e) {
			this.latLng = new b8(e.lat, e.lng);
			var i = ia.convertLL2MC(e);
			this.setPoint(i)
		},
		getPosition: function() {
			return this.latLng
		}
	});
	window.BMAP_ANIMATION_DROP = 1;
	window.BMAP_ANIMATION_BOUNCE = 2;

	function iP(e, i) {
		d6.call(this);
		i = i || {};
		this.point = e;
		this._rotation = 0;
		this.map = null;
		this._animation = null;
		this.domElement = null;
		this.iconDom = null;
		this.infoWindowDom = null;
		this.siblingElement = null;
		this.textureCoord = null;
		this.textureCoordGLMap = null;
		this.collisionDetectionFailed = false;
		this._config = {
			offset: new h3(0, 0),
			opacity: 1,
			icon: null,
			title: "",
			infoWindow: null,
			label: null,
			baseZIndex: 0,
			clickable: true,
			zIndexFixed: false,
			isTop: false,
			enableMassClear: true,
			enableDragging: false,
			raiseOnDrag: false,
			restrictDraggingArea: false,
			startAnimation: "",
			enableCollisionDetection: false,
			rank: 0,
			enableDraggingMap: false
		};
		this.setConfig(i);
		if (!i.icon) {
			this._config.icon = new it(w.imgPath + "marker_red.png", new h3(23, 25), {
				offset: new h3(10, 25),
				infoWindowOffset: new h3(10, 0)
			})
		}
		this._isDragging = false;
		var T = this;
		gi.load("marker", function() {
			T._draw()
		})
	}
	iP.TOP_ZINDEX = aH.getZIndex(-90) + 1000000;
	iP.DRAG_ZINDEX = iP.TOP_ZINDEX + 1000000;
	iP._injectMethond = function(e) {
		es.extend(iP.prototype, e)
	};
	iP.inherits(d6, "Marker");
	es.extend(iP.prototype, {
		toString: function() {
			return "Marker"
		},
		setIcon: function(e) {
			if (e) {
				this._config.icon = e;
				this.textureCoord = this.textureCoordGLMap = null
			}
		},
		getIcon: function() {
			return this._config.icon
		},
		setLabel: function(e) {
			if (!(e instanceof a4)) {
				return
			}
			this._config.label = e;
			e._config.enableMassClear = this._config.enableMassClear;
			e.setPoint(this.point)
		},
		getLabel: function() {
			return this._config.label
		},
		enableDragging: function() {
			this._config.enableDragging = true
		},
		disableDragging: function() {
			this._config.enableDragging = false
		},
		setPoint: function(e) {
			if (e) {
				if (this.map.config.coordType === BMAP_COORD_GCJ02) {
					var i = hA(e, 3);
					this.point = this._config.point = new cd(i.lng, i.lat);
					this.latLng = ia.convertMC2LL(i)
				} else {
					this.point = this._config.point = new cd(e.lng, e.lat);
					this.latLng = ia.convertMC2LL(e)
				}
			}
		},
		setPositionIn: function(e) {
			this.setPoint(e)
		},
		getPositionIn: function() {
			return this.getPoint()
		},
		setTop: function(i, e) {
			this._config.isTop = !!i;
			if (i) {
				this._addi = e || 0
			}
		},
		setTitle: function(e) {
			this._config.title = e || ""
		},
		getTitle: function() {
			return this._config.title
		},
		setOffset: function(e) {
			if (e) {
				this._config.offset = e
			}
		},
		getOffset: function() {
			return this._config.offset
		},
		setAnimation: function(e) {
			this._animation = e
		},
		setRank: function(e) {
			this._config.rank = e
		},
		getRank: function() {
			return this._config.rank
		},
		setRotation: function(e) {
			while (e < 0) {
				e += 360
			}
			this._rotation = e % 360
		},
		getRotation: function() {
			return this._rotation
		}
	});

	function r(e, T) {
		this.latLng = new b8(e.lat, e.lng);
		var i = ia.convertLL2MC(e);
		iP.call(this, i, T)
	}
	r.inherits(iP, "MarkerOut");
	es.extend(r.prototype, {
		toString: function() {
			return "Marker"
		},
		setPosition: function(e) {
			this.latLng = new b8(e.lat, e.lng);
			var i = ia.convertLL2MC(e);
			this.setPositionIn(i)
		},
		getPosition: function() {
			return this.latLng
		},
	});
	window.BMAP_SHAPE_CIRCLE = 1;
	window.BMAP_SHAPE_RECT = 2;

	function dK(i, e, T) {
		d6.call(this, e, T);
		this.domElement = null;
		this.point = i;
		T = T || {};
		this._config = {};
		this._config.height = e || 0;
		this._config.size = typeof T.size === "number" ? T.size : 50;
		this._config.fillOpacity = typeof T.fillOpacity === "number" ? T.fillOpacity : 0.8;
		this._config.shape = typeof T.shape === "number" ? T.shape : 1;
		bV(this._config.fillOpacity, 0, 1);
		if (T.fillColor === "") {
			this._config.fillColor = ""
		} else {
			this._config.fillColor = T.fillColor ? T.fillColor : "#f00"
		}
		this._config.icon = T.icon instanceof it ? T.icon : "";
		this._config.enableMassClear = T.enableMassClear || true;
		var i9 = this;
		gi.load("marker", function() {
			i9._draw()
		})
	}
	dK.inherits(d6, "Marker3D");
	es.extend(dK.prototype, {
		setPoint: function(e) {
			if (this.map.config.coordType === BMAP_COORD_GCJ02) {
				var T = hA(e, 3);
				this.point = this._config.point = new cd(T.lng, T.lat);
				this.latLng = ia.convertMC2LL(T)
			} else {
				this.point = this._config.point = new cd(e.lng, e.lat);
				this.latLng = ia.convertMC2LL(e)
			}
			var i = new e7("onstatus_change");
			i.overlay = this;
			i.action = "setPoint";
			this.fire(i)
		},
		setPositionIn: function(e) {
			this.setPoint(e)
		},
		getPositionIn: function() {
			return this.getPoint()
		},
		setDomAttribute: function(i, T) {
			var e = new e7("onlineupdate");
			e.overlay = this;
			this.dispatchEvent(e)
		}
	});

	function dH(i, e, i9) {
		this.latLng = new b8(i.lat, i.lng);
		var T = ia.convertLL2MC(i);
		dK.call(this, T, e, i9)
	}
	dH.inherits(dK, "Marker3d");
	es.extend(dH.prototype, {
		toString: function() {
			return "Marker3D"
		},
		setHeight: function(e) {
			this._config.height = Number(e);
			this.draw();
			var i = new e7("onlineupdate");
			i.overlay = this;
			this.dispatchEvent(i)
		},
		getHeight: function() {
			return this._config.height
		},
		setFillOpacity: function(e) {
			if (e > 1 || e < 0) {
				return
			}
			this._config.fillOpacity = e;
			this.setDomAttribute("fillopacity", e)
		},
		getFillOpacity: function() {
			return this._config.fillOpacity
		},
		setFillColor: function(e) {
			this._config.fillColor = e || "";
			this.setDomAttribute("fillcolor", e)
		},
		getFillColor: function() {
			return this._config.fillColor
		},
		setIcon: function(i) {
			if (!i || !this.map) {
				return
			}
			this._config.icon = i;
			if (this._config.icon) {
				var e = this._config.icon.getCurrentImageUrl();
				var i9 = i.getCurrentImageUrl() !== e;
				this._config.icon = i;
				this.textureCoord = this.textureCoordGLMap = null;
				this.draw();
				var T = new e7("onstatus_change");
				T.overlay = this;
				T.action = "setIcon";
				T.imageUrlChanged = i9;
				this.fire(T)
			}
		},
		getIcon: function() {
			return this._config.icon
		},
		setPosition: function(e) {
			this.latLng = new b8(e.lat, e.lng);
			var i = ia.convertLL2MC(e);
			this.setPositionIn(i)
		},
		getPosition: function() {
			var e = this.getPositionIn();
			return ia.convertMC2LL(e)
		}
	});

	function fh(T, e) {
		hG.call(this, e);
		this._normalizedBounds = new ha();
		this.setPoints(T);
		var i = this;
		gi.load("poly", function() {
			i._draw()
		})
	}
	fh.inherits(hG, "Polyline");
	es.extend(fh.prototype, {
		getBoundsIn: function(e) {
			if (!e) {
				this._bounds.setMinMax();
				return this._bounds
			}
			this._normalizedBounds.setMinMax();
			return this._normalizedBounds
		},
		setPoints: function(T) {
			this._clearCache();
			this.points = hG.getGraphPoints(T)
				.slice(0);
			if (this._config.geodesic === true) {
				this.greatCirclePoints.length = 0;
				for (var e = 0; e < this.points.length - 1; e++) {
					this.calcGreatCirclePoints(this.points[e], this.points[e + 1])
				}
			}
			this._calcBounds()
		},
		_calcBounds: function() {
			if (!this.points) {
				return
			}
			var e = this;
			e._bounds.setNorthEast(null);
			e._bounds.setSouthWest(null);
			if (e.greatCirclePoints && e.greatCirclePoints.length > 0) {
				es.each(e.greatCirclePoints, function(i) {
					e._bounds.extend(i)
				})
			} else {
				es.each(e.points, function(i) {
					e._bounds.extend(i)
				})
			}
			e._normalizedBounds.setSouthWest(e._bounds.getSouthWest());
			e._normalizedBounds.setNorthEast(e._bounds.getNorthEast());
			if (e._normalizedBounds.sw.lng < -gV.WORLD_SIZE_MC_HALF || e._normalizedBounds.ne.lng > gV.WORLD_SIZE_MC_HALF) {
				e._normalizedBounds.sw.lng = -gV.WORLD_SIZE_MC_HALF;
				e._normalizedBounds.ne.lng = gV.WORLD_SIZE_MC_HALF
			}
		},
		calcGreatCirclePoints: function(i9, T) {
			var jb = i9.latLng;
			var ja = T.latLng;
			if (jb.equals(ja)) {
				return
			}
			var e = ia.getDistance(hH(jb.lng), hH(jb.lat), hH(ja.lng), hH(ja.lat));
			if (e < 250000) {
				return
			}
			var jf = Math.round(e / 150000);
			var jj = this.calcAngularDistance(jb, ja);
			this.greatCirclePoints.push(i9);
			var ji = jb.lng;
			var jh = i9;
			for (var jc = 0; jc < jf; jc++) {
				var je = this.calcMiddlePoint(jb, ja, jc / jf, jj);
				var jg = ia.convertLL2MC(je);
				var jd = jg.lng;
				var jk = dW(jg, jh);
				if (jk > 30037726) {
					if (jg.lng < jh.lng) {
						jg.lng += gV.WORLD_SIZE_MC
					} else {
						jg.lng -= gV.WORLD_SIZE_MC
					}
				}
				this.greatCirclePoints.push(jg);
				jh = jg
			}
			var jk = dW(T, jh);
			if (jk > 30037726) {
				if (T.lng < jh.lng) {
					T.lng += gV.WORLD_SIZE_MC
				} else {
					T.lng -= gV.WORLD_SIZE_MC
				}
			}
			this.greatCirclePoints.push(T)
		},
		calcMiddlePoint: function(jg, jf, jh, jl) {
			var ja = jg.lat;
			var i9 = jf.lat;
			var jk = jg.lng;
			var ji = jf.lng;
			var jm = hH(ja);
			var jj = hH(i9);
			var i = hH(jk);
			var e = hH(ji);
			var jo = Math.sin((1 - jh) * jl) / Math.sin(jl);
			var jn = Math.sin(jh * jl) / Math.sin(jl);
			var jd = jo * Math.cos(jm) * Math.cos(i) + jn * Math.cos(jj) * Math.cos(e);
			var jc = jo * Math.cos(jm) * Math.sin(i) + jn * Math.cos(jj) * Math.sin(e);
			var jb = jo * Math.sin(jm) + jn * Math.sin(jj);
			var T = Math.atan2(jb, Math.sqrt(Math.pow(jd, 2) + Math.pow(jc, 2)));
			var je = Math.atan2(jc, jd);
			return new cd(eD(je), eD(T))
		},
		calcAngularDistance: function(ja, i) {
			var jb = hH(ja.lat);
			var i9 = hH(i.lat);
			var T = hH(ja.lng);
			var e = hH(i.lng);
			return Math.acos(Math.sin(jb) * Math.sin(i9) + Math.cos(jb) * Math.cos(i9) * Math.cos(Math.abs(e - T)))
		}
	});

	function bc(ja, e) {
		if (!ja || ja.length === 0) {
			return
		}
		var i9 = [];
		for (var T = 0; T < ja.length; T++) {
			i9[T] = ia.convertLL2MC(ja[T])
		}
		fh.call(this, i9, e)
	}
	bc.inherits(fh, "PolylineOut");
	es.extend(bc.prototype, {
		toString: function() {
			return "Polyline"
		},
		setPath: function(i9) {
			if (!i9 || i9.length === 0) {
				return
			}
			var T = [];
			for (var e = 0; e < i9.length; e++) {
				T[e] = ia.convertLL2MC(i9[e])
			}
			this.setPathIn(T)
		},
		getPath: function() {
			var e = this.getPathIn();
			if (!e || e.length === 0) {
				return []
			}
			var i9 = [];
			for (var T = 0; T < e.length; T++) {
				i9[T] = ia.convertMC2LL(e[T])
			}
			return i9
		},
		getBounds: function(i) {
			var e = this.getBoundsIn(i);
			var T = new ha(ia.convertMC2LL(e.getSouthWest()), ia.convertMC2LL(e.getNorthEast()));
			return T
		}
	});

	function f6(T, i9, e) {
		hG.call(this, e);
		this._normalizedBounds = new ha();
		this._cps = i9;
		this._path = T;
		this.setPoints(T);
		var i = this;
		gi.load("poly", function() {
			i._draw()
		})
	}
	f6.inherits(fh, "BezierCurve");
	es.extend(f6.prototype, {
		getBoundsIn: function(e) {
			if (!e) {
				this._bounds.setMinMax();
				return this._bounds
			}
			this._normalizedBounds.setMinMax();
			return this._normalizedBounds
		},
		setPoints: function(e) {
			this._clearCache();
			this.points = hG.getGraphPoints(e)
				.slice(0);
			this.points = this.calcBezierPoints(this.points, this._cps);
			this._calcBounds()
		},
		_calcBounds: function() {
			if (!this.points) {
				return
			}
			var e = this;
			e._bounds.setNorthEast(null);
			e._bounds.setSouthWest(null);
			if (e.greatCirclePoints && e.greatCirclePoints.length > 0) {
				es.each(e.greatCirclePoints, function(i) {
					e._bounds.extend(i)
				})
			} else {
				es.each(e.points, function(i) {
					e._bounds.extend(i)
				})
			}
			e._normalizedBounds.setSouthWest(e._bounds.getSouthWest());
			e._normalizedBounds.setNorthEast(e._bounds.getNorthEast());
			if (e._normalizedBounds.sw.lng < -gV.WORLD_SIZE_MC_HALF || e._normalizedBounds.ne.lng > gV.WORLD_SIZE_MC_HALF) {
				e._normalizedBounds.sw.lng = -gV.WORLD_SIZE_MC_HALF;
				e._normalizedBounds.ne.lng = gV.WORLD_SIZE_MC_HALF
			}
		},
		getPathIn: function() {
			return this._path
		},
		setPathIn: function(e) {
			this._path = e;
			this.setPoints(e)
		},
		getCpsIn: function() {
			return this._cps
		},
		setCpsIn: function(e) {
			this._cps = e;
			this.setPoints(this._path)
		},
		calcBezierPoints: function(i9, jb) {
			var T = [];
			for (var e = 0; e < i9.length - 1; e++) {
				var ja = [i9[e], jb[e][0], jb[e][1], i9[e + 1]];
				T = T.concat((this.bezierbetweenTwoP(ja)))
			}
			return T
		},
		bezierbetweenTwoP: function(jb) {
			var T = 100;
			var ja = 1 / T;
			var e = [];
			for (var i9 = 0; i9 < T; i9++) {
				e.push(this.getPointOnCubicBezier(jb, i9 * ja))
			}
			return e
		},
		getPointOnCubicBezier: function(jc, jg) {
			var i;
			var jb;
			var i9;
			var jh;
			var ja;
			var T;
			var jf;
			var e;
			var je;
			var jd;
			i9 = 3 * (jc[1].lng - jc[0].lng);
			jb = 3 * (jc[2].lng - jc[1].lng) - i9;
			i = jc[3].lng - jc[0].lng - i9 - jb;
			T = 3 * (jc[1].lat - jc[0].lat);
			ja = 3 * (jc[2].lat - jc[1].lat) - T;
			jh = jc[3].lat - jc[0].lat - T - ja;
			jf = jg * jg;
			e = jf * jg;
			je = (i * e) + (jb * jf) + (i9 * jg) + jc[0].lng;
			jd = (jh * e) + (ja * jf) + (T * jg) + jc[0].lat;
			return new cd(je, jd)
		}
	});

	function cl(ja, jc, e) {
		if (!ja || ja.length === 0) {
			return
		}
		this.userPath = ja;
		this.userCps = jc;
		var i9 = [];
		for (var T = 0; T < ja.length; T++) {
			i9[T] = ia.convertLL2MC(ja[T])
		}
		if (!jc || jc.length === 0) {
			return
		}
		var jb = [];
		for (var T = 0; T < jc.length; T++) {
			jb[T] = [];
			jb[T][0] = ia.convertLL2MC(jc[T][0]);
			if (jc[T][1]) {
				jb[T][1] = ia.convertLL2MC(jc[T][1])
			} else {
				jb[T][1] = ia.convertLL2MC(jc[T][0])
			}
		}
		f6.call(this, i9, jb, e)
	}
	cl.inherits(f6, "BezierCurveOut");
	es.extend(cl.prototype, {
		toString: function() {
			return "BezierCurve"
		},
		setPath: function(i9) {
			if (!i9 || i9.length === 0) {
				return
			}
			this.userPath = i9;
			var T = [];
			for (var e = 0; e < i9.length; e++) {
				T[e] = ia.convertLL2MC(i9[e])
			}
			this.setPathIn(T)
		},
		getPath: function() {
			return this.userPath;
			var e = this.getPathIn();
			if (!e || e.length === 0) {
				return []
			}
			var i9 = [];
			for (var T = 0; T < e.length; T++) {
				i9[T] = ia.convertMC2LL(e[T])
			}
			return i9
		},
		getControlPoints: function() {
			return this.userCps;
			var e = this.getCpsIn();
			if (!e || e.length === 0) {
				return []
			}
			var i9 = [];
			for (var T = 0; T < e.length; T++) {
				i9[T] = [];
				i9[T][0] = ia.convertMC2LL(e[T][0]);
				i9[T][1] = ia.convertMC2LL(e[T][1])
			}
			return i9
		},
		setControlPoints: function(i9) {
			if (!i9 || i9.length === 0) {
				return
			}
			this.userCps = i9;
			var T = [];
			for (var e = 0; e < i9.length; e++) {
				T[e] = [];
				T[e][0] = ia.convertLL2MC(i9[e][0]);
				if (i9[e][1]) {
					T[e][1] = ia.convertLL2MC(i9[e][1])
				} else {
					T[e][1] = ia.convertLL2MC(i9[e][0])
				}
			}
			this.setCpsIn(T)
		},
		getBounds: function(i) {
			var e = this.getBoundsIn(i);
			var T = new ha(ia.convertMC2LL(e.getSouthWest()), ia.convertMC2LL(e.getNorthEast()));
			return T
		}
	});

	function dQ(e, T) {
		hG.call(this, T);
		this._normalizedBounds = new ha();
		this.setPoints(e);
		var i = this;
		gi.load("poly", function() {
			i._draw()
		})
	}
	dQ.inherits(fh, "PolylineMultipart");
	es.extend(dQ.prototype, {
		setPoints: function(e) {
			if (!e) {
				return
			}
			this._clearCache();
			this.points = this._unifyArgs(e);
			this._calcBounds()
		},
		_unifyArgs: function(T) {
			var e = [];
			var i = [];
			if (T.constructor === Array) {
				if (T[0].constructor === cd) {
					i.push(T)
				} else {
					i = T
				}
			} else {
				if (typeof T === "string") {
					i.push(T)
				}
			}
			es.each(i, function(i9) {
				e.push(hG.getGraphPoints(i9))
			});
			return e
		},
		setPointAt: function(i, e, T) {
			T = T || 0;
			if (!e || !this.points[T] || !this.points[T][i]) {
				return
			}
			this._clearCache();
			this.points[T][i] = new cd(e.lng, e.lat);
			this._calcBounds()
		},
		getBoundsIn: function(e) {
			if (!e) {
				this._bounds.setMinMax();
				return this._bounds
			}
			this._normalizedBounds.setMinMax();
			return this._normalizedBounds
		},
		_calcBounds: function() {
			if (!this.points) {
				return
			}
			var e = this;
			e._bounds.setNorthEast(null);
			e._bounds.setSouthWest(null);
			if (e.greatCirclePoints && e.greatCirclePoints.length > 0) {
				es.each(e.greatCirclePoints, function(i) {
					e._bounds.extend(i)
				})
			} else {
				es.each(e.points, function(i) {
					es.each(i, function(T) {
						e._bounds.extend(T)
					})
				})
			}
			e._normalizedBounds.setSouthWest(e._bounds.getSouthWest());
			e._normalizedBounds.setNorthEast(e._bounds.getNorthEast());
			if (e._normalizedBounds.sw.lng < -gV.WORLD_SIZE_MC_HALF || e._normalizedBounds.ne.lng > gV.WORLD_SIZE_MC_HALF) {
				e._normalizedBounds.sw.lng = -gV.WORLD_SIZE_MC_HALF;
				e._normalizedBounds.ne.lng = gV.WORLD_SIZE_MC_HALF
			}
		}
	});

	function gw(T, e) {
		hG.call(this, e);
		e = e || {};
		if (typeof e.fillOpacity === "number") {
			this._config.fillOpacity = e.fillOpacity
		} else {
			this._config.fillOpacity = 0.6
		}
		bV(this._config.fillOpacity, 0, 1);
		if (e.fillColor === "") {
			this._config.fillColor = ""
		} else {
			this._config.fillColor = e.fillColor ? e.fillColor : "#fff"
		}
		this._parseFillCacheWebGL = [];
		this.setPoints(T, e);
		var i = this;
		gi.load("poly", function() {
			i._draw()
		})
	}
	gw.inherits(hG, "Polygon");
	es.extend(gw.prototype, {
		setPoints: function(jb) {
			var i9 = [];
			if (typeof jb === "string" || jb.length === 1 || jb[0] instanceof cd || jb[0] instanceof b8 || this instanceof gd || jb.length === 0) {
				if (jb.length === 1) {
					jb = jb[0]
				}
				var e = this._processSinglePointArray(jb);
				this._userPoints = e.userPoints;
				i9 = e.innerPoints;
				this.hasMultipleParts = false
			} else {
				this._userPoints = [];
				for (var ja = 0; ja < jb.length; ja++) {
					var T = this._processSinglePointArray(jb[ja]);
					this._userPoints.push(T.userPoints);
					i9.push(T.innerPoints)
				}
				this.hasMultipleParts = true
			}
			hG.prototype.setPoints.call(this, i9)
		},
		setPathIn: function(e) {
			this.setPoints(e)
		},
		_processSinglePointArray: function(e) {
			var i = hG.getGraphPoints(e)
				.slice(0);
			innerPoints = i.slice(0);
			if (innerPoints.length > 1 && !innerPoints[0].equals(innerPoints[innerPoints.length - 1])) {
				innerPoints.push(new cd(innerPoints[0].lng, innerPoints[0].lat))
			}
			return {
				userPoints: i,
				innerPoints: innerPoints
			}
		},
		setPointAt: function(i, e) {
			if (!this._userPoints[i]) {
				return
			}
			this._clearCache();
			this._userPoints[i] = new cd(e.lng, e.lat);
			this.points[i] = new cd(e.lng, e.lat);
			if (i === 0 && !this.points[0].equals(this.points[this.points.length - 1])) {
				this.points[this.points.length - 1] = new cd(e.lng, e.lat)
			}
			this._calcBounds()
		},
		setPositionAt: function(i, e) {
			if (!this._userPoints[i]) {
				return
			}
			var T = ia.convertLL2MC(e);
			this.setPointAt(i, T)
		},
		getPoints: function() {
			var e = this._userPoints;
			if (e.length === 0) {
				e = this.points
			}
			return e
		},
		getPathIn: function() {
			return this.getPoints()
		}
	});

	function hM(je, jb) {
		if (!je || je.length === 0) {
			return
		}
		var jd = [];
		if (typeof je === "string" || je[0] instanceof cd || je[0] instanceof b8) {
			var e = this._processSinglePointArray(je);
			for (var jc = 0; jc < e.innerPoints.length; jc++) {
				jd[jc] = ia.convertLL2MC(e.innerPoints[jc])
			}
		} else {
			for (var jc = 0; jc < je.length; jc++) {
				var T = this._processSinglePointArray(je[jc]);
				var ja = [];
				for (var i9 = 0; i9 < T.innerPoints.length; i9++) {
					ja[i9] = ia.convertLL2MC(T.innerPoints[i9])
				}
				jd.push(ja)
			}
		}
		gw.call(this, jd, jb)
	}
	hM.inherits(gw, "PolygonOut");
	es.extend(hM.prototype, {
		toString: function() {
			return "Polygon"
		},
		setPath: function(i9) {
			if (!i9 || i9.length === 0) {
				return
			}
			i9 = hG.getGraphPoints(i9);
			var T = [];
			for (var e = 0; e < i9.length; e++) {
				T[e] = ia.convertLL2MC(i9[e])
			}
			this.setPathIn(T)
		},
		getPath: function() {
			var e = this.getPathIn();
			if (!e || e.length === 0) {
				return []
			}
			var i9 = [];
			for (var T = 0; T < e.length; T++) {
				i9[T] = ia.convertMC2LL(e[T])
			}
			return i9
		}
	});

	function gd(i, e, T) {
		this.point = i;
		this.radius = Math.abs(e);
		gw.call(this, [], T)
	}
	gd.parseTolerance = {
		0: [0.01, 0.0001, 0.00001, 0.000004],
		1: [1000, 10, 1, 0.4]
	};
	gd.inherits(gw, "Circle");
	es.extend(gd.prototype, {
		initialize: function(e) {
			this.map = e;
			this.points = this._getPerimeterPoints(this.point, this.radius);
			this._calcBounds();
			return null
		},
		getPoint: function() {
			return this.point
		},
		setPoint: function(e) {
			if (!e) {
				return
			}
			this.point = e;
			this.latLng = ia.convertMC2LL(e)
		},
		setCenterIn: function(e) {
			var i = arguments[1];
			this.setPoint(e, i)
		},
		setRadius: function(e) {
			this.radius = Math.abs(e)
		},
		getCenterIn: function() {
			return this.point
		},
		getRadius: function() {
			return this.radius
		},
		_getPerimeterPoints: function(e, jg) {
			if (!e || !jg || !this.map) {
				return []
			}
			var T = this.map;
			var jd = e.lng;
			var jb = e.lat;
			var jm = ia.convertMC2LL(e);
			jd = jm.lng;
			jb = jm.lat;
			var jn = [];
			var ji = jg / ia.EARTHRADIUS;
			var jf = (Math.PI / 180) * jb;
			var jl = (Math.PI / 180) * jd;
			for (var je = 0; je < 360; je += 9) {
				var jc = (Math.PI / 180) * je;
				var jj = Math.asin(Math.sin(jf) * Math.cos(ji) + Math.cos(jf) * Math.sin(ji) * Math.cos(jc));
				var jh = Math.atan2(Math.sin(jc) * Math.sin(ji) * Math.cos(jf), Math.cos(ji) - Math.sin(jf) * Math.sin(jj));
				var jk = ((jl - jh + Math.PI) % (2 * Math.PI)) - Math.PI;
				var ja = new b8(jj * (180 / Math.PI), jk * (180 / Math.PI));
				jn.push(ia.convertLL2MC(ja))
			}
			var i9 = jn[0];
			jn.push(new cd(i9.lng, i9.lat));
			if (i9) {
				this._radiusMercator = Math.sqrt(Math.pow(i9.lng - this.point.lng, 2) + Math.pow(i9.lat - this.point.lat, 2))
			} else {
				this._radiusMercator = this.radius
			}
			return jn
		}
	});

	function aK(i, e, i9) {
		this.latLng = new b8(i.lat, i.lng);
		var T = ia.convertLL2MC(i);
		gd.call(this, T, e, i9)
	}
	aK.inherits(gd, "CircleOut");
	es.extend(aK.prototype, {
		toString: function() {
			return "Circle"
		},
		setCenter: function(e) {
			this.latLng = new b8(e.lat, e.lng);
			var i = ia.convertLL2MC(e);
			this.setCenterIn(i)
		},
		getCenter: function() {
			return this.latLng
		},
		getPath: function() {
			var e = this.getPathIn();
			if (!e || e.length === 0) {
				return []
			}
			var i9 = [];
			for (var T = 0; T < e.length; T++) {
				i9[T] = ia.convertMC2LL(e[T])
			}
			return i9
		}
	});

	function i0(i9, e, i) {
		hG.call(this, i);
		i = i || {};
		if (typeof i.topFillOpacity === "number") {
			this._config.topFillOpacity = i.topFillOpacity
		} else {
			this._config.topFillOpacity = 0.6
		}
		if (typeof i.sideFillOpacity === "number") {
			this._config.sideFillOpacity = i.sideFillOpacity
		} else {
			this._config.sideFillOpacity = 0.8
		}
		bV(this._config.sideFillOpacity, 0, 1);
		if (i.topFillColor === "") {
			this._config.topFillColor = ""
		} else {
			this._config.topFillColor = i.topFillColor ? i.topFillColor : "#fff"
		}
		if (i.sideFillColor === "") {
			this._config.sideFillColor = ""
		} else {
			this._config.sideFillColor = i.sideFillColor ? i.sideFillColor : "#fff"
		}
		this._parseFillCacheWebGL = [];
		this.setPoints(i9, i);
		this._config.altitude = e || 0;
		var T = this;
		gi.load("poly", function() {
			T._draw()
		})
	}
	i0.inherits(hG, "Prism");
	es.extend(i0.prototype, {
		setPoints: function(jb) {
			var i9 = [];
			if (typeof jb === "string" || jb[0] instanceof cd || jb[0] instanceof b8 || this instanceof gd || jb.length === 0) {
				var e = this._processSinglePointArray(jb);
				this._userPoints = e.userPoints;
				i9 = e.innerPoints;
				this.hasMultipleParts = false
			} else {
				this._userPoints = [];
				for (var ja = 0; ja < jb.length; ja++) {
					var T = this._processSinglePointArray(jb[ja]);
					this._userPoints.push(T.userPoints);
					i9.push(T.innerPoints)
				}
				this.hasMultipleParts = true
			}
			hG.prototype.setPoints.call(this, i9)
		},
		setPathIn: function(e) {
			this.setPoints(e)
		},
		_processSinglePointArray: function(e) {
			var i = hG.getGraphPoints(e)
				.slice(0);
			innerPoints = i.slice(0);
			if (innerPoints.length > 1 && !innerPoints[0].equals(innerPoints[innerPoints.length - 1])) {
				innerPoints.push(new cd(innerPoints[0].lng, innerPoints[0].lat))
			}
			return {
				userPoints: i,
				innerPoints: innerPoints
			}
		},
		setPointAt: function(i, e) {
			if (!this._userPoints[i]) {
				return
			}
			this._clearCache();
			this._userPoints[i] = new cd(e.lng, e.lat);
			this.points[i] = new cd(e.lng, e.lat);
			if (i === 0 && !this.points[0].equals(this.points[this.points.length - 1])) {
				this.points[this.points.length - 1] = new cd(e.lng, e.lat)
			}
			this._calcBounds()
		},
		getPoints: function() {
			var e = this._userPoints;
			if (e.length === 0) {
				e = this.points
			}
			return e
		},
		getPathIn: function() {
			return this.getPoints()
		},
		setTopFillOpacity: function(e) {
			if (e > 1 || e < 0) {
				return
			}
			this._config.topFillOpacity = e;
			this._setDomAttribute("topfillopacity", e)
		},
		getTopFillOpacity: function() {
			return this._config.topFillOpacity
		},
		setSideFillOpacity: function(e) {
			if (e > 1 || e < 0) {
				return
			}
			this._config.sideFillOpacity = e;
			this._setDomAttribute("sidefillopacity", e)
		},
		getSideFillOpacity: function() {
			return this._config.sideFillOpacity
		},
		setTopFillColor: function(e) {
			this._config.topFillColor = e || "";
			this._setDomAttribute("topfillcolor", e)
		},
		getTopFillColor: function() {
			return this._config.topFillColor
		},
		setSideFillColor: function(e) {
			this._config.sideFillColor = e || "";
			this._setDomAttribute("sidefillcolor", e)
		},
		getSideFillColor: function() {
			return this._config.sideFillColor
		},
		setAltitude: function(e) {
			this._config.altitude = Number(e);
			this.draw();
			var i = new e7("onlineupdate");
			i.overlay = this;
			this.dispatchEvent(i)
		},
		getAltitude: function() {
			return this._config.altitude
		}
	});

	function bi(jd, jb, je) {
		if (!jd || jd.length === 0) {
			return
		}
		this.userPath = jd;
		var e = [];
		if (typeof jd === "string" || jd[0] instanceof cd || jd[0] instanceof b8) {
			var jf = this._processSinglePointArray(jd);
			for (var ja = 0; ja < jf.innerPoints.length; ja++) {
				e[ja] = ia.convertLL2MC(jf.innerPoints[ja])
			}
		} else {
			for (var ja = 0; ja < jd.length; ja++) {
				var jc = this._processSinglePointArray(jd[ja]);
				var T = [];
				for (var i9 = 0; i9 < jc.innerPoints.length; i9++) {
					T[i9] = ia.convertLL2MC(jc.innerPoints[i9])
				}
				e.push(T)
			}
		}
		i0.call(this, e, jb, je)
	}
	bi.inherits(i0, "PrismOut");
	es.extend(bi.prototype, {
		toString: function() {
			return "Prism"
		},
		setPath: function(i9) {
			if (!i9 || i9.length === 0) {
				return
			}
			this.userPath = i9;
			var T = [];
			for (var e = 0; e < i9.length; e++) {
				T[e] = ia.convertLL2MC(i9[e])
			}
			this.setPathIn(T)
		},
		getPath: function() {
			return this.userPath;
			var e = this.getPathIn();
			if (!e || e.length === 0) {
				return []
			}
			var i9 = [];
			for (var T = 0; T < e.length; T++) {
				i9[T] = ia.convertMC2LL(e[T])
			}
			return i9
		}
	});

	function bL(ja, i) {
		hG.call(this, i);
		i = i || {};
		this._config.type = i.type || "image";
		this._config.url = i.url || "";
		this._config.opacity = typeof i.opacity === "number" ? i.opacity : 1;
		bV(this._config.opacity, 0, 1);
		if (i.type === "image" && i.isPixelMap) {
			this._config.isPixelMap = i.isPixelMap || false;
			var T = i.pixelMap || {};
			this._config.colors = T.colors || ["#F9F871", "#FFC75F", "#FF9671", "#FF6F91", "#D65DB1", "#845EC2"];
			this._config.positions = T.positions || [0, 0.2, 0.4, 0.6, 0.8, 1];
			this._config.domain = T.domain || [0, 255];
			this._config.clamp = T.clamp || this._config.domain;
			this._config.noData = (T.noData !== undefined) ? T.noData : -99999;
			this._config.fomularC = T.fomularC || "float generateValue(vec4 pixel){return pixel.r * 255.;}";
			this._config.fomularJS = T.fomularJS || function(jb) {
				return jb.r
			};
			this._config.maskPng = T.maskPng || null;
			this._config.maskData = T.maskData || -1;
			this._config.maskCoord = T.maskCoord || null;
			this.fHashcode = l({
				str: this._config.fomularC
			});
			var e = this.canPixelMap();
			if (e) {
				this.isPixelMap = true;
				this.setPixelMap()
			}
		}
		this._parseFillCacheWebGL = [];
		this.setPoints(ja, i);
		var i9 = this;
		gi.load("poly", function() {
			i9._draw()
		})
	}
	bL.inherits(hG, "GroundOverlay");
	es.extend(bL.prototype, {
		setPoints: function(i) {
			var e = hG.getGraphPoints(i)
				.slice(0);
			this.hasMultipleParts = false;
			hG.prototype.setPoints.call(this, e)
		},
		setPathIn: function(e) {
			this.setPoints(e)
		},
		getPoints: function() {
			return this.points
		},
		getPathIn: function() {
			return this.getPoints()
		},
		canPixelMap: function() {
			if (this._config.colors && this._config.positions) {
				return true
			}
			return false
		},
		setPixelMap: function() {
			if (!this._config.isPixelMap || !this.canPixelMap()) {
				return
			}
			var i = this._config.colors;
			var e = this._config.positions;
			this.pHashcode = l({
				colors: i,
				positions: e
			});
			this.pixelColorMap = gM.generateColorRamp(i, e)
		},
		setDomain: function(e) {
			if (e instanceof Array && e.length === 2) {
				this._config.domain = e;
				this.doOnceDraw()
			}
		},
		setClamp: function(e) {
			if (e instanceof Array && e.length === 2) {
				this._config.clamp = e;
				this.doOnceDraw()
			}
		},
		setMaskPng: function(i) {
			this._config.maskPng = i;
			if (this.map) {
				var e = new e7("hide");
				e.overlay = this;
				this.dispatchEvent(e);
				var e = new e7("show");
				e.overlay = this;
				this.dispatchEvent(e)
			}
			this.doOnceDraw()
		},
		setMaskData: function(e) {
			this._config.maskData = e;
			this.doOnceDraw()
		},
		setMaskCoord: function(e) {
			this._config.maskCoord = e;
			this.maskUV = null;
			this.doOnceDraw()
		},
		setNoData: function(e) {
			this._config.noData = e;
			this.doOnceDraw()
		},
		setPositions: function(e) {
			this._config.positions = e;
			this.setPixelMap();
			this.doOnceDraw()
		},
		setColors: function(e) {
			this._config.colors = e;
			this.setPixelMap();
			this.doOnceDraw()
		},
		setFomular: function(e, i) {
			if (e && i) {
				this._config.fomularJS = e;
				this._config.fomularC = i;
				this.fHashcode = l({
					str: this._config.fomularC
				});
				this.doOnceDraw()
			}
		},
		setIsPixelMap: function(e) {
			this.isPixelMap = e;
			this.doOnceDraw()
		},
		getImagePixel: function(i9) {
			if (!this._config.isPixelMap || !this.canPixelMap()) {
				return null
			}
			if (!this.getImageMaskPixel(i9)) {
				return null
			}
			if (this.imageObject) {
				var T = Math.floor((i9.lng - this.points[3].lng) / this.lngMC);
				var e = Math.floor((-i9.lat + this.points[3].lat) / this.latMC);
				var i = Math.floor((e * this.imageObject.width + T) * 4);
				if (T > this.imageObject.width || T < 0) {
					return null
				}
				if (e > this.imageObject.height || e < 0) {
					return null
				}
				if (i + 3 > this.imageObject.data.data.length) {
					return null
				}
				return [this.imageObject.data.data[i], this.imageObject.data.data[i + 1], this.imageObject.data.data[i + 2], this.imageObject.data.data[i + 3], ]
			}
			return null
		},
		getValue: function(i) {
			if (this._config.isPixelMap && i && this._config.fomularJS) {
				if (!(i instanceof Array)) {
					i = this.getImagePixel(i.point)
				}
				var e = this._config.fomularJS({
					r: i[0],
					g: i[1],
					b: i[2],
					a: i[3]
				});
				if (e >= this._config.clamp[0] && e <= this._config.clamp[1]) {
					return e
				}
			}
			return null
		},
		setImageObject: function(T) {
			var e = document.createElement("canvas");
			e.width = T.width;
			e.height = T.height;
			var i = e.getContext("2d");
			i.drawImage(T, 0, 0, T.width, T.height);
			this.imageObject = {
				width: T.width,
				height: T.height,
				data: i.getImageData(0, 0, T.width, T.height)
			};
			this.updatePixelMc();
			i = null;
			e = null
		},
		updatePixelMc: function() {
			if (this.imageObject) {
				var e = Math.abs(this.points[2].lng - this.points[0].lng);
				var i = Math.abs(this.points[2].lat - this.points[0].lat);
				this.lngMC = e / this.imageObject.width;
				this.latMC = i / this.imageObject.height
			}
		},
		setMaskImageObject: function(T) {
			var e = document.createElement("canvas");
			e.width = T.width;
			e.height = T.height;
			var i = e.getContext("2d");
			i.drawImage(T, 0, 0, T.width, T.height);
			this.imageMaskObject = {
				width: T.width,
				height: T.height,
				data: i.getImageData(0, 0, T.width, T.height)
			};
			i = null;
			e = null
		},
		getImageMaskPixel: function(e) {
			if (!this.imageMaskObject) {
				return true
			}
			var i9 = this._toOverlayPixelsGL([e]);
			var je = this.maskOverlayPixels;
			var jb = je[1][0] - je[0][0];
			var ja = je[1][1] - je[0][1];
			var T = Math.floor((i9[0][0] - je[0][0]) / jb * this.imageMaskObject.width);
			var i = Math.floor((-i9[0][1] + je[1][1]) / ja * this.imageMaskObject.height);
			var jd = Math.floor((i * this.imageMaskObject.width + T) * 4);
			if (T > this.imageMaskObject.width || T < 0) {
				return null
			}
			if (i > this.imageMaskObject.height || i < 0) {
				return null
			}
			var jc = this.imageMaskObject.data.data;
			if (jd + 3 > jc.length) {
				return false
			}
			if (jc[jd + 3] > 0) {
				if (this._config.maskData > -1 && this._config.maskData !== jc[jd]) {
					return false
				}
				return true
			}
			return false
		},
		doOnceDraw: function() {
			var e = new e7("onlineupdate");
			e.overlay = this;
			this.dispatchEvent(e)
		}
	});

	function fm(ja, T) {
		if (!ja) {
			return
		}
		T = T || {};
		var jc = [new cd(ja.sw.lng, ja.ne.lat), new cd(ja.ne.lng, ja.ne.lat), new cd(ja.ne.lng, ja.sw.lat), new cd(ja.sw.lng, ja.sw.lat)];
		var e = hG.getGraphPoints(jc)
			.slice(0);
		var jb = [];
		for (var i9 = 0; i9 < e.length; i9++) {
			jb[i9] = ia.convertLL2MC(e[i9])
		}
		bL.call(this, jb, T)
	}
	fm.inherits(bL, "GroundOverlayOut");
	es.extend(fm.prototype, {
		toString: function() {
			return "GroundOverlay"
		}
	});
	var ao = {};

	function hd(T, i) {
		es.BaseClass.call(this);
		this.content = T;
		this.map = null;
		this._config = {
			width: 0,
			height: 0,
			maxWidth: 600,
			offset: new h3(0, 0),
			title: "",
			maxContent: "",
			enableMaximize: false,
			enableAutoPan: true,
			enableCloseOnClick: true,
			margin: [10, 10, 40, 10],
			collisions: [
				[10, 10],
				[10, 10],
				[10, 10],
				[10, 10]
			],
			ifMaxScene: false,
			onClosing: function() {
				return true
			}
		};
		this.setConfig(i);
		if (this._config.width < 50) {
			this._config.width = 50
		}
		if (this._config.width > 730) {
			this._config.width = 730
		}
		if (this._config.height != 0) {
			if (this._config.height < 50) {
				this._config.height = 50
			}
			if (this._config.height > 650) {
				this._config.height = 650
			}
		}
		if (this._config.maxWidth !== 0) {
			if (this._config.maxWidth < 50) {
				this._config.maxWidth = 50
			}
			if (this._config.maxWidth > 730) {
				this._config.maxWidth = 730
			}
		}
		this.isWinMax = false;
		this.IMG_PATH = w.imgPath;
		this.overlay = null;
		var e = this;
		gi.load("simpleInfowindow", function() {
			e._draw()
		})
	}
	hd.inherits(es.BaseClass, "SimpleInfoWindow");
	es.extend(hd.prototype, {
		setWidth: function(e) {
			e = e * 1;
			if (!e && e != 0 || isNaN(e) || e < 0) {
				return
			}
			if (e != 0) {
				if (e < 50) {
					e = 50
				}
				if (e > 730) {
					e = 730
				}
			}
			this._config.width = e
		},
		setHeight: function(e) {
			e = e * 1;
			e -= 10;
			if (!e && e != 0 || isNaN(e) || e < 0) {
				return
			}
			if (e != 0) {
				if (e < 50) {
					e = 50
				}
				if (e > 650) {
					e = 650
				}
			}
			this._config.height = e
		},
		setMaxWidth: function(e) {
			e = e * 1;
			if (!e && e != 0 || isNaN(e) || e < 0) {
				return
			}
			if (e != 0) {
				if (e < 50) {
					e = 50
				}
				if (e > 730) {
					e = 730
				}
			}
			this._config.maxWidth = e
		},
		setTitle: function(e) {
			this._config.title = e || ""
		},
		setContent: function(e) {
			this.content = e || ""
		},
		setMaxContent: function(e) {
			this._config.maxContent = e || ""
		},
		redraw: function() {},
		enableAutoPan: function() {
			this._config.enableAutoPan = true
		},
		disableAutoPan: function() {
			this._config.enableAutoPan = false
		},
		enableCloseOnClick: function() {
			this._config.enableCloseOnClick = true
		},
		disableCloseOnClick: function() {
			this._config.enableCloseOnClick = false
		},
		enableMaximize: function() {
			this._config.enableMaximize = true
		},
		disableMaximize: function() {
			this._config.enableMaximize = false
		},
		show: function() {
			this._visible = true
		},
		hide: function() {
			this._visible = false
		},
		close: function() {
			this.hide()
		},
		dispose: function() {
			es.BaseClass.prototype.decontrol.call(this)
		},
		maximize: function() {
			this.isWinMax = true
		},
		restore: function() {
			this.isWinMax = false
		},
		setConfig: function(i) {
			if (!i) {
				return
			}
			for (var e in i) {
				if (typeof(this._config[e]) == typeof(i[e])) {
					this._config[e] = i[e]
				}
			}
		},
		isVisible: function() {
			return this.isOpen()
		},
		isOpen: function() {
			return false
		},
		getPoint: function() {
			if (this.overlay && this.overlay.getPoint) {
				return this.overlay.getPoint()
			}
		},
		getOffset: function() {
			return this._config.offset
		},
		dispose: function() {
			es.BaseClass.prototype.decontrol.call(this)
		},
		toString: function() {
			return "SimpleInfoWindow"
		}
	});
	gV.prototype.openSimpleInfoWindow = function(i9, e) {
		if (!i9 || i9.toString() != "SimpleInfoWindow" || !e || e.toString() != "Point") {
			return
		}
		var i = this.temp;
		if (!i.marker) {
			var T = new it(w.imgPath + "blank.gif", {
				width: 1,
				height: 1
			});
			i.marker = new iP(e, {
				icon: T,
				width: 1,
				height: 1,
				offset: new h3(0, 0),
				infoWindowOffset: new h3(0, 0),
				clickable: false
			});
			i.marker._fromMap = 1
		} else {
			i.marker.setPoint(e)
		}
		this.addOverlay(i.marker);
		i.marker.show();
		i.marker.openSimpleInfoWindow(i9)
	};
	gV.prototype.closeSimpleInfoWindow = function() {
		var e = this.temp.infoWin || this.temp._infoWin;
		if (e && e.overlay) {
			e.overlay.closeSimpleInfoWindow()
		}
	};
	d6.prototype.openSimpleInfoWindow = function(e) {
		if (this.map) {
			this.map.closeSimpleInfoWindow();
			e._visible = true;
			this.map.temp._infoWin = e;
			e.overlay = this;
			es.BaseClass.call(e, e.hashCode)
		}
	};
	d6.prototype.closeSimpleInfoWindow = function() {
		if (this.map && this.map.temp._infoWin) {
			this.map.temp._infoWin._visible = false;
			this.map.temp._infoWin.decontrol();
			this.map.temp._infoWin = null
		}
	};

	function b2(T, e) {
		hG.call(this, e);
		e = e || {};
		this._config.showRegion = e.showRegion || "inside";
		this._config.isBuildingMask = e.isBuildingMask && true;
		this._config.isPoiMask = e.isPoiMask && true;
		this._config.isMapMask = e.isMapMask && true;
		this._config.path = T;
		this._parseFillCacheWebGL = [];
		this.setPoints(T, e);
		var i = this;
		gi.load("poly", function() {
			i._draw()
		})
	}
	b2.inherits(hG, "MapMask");
	es.extend(b2.prototype, {
		setPoints: function(i) {
			var e = hG.getGraphPoints(i)
				.slice(0);
			this.hasMultipleParts = false;
			hG.prototype.setPoints.call(this, e)
		},
		setPathIn: function(e) {
			this.setPoints(e)
		},
		_processSinglePointArray: function(e) {
			var i = hG.getGraphPoints(e)
				.slice(0);
			innerPoints = i.slice(0);
			if (innerPoints.length > 1 && !innerPoints[0].equals(innerPoints[innerPoints.length - 1])) {
				innerPoints.push(new cd(innerPoints[0].lng, innerPoints[0].lat))
			}
			return {
				userPoints: i,
				innerPoints: innerPoints
			}
		},
		getPoints: function() {
			var e = this._userPoints;
			if (e.length === 0) {
				e = this.points
			}
			return e
		},
		getPathIn: function() {
			return this.getPoints()
		}
	});

	function iX(jb, T) {
		if (!jb || jb.length === 0) {
			return
		}
		var ja = [];
		if (jb[0] instanceof cd) {
			var e = this._processSinglePointArray(jb);
			for (var i9 = 0; i9 < e.innerPoints.length; i9++) {
				ja[i9] = ia.convertLL2MC(e.innerPoints[i9])
			}
		}
		b2.call(this, ja, T)
	}
	iX.inherits(b2, "MapMaskOut");
	es.extend(iX.prototype, {
		toString: function() {
			return "MapMask"
		}
	});

	function eL(e, i) {
		e = isNaN(e) ? 0 : e;
		i = isNaN(i) ? 0 : i;
		this.x = e;
		this.y = i
	}
	eL.prototype.equals = function(e) {
		if (!e) {
			return false
		}
		return e.x === this.x && e.y === this.y
	};
	eL.prototype.clone = function() {
		return new eL(this.x, this.y)
	};
	eL.prototype.toString = function() {
		return "Pixel"
	};

	function h3(i, e) {
		if (typeof i !== "number") {
			this.width = parseFloat(i)
		} else {
			this.width = i
		}
		if (typeof e !== "number") {
			this.height = parseFloat(e)
		} else {
			this.height = e
		}
	}
	h3.prototype.equals = function(e) {
		return !!(e && this.width === e.width && this.height === e.height)
	};
	h3.prototype.toString = function() {
		return "Size"
	};
	var i2 = {
		B_NORMAL_MAP: {
			tileUrls: c8(w.tileDomain, w.rasterTilePath),
			vectorTileUrls: c8(w.tileDomain, w.vectorTilePath),
			tileSize: 256,
			baseUnits: 256,
			zoomLevelMin: 3,
			zoomLevelMax: 19,
			minDataZoom: 3,
			maxDataZoom: 19,
			minZoom: 3,
			maxZoom: 19,
			webgl: {
				minZoom: 3,
				maxZoom: 25
			},
			zoomLevelBase: 18,
			errorUrl: w.imgPath + "bg.png",
			bounds: new ha(new cd(-21364736, -11708041.66), new cd(23855104, 12474104.17)),
			imgExtend: "png"
		},
		B_SATELLITE_MAP: {
			tileUrls: ["//maponline0.bdimg.com/starpic/?qt=satepc&", "//maponline1.bdimg.com/starpic/?qt=satepc&", "//maponline2.bdimg.com/starpic/?qt=satepc&", "//maponline3.bdimg.com/starpic/?qt=satepc&"],
			tileSize: 256,
			baseUnits: 256,
			zoomLevelMin: 3,
			zoomLevelMax: 19,
			minDataZoom: 3,
			maxDataZoom: 19,
			minZoom: 3,
			maxZoom: 19,
			zoomLevelBase: 18,
			errorUrl: w.imgPath + "bg.png",
			bounds: new ha(new cd(-21364736, -10616832), new cd(23855104, 15859712)),
			imgExtend: "png"
		},
		B_STREET_MAP: {
			tileUrls: c8(w.tileDomain, w.rasterTilePath),
			tileSize: 256,
			baseUnits: 256,
			zoomLevelMin: 3,
			zoomLevelMax: 19,
			minDataZoom: 3,
			maxDataZoom: 19,
			minZoom: 3,
			maxZoom: 19,
			zoomLevelBase: 18,
			errorUrl: w.imgPath + "bg.png",
			bounds: new ha(new cd(-21364736, -10616832), new cd(23855104, 15859712)),
			imgExtend: "png"
		},
		BMAP_CUSTOM_LAYER: {
			tileUrls: [""],
			tileSize: 256,
			baseUnits: 256,
			zoomLevelMin: 1,
			zoomLevelMax: 19,
			minDataZoom: 3,
			maxDataZoom: 19,
			minZoom: 3,
			maxZoom: 19,
			zoomLevelBase: 18,
			errorUrl: w.imgPath + "blank.gif",
			bounds: new ha(new cd(-21364736, -10616832), new cd(23855104, 15859712)),
			imgExtend: "png"
		},
		B_EARTH_MAP: {
			tileUrls: [""],
			tileSize: 256,
			baseUnits: 256,
			zoomLevelMin: 3,
			zoomLevelMax: 19,
			minDataZoom: 3,
			maxDataZoom: 19,
			minZoom: 3,
			maxZoom: 19,
			webgl: {
				minZoom: 3,
				maxZoom: 21
			},
			zoomLevelBase: 18,
			errorUrl: w.imgPath + "blank.gif",
			bounds: new ha(new cd(-21364736, -10616832), new cd(23855104, 15859712)),
			imgExtend: "png"
		},
		B_NONE_MAP: {
			tileUrls: "",
			tileSize: 256,
			baseUnits: 256,
			zoomLevelMin: 3,
			zoomLevelMax: 19,
			minDataZoom: 3,
			maxDataZoom: 19,
			minZoom: 3,
			maxZoom: 19,
			zoomLevelBase: 18,
			errorUrl: w.imgPath + "bg.png",
			bounds: new ha(new cd(-21364736, -11708041.66), new cd(23855104, 12474104.17)),
			imgExtend: "png"
		}
	};
	var dO = i2;

	function cp(jc, jd, T, e, jb) {
		if (jb && dO[jb]) {
			this.mapTypeName = jb
		} else {
			this.mapTypeName = BMAP_NORMAL_MAP
		}
		if (jc && jc instanceof Array) {
			var ja = true;
			for (var i9 = 0; i9 < jc.length; i9++) {
				if (jc[i9] instanceof ha) {
					continue
				} else {
					ja = false;
					break
				}
			}
			ja && (this.bounds = jc)
		}
		if (typeof jd === "number" && jd >= dO[this.mapTypeName].webgl.minZoom) {
			if (dO[this.mapTypeName].webgl) {
				if (jd >= dO[this.mapTypeName].webgl.minZoom) {
					this.minZoom = jd
				} else {
					this.minZoom = dO[this.mapTypeName].webgl.minZoom
				}
			} else {
				if (jd >= dO[this.mapTypeName].minZoom) {
					this.minZoom = jd
				} else {
					this.minZoom = dO[this.mapTypeName].minZoom
				}
			}
		}
		if (typeof T === "number") {
			if (dO[this.mapTypeName].webgl) {
				if (T <= dO[this.mapTypeName].webgl.maxZoom) {
					this.maxZoom = T
				} else {
					this.maxZoom = dO[this.mapTypeName].webgl.maxZoom
				}
			} else {
				if (T <= dO[this.mapTypeName].maxZoom) {
					this.maxZoom = T
				} else {
					this.maxZoom = dO[this.mapTypeName].maxZoom
				}
			}
		}
		if (this.maxZoom < this.minZoom) {
			this.maxZoom = null
		}
		if (e && typeof e === "function") {
			this.tileUrlFunction = e
		}
	}
	es.extend(cp.prototype, {
		addBoundary: function(e) {
			if (e instanceof ha) {
				if (this.bounds) {
					this.bounds.push(e)
				} else {
					this.bounds = [e]
				}
			}
		},
		setTileUrlFunction: function(e) {
			if (e && typeof e === "function") {
				this.tileUrlFunction = e
			}
		},
		crossPoint: function(e, i9, ja) {
			if (ja < this.minZoom || ja > this.maxZoom) {
				return false
			}
			var jb = this.containsPoint(e, ja);
			if (jb) {
				return jb
			}
			for (var T = 0; T < this.bounds.length; T++) {
				if (this.bounds[T].intersects(i9)) {
					jb = true;
					break
				}
			}
			return jb
		},
		containsPoint: function(e, i9) {
			if (!e || !(e instanceof cd) || !this.isValid()) {
				return false
			}
			var ja = false;
			if (i9 < this.minZoom || i9 > this.maxZoom) {
				return ja
			}
			for (var T = 0; T < this.bounds.length; T++) {
				if (this.bounds[T].containsPoint(e)) {
					ja = true;
					break
				}
			}
			return ja
		},
		isValid: function() {
			return this.bounds && this.minZoom && this.maxZoom && this.tileUrlFunction
		},
		toString: function() {
			return "PrivateRegionDataModel"
		}
	});

	function gU(je, i, ja, T, i9) {
		this.mgr = je;
		this.position = ja;
		this._cbks = [];
		this.name = je.getTileName(T, i9, je.map.config.style);
		this.info = T;
		this._transparentPng = i9.isTransparentPng();
		var jf = bK("img");
		hc(jf);
		jf.galleryImg = false;
		var jd = jf.style;
		jd.position = "absolute";
		jd.width = je.tileSize + "px";
		jd.height = je.tileSize + "px";
		jd.left = ja[0] + "px";
		jd.top = ja[1] + "px";
		this.img = jf;
		this.src = i;
		if (d7 && ja._offsetX === 0) {
			jd.opacity = 0;
			jd.willChange = "opacity"
		}
		var jc = this;
		this.img.onload = function(jn) {
			if (!jc.mgr) {
				return
			}
			var ji = jc.mgr;
			var jg = ji.bufferTiles;
			if (ji.bufferNumber > 0) {
				jg[jc.name] = jc;
				jg.push(jc.name)
			}
			var jk = jg.length - ji.bufferNumber;
			for (var jl = 0; jk > 0 && jl < jg.length; jl++) {
				var jm = jg[jl];
				if (!ji.mapTiles[jm]) {
					if (jg[jm]) {
						jg[jm].mgr = null;
						var jj = jg[jm].img;
						if (jj.parentNode) {
							hu(jj);
							jj.parentNode.removeChild(jj)
						}
						jj = null;
						jg[jm].img = null;
						jg[jm] = null;
						delete jg[jm]
					}
					jg.splice(jl, 1);
					jl--;
					jk--
				}
			}
			jc.loaded = true;
			ji.imgNumber++;
			if (!aI(jc.img)) {
				if (i9.tilesDiv) {
					i9.tilesDiv.appendChild(jc.img)
				}
			}
			var jn = new e7("onimagechange");
			jn.action = "show";
			jn.tile = jc.name;
			ji.map.dispatchEvent(jn);
			if (d7 && ja._offsetX === 0) {
				var jh = new e0({
					fps: 10,
					duration: 300,
					render: function(e) {
						if (jc.img && jc.img.style) {
							jc.img.style.opacity = e * 1
						}
					},
					finish: function() {
						if (jc.img && jc.img.style) {
							delete jc.img.style.opacity;
							jc.img.style.willChange = "auto"
						}
					}
				})
			}
			jc._callCbks()
		};
		this.img.onerror = function(ji) {
			jc.error = true;
			jc._callCbks();
			if (!jc.mgr) {
				return
			}
			var jg = jc.mgr;
			var jh = dO[i9.mapType];
			if (jh.errorUrl) {
				jc.img.src = jh.errorUrl
			}
			if (!aI(jc.img)) {
				if (i9.tilesDiv) {
					i9.tilesDiv.appendChild(jc.img)
				}
			}
		};
		jf = null;
		var jb = new e7("onimagebefore");
		jb.tile = jc.name;
		je.map.dispatchEvent(jb)
	}
	gU.prototype._addLoadCbk = function(e) {
		this._cbks.push(e)
	};
	gU.prototype._load = function() {
		if (FeBrowser.ie <= 6 && FeBrowser.ie > 0 && this._transparentPng) {
			this.img.src = w.imgPath + "blank.gif"
		} else {
			this.img.src = this.src
		}
	};
	gU.prototype._callCbks = function() {
		var T = this;
		for (var e = 0; e < T._cbks.length; e++) {
			T._cbks[e]()
		}
		T._cbks.length = 0
	};
	var d7 = (!es.Browser.ie || es.Browser.ie > 8);

	function ij(e) {
		this.tileLayers = [];
		this.map = e;
		this.bufferNumber = 300;
		this.mapTiles = [];
		this.bufferTiles = [];
		this.config = dO[this.map.mapType];
		this.errorUrl = this.config.errorUrl;
		this.tileSize = this.config.tileSize;
		this.baseUnits = this.config.baseUnits;
		this.baseZoomLevel = this.config.zoomLevelBase;
		this.tileURLs = this.config.tileUrls;
		this.imgNumber = 0;
		this.numLoading = 0;
		this.temp = {}
	}
	bo.register(function(i) {
		if (i._renderType === "webgl") {
			return
		}
		var e = i.tileMgr = new ij(i);
		i.addEventListener("mousewheel", function(T) {
			e.mouseWheel(T)
		});
		i.addEventListener("dblclick", function(T) {
			e.dblClick(T)
		});
		i.addEventListener("rightdblclick", function(T) {
			e.dblClick(T)
		});
		i.addEventListener("minuspress", function(T) {
			e.keypress(T)
		});
		i.addEventListener("pluspress", function(T) {
			e.keypress(T)
		});
		i.addEventListener("load", function(T) {
			if (this.mapType === BMAP_EARTH_MAP) {
				return
			}
			e.loadTiles()
		});
		i.addEventListener("zoomstartcode", function(T) {
			if (this.mapType === BMAP_EARTH_MAP) {
				return
			}
			e._zoom(T)
		});
		i.addEventListener("moving", function(T) {
			if (this.mapType === BMAP_EARTH_MAP) {
				return
			}
			e.moveGridTiles()
		});
		i.addEventListener("resize", function(T) {
			if (this.mapType === BMAP_EARTH_MAP) {
				return
			}
			e.resizeMap(T)
		});
		i.addEventListener("addtilelayer", function(T) {
			e.addTileLayer(T)
		});
		i.addEventListener("removetilelayer", function(T) {
			e.removeTileLayer(T)
		})
	});
	es.extend(ij.prototype, {
		addTileLayer: function(i9) {
			var T = this;
			var i = i9.target;
			T.tileLayers.push(i);
			if (T.map.loaded) {
				T.moveGridTiles()
			}
		},
		removeTileLayer: function(jg) {
			var jh = this;
			var je = jg.target;
			var jc = je.mapType;
			var jb = jh.mapTiles;
			var jj = jh.bufferTiles;
			for (var T in jj) {
				var i9 = T.split("-")[1];
				if (i9 == jc) {
					delete jj[T]
				}
			}
			for (var T in jb) {
				var i9 = T.split("-")[1];
				if (i9 == jc) {
					delete jb[T]
				}
			}
			if (jh.zoomsDiv && jh.zoomsDiv.parentNode) {
				jh.zoomsDiv.parentNode.removeChild(jh.zoomsDiv);
				jh.zoomsDiv.innerHTML = ""
			}
			var ja = jh.map;
			if (ja.deepZoom) {
				var ji = ja.deepZoom.preDeepZoomDiv;
				if (ji && ji.parentNode) {
					ji.parentNode.removeChild(ji)
				}
			}
			for (var jf = 0, jd = jh.tileLayers.length; jf < jd; jf++) {
				if (je == jh.tileLayers[jf]) {
					jh.tileLayers.splice(jf, 1)
				}
			}
			jh.moveGridTiles()
		},
		hideDeepZoomDiv: function() {
			var i = this,
				T = i.map;
			if (T.deepZoom) {
				var e = T.deepZoom.preDeepZoomDiv;
				if (e && e.style.display != "none") {
					e.style.display = "none"
				}
			}
		},
		getTileLayer: function(ja) {
			var i9 = this;
			for (var T = 0, e = i9.tileLayers.length; T < e; T++) {
				tilelayer = i9.tileLayers[T];
				if (tilelayer.mapType == ja) {
					return tilelayer
				}
			}
			return null
		},
		_zoom: function(T) {
			var i = this;
			if (i.zoomsDiv && i.zoomsDiv.style.display != "none") {
				i.zoomsDiv.style.display = "none"
			}
			i.hideDeepZoomDiv();
			i.moveGridTiles()
		},
		resizeMap: function(i) {
			this.loaded = false;
			this.moveGridTiles()
		},
		_checkTilesLoaded: function() {
			this.numLoading--;
			var e = this;
			if (this.numLoading == 0) {
				if (this._checkLoadedTimer) {
					clearTimeout(this._checkLoadedTimer);
					this._checkLoadedTimer = null
				}
				this._checkLoadedTimer = setTimeout(function() {
					if (e.numLoading == 0) {
						e.map.dispatchEvent(new e7("ontilesloaded"))
					}
					e._checkLoadedTimer = null
				}, 80)
			}
		},
		getTileName: function(e, T, i) {
			var ja = T.mapType;
			var i9 = "TILE-" + ja + "-" + i + "-" + e[0] + "-" + e[1] + "-" + e[2];
			return i9
		},
		hideTile: function(i9, T) {
			var i = i9.img;
			if (aI(i)) {
				if (i9.loaded) {
					this.imgNumber--
				}
				if (i.parentNode) {
					hu(i);
					i.parentNode.removeChild(i)
				}
			}
			var ja = new e7("onimagechange");
			ja.tile = this.getTileName(i9.info, T, this.map.config.style);
			ja.action = "hide";
			delete this.mapTiles[i9.name];
			if (!i9.loaded) {
				hu(i);
				i9._callCbks();
				i = null;
				i9.img = null;
				i9.mgr = null
			}
			this.map.dispatchEvent(ja)
		},
		loadTiles: function() {
			var i = this;
			if (es.Browser.ie) {
				try {
					document.execCommand("BackgroundImageCache", false, true)
				} catch (T) {}
			}
			if (this.zoomsDiv && this.zoomsDiv.style.display != "none") {
				this.zoomsDiv.style.display = "none"
			}
			i.hideDeepZoomDiv();
			i.moveGridTiles()
		},
		getCell: function(ja, i9) {
			var e = this.baseUnits * Math.pow(2, (this.baseZoomLevel - i9));
			var T = parseInt(ja.lng / e);
			var i = parseInt(ja.lat / e);
			return [T, i, e * (T + 0.5), e * (i + 0.5)]
		},
		moveGridTiles: function() {
			var jn = this.map,
				jw = jn.getMapType(),
				ju = this.tileLayers.length;
			var js = jn.centerPoint;
			if (jw !== BMAP_SATELLITE_MAP) {
				js = ev.calcLoopCenterPoint(js)
			}
			var je = jn.width;
			var jI = jn.getZoomUnits();
			var jt = jI * je;
			var jy = js.lng - jt / 2;
			var jj = js.lng + jt / 2;
			var jm = ev.isAddWidth(jy, jj);
			for (var jA = 0; jA < ju; jA++) {
				var ja = this.tileLayers[jA];
				if (ja.baseLayer || ju == 1) {
					this.tilesDiv = ja.tilesDiv
				}
				var jo = dO[ja.mapType];
				var i9 = jn.zoomLevel;
				var jD = jn.getZoomUnits(jn.zoomLevel);
				var ji = jo.baseUnits * Math.pow(2, (jo.zoomLevelBase - i9));
				var jg = Math.floor(js.lng / ji);
				var jz = Math.floor(js.lat / ji);
				var jl = jo.tileSize;
				var jp = [jg, jz, (js.lng - jg * ji) / ji * jl, (js.lat - jz * ji) / ji * jl];
				var jh = jm ? jn.width / 2 * 1.5 : jn.width / 2;
				var jk = jp[0] - Math.ceil((jh - jp[2]) / jl);
				var jH = jp[1] - Math.ceil((jn.height / 2 - jp[3]) / jl);
				var jB = jp[0] + Math.ceil((jh + jp[2]) / jl);
				var jq = jp[1] + Math.ceil((jn.height / 2 + jp[3]) / jl);
				var jf = [];
				for (var jF = jk; jF < jB; jF++) {
					for (var jE = jH; jE < jq; jE++) {
						jf.push([jF, jE]);
						var jv = "id_" + jF + "_" + jE + "_" + i9;
						jf[jv] = true
					}
				}
				if (ja.mapType !== BMAP_SATELLITE_MAP) {
					jf = ev.calcLoopTiles(jf, i9)
				}
				jf.sort((function(i) {
					return function(jK, jL) {
						return ((0.4 * Math.abs(jK[0] - i[0]) + 0.6 * Math.abs(jK[1] - i[1])) - (0.4 * Math.abs(jL[0] - i[0]) + 0.6 * Math.abs(jL[1] - i[1])))
					}
				})([jp[0], jp[1]]));
				var T = this.mapTiles;
				var e = -js.lng / jD;
				var jJ = js.lat / jD;
				var jx = [e, jJ];
				for (var jr in T) {
					var jc = T[jr];
					var jG = jc.info;
					if (!jG) {
						continue
					}
					var jv = "id_" + jG[0] + "_" + jG[1] + "_" + jG[2];
					if (!jf[jv]) {
						this.hideTile(jc, ja)
					}
				}
				var jb = -jn.offsetX + jn.width / 2;
				var jd = -jn.offsetY + jn.height / 2;
				ja.tilesDiv.style.left = Math.round(e + jb) - jx[0] + "px";
				ja.tilesDiv.style.top = Math.round(jJ + jd) - jx[1] + "px";
				this.numLoading += jf.length;
				for (var jF = 0, jC = jf.length; jF < jC; jF++) {
					this.showTile([jf[jF][0], jf[jF][1], jn.zoomLevel], jx, ja, jF, jn.config.style)
				}
			}
		},
		showTile: function(jc, jb, jf, jk) {
			this.centerPos = jb;
			var jd = dO[jf.mapType];
			var jg = this.map.config.style;
			var i9 = this.getTileName(jc, jf, jg);
			var ja = (jc[0] * jd.tileSize) + jb[0];
			var T = (-1 - jc[1]) * jd.tileSize + jb[1];
			var jj = [ja, T];
			var je = null;
			if (jf.mapType !== BMAP_SATELLITE_MAP) {
				je = ev.calcLoopParam(jc[0], jc[2]);
				var ji = je.offsetX;
				jj[0] += ji;
				jj._offsetX = ji
			}
			var jn = this;
			var jm = this.mapTiles[i9];
			if (jm) {
				jm.img.style.left = jj[0] + "px";
				jm.img.style.top = jj[1] + "px";
				if (jm.loaded) {
					this._checkTilesLoaded()
				} else {
					jm._addLoadCbk(function() {
						jn._checkTilesLoaded()
					})
				}
				return
			}
			jm = this.bufferTiles[i9];
			if (jm) {
				this.imgNumber++;
				jf.tilesDiv.insertBefore(jm.img, jf.tilesDiv.lastChild);
				this.mapTiles[i9] = jm;
				jm.img.style.left = jj[0] + "px";
				jm.img.style.top = jj[1] + "px";
				if (jm.loaded) {
					this._checkTilesLoaded()
				} else {
					jm._addLoadCbk(function() {
						jn._checkTilesLoaded()
					})
				}
				var jl = new e7("onimagechange");
				jl.action = "cache";
				jl.tile = this.getTileName(jc, jf, jg);
				this.map.dispatchEvent(jl)
			} else {
				var jh = new eL(jc[0], jc[1]);
				if (je) {
					jh.x = je.col
				}
				var i = jf.getTilesUrl(jh, jc[2]);
                                //console.log('====已经获取到瓦片位置===')
				jm = new gU(this, i, jj, jc, jf);
                                //console.log(jm)
				jm._addLoadCbk(function() {
					jn._checkTilesLoaded()
				});
				jm._load();
				this.mapTiles[i9] = jm;
				gv(this.map)
			}
		},
		mouseWheel: function(jd) {
			var jc = this.map;
			if (!jc.config.enableWheelZoom) {
				return
			}
			var je = jc.zoomLevel + (jd.trend === true ? 1 : -1);
			var ja = jc._getProperZoom(je);
			if (ja.exceeded) {
				var T = new e7("onzoomexceeded");
				T.targetZoom = je;
				jc.dispatchEvent(T);
				return
			}
			jc.dispatchEvent(new e7("onzoomstart"));
			jc.lastLevel = jc.zoomLevel;
			jc.zoomLevel = ja.zoom;
			var i = jd.pixel;
			var i9 = jc.pixelToPointIn(i, {
				zoom: jc.lastLevel
			});
			var jb = jc.getZoomUnits(jc.zoomLevel);
			jc.centerPoint = new cd(i9.lng + jb * (jc.width / 2 - i.x), i9.lat - jb * (jc.height / 2 - i.y));
			this.zoom(i)
		},
		dblClick: function(T) {
			var i = this.map;
			if (!i.config.enableDblclickZoom) {
				return
			}
			if (i.mapType === "B_EARTH_MAP") {
				return
			}
			if (i.currentOperation === dI.dragging) {
				return
			}
			if (T.type == "onrightdblclick") {
				i.zoomOut(T.point)
			} else {
				i.zoomIn(T.point)
			}
		},
		keypress: function(T) {
			var i = this.map;
			if (i.getMapType() === BMAP_EARTH_MAP) {
				return
			}
			T.type == "onpluspress" ? i.zoomIn() : i.zoomOut()
		}
	});

	function gI(i9) {
		this.opts = i9 || {};
		this.copyright = this.opts.copyright || {};
		this.transparentPng = this.opts.transparentPng || false;
		this.png8 = this.opts.png8 || false;
		this.baseLayer = this.opts.baseLayer || false;
		this.dataType = this.opts.dataType || 1;
		this.transform = this.opts.transform || 0;
		this.isFlat = !this.opts.isFlat ? false : true;
		this.showLabel = this.opts.showLabel === false ? false : true;
		var e = this.opts.tileTypeName || "web";
		this.tileType = hb.getInstance(e);
		this.clipTile = this.opts.clipTile || false;
		this._type = "tilelayer";
		var i = bJ() ? 128 : 256;
		this.cacheSize = this.opts.cacheSize || i;
		var T = this;
		this.tileCache = new at(this.cacheSize, {
			clearCallback: function(ja) {
				if (ja.label) {
					if (ja.label.textImageBitmap) {
						ja.label.textImageBitmap.close()
					}
					if (ja.label.indoorTextImageBitmap) {
						ja.label.indoorTextImageBitmap.close()
					}
				}
				T._removeIndoorData(ja)
			}
		});
		this.scaler = fz() >= 1.5 ? 2 : 1;
		this.normalUdt = iO("ditu", "normal")
			.udt;
		this.numLoading = 0;
		this.useThumbData = false;
		this.useThumbData = this.opts.useThumbData || false;
		if (this.baseLayer) {
			this.useThumbData = true
		}
		if (typeof this.opts.customLayer === "boolean") {
			this.customLayer = this.opts.customLayer
		} else {
			this.customLayer = true
		}
	}
	gI.inherits(cJ, "TileLayer");
	es.extend(gI.prototype, {
		isTransparentPng: function() {
			return this.transparentPng
		},
		getTilesUrl: function(jg, e) {
			var T = dO[this.mapType];
			if (typeof T !== "object") {
				return null
			}
			var i9 = jg.x;
			var jh = jg.y;
			if (this.mapType !== BMAP_SATELLITE_MAP) {
				var jh = ev.calcLoopParam(jh, e)
					.col
			}
			var i = "";
			if (this.opts.tileUrlTemplate) {
				i = this.opts.tileUrlTemplate;
				i = i.replace(/\{X\}/, jh);
				i = i.replace(/\{Y\}/, i9);
				i = i.replace(/\{Z\}/, e)
			} else {
				if (this.mapType === BMAPGL_NORMAL_MAP) {
					var jf = this.isCanvasMap ? 0 : 1;
					var jb = T.tileUrls[Math.abs(jh + i9) % T.tileUrls.length];
					if (window.offLineIPAddress) {
						jb = window.offLineIPAddress + "tile5/"
					}
					var ja = this.map.config.style;
					i = jb + "?qt=vtile&x=" + i9 + "&y=" + jh + "&z=" + e + (ja === "default" ? "" : ("&styleId=1")) + "&styles=pl&udt=" + this.normalUdt + "&scaler=" + this.scaler + "&showtext=" + jf;
					i = i.replace(/-(\d+)/gi, "M$1")
				}
				if (this.mapType === BMAP_SATELLITE_MAP) {
					var jc = iO("ditu", "satellite");
					var je = jc.ver;
					var jd = jc.udt;
					i = T.tileUrls[Math.abs(jh + i9) % T.tileUrls.length] + "u=x=" + i9 + ";y=" + jh + ";z=" + e + ";v=" + je + ";type=sate&fm=46&udt=" + jd;
					i = i.replace(/-(\d+)/gi, "M$1")
				}
			}
                        let coustom_tile_path =  "/bdmap/tiles/" + e + "/" + i9 + "/" + jh + ".jpg";
                        //console.log('222222222', coustom_tile_path)
                        //console.log(i)
			return coustom_tile_path
		},
		initialize: function(jb) {
			this.map = jb;
			if (jb._renderType === "webgl") {
				var ja = null;
				if (this.customLayer !== false) {
					ja = this.getTilesUrl
				}
				es.extend(this, eH);
				this.labelProcessor = new ic(this);
				this.callbackDataQueue = [];
				if (ja) {
					this.getTilesUrl = ja
				}
				var i = this;
				jb.on("indoor_data_refresh", function(jc) {
					if (!i.baseLayer) {
						return
					}
					i._refreshIndoorData(jc.uid, jc.floor)
				});
				jb.on("custom_labels_ready", function(jc) {
					if (!i.baseLayer) {
						return
					}
					i._doWorkAfterLabelImageLoad(jc.virtualTile, jc.labelCanvas, null, jc.imgKey)
				});
				jb.on("glmoduleloaded", function() {
					if (!i.baseLayer) {
						return
					}
					i.updateAllIconsTextureCoords()
				});
				jb.on("layer_update", function(jd) {
					if (jd.name === i.tileType.getName() && jb.customLoaded) {
						i.tileCache.clear();
						jb._featureMgr.clearData(i.drawIndex);
						jb._featureMgr.setLabelData([]);
						jb._featureMgr.clearLabelOverlayData();
						i.labelProcessor.iconCache = {};
						var jc = new e7("onlayer_clear");
						jb.fire(jc)
					}
				});
				if (this.ontology && this.ontology._initEvent) {
					this.ontology._initEvent(jb)
				}
			}
			if (!jb.temp.layerZIndex) {
				jb.temp.layerZIndex = 0
			}
			this.zIndex = this.zIndex || 0;
			if (this.baseLayer) {
				this.zIndex = 0
			}
			this.adjustZIndex();
			if (!jb.temp.layid) {
				jb.temp.layid = 0
			}
			if (!this.opts.mapType) {
				this.mapType = "BMAP_CUSTOM_LAYER_" + jb.temp.layid;
				jb.temp.layid++
			} else {
				this.mapType = this.opts.mapType
			}
			var T = dO[this.mapType];
			if (!T) {
				dO[this.mapType] = {
					tileUrls: [],
					tileSize: 256,
					baseUnits: 256,
					zoomLevelMin: 1,
					zoomLevelMax: 19,
					minZoom: 3,
					maxZoom: 19,
					minDataZoom: 3,
					maxDataZoom: 19,
					zoomLevelBase: 18,
					errorUrl: w.imgPath + "/blank.gif",
					bounds: new ha(new cd(-21364736, -10616832), new cd(23855104, 15859712)),
					imgExtend: "png"
				}
			}
			if (jb._renderType !== "webgl") {
				var i9 = bA(jb.platform, '<div style="position:absolute;z-index:' + this.zIndex + '"></div>');
				i9.style.display = "";
				i9.style.left = Math.ceil(-jb.offsetX + jb.width / 2) + "px";
				i9.style.top = Math.ceil(-jb.offsetY + jb.height / 2) + "px";
				this.tilesDiv = i9
			}
			this.isCanvasMap = jb.isCanvasMap();
			this.lastZoom = jb.getZoom();
			var e = this;
			this.addEventListener("initDrawData", function(jc) {
				if (e.opts.boundary) {
					e.addBoundary(e.opts.boundary)
				}
			})
		},
		remove: function() {
			if (this.tilesDiv && this.tilesDiv.parentNode) {
				this.tilesDiv.innerHTML = "";
				this.tilesDiv.parentNode.removeChild(this.tilesDiv)
			}
			delete this.tilesDiv
		},
		getCopyright: function() {
			return this.copyright
		},
		getMapType: function() {
			return this.mapType
		},
		adjustZIndex: function() {
			if (this.map && this.map._featureMgr) {
				var e = this.map._featureMgr.result.bkData;
				while (e[this.zIndex]) {
					this.zIndex += 1
				}
			}
		},
		setZIndex: function(e) {
			this.setTargetZIndex(e)
		},
		setTargetZIndex: function(e) {
			this.zIndex = e;
			this.drawIndex = e;
			if (this.tilesDiv) {
				this.tilesDiv.style.zIndex = e
			}
		},
		calcLoopParam: function(e, i) {
			return ev.calcLoopParam(e, i)
		},
		addBoundary: function(jb) {
			if (!jb || !this.map) {
				return
			}
			if (typeof jb === "string") {
				jb = [jb]
			}
			for (var i9 = 0; i9 < jb.length; i9++) {
				var T = new BMapGL.Polygon(jb[i9]);
				if (T && bG(T._i)) {
					var ja = new e7("onbeforeaddoverlay", T);
					ja.overlay = T;
					ja.isLayerMask = true;
					this.map.dispatchEvent(ja);
					T._i(this.map);
					if (this.boundary) {
						this.boundary.push(T)
					} else {
						this.boundary = [T]
					}
				}
			}
			this.updateBoundary()
		},
		clearBoundary: function() {
			this.boundary = false;
			this.updateBoundary()
		},
		updateBoundary: function() {
			if (this.boundary === undefined || !this.map) {
				return
			}
			var i = this.map._featureMgr.result.bkData;
			if (i[this.zIndex]) {
				i[this.zIndex].boundary = this.boundary;
				this.map.dispatchEvent(new e7("onrefresh"));
				if (this.boundary === false) {
					var T = new e7("onremoveLayerMask");
					T.hasLayerBoundary = this.map._featureMgr.hasLayerBoundary();
					this.map.dispatchEvent(T)
				}
			}
		}
	});

	function h(i, e, T) {
		this.bounds = i;
		this.content = e;
		this.mapType = T
	}
	h.inherits(cJ, "Copyright");
	var dT = {
		get: function(e) {
			if (!dT.singleton) {
				dT.singleton = new fq(e)
			}
			return dT.singleton
		}
	};

	function fq(i) {
		this._map = i;
		this._tileMgr = i.tileMgr;
		this._animationDiv = null;
		this._preAnimationDiv = null;
		this._animation = null;
		this._baseLayerDiv = null;
		this._transformStyleName = cH.ifSupportCSS3("transform", true);
		this._transformOriginStyleName = cH.ifSupportCSS3("transformOrigin", true);
		this._preZoomTimes = 1;
		this._preRenderTick = 1;
		this._enableCanvas2dMap = !!(i.getRenderType() === "canvas");
		this._isIE9 = !!(es.Browser.ie === 9);
		var e = this;
		i.addEventListener("maptypechange", function() {
			e.hide()
		});
		i.addEventListener("load", function() {
			e.hide()
		})
	}
	es.extend(fq.prototype, {
		prepareLayer: function() {
			var i9 = this._map;
			var e = this._tileMgr;
			this._canvas2dMapMgr = i9.canvas2dMapMgr;
			var T = this._baseLayerDiv = e.tilesDiv;
			if (!this._animationDiv) {
				var i = this._preAnimationDiv;
				if (i) {
					i.parentNode && i.parentNode.removeChild(i);
					this._preAnimationDiv = null
				}
				this._preAnimationDiv = this._animationDiv = T.cloneNode(true);
				i9.platform.insertBefore(this._animationDiv, i9.platform.firstChild)
			}
			this.show()
		},
		prepareAniParam: function() {
			var i9 = this._animationDiv;
			if (!i9) {
				return
			}
			var e = i9.children.length;
			var T;
			this._zoomAniInfo = [];
			for (var ja = e - 1; ja > -1; ja--) {
				var jb = {};
				T = i9.children[ja].style;
				jb.top = parseInt(T.top, 10);
				jb.left = parseInt(T.left, 10);
				this._zoomAniInfo[ja] = jb
			}
		},
		prepareLabelLayer: function() {
			var ja = this._map;
			if (this._enableCanvas2dMap && ja.canvas2dMapMgr) {
				if (this.touchZoomLabelCanvas) {
					this.touchZoomLabelCanvas.parentNode.removeChild(this.touchZoomLabelCanvas)
				}
				var i = ja.canvas2dMapMgr._labelCanvas;
				this.touchZoomLabelCanvas = i.cloneNode(false);
				var e = this.touchZoomLabelCanvas.getContext("2d");
				e.drawImage(i, 0, 0);
				ja.platform.insertBefore(this.touchZoomLabelCanvas, ja.platform.firstChild);
				var i9 = parseInt(i.style.left, 10);
				var T = parseInt(i.style.top, 10);
				this.touchZoomLabelCanvas.style.zIndex = 9;
				this.touchZoomLabelCanvas.style[this._transformOriginStyleName] = (this._fixPosition.x - (ja.offsetX + i9)) + "px " + (this._fixPosition.y - (ja.offsetY + T)) + "px";
				i.style.visibility = "hidden"
			}
		},
		show: function() {
			if (this._animationDiv) {
				this._animationDiv.style.visibility = ""
			}
		},
		showLabel: function() {
			var i = this._map;
			if (this._enableCanvas2dMap && i.canvas2dMapMgr) {
				var e = i.canvas2dMapMgr._labelCanvas;
				if (e) {
					e.style.visibility = ""
				}
				if (this.touchZoomLabelCanvas) {
					this.touchZoomLabelCanvas.style.zIndex = -2;
					this.touchZoomLabelCanvas.style.visibility = "hidden"
				}
			}
		},
		hide: function() {
			if (this._animationDiv) {
				this._animationDiv.style.visibility = "hidden"
			}
			if (this._preAnimationDiv) {
				this._preAnimationDiv.style.visibility = "hidden"
			}
		},
		hideNonAnimationLayers: function() {
			var i9 = this._map;
			if (i9.getRenderType() === "dom") {
				if (i9.overlayDiv) {
					i9.overlayDiv.style.visibility = "hidden"
				}
				if (i9.overlayDivEx) {
					i9.overlayDivEx.style.visibility = "hidden"
				}
			}
			var jb = i9.tileMgr.tileLayers;
			var ja;
			for (var T = 0, e = jb.length; T < e; T++) {
				ja = jb[T];
				ja.tilesDiv.style.visibility = "hidden"
			}
		},
		showNonAnimationLayers: function() {
			var i9 = this._map;
			if (i9.getRenderType() === "dom") {
				if (i9.overlayDiv) {
					i9.overlayDiv.style.visibility = ""
				}
				if (i9.overlayDivEx) {
					i9.overlayDivEx.style.visibility = ""
				}
			}
			var jb = i9.tileMgr.tileLayers;
			var ja;
			for (var T = 0, e = jb.length; T < e; T++) {
				ja = jb[T];
				ja.tilesDiv.style.visibility = ""
			}
		},
		setFixPosition: function(e) {
			this._fixPosition = e
		},
		setZoom: function(e, jf) {
			var jc = this._fixPosition;
			var jl = this._map;
			var jm = this._baseLayerDiv;
			var jd = {
				x: jc.x - parseInt(jm.style.left, 10) - jl.offsetX,
				y: jc.y - parseInt(jm.style.top, 10) - jl.offsetY
			};
			var i9 = this._animationDiv;
			if (!i9) {
				return
			}
			var jj = i9.children.length;
			var jh;
			var jk = this._transformStyleName;
			var jb = this._transformOriginStyleName;
			var jn = this;
			var jp;
			var je;
			for (var ji = jj - 1; ji > -1; ji--) {
				var jg = this._zoomAniInfo[ji];
				jh = i9.children[ji].style;
				var ja = jg.left - jd.x;
				var T = jg.top - jd.y;
				jg.dx = ja * e - ja;
				jg.dy = T * e - T;
				jg.preDx = ja - ja;
				jg.preDy = T - T;
				jp = jg.preDx + (jg.dx - jg.preDx);
				je = jg.preDy + (jg.dy - jg.preDy) + jf;
				jh.left = jg.left + jp + "px";
				jh.top = jg.top + je + "px";
				jh.width = jh.height = 256 * e + "px"
			}
			if (this._enableCanvas2dMap) {
				var jo = !jn._isIE9 ? "translate3d(0px, " + jf + "px, 0) scale(" + e + ")" : "translate(0px, " + jf + "px) scale(" + e + ")";
				this.touchZoomLabelCanvas.style[jk] = jo
			}
		},
		setZoomFinish: function() {
			this._animationDiv = null
		},
		startAnimation: function(jc) {
			this.prepareLayer();
			this.hideNonAnimationLayers();
			var jv = this._map;
			if (this.touchZoomLabelCanvas) {
				this.touchZoomLabelCanvas.style.display = "none"
			}
			jc = jc || {};
			var jt = jc.zoomCount || 0;
			var jh = jc.fixPosition;
			var jr = jc.fixMCPosition;
			var jf = jc.pixOffset;
			this._zoomCount = jt;
			var i9 = jv.getZoom();
			var ju = i9 + jt;
			var e = jv.config.enableContinuousZoom;
			var jl = 0.5;
			var jg = 5;
			var T = Math.pow(2, jt);
			var jx = this._baseLayerDiv;
			var ji = {
				x: jh.x - parseInt(jx.style.left, 10) - jv.offsetX,
				y: jh.y - parseInt(jx.style.top, 10) - jv.offsetY
			};
			var jd = this._animationDiv;
			var jp = jd.children.length;
			var jz = this._preZoomTimes;
			var js = [];
			var jq = this._transformStyleName;
			var je = this._transformOriginStyleName;
			for (var jo = jp - 1; jo > -1; jo--) {
				var jm = {};
				var jn = jd.children[jo].style;
				jm.top = parseInt(jn.top, 10);
				jm.left = parseInt(jn.left, 10);
				var jb = jm.left - ji.x;
				var ja = jm.top - ji.y;
				jm.dx = jb * T - jb;
				jm.dy = ja * T - ja;
				jm.preDx = jb * jz - jb;
				jm.preDy = ja * jz - ja;
				js[jo] = jm
			}
			var jw = this;
			var jk;
			var jy;
			var jj;
			this._zoomAni = new e0({
				fps: 60,
				duration: e ? 500 : 1,
				transition: function(i) {
					i = i * jg / (2 * jl);
					return jg * i - jl * i * i
				},
				render: function(jI) {
					jI = jI * (4 * jl) / (jg * jg);
					jk = jz + jI * (T - jz);
					var jB = i9 + m(jk);
					var jG = null;
					var jF = 0;
					var jJ = 0;
					if (jc.onAnimationBeforeLooping) {
						var jK = jc.onAnimationBeforeLooping(jI, jB);
						jG = jK.loopingCenter;
						jF = jK.yDiff;
						jJ = jK.totalYDiff
					}
					for (var jC = js.length - 1; jC > -1; jC--) {
						var jD = js[jC];
						if (jd.children[jC]) {
							var jH = jd.children[jC].style;
							jy = jD.preDx + (jD.dx - jD.preDx) * jI - jf.width * jI;
							jj = jD.preDy + (jD.dy - jD.preDy) * jI - jf.height * jI + jF;
							jH.left = jD.left + jy + "px";
							jH.top = jD.top + jj + "px";
							jH.height = jH.width = 256 * jk + "px"
						}
					}
					var jA = jf.width * jI;
					var jE = jf.height * jI;
					if (jv.isRestrict) {
						jw._enableCanvas2dMap && jw._canvas2dMapMgr.clearLabel()
					} else {
						jw._enableCanvas2dMap && jw._canvas2dMapMgr.drawLabel(jk, jh, i9, ju, jt, jI, jA, jE, jJ, jF)
					}
					jw._preZoomTimes = jk;
					jw._preRenderTick = jI;
					jc.onAnimationLooping && jc.onAnimationLooping(jI, jB, jG)
				},
				finish: function() {
					jw._preZoomTimes = 1;
					jw._zoomAni = null;
					jw._animationDiv = null;
					jc.onAnimationFinish && jc.onAnimationFinish();
					jw.showNonAnimationLayers()
				}
			});
			return this._zoomAni
		},
		stopAnimation: function() {
			if (this._zoomAni) {
				this._zoomAni.stop();
				this._zoomAni = null
			}
		}
	});

	function i6(e) {
		this._initVars(e);
		this._initColorCanvas();
		this._bindEvent(e)
	}
	es.extend(i6.prototype, {
		_initVars: function(e) {
			this._map = e._map;
			this._canvas2dMapMgr = e;
			this._labelCtx = e._labelCtx;
			this.ratio = this._map.config.ratio;
			this.sizeRatio = this.ratio > 1 ? 2 : 1;
			this.RANK1 = 1000000;
			this.RANK2 = 2000000;
			this.RANK3 = 3000000;
			this.RANK4 = 4000000;
			this.RANK5 = 5000000
		},
		_initColorCanvas: function() {
			var i = 256,
				T = bK("canvas"),
				e = T.style;
			e.width = i + "px";
			e.height = i + "px";
			T.width = i;
			T.height = i;
			this._colorCvsSize = i;
			this._colorCvs = T;
			this._colorCtx = T.getContext("2d")
		},
		getLabelImageData: function(jm) {
			var jl = jm.textImg;
			var T = jm.textPos;
			var jj = this.ratio;
			var jh = this.sizeRatio / jj;
			var ja = this._colorCtx;
			var je = this._colorCvsSize;
			ja.clearRect(0, 0, je, je);
			var jg = 0;
			var e = 0;
			var jd = 0;
			for (var jf = 0; jf < T.length; jf++) {
				if (T[jf].width > jg) {
					jg = T[jf].width;
					e = jf;
					jd = T[jf].drawX
				}
			}
			jg /= jh;
			var ji = 0;
			for (var jf = 0, jc = T.length; jf < jc; jf++) {
				var jk = T[jf];
				var jn;
				if (jf === e) {
					jn = 0
				} else {
					jn = jk.drawX - jd
				}
				ja.drawImage(jl, jk.srcX, jk.srcY, jk.width, jk.height, jn, ji, jk.width / jh, jk.height / jh);
				if (jk.width / jh > jg) {
					jg = jk.width / jh
				}
				ji += jk.height / jh + 2 * jj
			}
			var i9 = ja.getImageData(0, 0, jg, ji);
			var jb = ja.getImageData(0, 0, jg, ji);
			return [i9, jb]
		},
		_bindEvent: function(i) {
			var e = this,
				T = i._map;
			T.addEventListener("onspotmouseover", function(jc) {
				if (!this.isCanvasMap() || !this.temp.isPermitSpotOver) {
					return
				}
				if (jc.spots.length > 0) {
					var jb = jc.spots[0].userdata.uid;
					var ja = jc.spots[0].userdata.name;
					var i9 = e.findLabelByUid(jb, ja);
					i9 && e._toHighLightColor(i9)
				}
			});
			T.addEventListener("onspotmouseout", function(jc) {
				if (!this.isCanvasMap() || !this.temp.isPermitSpotOver) {
					return
				}
				if (jc.spots.length > 0) {
					var jb = jc.spots[0].userdata.uid;
					var ja = jc.spots[0].userdata.name;
					var i9 = e.findLabelByUid(jb, ja);
					i9 && e._toDefaultColor(i9)
				}
			});
			T.addEventListener("onspotclick", function(jc) {
				if (!this.isCanvasMap() || !this.temp.isPermitSpotOver) {
					return
				}
				if (jc.spots && jc.spots.length > 0) {
					var jb = jc.spots[0].userdata.uid;
					var ja = jc.spots[0].userdata.name;
					var i9 = e.findLabelByUid(jb, ja);
					i9 && e._changeBaseMapState(i9)
				} else {
					e._recoverNormalState()
				}
			});
			T.on("spot_status_reset", function() {
				e._recoverNormalState()
			});
			T.on("spot_highlight", function(ja) {
				var i9 = e.findLabelByUid(ja.uid);
				i9 && e._changeBaseMapState(i9)
			})
		},
		_getTextBound: function(jk) {
			if (!jk.textPos) {
				return null
			}
			var ji = this.ratio;
			var jg = this.sizeRatio / ji;
			var T = jk.textPos;
			var jj = jk.baseDrawX;
			var jh = jk.baseDrawY;
			var je = jj * ji + (T[0].drawX - jj) / jg;
			var jc = jh * ji + (T[0].drawY - jh) / jg;
			var ja = je + T[0].width / jg;
			var e = jc + T[0].height / jg;
			for (var jf = 0, jd = T.length; jf < jd; jf++) {
				var jl = T[jf];
				var jb = jj * ji + (jl.drawX - jj) / jg;
				if (jb < je) {
					je = jb
				}
				var i9 = jh * ji + (jl.drawY - jh) / jg;
				if (i9 < jc) {
					jc = i9
				}
				if (jb + jl.width > ja) {
					ja = jb + jl.width
				}
				if (i9 + jl.height > e) {
					e = i9 + jl.height
				}
			}
			return [je, jc, ja, e]
		},
		_toHighLightColor: function(T) {
			if (T._tempRank && T._tempRank == this.RANK5) {
				return
			}
			var jd = this._getTextBound(T);
			if (!jd) {
				return
			}
			var i9 = Math.round(jd[0]);
			var i = Math.round(jd[1]);
			var e = this.getLabelImageData(T);
			var jb = e[0];
			var ja = e[1];
			var jc = this._canvas2dMapMgr.getFilterImageData(jb, this.RANK5);
			T._oldImgData = ja;
			this._labelCtx.putImageData(jc, i9, i)
		},
		_toDefaultColor: function(e) {
			if (e._tempRank && e._tempRank == this.RANK5) {
				return
			}
			if (e._oldImgData) {
				var i = this.sizeRatio;
				var T = this._getTextBound(e);
				if (!T) {
					return
				}
				this._labelCtx.putImageData(e._oldImgData, Math.round(T[0]), Math.round(T[1]));
				e._oldImgData = null
			}
		},
		_changeBaseMapState: function(i9) {
			var T = this._canvas2dMapMgr;
			var i = i9.guid;
			var e = i9.guidExt;
			var ja = {
				guid: i,
				name: i9.name,
				guidExt: e
			};
			T._labelStrategy.setStrategyInfo(ja);
			T._loadData()
		},
		_recoverNormalState: function() {
			var e = this._canvas2dMapMgr;
			e._labelStrategy.setStrategyInfo(null);
			e._loadData()
		},
		findLabelByUid: function(jb, i9) {
			var jd = this._canvas2dMapMgr,
				e = jd._computedLabel;
			for (var ja = 0, T = e.length; ja < T; ja++) {
				var jc = e[ja];
				if (!jd.isClickableLabel(jc)) {
					continue
				}
				if (jb && jc.guid === jb) {
					return jc
				}
				if (i9 && jc.name === i9) {
					return jc
				}
			}
			return null
		}
	});

	function z(e) {
		this._initVars(e)
	}
	es.extend(z.prototype, {
		_initVars: function(e) {
			this._map = e._map;
			this._canvas2dMapMgr = e;
			this.ratio = this._map.config.ratio;
			this._strategyInfo = null;
			this.RANK1 = 1000000;
			this.RANK2 = 2000000;
			this.RANK3 = 3000000;
			this.RANK4 = 4000000;
			this.RANK5 = 5000000
		},
		setStrategyInfo: function(e) {
			this._strategyInfo = e
		},
		preComputeLabel: function(jf, j6, jP, jr, j0, kk) {
			var jJ = [],
				jn = jf._centerX,
				jl = jf._centerY,
				kl = jr * j0;
			var jV = this.ratio;
			var je = this._map.getZoom();
			var jE = 0;
			if (je === 5) {
				jE = 4
			}
			if (je === 8) {
				jE = -6
			}
			jf.sort(function(km, i) {
				if (km.x * km.y < i.x * i.y) {
					return -1
				} else {
					return 1
				}
			});
			for (var jG = 0, jC = jf.length; jG < jC; jG++) {
				var kb = jf[jG],
					jx = kb.x,
					ju = kb.y,
					js = kb.z;
				var jz = ev.calcLoopParam(jx, js)
					.offsetX;
				var jT = jx * kl,
					jS = (ju + 1) * kl,
					i9 = (jT - jn) / jr + j6 / 2 + jz,
					T = (jl - jS) / jr + jP / 2;
				for (var jD = 0, kf = kb.length; jD < kf; jD++) {
					var jh = kb[jD],
						jo = undefined,
						jm = undefined,
						kd = undefined,
						kc = undefined;
					var j2 = jh.baseDrawX = i9 + jh.baseX;
					var j1 = jh.baseDrawY = T + jh.baseY;
					if (jh.type == "fixed") {
						var jN = jh.iconPos,
							jq = jh.textPos,
							kh = jh.textImg;
						if (jN) {
							jN.drawX = i9 + jN.destX;
							jN.drawY = T + jN.destY;
							jo = jN.drawX;
							jm = jN.drawY;
							kd = jN.drawX + jN.width;
							kc = jN.drawY + jN.height
						}
						if (jq && kh) {
							for (var j3 = 0; j3 < jq.length; j3++) {
								var kg = jq[j3];
								kg.drawX = i9 + kg.destX;
								kg.drawY = T + kg.destY;
								if (!jo) {
									jo = kg.drawX;
									jm = kg.drawY;
									kd = kg.drawX + kg.width;
									kc = kg.drawY + kg.height
								} else {
									if (kg.drawX < jo) {
										jo = kg.drawX
									}
									if (kg.drawY < jm) {
										jm = kg.drawY
									}
									if (kg.drawX + kg.width > kd) {
										kd = kg.drawX + kg.width
									}
									if (kg.drawY + kg.height > kc) {
										kc = kg.drawY + kg.height
									}
								}
							}
						}
					} else {
						jh.tileX = i9;
						jh.tileY = T;
						jo = i9 + jh.minXOriginal;
						jm = T + jh.minYOriginal;
						kd = i9 + jh.maxXOriginal;
						kc = T + jh.maxYOriginal
					}
					if (jo != undefined) {
						var j5 = j2 + (jo - j2) / jV;
						var j4 = j1 + (jm - j1) / jV;
						var jH = j2 + (kd - j2) / jV;
						var jF = j1 + (kc - j1) / jV;
						jh.minX = j5;
						jh.minY = j4;
						jh.maxX = jH;
						jh.maxY = jF;
						var j9 = (j5 + jH) / 2,
							j8 = (j4 + jF) / 2,
							jQ = jn + (j9 - j6 / 2) * jr,
							jO = jl + (jP / 2 - j8) * jr;
						jh.geoX = jQ;
						jh.geoY = jO;
						jJ.push(jh)
					}
				}
			}
			if (kk) {
				for (var jG = 0, jC = kk.length; jG < jC; jG++) {
					var jB = kk[jG];
					var jY = jB[0];
					var ji = jB[1];
					var jN = jY.iconPos;
					var jc = jN.geoX;
					var ja = jN.geoY;
					var j2 = (jc - jn) / jr + j6 / 2;
					var j1 = (jl - ja) / jr + jP / 2;
					var jo = j2 + jN.destX;
					var jm = j1 + jN.destY;
					var kd = jo + jN.width;
					var kc = jm + jN.height;
					jY.textPos = jY.textPos || jY._textPos;
					var jq = jY.textPos;
					var j7 = jq[0];
					var jw = j2 + j7.destX;
					var jk = j1 + j7.destY;
					if (jk < jm) {
						jm = jk
					}
					if (jw + j7.width > kd) {
						kd = jw + j7.width
					}
					if (jk + j7.height > kc) {
						kc = jk + j7.height
					}
					if (jq.length === 2) {
						var jv = jq[1];
						var jt = j2 + jv.destX;
						var jj = j1 + jv.destY;
						if (jj < jm) {
							jm = jj
						}
						if (jt + jv.width > kd) {
							kd = jt + jv.width
						}
						if (jj + jv.height > kc) {
							kc = jj + jv.height
						}
					}
					jY._tempBounds = [jo, jm, kd, kc];
					var jN = ji.iconPos;
					var jc = jN.geoX;
					var ja = jN.geoY;
					var j2 = (jc - jn) / jr + j6 / 2;
					var j1 = (jl - ja) / jr + jP / 2;
					var jo = j2 + jN.destX;
					var jm = j1 + jN.destY;
					var kd = jo + jN.width;
					var kc = jm + jN.height;
					ji.textPos = ji.textPos || ji._textPos;
					var jq = ji.textPos;
					var j7 = jq[0];
					var jw = j2 + j7.destX;
					var jk = j1 + j7.destY;
					if (jw < jo) {
						jo = jw
					}
					if (jk < jm) {
						jm = jk
					}
					if (jk + j7.height > kc) {
						kc = jk + j7.height
					}
					if (jq.length === 2) {
						var jv = jq[1];
						var jt = j2 + jv.destX;
						var jj = j1 + jv.destY;
						if (jt < jo) {
							jo = jt
						}
						if (jj < jm) {
							jm = jj
						}
						if (jj + jv.height > kc) {
							kc = jj + jv.height
						}
					}
					ji._tempBounds = [jo, jm, kd, kc]
				}
				for (var jG = 0, jC = kk.length; jG < jC; jG++) {
					var jB = kk[jG];
					var jY = jB[0];
					var ji = jB[1];
					if (jG === 0 && ji.textPos) {
						ji._textPos = ji.textPos;
						delete ji.textPos
					}
					var ka = jY;
					if (!jY.textPos && ji.textPos) {
						ka = ji
					}
					var ke = ka._tempBounds;
					for (jD = jG + 1; jD < jC; jD++) {
						var jA = kk[jD];
						var jK = jA[0];
						var kj = jA[1];
						var jp = 0;
						var ki = jK._tempBounds;
						if (!(ke[2] < ki[0] || ke[0] > ki[2] || ke[3] < ki[1] || ke[1] > ki[3])) {
							jp++;
							if (jK.textPos) {
								jK._textPos = jK.textPos;
								delete jK.textPos
							}
						}
						var ki = kj._tempBounds;
						if (!(ke[2] < ki[0] || ke[0] > ki[2] || ke[3] < ki[1] || ke[1] > ki[3])) {
							jp++;
							if (kj.textPos) {
								kj._textPos = kj.textPos;
								delete kj.textPos
							}
						}
						if (jp >= 2) {
							if (ka.textPos) {
								ka._textPos = ka.textPos;
								delete ka.textPos
							}
						}
					}
				}
				for (var jG = 0, jC = kk.length; jG < jC; jG++) {
					var jB = kk[jG];
					var jY = jB[0];
					var ji = jB[1];
					var jL = jY;
					if (!jY.textPos && ji.textPos) {
						jL = ji
					}
					var jN = jL.iconPos;
					var jc = jN.geoX;
					var ja = jN.geoY;
					var j2 = jL.baseDrawX = (jc - jn) / jr + j6 / 2;
					var j1 = jL.baseDrawY = (jl - ja) / jr + jP / 2;
					jN.drawX = j2 + jN.destX;
					jN.drawY = j1 + jN.destY;
					var jo = jN.drawX;
					var jm = jN.drawY;
					var kd = jN.drawX + jN.width;
					var kc = jN.drawY + jN.height;
					var jq = jL.textPos;
					if (jq) {
						var j7 = jq[0];
						j7.drawX = j2 + j7.destX;
						j7.drawY = j1 + j7.destY;
						if (j7.drawX < jo) {
							jo = j7.drawX
						}
						if (j7.drawY < jm) {
							jm = j7.drawY
						}
						if (j7.drawX + j7.width > kd) {
							kd = j7.drawX + j7.width
						}
						if (j7.drawY + j7.height > kc) {
							kc = j7.drawY + j7.height
						}
						if (jq.length === 2) {
							var jv = jq[1];
							jv.drawX = j2 + jv.destX;
							jv.drawY = j1 + jv.destY;
							if (jv.drawX < jo) {
								jo = jv.drawX
							}
							if (jv.drawY < jm) {
								jm = jv.drawY
							}
							if (jv.drawX + jv.width > kd) {
								kd = jv.drawX + jv.width
							}
							if (jv.drawY + jv.height > kc) {
								kc = jv.drawY + jv.height
							}
						}
					}
					var j5 = j2 + (jo - j2) / jV;
					var j4 = j1 + (jm - j1) / jV;
					var jH = j2 + (kd - j2) / jV;
					var jF = j1 + (kc - j1) / jV;
					jL.minX = j5;
					jL.minY = j4;
					jL.maxX = jH;
					jL.maxY = jF;
					var jX = (j5 + jH) / 2;
					var jW = (j4 + jF) / 2;
					var jd = jn + (jX - j6 / 2) * jr;
					var jb = jl + (jP / 2 - jW) * jr;
					jL.geoX = jd;
					jL.geoY = jb;
					jJ.push(jL)
				}
			}
			var jZ = this._strategyInfo;
			if (jZ) {
				var jI = jZ.guid;
				var jR = jZ.name;
				var jy = jZ.guidExt;
				for (var jG = 0, jC = jJ.length; jG < jC; jG++) {
					var jg = jJ[jG];
					delete jg._tempRank;
					if (!this._canvas2dMapMgr.isClickableLabel(jg) || (jy === 1 && !jg.guidExt)) {
						continue
					}
					if ((jI && jI === jg.guid) || (jR && jR === jg.name)) {
						jg._tempRank = this.RANK5
					}
				}
			} else {
				for (var jG = 0, jC = jJ.length; jG < jC; jG++) {
					var jg = jJ[jG];
					if (jg.type == "line" || !jg.iconPos) {
						continue
					}
					delete jg._tempRank
				}
			}
			jJ.sort(function(kn, km) {
				var ko = kn._tempRank ? kn._tempRank : kn.rank,
					i = km._tempRank ? km._tempRank : km.rank;
				if (ko === i) {
					return kn.baseX - km.baseX
				}
				return i - ko
			});
			for (var jG = 0, jC = jJ.length; jG < jC; jG++) {
				var ka = jJ[jG];
				ka.isDel = false;
				ka.isFadeout = false;
				ka._schedule = 0;
				ka._isIgnore = false;
				ka.arrIntersectIndex = [];
				for (jD = jG + 1; jD < jC; jD++) {
					var jM = jJ[jD];
					if (!(ka.maxX - jE < jM.minX || ka.minX > jM.maxX - jE || ka.maxY - jE < jM.minY || ka.minY > jM.maxY - jE)) {
						ka.arrIntersectIndex.push(jD)
					}
				}
			}
			for (var jG = 0, jC = jJ.length; jG < jC; jG++) {
				var jg = jJ[jG];
				if (jg.isDel == false) {
					var e = jg.arrIntersectIndex;
					for (var jD = 0, kf = e.length; jD < kf; jD++) {
						var jU = jJ[e[jD]];
						jU.isDel = true;
						if (jU.guidExt === 1) {
							jU.isDel = false
						}
					}
				}
			}
			return jJ
		}
	});

	function S(e) {
		this._map = e;
		this._initCanvas();
		this._initVars();
		this._bindEvent();
		this._tileType = hb.getInstance("na")
	}
	bo.register(function(i) {
		if (i.getRenderType() === "canvas") {
			var e = i.config.style;
			if (bo["FeatureStyle" + e]) {
				i.canvas2dMapMgr = new S(i)
			} else {
				i.loadMapStyleFiles(function() {
					i.canvas2dMapMgr = new S(i);
					i.canvas2dMapMgr._loadData()
				})
			}
		}
	});
	es.extend(S.prototype, {
		_initCanvas: function() {
			var jc = this._map,
				ja = jc.getSize(),
				i9 = ja.width,
				i = ja.height,
				e = jc.platform,
				jd = bK("canvas"),
				jb = jd.style;
			var T = this.ratio = jc.config.ratio;
			this._width = i9;
			this._height = i;
			jb.cssText = "position: absolute;left:0;top:0;width:" + i9 + "px;height:" + i + "px;z-index:100;";
			jd.width = i9 * T;
			jd.height = i * T;
			this._labelCanvas = jd;
			this._labelCtx = jd.getContext("2d");
			e.appendChild(jd)
		},
		_initVars: function() {
			var e = iO("ditu", "normal");
			this._udt = e.udt;
			this._version = e.ver;
			this._labelDataUrls = dO.B_NORMAL_MAP.vectorTileUrls;
			this._style = bo["FeatureStyle" + this._map.config.style];
			this._labelCount = 0;
			this._vectorDrawLib = new gh(this);
			this._cache = {
				maxNum: 500,
				delNum: 50,
				arrCache: []
			};
			this._computedLabel = null;
			this._spotData = null;
			this._labelStrategy = new z(this);
			this._labelClick = new i6(this);
			this._biz = new dV(this);
			this._map.temp.isPermitSpotOver = true;
			this.labelStyleParam = "pl";
			if (this._map.getMapType() === BMAP_SATELLITE_MAP) {
				this.labelStyleParam = "sl"
			}
			this.statRequestCount = 0;
			this.statResponseCount = 0
		},
		_resizeHandler: function(jb) {
			var jd = this,
				i = jd._map,
				ja = i.getSize(),
				T = ja.width,
				jf = ja.height;
			var jc = this.ratio;
			var jg = this._labelCanvas,
				i9 = jg.style;
			i9.width = T + "px";
			i9.height = jf + "px";
			jg.width = T * jc;
			jg.height = jf * jc;
			jd._width = T;
			jd._height = jf;
			var je = true;
			jd._loadData(je)
		},
		_bindEvent: function() {
			var e = this,
				i = e._map;
			i.addEventListener("load", function(T) {
				e.clearLabel();
				e._loadData()
			});
			i.addEventListener("zoomend", function(T) {
				if (!T.notClearLabel) {
					e.clearLabel()
				}
				e._loadData()
			});
			i.addEventListener("moveend", function(T) {
				e._loadData()
			});
			i.addEventListener("resize", function(T) {
				e._resizeHandler(T)
			});
			i.addEventListener("maptypechange", function(T) {
				if (T.mapType === BMAP_EARTH_MAP) {
					e.hideLabelCanvas()
				} else {
					e.showLabelCanvas();
					if (T.mapType === BMAPGL_NORMAL_MAP) {
						e.labelStyleParam = "pl"
					} else {
						if (T.mapType === BMAP_SATELLITE_MAP) {
							e.labelStyleParam = "sl"
						}
					}
					e._loadData()
				}
			});
			i.addEventListener("streetlayer_show", function(T) {
				if (this.isCanvasMap()) {
					e.showLabelCanvas()
				}
			});
			i.addEventListener("streetlayer_hide", function(T) {
				if (this.isCanvasMap()) {
					e.hideLabelCanvas()
				}
			});
			i.addEventListener("loadbizdata", function(i9) {
				var T = i9.data;
				e._biz.proecessBizData(T, function() {
					e.updateLabel()
				})
			});
			i.addEventListener("unloadbizdata", function(T) {
				e._biz.clearBizData();
				e.updateLabel()
			});
			e.isDrawText = false;
			setTimeout(function() {
				if (!e.isDrawText) {
					i.dispatchEvent(new e7("onmapwhitescreen"))
				}
			}, 10000)
		},
		getStyle: function() {
			return this._style
		},
		_getZoomUnits: function(e) {
			return Math.pow(2, 18 - e)
		},
		_createCacheForm: function(T, jd, jc, i) {
			var jb = this;
			var e = jb._cache;
			var i9 = e.arrCache;
			var je = this._getLabelId(T, jd, jc, i);
			var ja = {
				id: je,
				updateLabelCounter: 0
			};
			i9.push(ja);
			i9[je] = ja;
			return ja
		},
		_getLabelId: function(i, i9, T, e) {
			return "_" + i + "_" + i9 + "_" + T + "_" + e + "_" + this.labelStyleParam
		},
		_getCache: function(i, i9, T, e) {
			return this._cache.arrCache[this._getLabelId(i, i9, T, e)]
		},
		_setCacheValue: function(ja, jn, jl, i9, jg) {
			var ji = this;
			var e = ji._cache;
			var jc = e.arrCache;
			var je = e.maxNum;
			var jb = e.delNum;
			var jm = this._getLabelId(ja, jn, jl, i9);
			var jh = jc[jm];
			if (jg) {
				jh.lb = jg
			}
			if (jc.length > je) {
				var T = jc.splice(0, jb);
				for (var jf = 0, jd = T.length; jf < jd; jf++) {
					var jj = T[jf],
						jk = jj.id;
					if (jc[jk].lb) {
						jc[jk].lb = null
					}
					jc[jk] = null;
					delete jc[jk]
				}
				T = null
			}
		},
		_loadData: function(jl) {
			var jE = this._map;
			if (!jE.isCanvasMap()) {
				return
			}
			var je = jE.getCenterIn();
			var jD = ev.calcLoopCenterPoint(je);
			var jd = this._tileType;
			var jg = this._width / 2;
			var js = this._height;
			var jt = jE.getZoom();
			var jp = jd.getDataZoom(jt);
			var ji = jE.getZoomUnits(jt);
			var jo = ji * jg;
			var jC = jD.lng - jo;
			var jB = jD.lng + jo;
			var jm = ev.isAddWidth(jC, jB);
			jg = jm ? jg * 1.5 : jg;
			var jn = jd.getTileSize(jt);
			var ja = jd.getMercatorSize(jt, jp);
			var jh = Math.floor(jD.lng / ja);
			var jj = Math.floor(jD.lat / ja);
			var jb = [jh, jj, (jD.lng - jh * ja) / ja * jn, (jD.lat - jj * ja) / ja * jn];
			var jv = jb[0] - Math.ceil((jg - jb[2]) / jn);
			var jz = jb[1] - Math.ceil((js / 2 - jb[3]) / jn);
			var jr = jb[0] + Math.ceil((jg + jb[2]) / jn);
			var jw = jb[1] + Math.ceil((js / 2 + jb[3]) / jn);
			jE.temp.isPermitSpotOver = false;
			var e = [];
			for (var jy = jv; jy < jr; jy++) {
				for (var jx = jz; jx < jw; jx++) {
					e.push([jy, jx, jp]);
					var jq = "id_" + jy + "_" + jx + "_" + jt;
					e[jq] = true
				}
			}
			e._zoom = jp;
			e = ev.calcLoopTiles(e, jt);
			e.sort((function(i) {
				return function(jG, jH) {
					return ((0.4 * Math.abs(jG[0] - i[0]) + 0.6 * Math.abs(jG[1] - i[1])) - (0.4 * Math.abs(jH[0] - i[0]) + 0.6 * Math.abs(jH[1] - i[1])))
				}
			})([jb[0], jb[1]]));
			var jk = this._cache.arrCache;
			this._curViewLabels = [];
			var i9 = "viewKey_" + Math.floor(je.lng) + "_" + Math.floor(je.lat) + "_" + jt;
			this.statRequestCount = 0;
			this.statResponseCount = 0;
			this._labelCount += e.length;
			var jf = jt;
			for (var jy = 0, ju = e.length; jy < ju; jy++) {
				var jh = e[jy][0];
				var jj = e[jy][1];
				var T = e[jy][2];
				var jc = this._getLabelId(jh, jj, T, jf);
				var jA = jk[jc];
				if (!jA) {
					jA = this._createCacheForm(jh, jj, T, jf)
				}
				if (typeof jA.lb === "undefined") {
					jA.lb = null;
					this._loadLabelData(jh, jj, T, jf, jn, i9);
					this.statRequestCount++
				} else {
					if (jA.lb) {
						this._curViewLabels.push(jA.lb);
						this._labelCount--
					} else {
						if (jl) {
							this._loadLabelData(jh, jj, T, jf, jn, i9)
						}
						jA.updateLabelCounter++
					}
				}
			}
			if (this._labelCount === 0) {
				this.updateLabel()
			}
			var jF = this;
			if (jF.errorTimer) {
				clearTimeout(jF.errorTimer)
			}
			jF.errorTimer = setTimeout(function() {
				if (jF._labelCount !== 0) {
					jF._labelCount = 0;
					jF.updateLabel()
				}
				var jH = new e7("onloaddatatimeout");
				var jI = 0;
				var jG = 0;
				var jJ = 0;
				var i = 0;
				if (jF.statRequestCount === jF.statResponseCount) {
					jI = 1
				} else {
					jG = 1
				}
				if (jG === 1) {
					i = jF.statRequestCount - jF.statResponseCount;
					jJ = jF.statResponseCount
				}
				jH.noTimeoutCount = jI;
				jH.timeoutCount = jG;
				jH.timeoutNoLoaded = i;
				jH.timeoutLoaded = jJ;
				jF._map.dispatchEvent(jH)
			}, 500)
		},
		clearLabel: function() {
			var e = this._width;
			var T = this._height;
			var i = this.ratio;
			this._labelCtx.clearRect(0, 0, e * i, T * i)
		},
		updateLabel: function() {
			var i = this._map;
			var e = i.getCenterIn();
			var i9 = this._width;
			var jc = this._height;
			var jf = i.getZoom();
			var je = this._tileType.getTileSize(jf);
			var jd = this._getZoomUnits(jf);
			var T = this._labelCtx;
			this._labelCanvas.style.left = -i.offsetX + "px";
			this._labelCanvas.style.top = -i.offsetY + "px";
			var jb = this._curViewLabels;
			jb._centerX = e.lng;
			jb._centerY = e.lat;
			var ja = this._biz.bizLabels;
			this._computedLabel = this._labelStrategy.preComputeLabel(jb, i9, jc, jd, je, ja);
			this._computedLabel._zoom = jf;
			this.clearLabel();
			this._vectorDrawLib.drawIconAndText(T, this._computedLabel, jf);
			this._addSpotData();
			i.temp.isPermitSpotOver = true;
			if (jb.length > 0) {
				this.isDrawText = true
			}
		},
		_loadLabelData: function(ji, jh, jg, T, jj, e) {
			var jb = ji.toString();
			var i9 = jh.toString();
			var jd = "cbk_" + jb.replace("-", "_") + "_" + i9.replace("-", "__") + "_" + Math.floor(jg);
			var jn = eV + "." + jd;
			var jm = this._labelDataUrls;
			var jf = Math.abs(ji + jh) % jm.length;
			var js = jm[jf];
			if (window.offLineIPAddress) {
				js = window.offLineIPAddress + "pvd/"
			}
			var i = this.labelStyleParam;
			var jl = "?qt=vtile";
			var jo = "";
			if (this._map.config.style !== "default") {
				jo = "&styleId=1"
			}
			var jk = "x={x}&y={y}&z={z}&udt={udt}&v={v}&styles={styles}" + jo + "&textonly=1&textimg=1&scaler={scaler}&fn=" + encodeURIComponent(jn);
			var jp = ev.calcLoopParam(ji, jg)
				.col;
			var je = this.ratio > 1 ? 2 : 1;
			var jc = jk.replace(/{x}/, jp)
				.replace(/{y}/, jh)
				.replace(/{z}/, Math.floor(jg))
				.replace(/{styles}/, i)
				.replace(/{udt}/, this._udt)
				.replace(/{v}/, this._version)
				.replace(/{scaler}/, je);
			var ja = js + jl + "&param=" + window.encodeURIComponent(eo(jc));
			var jr = this;
			var jq = jr._map;
			bo[jd] = function(jt) {
				jr._vectorDrawLib.parseLabelData(jt, ji, jh, jg, T, jj, function(jy) {
					var jv = jq.getCenterIn();
					var jz = jq.getZoom();
					var jB = "viewKey_" + Math.floor(jv.lng) + "_" + Math.floor(jv.lat) + "_" + jz;
					jr._labelCount--;
					var jC = jr._getCache(ji, jh, jg, T)
						.updateLabelCounter;
					jr._labelCount -= jC;
					var jw = jr._curViewLabels;
					if (jB === e || (jr._labelCount < 0 && jz === jg)) {
						jw.push(jy)
					}
					if (jB === e) {
						jr.statResponseCount++
					}
					if (jr._labelCount <= 0) {
						var ju = (new Date())
							.getTime();
						jr.updateLabel();
						var jx = (new Date())
							.getTime();
						var jA = new e7("oncanvasmaploaded");
						jA.drawTime = jx - ju;
						if (jr.statResponseCount === jr.statRequestCount) {
							jA.isAllLoadedDrawing = true
						}
						jq.dispatchEvent(jA)
					}
					jr._setCacheValue(ji, jh, jg, T, jy);
					delete bo[jd]
				})
			};
			f5.load(ja)
		},
		drawLabel: function(T, i9, jg, i, je, ja, e, jb, jf, jc) {
			var jd = this;
			if (!jd._computedLabel) {
				return
			}
			if (jd._computedLabel._zoom !== jg) {
				jd.clearLabel();
				return
			}
			jd._map.temp.isPermitSpotOver = false;
			jd.clearLabel();
			jd._vectorDrawLib.zoomingIconAndText(this._labelCtx, jd._computedLabel, T, i9, i, je, ja, e, jb, jf, jc)
		},
		_addSpotData: function() {
			this._spotData = [];
			var jg = this._map.getZoom();
			for (var jb = 0, ja = this._computedLabel.length; jb < ja; jb++) {
				var jd = this._computedLabel[jb];
				if (!this.isClickableLabel(jd) || (jd.guidExt === 1 && jd.startScale > jg)) {
					continue
				}
				var jc = [];
				jc[0] = (jd.minX - jd.maxX) / 2;
				jc[1] = (jd.minY - jd.maxY) / 2;
				jc[2] = (jd.maxX - jd.minX) / 2;
				jc[3] = (jd.maxY - jd.minY) / 2;
				var i9 = null;
				if (jd.iconPos) {
					i9 = new cd(jd.iconPos.geoX, jd.iconPos.geoY)
				}
				var T = jd.name ? jd.name.replace("\\\\", "<br>") : "";
				if (jd.iconPos && jd.iconPos.iconType.indexOf("ditie") > -1 && this._map.getZoom() > 14) {
					T = ""
				}
				var jf = {
					n: T,
					pt: new cd(jd.geoX, jd.geoY),
					userdata: {
						iconPoint: i9,
						uid: jd.guid,
						name: T,
						type: jd.iconPos ? jd.iconPos.iconType : "",
						iconImg: jd.iconImg,
						mapPoi: true,
						adver_log: jd.adver_log || ""
					},
					bd: jc,
					tag: "MAP_SPOT_INFO"
				};
				this._spotData.push(jf)
			}
			var je = new e7("onspotsdataready");
			je.spots = this._spotData;
			this._map._spotDataOnCanvas = this._spotData;
			this._map.dispatchEvent(je)
		},
		isClickableLabel: function(e) {
			if (e.isDel || (!e.guid && !e.name)) {
				return false
			}
			return true
		},
		getFilterImageData: function(T, jc) {
			var jd = T.data,
				jb = this._labelStrategy,
				jc = parseInt(jc);
			for (var je = 0, ja = jd.length; je < ja; je += 4) {
				var e = jd[je],
					jf = jd[je + 1],
					jg = jd[je + 2],
					jh = jd[je + 3];
				if (jh === 0) {
					continue
				}
				var i9 = Math.round((e + jf + jg) / 3);
				var ji = i9 - 90;
				ji = ji < 0 ? 0 : ji;
				if (jc === jb.RANK5) {
					jd[je] = 51 + ji * 1.3;
					jd[je + 1] = 133 + ji * 0.8;
					jd[je + 2] = 255
				}
			}
			return T
		},
		showLabelCanvas: function() {
			this._labelCanvas.style.visibility = ""
		},
		hideLabelCanvas: function() {
			this._labelCanvas.style.visibility = "hidden"
		}
	});
	var aJ = 5;
	var h7 = 4;
	var fR = 3;
	var H = 2;
	var dU = 1;
	var gH = 0;
	var i7 = 3;
	var hv = 5;
	var eK = {
		3: {
			start: 3,
			base: 3
		},
		4: {
			start: 4,
			base: 5
		},
		5: {
			start: 4,
			base: 5
		},
		6: {
			start: 6,
			base: 7
		},
		7: {
			start: 6,
			base: 7
		},
		8: {
			start: 8,
			base: 9
		},
		9: {
			start: 8,
			base: 9
		},
		10: {
			start: 10,
			base: 10
		},
		11: {
			start: 11,
			base: 12
		},
		12: {
			start: 11,
			base: 12
		},
		13: {
			start: 11,
			base: 12
		},
		14: {
			start: 14,
			base: 15
		},
		15: {
			start: 14,
			base: 15
		},
		16: {
			start: 16,
			base: 17
		},
		17: {
			start: 16,
			base: 17
		},
		18: {
			start: 18,
			base: 19
		},
		19: {
			start: 18,
			base: 19
		},
		20: {
			start: 18,
			base: 19
		},
		21: {
			start: 18,
			base: 19
		}
	};

	function gh(i9) {
		this._canvas2dMapMgr = i9;
		var i = this.ratio = i9._map.config.ratio;
		this._featureStyle = null;
		this._map = i9._map;
		var T = bp();
		var e = "udt=" + T.udt + "&v=" + T.ver;
		this.sizeRatio = this.ratio > 1 ? 2 : 1;
		this._binaryCache = {};
		this._iconCache = {};
		this._initColorCanvas()
	}
	es.extend(gh.prototype, {
		_initColorCanvas: function() {
			var i = 256,
				T = bK("canvas"),
				e = T.style;
			e.width = i + "px";
			e.height = i + "px";
			T.width = i;
			T.height = i;
			this._colorCvs = T;
			this._colorCtx = T.getContext("2d")
		},
		parseLabelData: function(i, jb, ja, i9, e, je, jd) {
			if (!this._featureStyle) {
				this._featureStyle = this._canvas2dMapMgr.getStyle()
			}
			if (!i || !i[0]) {
				jd([]);
				return
			}
			var jc = this._map.getZoomUnits();
			var T = this;
			this.loadTextPng(i, je, jb, ja, i9, e, jc, jd)
		},
		loadTextPng: function(jq, jh, jf, je, jc, i, ja, i9) {
			var jp = this;
			var e = jq[5];
			var jo = this._map;
			var jl = jo.getZoom();
			var T = jo.getSize();
			var jm = T.width;
			var jk = T.height;
			var jn = jo.getCenterIn();
			var jd = jn.lng;
			var jb = jn.lat;
			var jj = jf * jh * ja;
			var ji = (je + 1) * jh * ja;
			if (e) {
				var jg = new Image();
				jg.onload = function() {
					jp.calcIconAndTextInfo(jq, jg, jh, jf, je, jc, i, ja, jj, ji, i9);
					delete this.onload
				};
				jg.src = e
			} else {
				setTimeout(function() {
					jp.calcIconAndTextInfo(jq, null, jh, jf, je, jc, i, ja, jj, ji, i9)
				}, 1)
			}
		},
		calcIconAndTextInfo: function(js, jj, jk, ji, jf, jd, i9, jb, jm, jl, ja) {
			var jr = this;
			var jq = jr._featureStyle;
			var jg = [];
			jg.x = ji;
			jg.y = jf;
			jg.z = jd;
			var jh = jr._canvas2dMapMgr,
				T = ji * jb * jk,
				jp = (jf + 1) * jb * jk,
				jc = {
					tileLeft: T,
					tileTop: jp,
					zoomUnits: jb
				};
			var e = [];
			if (js[0]) {
				for (var jn = 0; jn < js[0].length; jn++) {
					if (js[0][jn][0] === i7) {
						e.push(js[0][jn])
					}
				}
			}
			var je = js[2] || [];
			for (var jn = 0; jn < e.length; jn++) {
				this._getFixedLabelInfo(e[jn], jj, i9, jb, jk, jm, jl, jg)
			}
			var jo = Math.pow(2, i9 - jd);
			for (jn = 0; jn < je.length; jn++) {
				this._getLineLabelInfo(je[jn], jj, jd, i9, jb, jk, jm, jl, jo, jg)
			}
			ja(jg)
		},
		_getFixedLabelInfo: function(jj, jn, ja, je, jo, jr, jq, jt) {
			var ji = jj[1];
			if (!ji) {
				return
			}
			var jv = this._map.getZoom();
			var jD = this._map.config.style;
			var jE = this._featureStyle;
			var jf = ja;
			if (jf === 9) {
				jf = 8
			}
			for (var jA = 0; jA < ji.length; jA++) {
				var jF = ji[jA];
				var e = jF[0];
				var i9 = aO.getStyleFromCache(jD, e, "point", jf, jE);
				var jz = aO.getStyleFromCache(jD, e, "pointText", jf, jE);
				if ((!jz || jz.length === 0) && (!i9 || i9.length === 0)) {
					if (jf === 5) {
						var jd = jF[1];
						if (!jd) {
							continue
						}
						for (var jw = 0; jw < jd.length; jw++) {
							var ju = jd[jw][4];
							if (ju && ju[7] === "北京") {
								i9 = aO.getStyleFromCache(jD, e, "point", 6, jE);
								jz = aO.getStyleFromCache(jD, e, "pointText", 6, jE);
								break
							} else {
								continue
							}
						}
					} else {
						continue
					}
				}
				var jd = jF[1];
				if (!jd) {
					continue
				}
				var jB = null;
				var jg = 1;
				var T = 0;
				var jm = 0;
				if (i9 && i9[0]) {
					i9 = i9[0];
					jB = i9.icon;
					jg = i9.zoom ? i9.zoom / 100 : 1
				} else {
					i9 = null
				}
				for (var jw = 0; jw < jd.length; jw++) {
					var ju = jd[jw][4];
					if (!ju) {
						continue
					}
					var jy = ju[2];
					if (!this._isVisible(jy, jv)) {
						continue
					}
					var jh = ju[12];
					if (jz && jz.length > 0 && !jh) {
						continue
					}
					var jl = Math.round(ju[0] / 100);
					var jk = Math.round(ju[1] / 100);
					var jx = {
						lng: jr + jl,
						lat: jq - (jo * je - jk)
					};
					var jc = jl / je;
					var jb = jo - jk / je;
					var jp = ju[7] || "";
					var jC = ju[5];
					var js = {
						type: "fixed",
						name: jp,
						textImg: jn,
						rank: ju[4],
						baseX: jc,
						baseY: jb,
						iconPos: null,
						textPos: null,
						guid: ju[3] || "",
						tracer: jy,
						direction: jC,
						startScale: 3
					};
					if ((jC !== h7 && jh || !jh) && jB !== null) {
						js.iconPos = this._getIconPosition(jB, jg, jc, jb, jx);
						if (js.iconPos) {
							T = js.iconPos.width;
							jm = js.iconPos.height
						}
					}
					if (T === 0) {
						js.direction = h7
					}
					if (jh) {
						js.textPos = this._getTextDrawData(ju, jc, jb, T, jm)
					}
					if (js.textPos || js.iconPos) {
						jt.push(js)
					}
				}
			}
		},
		_isVisible: function(e, i) {
			var i9;
			if (!this._binaryCache[e]) {
				i9 = e.toString(2);
				if (i9.length < 8) {
					i9 = new Array(8 - i9.length + 1)
						.join("0") + i9
				}
				this._binaryCache[e] = i9
			}
			i9 = this._binaryCache[e];
			var T = eK[i].start;
			return i9[i - T] === "1"
		},
		_getIconPosition: function(jd, jb, T, i, e) {
			var i9 = this._map.config.style;
			var je = bo["iconSetInfo" + i9][jd];
			if (!je) {
				if (jd.charCodeAt(0) >= 48 && jd.charCodeAt(0) <= 57) {
					je = bo["iconSetInfo" + i9]["_" + jd]
				}
			}
			if (!je) {
				return null
			}
			var ja = je[0];
			var jc = je[1];
			ja = ja * jb;
			jc = jc * jb;
			return {
				srcX: 0,
				srcY: 0,
				destX: T - ja / 2,
				destY: i - jc / 2,
				width: ja,
				height: jc,
				geoX: e.lng,
				geoY: e.lat,
				mcPt: e,
				iconType: jd
			}
		},
		_getTextDrawData: function(jk, jj, ji, i9, jg) {
			var jp = jk[5];
			if (typeof jp !== "number") {
				jp = 0
			}
			var je = this.ratio;
			var jd = je / 2;
			i9 *= jd;
			jg *= jd;
			var jf = jk[12];
			var ja = jf.length;
			var js = 0;
			var jr = 0;
			var jo = [];
			var jn = 0;
			var jq = 0;
			for (var jm = 0; jm < ja; jm++) {
				jq += Math.round(jf[jm][3])
			}
			for (var jm = 0; jm < ja; jm++) {
				var jc = jf[jm];
				var jb = jc[0];
				var i = jc[1];
				var T = jc[2];
				var e = jc[3];
				var jt = 2 * je;
				var jl = 0;
				if (i9 !== 0) {
					jl = 2 * je
				}
				if (i9 === 0) {
					jp = h7
				}
				switch (jp) {
					case fR:
						var jh = ji - jq / 2 - jt * (ja - 1) / 2;
						js = jj - T - i9 / 2 - jl;
						jr = jh + jn + jt * jm;
						break;
					case dU:
						var jh = ji - jq / 2 - jt * (ja - 1) / 2;
						js = jj + i9 / 2 + jl;
						jr = jh + jn + jt * jm;
						break;
					case H:
						var jh = ji - jg / 2 - jq - jt * (ja - 1) - jt;
						js = jj - T / 2;
						jr = jh + jn + jt * jm;
						break;
					case gH:
						var jh = ji + jg / 2 + jt / 2;
						js = jj - T / 2;
						jr = jh + jn + jt * jm;
						break;
					case h7:
						var jh = ji - e / 2 - jt * (ja - 1) / 2;
						js = jj - T / 2;
						jr = jh + jn + jt * jm;
						break
				}
				jn += e;
				if (T > 0 && e > 0) {
					jo.push({
						srcX: jb,
						srcY: i,
						destX: js,
						destY: jr,
						width: T,
						height: e
					})
				}
			}
			if (jo.length > 0) {
				return jo
			}
			return null
		},
		_getLineLabelInfo: function(jh, i9, ja, jw, jJ, jo, ju, jt, jv, jn) {
			if (jh.length !== 10) {
				return
			}
			var jy = this.ratio;
			var T = this.ratio;
			var jF = jh[7].length;
			var jp = jh[1];
			var jH = jh[3];
			var jN = jh[8];
			var jd = jh[4];
			var e = 2;
			var jb = jd.slice(0, e);
			for (var jK = e; jK < jd.length; jK += e) {
				jb[jK] = jb[jK - e] + jd[jK];
				jb[jK + 1] = jb[jK - (e - 1)] + jd[jK + 1]
			}
			for (var jK = e; jK < jd.length; jK += e) {
				if (jK % (jH * e) === 0 || jK % (jH * e) === 1) {
					continue
				}
				jb[jK] = jb[jK - e] + jd[jK] / jv;
				jb[jK + 1] = jb[jK - (e - 1)] + jd[jK + 1] / jv
			}
			for (var jM = 0; jM < jF; jM++) {
				var jI = jh[7][jM];
				if (!this._isVisible(jI, jw)) {
					continue
				}
				var jA = jh[6][jM];
				var jm = jM * jH * e;
				jd = jb.slice(jm, jm + jH * e);
				var jq = [];
				var jz = undefined;
				var jx = undefined;
				var jl = undefined;
				var jk = undefined;
				var jN = jh[9].slice(0);
				if (jA) {
					jN.reverse()
				}
				var jD;
				var jB;
				for (var jL = 0; jL < jH; jL++) {
					var jj = jh[5][jH * jM + jL];
					var jE = jd[jL * e] / 100;
					var jC = jd[jL * e + 1] / 100;
					var ji = jN[jL];
					var je = ji[0];
					var jg = ji[1];
					var jc = ji[2];
					var jf = ji[3];
					var js;
					var jr;
					var jP;
					var jO;
					if (jL === 0) {
						jD = jP = jE / jJ;
						jB = jo - jC / jJ;
						jO = jC / jJ
					} else {
						jP = jE / jJ;
						jO = jC / jJ
					}
					var jR = jD + (jP - jD) * T - jc / 2;
					var jQ = jB + (jo - jO - jB) * T - jf / 2;
					if (jz === undefined) {
						jz = jD - jc / 2;
						jx = jB - jf / 2;
						jl = jz + jc;
						jk = jx + jf
					} else {
						if (jR < jz) {
							jz = jR
						}
						if (jQ < jx) {
							jx = jQ
						}
						if (jR + jc > jl) {
							jl = jR + jc
						}
						if (jQ + jf > jk) {
							jk = jQ + jf
						}
					}
					jq.push({
						angle: jj,
						srcX: je,
						srcY: jg,
						destX: jR,
						destY: jQ,
						width: jc,
						height: jf
					})
				}
				var jG = {
					type: "line",
					textImg: i9,
					rank: jp,
					baseX: jD,
					baseY: jB,
					arrWordPos: jq,
					minXOriginal: jz,
					minYOriginal: jx,
					maxXOriginal: jl,
					maxYOriginal: jk,
					text: ""
				};
				jn.push(jG)
			}
		},
		alterColor: function(jc, e, jb) {
			var T = this._colorCtx,
				i = this._canvas2dMapMgr;
			T.clearRect(0, 0, jc.width, jc.height);
			T.drawImage(e, jc.srcX, jc.srcY, jc.width, jc.height, 0, 0, jc.width, jc.height);
			var ja = T.getImageData(0, 0, jc.width, jc.height),
				i9 = i.getFilterImageData(ja, jb);
			T.putImageData(i9, 0, 0)
		},
		drawIconAndText: function(jo, jn, e) {
			var jf = this.ratio;
			var jd = this.sizeRatio / jf;
			var jh = 2 / jf;
			var jz = this;
			for (var jr = 0, jp = jn.length; jr < jp; jr++) {
				var jg = jn[jr];
				if (jg.isDel == false) {
					var ja = jg.baseDrawX;
					var i9 = jg.baseDrawY;
					if (jg.type == "fixed") {
						var jc = jg.iconPos,
							js = jg.textPos,
							jl = jg.textImg,
							jv = jg.startScale;
						if (jc && jv <= e) {
							var T = this._iconCache[jc.iconType];
							if (T) {
								if (T.img) {
									jo.drawImage(T.img, 0, 0, T.img.width, T.img.height, Math.round(ja * jf + (jc.drawX - ja) / jh), Math.round(i9 * jf + (jc.drawY - i9) / jh), jc.width / jh, jc.height / jh)
								} else {
									T.drawLabels.push(jg)
								}
							} else {
								if (!T) {
									this._iconCache[jc.iconType] = {
										img: null,
										drawLabels: [jg]
									};
									var jB = new Image();
									jB._iconName = jc.iconType;
									jB.onload = function() {
										var jH = jz._iconCache[this._iconName];
										jH.img = this;
										this.onload = null;
										for (var jD = 0; jD < jH.drawLabels.length; jD++) {
											var jF = jH.drawLabels[jD];
											var jE = jF.baseDrawX;
											var jC = jF.baseDrawY;
											var jG = jF.iconPos;
											jo.drawImage(this, 0, 0, this.width, this.height, Math.round(jE * jf + (jG.drawX - jE) / jh), Math.round(jC * jf + (jG.drawY - jC) / jh), jG.width / jh, jG.height / jh)
										}
										jH.drawPos = []
									};
									jB.src = w.getIconSetPath(jz._map.config.style) + jc.iconType + ".png"
								}
							}
						}
						if (js && jl && jv <= e) {
							for (var je = 0; je < js.length; je++) {
								var jm = js[je];
								if (!jg._tempRank) {
									jo.drawImage(jl, jm.srcX, jm.srcY, jm.width, jm.height, Math.round(ja * jf + (jm.drawX - ja) / jd), Math.round(i9 * jf + (jm.drawY - i9) / jd), jm.width / jd, jm.height / jd)
								} else {
									this.alterColor(jm, jl, jg._tempRank);
									jo.drawImage(this._colorCvs, 0, 0, jm.width, jm.height, Math.round(ja * jf + (jm.drawX - ja) / jd), Math.round(i9 * jf + (jm.drawY - i9) / jd), jm.width / jd, jm.height / jd)
								}
							}
						}
					} else {
						var jb = jg.arrWordPos,
							jl = jg.textImg,
							jk = jg.tileX,
							ji = jg.tileY;
						for (var jq = 0, jj = jb.length; jq < jj; jq++) {
							var jt = jb[jq];
							var jA = Math.round(jk + jt.destX);
							var jy = Math.round(ji + jt.destY);
							var ju = jt.angle;
							jA = ja * jf + jA - ja;
							jy = i9 * jf + jy - i9;
							if (ju > 10 && ju < 350) {
								jo.save();
								var jx = Math.round(jA + jt.width / 2);
								var jw = Math.round(jy + jt.height / 2);
								jo.translate(jx, jw);
								jo.rotate(-ju / 180 * Math.PI);
								jo.drawImage(jl, jt.srcX, jt.srcY, jt.width, jt.height, -Math.round(jt.width / 2), -Math.round(jt.height / 2), jt.width / jd, jt.height / jd);
								jo.restore()
							} else {
								jo.drawImage(jl, jt.srcX, jt.srcY, jt.width, jt.height, jA, jy, jt.width / jd, jt.height / jd)
							}
						}
					}
				}
			}
		},
		isCollide: function(jb, jk, jj, e, jd, T, jf) {
			for (var ja = 0, i9 = T.length; ja < i9; ja++) {
				var je = T[ja],
					jc = 1 / Math.pow(2, jf + 1),
					ji = jc * je[3] / 2,
					jh = jc * je[4] / 2,
					jg = je[0];
				if (jg != jb) {
					if (!(jk + e < je[1] - ji || jk > je[1] + je[3] + ji || jj + jd < je[2] - jh || jj > je[2] + je[4] + jh)) {
						return true
					}
				}
			}
			return false
		},
		zoomingIconAndText: function(jz, jt, i9, jx, jy, j0, jG, jh, jM, jF, jq) {
			var j1 = this.ratio;
			var ji = this.sizeRatio / j1;
			var j2 = 2 / j1;
			var kc = j1 / 2;
			var jW = jx.x;
			var jV = jx.y;
			var jA = 2 * j1;
			if (jq !== 0) {
				jV += jF
			}
			var jl = undefined,
				je = undefined,
				jb = undefined,
				jg = undefined,
				jp = undefined;
			var jL = j0 > 0 ? true : false;
			if (!jL) {
				jl = [];
				var jP = 1 - jG
			}
			for (var j8 = 0, j6 = jt.length; j8 < j6; j8++) {
				var j3 = jt[j8];
				if (j3.isDel == false) {
					var kd = j3.baseDrawX;
					var ka = j3.baseDrawY;
					jz.save();
					jz.translate(-jh * j1, -jM * j1);
					if (j3.isFadeout) {
						if (!jL && j3._schedule <= jG && !j3._isIgnore) {
							jz.globalAlpha = jP;
							j3._schedule = jG
						} else {
							j3._isIgnore = true;
							continue
						}
					}
					if (j3.type == "fixed") {
						var jB = j3.iconPos,
							jI = j3.textPos,
							jc = j3.textImg,
							jC = j3.startScale;
						var T;
						var jT = 0;
						if (jB) {
							jT = jA
						}
						if (jB && !j3.iconImg && this._iconCache[jB.iconType]) {
							T = this._iconCache[jB.iconType].img
						}
						if (jB && jC <= jy && T) {
							jg = jB.width;
							jp = jB.height;
							je = (jW + (kd - jW) * i9) * j1 - jg / 2 / j2;
							jb = (jV + (ka - jV) * i9) * j1 - jp / 2 / j2 + jq;
							if (!jL && this.isCollide(j8, je, jb, jg, jp, jl, j0)) {
								j3.isFadeout = true
							}
							jz.drawImage(T, jB.srcX, jB.srcY, T.width, T.height, Math.round(je), Math.round(jb), jg / j2, jp / j2);
							!jL && jl.push([j8, je, jb, jg, jp])
						}
						if (jI && jc && jC <= jy) {
							var jH;
							var jJ;
							var js = 0;
							var jE = 0;
							if (jB) {
								js = jB.width;
								jE = jB.height
							}
							var jU = jI.length;
							var jk = 0;
							var jK = 0;
							for (var ju = 0; ju < jU; ju++) {
								var j5 = jI[ju];
								jK += j5.height;
								if (jk < j5.width) {
									jk = j5.width
								}
							}
							jK += (ju - 1) * jA;
							if (!jL && this.isCollide(j8, je, jb, jk, jK, jl, j0)) {
								j3.isFadeout = true
							}
							var j4 = 0;
							for (var ju = 0; ju < jU; ju++) {
								var j5 = jI[ju];
								switch (j3.direction) {
									case fR:
										jH = -(js / 2 / j2 + j5.width + jT);
										jJ = -jK / 2 + j4 + jA * ju;
										break;
									case dU:
										jH = js / 2 / j2 + jT;
										jJ = -jK / 2 + j4 + jA * ju;
										break;
									case H:
										jH = -j5.width / 2;
										jJ = -jE / 2 / j2 - jK + j4 - jA * (ju + 1);
										break;
									case gH:
										jH = -j5.width / 2;
										jJ = jE / 2 / j2 + j4 + jA * (ju + 1);
										break;
									case h7:
										jH = -j5.width / 2;
										jJ = -jK / 2 + j4 + jA * ju;
										break
								}
								j4 += j5.height;
								je = (jW + (kd - jW) * i9) * j1 + jH / ji;
								jb = (jV + (ka - jV) * i9) * j1 + jJ / ji; + jq;
								jg = j5.width;
								jp = j5.height;
								if (!j3._tempRank) {
									jz.drawImage(jc, j5.srcX, j5.srcY, jg, jp, Math.round(je), Math.round(jb), jg / ji, jp / ji)
								} else {
									this.alterColor(j5, jc, j3._tempRank);
									jz.drawImage(this._colorCvs, 0, 0, jg, jp, Math.round(je), Math.round(jb), jg / ji, jp / ji)
								}!jL && jl.push([j8, je, jb, jg, jp])
							}
						}
					} else {
						var jr = j3.arrWordPos,
							jc = j3.textImg,
							kb = j3.tileX,
							j9 = j3.tileY;
						var jj = jr[0];
						var jf = Math.round(kb + jj.destX);
						var jd = Math.round(j9 + jj.destY);
						for (var j7 = 0, jS = jr.length; j7 < jS; j7++) {
							var jZ = jr[j7];
							var kf = Math.round(kb + jZ.destX);
							var ke = Math.round(j9 + jZ.destY);
							var jw = jZ.angle;
							var jR = Math.round((jW + (kd - jW) * i9) * j1 - jj.width / 2 + kf - jf);
							var jQ = Math.round((jV + (ka - jV) * i9) * j1 - jj.height / 2 + ke - jd);
							je = jR;
							jb = jQ;
							jg = jZ.width;
							jp = jZ.height;
							if (!jL && this.isCollide(j8, je, jb, jg, jp, jl, j0)) {
								j3.isFadeout = true
							}
							if (jw > 10 && jw < 350) {
								var jY = jR + jZ.width / 2;
								var jX = jQ + jZ.height / 2;
								var ja = jw / 180 * Math.PI;
								var jD = Math.cos(ja);
								var jm = Math.sin(ja);
								var jO = jD;
								var jn = jD;
								var jN = jm;
								var jo = -jm;
								var jv = jY - jY * jD - jX * jm;
								var e = jX + jY * jm - jX * jD;
								jz.save();
								jz.transform(jO, jo, jN, jn, jv, e);
								jz.drawImage(jc, jZ.srcX, jZ.srcY, jg, jp, je, jb, jg / ji, jp / ji);
								jz.restore()
							} else {
								jz.drawImage(jc, jZ.srcX, jZ.srcY, jg, jp, je, jb, jg / ji, jp / ji)
							}!jL && jl.push([j8, je, jb, jg, jp])
						}
					}
					jz.restore()
				}
			}
		}
	});

	function dV(e) {
		this.initVars(e)
	}
	es.extend(dV.prototype, {
		initVars: function(e) {
			this._map = e._map;
			this._canvas2dMapMgr = e;
			this.base64Prefix = "data:image/png;base64,";
			this.bizData = null;
			this.objTextsPng = null;
			this.arrIconsPng = null;
			this.bizLabels = null
		},
		proecessBizData: function(jb, jf) {
			var jd = this;
			this.bizData = jb;
			this.objTextsPng = null;
			this.arrIconsPng = null;
			var T = jb.textsPng;
			var jh = jb.iconsPng;
			if (!T || !jh) {
				return
			}
			var je = new Image();
			je.onload = function() {
				jd.objTextsPng = this;
				jd.calcIconAndTextInfo(jf);
				this.onload = null
			};
			je.src = this.base64Prefix + T;
			var jg = jh.length;
			var e = [];
			for (var ja = 0; ja < jg; ja++) {
				var jc = jh[ja];
				var i9 = new Image();
				(function(i) {
					i9.onload = function() {
						jg--;
						e[i] = this;
						if (jg === 0) {
							jd.arrIconsPng = e;
							jd.calcIconAndTextInfo(jf)
						}
						this.onload = null
					}
				})(ja);
				i9.src = this.base64Prefix + jc
			}
		},
		calcIconAndTextInfo: function(ji) {
			if (this.objTextsPng && this.arrIconsPng) {
				var je = this.bizData;
				var jc = je.pois;
				var e = [];
				for (var jf = 0, jb = jc.length; jf < jb; jf++) {
					var i9 = jc[jf];
					var jd = this.arrIconsPng[i9.iconPng];
					var ja = jd.height / 2;
					var jh = {
						type: "fixed",
						name: "",
						textImg: this.objTextsPng,
						iconImg: jd,
						rank: i9.rank,
						iconPos: {
							srcX: 0,
							srcY: 0,
							destX: -jd.width / 2,
							destY: -ja / 2,
							width: jd.width,
							height: ja,
							geoX: i9.x,
							geoY: i9.y,
							iconType: "vectorCustom"
						},
						textPos: this.calcTextPos(i9.pos, jd),
						startScale: i9.from < 12 ? 12 : i9.from,
						guid: i9.guid,
						guidExt: 1,
						adver_log: i9.adver_log || ""
					};
					var T = {
						type: "fixed",
						textDirLeft: "left",
						name: "",
						textImg: this.objTextsPng,
						iconImg: jd,
						rank: i9.rank,
						iconPos: {
							srcX: 0,
							srcY: 0,
							destX: -jd.width / 2,
							destY: -ja / 2,
							width: jd.width,
							height: ja,
							geoX: i9.x,
							geoY: i9.y,
							iconType: "vectorCustom"
						},
						textPos: this.calcTextPosLeft(i9.pos, jd),
						startScale: i9.from < 12 ? 12 : i9.from,
						guid: i9.guid,
						guidExt: 1,
						adver_log: i9.adver_log || ""
					};
					var jg = [jh, T];
					e.push(jg)
				}
				this.bizLabels = e;
				ji && ji()
			}
		},
		calcTextPos: function(jc, T) {
			var i = [];
			var jb = jc.length / 4;
			var ja = T.width / 2;
			if (jb === 1) {
				var i9 = {
					srcX: jc[0],
					srcY: jc[1],
					destX: ja,
					destY: -jc[3] / 2,
					width: jc[2],
					height: jc[3]
				};
				i.push(i9)
			} else {
				var i9 = {
					srcX: jc[0],
					srcY: jc[1],
					destX: ja,
					destY: -jc[3],
					width: jc[2],
					height: jc[3]
				};
				var e = {
					srcX: jc[4],
					srcY: jc[5],
					destX: ja,
					destY: 0,
					width: jc[6],
					height: jc[7]
				};
				i.push(i9);
				i.push(e)
			}
			return i
		},
		calcTextPosLeft: function(jc, T) {
			var i = [];
			var jb = jc.length / 4;
			var ja = T.width / 2;
			if (jb === 1) {
				var i9 = {
					srcX: jc[0],
					srcY: jc[1],
					destX: -ja - jc[2],
					destY: -jc[3] / 2,
					width: jc[2],
					height: jc[3]
				};
				i.push(i9)
			} else {
				var i9 = {
					srcX: jc[0],
					srcY: jc[1],
					destX: -ja - jc[2],
					destY: -jc[3],
					width: jc[2],
					height: jc[3]
				};
				var e = {
					srcX: jc[4],
					srcY: jc[5],
					destX: -ja - jc[2],
					destY: 0,
					width: jc[6],
					height: jc[7]
				};
				i.push(i9);
				i.push(e)
			}
			return i
		},
		clearBizData: function() {
			this.bizData = null;
			this.bizLabels = null
		}
	});

	function x() {}
	es.extend(x.prototype, {
		centerAndZoomIn: function(T, jf, jg) {
			jg = jg || {};
			if (!this.loaded) {
				this.firstTileLoad = false
			}
			jf = this._getProperZoom(jf)
				.zoom;
			if (jg.noAnimation !== true && this.loaded) {
				var jb = this._ifUseAnimation(T, jf);
				if (jb) {
					this.flyToIn(T, jf, jg);
					return
				}
			}
			var jd = this;
			if (!T && !jf) {
				return
			}
			this._stopAllAnimations();
			if (T && !T.equals(this.centerPoint)) {
				this.fire(new e7("oncenter_changed"))
			}
			if (jf && jf !== this.zoomLevel) {
				this.fire(new e7("onzoom_changed"))
			}
			T = T || this.centerPoint;
			jf = jf || this.zoomLevel;
			jf = this._getProperZoom(jf)
				.zoom;
			if (this.mapType === BMAP_EARTH_MAP) {
				if (!this._earth) {
					this.mapType = BMAPGL_NORMAL_MAP;
					this.temp.originMapType = BMAP_EARTH_MAP;

					function je() {
						jd._earth = new bo.Earth(jd, {
							showRealSunlight: jd.config.showRealSunlight,
							showMilkyway: jd.config.showMilkyway,
							earthBackground: jd.config.earthBackground
						});
						jd._proxyEarthEvents();
						jd._changeEarthMapType(BMAP_EARTH_MAP);
						es.extend(jd, bo.EarthView.prototype);
						delete jd.temp.originMapType
					}
					gi.load("earth", function() {
						if (bo["FeatureStyle" + jd.config.style]) {
							je()
						} else {
							jd.loadMapStyleFiles(function() {
								je()
							})
						}
					})
				}
			}
			this.lastLevel = this.zoomLevel || jf;
			this.zoomLevel = jf;
			var jc = new e7("onload");
			jc.point = T;
			jc.zoom = jf;
			this.centerPoint = new cd(T.lng, T.lat);
			this.defaultZoomLevel = this.defaultZoomLevel || this.zoomLevel;
			this.defaultCenter = this.defaultCenter || this.centerPoint;
			if (this.mapType !== BMAP_EARTH_MAP) {
				this.centerPoint = this.restrictCenter(this.centerPoint)
			}
			if (!this.loaded && !(this.temp.originMapType === BMAP_EARTH_MAP)) {
				var i = this.config.defaultMaxBounds;
				var ja = new h(i, "baidu", this.mapType);
				if (this.mapType !== BMAP_NONE_MAP) {
					var i9 = new gI({
						mapType: this.mapType,
						copyright: ja,
						dataType: this.mapType === BMAP_SATELLITE_MAP ? fY : gT,
						customLayer: this.mapType === BMAP_SATELLITE_MAP,
						baseLayer: true,
						transparentPng: true,
						tileTypeName: this.mapType === BMAP_SATELLITE_MAP ? "web" : "na"
					});
					i9._isInnerLayer = true;
					this.addTileLayer(i9);
					this.baseLayerAdded = true
				}
				if (this.mapType === BMAP_SATELLITE_MAP && this._isHybridShow === true) {
					this._addHybirdMap()
				}
				this.on("zoom_changed", function() {
					if (this._heading === 0) {
						return
					}
					if (this.getZoom() < 7 && this.config.restrictCenter === true) {
						jd.resetHeading()
					}
				})
			}
			this.loaded = true;
			this.dispatchEvent(jc);
			jg.callback && jg.callback()
		},
		_ifUseAnimation: function(i9, je) {
			var jd = this.getSize();
			var T = {
				zoom: this.zoomLevel
			};
			var jg = {
				zoom: je
			};
			var jf = this.pointToPixelIn(this.centerPoint);
			var ja = this.pointToPixelIn(i9, T);
			var jc = this.pointToPixelIn(this.centerPoint, jg);
			var ji = this.pointToPixelIn(i9, jg);
			var jb = Math.abs(jf.x - ja.x);
			var i = Math.abs(jf.y - ja.y);
			var e = Math.abs(jc.x - ji.x);
			var jh = Math.abs(jc.y - ji.y);
			if ((jb > jd.width || i > jd.height) && (e > jd.width || jh > jd.height)) {
				return false
			}
			return true
		},
		_setPlatformPosition: function(jg, jf, ji) {
			ji = ji || {};
			if (jg === 0 && jf === 0 && !ji.point) {
				return
			}
			if (isNaN(ji.initMapOffsetX)) {
				ji.initMapOffsetX = this.offsetX
			}
			if (isNaN(ji.initMapOffsetY)) {
				ji.initMapOffsetY = this.offsetY
			}
			var jc = hH(this._heading);
			if (this._tilt > 0) {
				jf = jf / Math.cos(hH(this._tilt))
			}
			var jh = jg * Math.cos(jc) + jf * Math.sin(jc);
			var je = -jg * Math.sin(jc) + jf * Math.cos(jc);
			jh = jh + ji.initMapOffsetX;
			je = je + ji.initMapOffsetY;
			if (ji.point) {
				var i = this.restrictCenter(ji.point);
				if (!i.equals(this.centerPoint)) {
					this.centerPoint = i.clone();
					this.fire(new e7("oncenter_changed"))
				}
			} else {
				var i9 = this.offsetX - jh;
				var e = this.offsetY - je;
				var jd = this.centerPoint.lng;
				var jb = this.centerPoint.lat;
				var ja = new cd(jd, jb);
				var T = this.getZoomUnits();
				this.centerPoint = this.restrictCenter(new cd(ja.lng + i9 * T, ja.lat - e * T), T);
				this.fire(new e7("oncenter_changed"))
			}
			this.offsetX = jh;
			this.offsetY = je;
			this.dispatchEvent(new e7("onmoving"))
		},
		restrictCenter: function(jh, e) {
			if (this.config.restrictCenter === false) {
				return jh
			}
			e = e || this.getZoomUnits();
			var jf = this.pixelToPointIn(new eL(this.width, 0), {
				center: jh
			});
			var jc = this.pixelToPointIn(new eL(0, this.height), {
				center: jh
			});
			var ji = jh.lng;
			var jn = jh.lat;
			if (this.config.restrictBounds !== null && !this.config.restrictBounds.isEmpty()) {
				var jm = this.config.restrictBounds;
				var T = jm.getSouthWest();
				var jk = jm.getNorthEast();
				var jg = ia.convertLL2MC(T);
				var ja = ia.convertLL2MC(jk);
				var jd = this.calcNewZoomByRestriction(ji, jn, jc, jf, jg.lng, ja.lng, jg.lat, ja.lat);
				if (jd > this.zoomLevel) {
					this.zoomLevel = jd;
					return jh
				}
				jh.lng = this.calcNewLngByBounds(ji, jc, jf, jg.lng, ja.lng, e);
				jh.lat = this.calcNewLatByBounds(jn, jc, jf, jg.lat, ja.lat, e);
				return jh
			}
			var je = this.pixelToPointIn(new eL(0, 0), {
				center: jh
			});
			var i9 = this.pixelToPointIn(new eL(0, this.height), {
				center: jh
			});
			if (this.zoomLevel < 5) {
				if (je.lat > gV.MAX_LAT && i9.lat < gV.MIN_LAT) {
					var i = gV.MAX_LAT - jh.lat;
					var jb = jh.lat - gV.MIN_LAT;
					var jl;
					if (i < jb) {
						jl = i / (this.height / 2)
					} else {
						jl = jb / (this.height / 2)
					}
					var jj = 18 - m(jl);
					this.zoomLevel = jj;
					return jh
				}
			}
			if (je.lat > gV.MAX_LAT) {
				jh.lat = gV.MAX_LAT - this.height / 2 * e
			} else {
				if (i9.lat < gV.MIN_LAT) {
					jh.lat = gV.MIN_LAT + this.height / 2 * e
				}
			}
			return jh
		},
		calcNewZoomByRestriction: function(jg, jf, e, je, ja, jc, i9, jb) {
			var jj = 0;
			var jk = 0;
			if (typeof i9 === "number" && typeof jb === "number" && je.lat > jb && e.lat < i9) {
				var T = jb - jf;
				var i = jf - i9;
				var jd;
				if (T < i) {
					jd = T / (this.height / 2)
				} else {
					jd = i / (this.height / 2)
				}
				jj = 18 - m(jd)
			}
			if (typeof ja === "number" && typeof jc === "number" && je.lng > jc && e.lng < ja) {
				var ji = jc - jg;
				var jh = jg - ja;
				var jd;
				if (ji < jh) {
					jd = ji / (this.width / 2)
				} else {
					jd = jh / (this.width / 2)
				}
				jk = 18 - m(jd)
			}
			return Math.max(jj, jk) || this.zoomLevel
		},
		calcNewLatByBounds: function(i, i9, T, jc, jb, e) {
			var ja = i;
			if (T.lat > jb) {
				ja = jb - this.height / 2 * e
			} else {
				if (i9.lat < jc) {
					ja = jc + this.height / 2 * e
				}
			}
			return ja
		},
		calcNewLngByBounds: function(jc, jb, i9, ja, T, e) {
			var i = jc;
			if (i9.lng > T) {
				i = T - this.width / 2 * e
			} else {
				if (jb.lng < ja) {
					i = ja + this.width / 2 * e
				}
			}
			return i
		},
		zoomTo: function(e, jk, jl) {
			var jg = dO[this.mapType];
			if (!jg) {
				return
			}
			var jf = this._getProperZoom(e);
			e = jf.zoom;
			if (this.zoomLevel === e) {
				jl && jl.callback && jl.callback();
				return
			}
			var jb = e;
			this.lastLevel = this.zoomLevel;
			jl = jl || {};
			if (this.zoomEventStatus === "idle") {
				this.fire(new e7("onzoomstart"));
				this.zoomEventStatus = "zooming"
			}
			if (!jk && (this.getInfoWindow() && this.temp.infoWin && this.temp.infoWin.isOpen())) {
				jk = ia.convertLL2MC(this.getInfoWindow()
					.getPoint())
			}
			var T = null;
			if (jl.fixPixel) {
				T = jl.fixPixel
			} else {
				if (jk) {
					T = this.pointToPixelIn(jk, {
						useRound: false
					})
				}
			}
			var jc = this.pixelToPointIn(T);
			var jd = this.centerPoint.clone();
			this.fixPoint = jk;
			this.fixPixel = T;
			this.fixCenter = jd;
			this.mousePosMCPoint = jc;
			if (jl.noAnimation) {
				e = jf.zoom;
				this.zoomLevel = e;
				this.fire(new e7("onzoom_changed"));
				var ja = this.getCurrentMaxTilt();
				if (this._tilt > ja) {
					this._tilt = ja
				}
				if (jk) {
					if (this._heading % 360 !== 0 || this._tilt > 0) {
						var i = this._webglMapCamera.fromScreenPixelToMC(T.x, T.y, {
							center: jd,
							zoom: this.zoomLevel
						});
						if (i) {
							var jh = i.sub(jc);
							var i9 = jd.sub(jh);
							this.centerPoint = this.restrictCenter(i9)
						}
					} else {
						var je = this.getZoomUnits();
						var i9 = new cd(jk.lng - je * (T.x - this.width / 2), jk.lat + je * (T.y - this.height / 2));
						this.centerPoint = this.restrictCenter(i9, je)
					}
					this.fire(new e7("oncenter_changed"))
				}
				this._checkFireZoomend();
				jl.callback && jl.callback();
				return
			}
			this._animationInfo.zoom = {
				current: this.zoomLevel,
				diff: e - this.zoomLevel,
				target: e
			};
			var ji = this;
			ji._checkFireZoomend();
			var jj = this._tilt;
			if (this.fixPoint || jj > gV.MAX_DRAG_TILT_L2) {
				jl.renderCallback = function() {
					var jp = ji.getCurrentMaxTilt();
					if (ji._tilt > jp) {
						ji._tilt = jp
					}
					var jq = ji.fixPixel;
					if (!ji.fixPixel || !ji.fixPoint) {
						return
					}
					var jm = ji.fixPixel;
					var jw = ji.fixPoint;
					var jt = ji.fixCenter;
					var jr = ji.mousePosMCPoint;
					if (ji._heading % 360 !== 0 || ji._tilt > 0) {
						var jn = ji._webglMapCamera.fromScreenPixelToMC(jm.x, jm.y, {
							center: jt,
							zoom: ji.zoomLevel,
							tilt: ji._tilt
						});
						if (jn) {
							var jv = jn.sub(jr);
							var jo = jt.sub(jv);
							ji.centerPoint = ji.restrictCenter(jo)
						}
					} else {
						var js = jm;
						var ju = ji.getZoomUnits();
						var jo = new cd(jw.lng - ju * (js.x - ji.width / 2), jw.lat + ju * (js.y - ji.height / 2));
						ji.centerPoint = ji.restrictCenter(jo, ju)
					}
					ji.fire(new e7("oncenter_changed"))
				}
			}
			if (jl.fromMouseWheel === true) {
				this._startInfiniteZoomAnimation(jl);
				jl.callback && jl.callback();
				return
			}
			this._startAnimation(jl)
		},
		_checkFireZoomend: function() {
			var e = this;
			if (e.fireZoomendTimer) {
				clearTimeout(e.fireZoomendTimer)
			}
			e.fireZoomendTimer = setTimeout(function() {
				if (e.zoomEventStatus === "zooming") {
					e.fire(new e7("onzoomend"));
					e.zoomEventStatus = "idle"
				}
				e.fireZoomendTimer = null
			}, 150)
		},
		deepZoomMedia: function(e) {
			var i = this;
			if (!i.temp.isStdCtrlBusy) {
				i.temp.isStdCtrlBusy = true;
				i.deepZoomTo(i.zoomLevel + e);
				setTimeout(function() {
					i.temp.isStdCtrlBusy = false
				}, 400)
			}
		},
		deepZoomTo: function(e) {
			this.zoomTo(e)
		},
		flyToIn: function(T, jD, jo) {
			jo = jo || {};
			var ja = this._getProperZoom(jD);
			jD = ja.zoom;
			if (this.centerPoint.equals(T) && this.zoomLevel === jD && typeof jo.heading !== "number" && typeof jo.tilt !== "number") {
				return
			}
			var e = this.getHeading() % 360;
			var jg = this.getTilt();
			var jm = 0;
			var jq = 0;
			var jj = this.getBounds()
				.containsPoint(T);
			if (typeof jo.heading === "number") {
				jm = jo.heading
			} else {
				if (jj) {
					jm = e
				}
			}
			if (typeof jo.tilt === "number") {
				jq = jo.tilt
			} else {
				if (jj) {
					jq = jg
				}
			}
			this._heading = e;
			var jA = jm - e;
			var jw = jq - jg;
			var jk = this;
			var jc = this.zoomLevel;
			var jd = 1.42;
			var js = this.zoomScale(jD - jc);
			var jF = this.getZoomUnits();
			var ji = this.centerPoint.div(jF);
			var jG = T.div(jF);
			var jz = this.worldSize();
			var jv = jd;
			var ju = Math.max(this.width, this.height);
			var jt = ju / js;
			var jh = jG.sub(ji)
				.mag();
			var i = jv * jv;

			function jC(jI) {
				var jH = (jt * jt - ju * ju + (jI ? -1 : 1) * i * i * jh * jh) / (2 * (jI ? jt : ju) * i * jh);
				return Math.log(Math.sqrt(jH * jH + 1) - jH)
			}

			function i9(jH) {
				return (Math.exp(jH) - Math.exp(-jH)) / 2
			}

			function je(jH) {
				return (Math.exp(jH) + Math.exp(-jH)) / 2
			}

			function jn(jH) {
				return i9(jH) / je(jH)
			}
			var jf = jC(0);
			var jx = function(jH) {
				return (je(jf) / je(jf + jv * jH))
			};
			var jy = function(jH) {
				return ju * ((je(jf) * jn(jf + jv * jH) - i9(jf)) / i) / jh
			};
			var jb = (jC(1) - jf) / jv;
			if (Math.abs(jh) < 0.000001 || jb === Infinity || isNaN(jb)) {
				if (Math.abs(ju - jt) < 0.000001) {
					this._animationInfo.zoom = {
						current: this.zoomLevel,
						diff: jD - this.zoomLevel
					};
					this._animationInfo.center = {
						current: this.centerPoint,
						diff: T.sub(this.centerPoint)
					};
					this._animationInfo.heading = {
						current: e,
						diff: jm - e
					};
					this._animationInfo.tilt = {
						current: jg,
						diff: jq - jg
					};
					this.setLock(true);
					this._startAnimation({
						callback: function(jH) {
							jk.setLock(false);
							if (jo.callback) {
								jo.callback(jH)
							}
						},
						duration: jo.duration
					});
					return
				}
				var jE = jt < ju ? -1 : 1;
				jb = Math.abs(Math.log(jt / ju)) / jv;
				jy = function() {
					return 0
				};
				jx = function(jH) {
					return Math.exp(jE * jv * jH)
				}
			}
			var jB = 1.7;
			if (jb < 0.3) {
				jB = 0.8
			} else {
				if (jb > 5) {
					jB = (jb - 5) / 2 + jB
				}
			}
			var jp = jo.duration || 1000 * jb / jB;
			if (isNaN(jp)) {
				var jr = {};
				for (var jl in jo) {
					jr[jl] = jo[jl];
					jr.noAnimation = true
				}
				this.centerAndZoomIn(T, jD, jr);
				return
			}
			this.fire(new e7("onmovestart"));
			this.fire(new e7("onzoomstart"));
			this.setLock(true);
			this._startAnimation({
				duration: jp,
				renderCallback: function(jH, jI) {
					var jJ = jH * jb;
					var jM = jy(jJ);
					var jL = jc + jk.scaleZoom(1 / jx(jJ));
					if (jL < jk.getMinZoom()) {
						jL = jk.getMinZoom()
					}
					if (jL > jk.getMaxZoom()) {
						jL = jk.getMaxZoom()
					}
					if (jL !== jk.zoomLevel) {
						jk.zoomLevel = jL;
						jk.fire(new e7("onzoom_changed"))
					}
					jk.centerPoint = ji.add(jG.sub(ji)
							.mult(jM))
						.mult(jF);
					jk.fire(new e7("oncenter_changed"));
					if (typeof jm === "number") {
						var jK = jH / 0.7;
						if (jK > 1) {
							jK = 1
						}
						jk.setHeading(e + jA * jH, {
							noAnimation: true
						})
					}
					if (typeof jq === "number") {
						jk.setTilt(jg + jw * jH, {
							noAnimation: true
						})
					}
				},
				callback: function(jH, jI) {
					jk.setLock(false);
					if (jI && jI.stop === true) {
						jk.fire(new e7("onmoveend"));
						jk.fire(new e7("onzoomend"));
						jo.callback && jo.callback(jH);
						return
					}
					if (jD !== jk.zoomLevel) {
						jk.zoomLevel = jD;
						jk.fire(new e7("onzoom_changed"))
					}
					jk.fire(new e7("onmoveend"));
					jk.fire(new e7("onzoomend"));
					jo.callback && jo.callback(jH)
				}
			})
		},
		zoomScale: function(e) {
			return Math.pow(2, e)
		},
		scaleZoom: function(e) {
			return Math.log(e) / Math.LN2
		},
		panToIn: function(i, T) {
			T = T || {};
			if (!i || i.equals(this.centerPoint)) {
				T.callback && T.callback();
				return
			}
			var i9 = this.pointToPixelIn(i);
			var e = Math.round(this.width / 2);
			var jb = Math.round(this.height / 2);
			var ja = this._ifUseAnimation(i, this.zoomLevel);
			if (T.noAnimation === true || ja === false) {
				this._stopAllAnimations();
				this._panToIn(e - i9.x, jb - i9.y, i);
				T.callback && T.callback();
				return
			}
			this.flyToIn(i, this.zoomLevel, T)
		},
		_panToIn: function(i, e, i9) {
			var T = this.temp;
			if (T.operating === true) {
				return
			}
			if (T.dragAni) {
				T.dragAni.stop(false, {
					readyToMove: true
				});
				T.dragAni = null
			}
			this.dispatchEvent(new e7("onmovestart"));
			this._setPlatformPosition(i, e, {
				point: i9
			});
			this.dispatchEvent(new e7("onmoveend"))
		},
		_stopAllAnimations: function(e) {
			e = e || {};
			if (this._ani) {
				this._ani.stop(!!e.goToEnd, {
					stopCurrentAnimation: e.stopCurrentAnimation
				});
				this._ani = null
			}
			if (this._infiniteAni) {
				this._infiniteAni.stop();
				this._infiniteAni = null
			}
		},
		panBy: function(i, e, T) {
			i = Math.round(i) || 0;
			e = Math.round(e) || 0;
			T = T || {};
			if (Math.abs(i) <= this.width && Math.abs(e) <= this.height && T.noAnimation !== true) {
				this._panBy(i, e, T)
			} else {
				this._panToIn(i, e, T.point);
				T.callback && T.callback()
			}
		},
		_panBy: function(i, e, ja) {
			if (this.temp.operating === true) {
				return
			}
			ja = ja || {};
			this.dispatchEvent(new e7("onmovestart"));
			var i9 = this;
			var T = i9.temp;
			T.pl = i9.offsetX;
			T.pt = i9.offsetY;
			if (T.tlPan) {
				T.tlPan.cancel()
			}
			if (T.dragAni) {
				T.dragAni.stop(false, {
					readyToMove: true
				});
				T.dragAni = null
			}
			T.tlPan = new e0({
				fps: ja.fps || i9.config.fps,
				duration: ja.duration || i9.config.actionDuration,
				transition: ja.transition || fT.easeInOutQuad,
				render: function(jb) {
					this.terminative = i9.temp.operating;
					if (i9.temp.operating) {
						return
					}
					i9._setPlatformPosition(i * jb, e * jb, {
						initMapOffsetX: T.pl,
						initMapOffsetY: T.pt
					})
				},
				finish: function(jb) {
					i9.dispatchEvent(new e7("onmoveend"));
					i9.temp.tlPan = false;
					if (i9.temp.stopArrow === true) {
						i9.temp.stopArrow = false;
						if (i9.temp.arrow !== 0) {
							i9._arrow()
						}
					}
				}
			})
		},
		_startAnimation: function(i) {
			var ja = this._animationInfo;
			var T = this;
			i = i || {};
			if (T._ani) {
				T._ani.stop(!!i.goToEnd, {
					stopCurrentAnimation: i.stopCurrentAnimation
				})
			}
			if (T._infiniteAni) {
				T._infiniteAni.stop();
				T._infiniteAni = null
			}
			var jb = i.duration || 500;
			var jc = i.transition || fT.ease;
			var e = new e7("onanimation_start");
			this.fire(e);
			if (i.unstopable) {
				ja = this._animationInfoUnstopable
			}
			var i9 = new e0({
				duration: jb,
				transition: jc,
				render: function(jf, je) {
					for (var jd in ja) {
						if (!ja.hasOwnProperty(jd)) {
							continue
						}
						var jh = ja[jd].current;
						var jg = ja[jd].diff;
						T._setValueTick(jd, jh, jg, jf)
					}
					if (i.renderCallback) {
						i.renderCallback(jf, je)
					}
				},
				finish: function(jd) {
					T.fire(new e7("onanimation_end"));
					if (i.unstopable) {
						T._animationInfoUnstopable = {};
						T._unstopableAni = null
					} else {
						T._ani = null;
						T._animationInfo = {}
					}
					if (i.mapNeedCbk) {
						i.mapNeedCbk()
					}
					if (i.callback) {
						i.callback(jd)
					}
				},
				onStop: function(jd) {
					jd = jd || {};
					T.fire(new e7("onanimation_end"));
					if (jd.stopCurrentAnimation) {
						T._animationInfo = {}
					}
					T._ani = null;
					if (i.mapNeedCbk) {
						i.mapNeedCbk()
					}
					if (i.callback) {
						i.callback(null, {
							stop: true
						})
					}
				}
			});
			if (i.unstopable) {
				T._unstopableAni = i9
			} else {
				T._ani = i9
			}
		},
		_startInfiniteZoomAnimation: function(e) {
			var i = this;
			if (i._ani) {
				i._ani.stop(!!e.goToEnd, {
					stopCurrentAnimation: e.stopCurrentAnimation
				})
			}
			if (i._infiniteAni) {
				return
			}
			this.fire(new e7("onanimation_start"));
			i._infiniteAni = new e0({
				duration: 10000,
				transition: fT.linear,
				render: function() {
					var T = i._animationInfo.zoom;
					if (Math.abs(T.current - T.target) < 0.001) {
						i._setValue("zoom", T.target);
						i._infiniteAni.stop();
						return
					}
					T.current += (T.target - T.current) * 0.35;
					i._setValue("zoom", T.current);
					if (e.renderCallback) {
						e.renderCallback()
					}
				},
				finish: function() {
					i._infiniteAni = null;
					i._animationInfo = {};
					i.fire(new e7("onanimation_end"));
					if (e.callback) {
						e.callback()
					}
				},
				onStop: function() {
					i._infiniteAni = null;
					i._animationInfo = {};
					i.fire(new e7("onanimation_end"));
					if (e.callback) {
						e.callback()
					}
				}
			})
		},
		_setValue: function(e, T) {
			if (e === "zoom") {
				this._preZoomLevel = this.zoomLevel;
				var i = this._getProperZoom(T);
				T = i.zoom;
				if (T !== this.zoomLevel) {
					this.zoomLevel = T;
					if (T < 5) {
						this.restrictCenter(this.centerPoint)
					}
					this.fire(new e7("on" + e + "_changed"))
				}
				return
			} else {
				if (e === "center") {
					this.centerPoint = T
				}
			}
			this["_" + e] = T;
			this.fire(new e7("on" + e + "_changed"))
		},
		_setValueTick: function(e, ja, i9, i) {
			if (e === "center") {
				var T = new cd(ja.lng + i9.lng * i, ja.lat + i9.lat * i);
				this._setValue(e, T);
				return
			}
			if (e === "zoom") {
				this._setValue(e, Math.pow(ja, 1 - i) * Math.pow(ja + i9, i));
				return
			}
			this._setValue(e, ja + i9 * i)
		},
		setHeading: function(i9, i) {
			i = i || {};
			if (i9 === this._heading) {
				i.callback && i.callback();
				return
			}
			var T = dJ(this._heading, 360);
			var e = dJ(i9, 360);
			if (e === T) {
				this._heading = i9;
				i.callback && i.callback();
				return
			}
			if (i.noAnimation) {
				this._setValue("heading", i9);
				i.callback && i.callback();
				return
			}
			if (i.unstopable) {
				this._animationInfoUnstopable.heading = {
					current: this._heading,
					diff: i9 - this._heading
				}
			} else {
				this._animationInfo.heading = {
					current: this._heading,
					diff: i9 - this._heading
				}
			}
			this._startAnimation(i)
		},
		resetHeading: function(e) {
			var i = this._heading;
			while (i < 0) {
				i += 360
			}
			i = i % 360;
			if (i > 180) {
				i -= 360
			}
			this._heading = i;
			e = e || {};
			e.unstopable = true;
			this.setHeading(0, e)
		},
		getHeading: function() {
			return this._heading
		},
		setTilt: function(e, i) {
			i = i || {};
			if (e === this._tilt) {
				i.callback && i.callback();
				return
			}
			if (e > gV.MAX_TILT) {
				e = gV.MAX_TILT
			}
			if (e < gV.MIN_TILT) {
				e = gV.MIN_TILT
			}
			if (i && i.noAnimation) {
				this._setValue("tilt", e);
				i.callback && i.callback();
				return
			}
			this._animationInfo.tilt = {
				current: this._tilt,
				diff: e - this._tilt
			};
			this._startAnimation(i)
		},
		getTilt: function() {
			return this._tilt
		},
		getCenterIn: function() {
			return this.centerPoint
		},
		getZoom: function() {
			return this.zoomLevel
		},
		getCameraPosition: function(T) {
			T = T || {};
			var e = T.center || this.centerPoint;
			var i9 = T.zoom || this.zoomLevel;
			var jc = typeof T.heading === "number" ? T.heading : this._heading;
			var i = typeof T.tilt === "number" ? T.tilt : this._tilt;
			var jb = this._webglMapCamera.generateMVMatrix(e, i9, jc, i);
			var ja = mat4.create(Float32Array);
			mat4.invert(ja, jb);
			return this._webglMapCamera.getPosition(ja)
		}
	});

	function ba(i) {
		this._jobQueue = [];
		this._idleOnlyJobQueue = [];
		var e = this;
		this.isIdle = true;
		i.on("updateframe", function(i9) {
			var T = 12 - i9.frameTime;
			T = T < 1 ? 1 : T;
			e.isIdle = false;
			if (e.idleWorkTimer) {
				clearInterval(e.idleWorkTimer);
				e.idleWorkTimer = null
			}
			e.runJobs(T)
		});
		this._idleWorkerTicker = (function(T) {
			return function() {
				if (T.isIdle) {
					T.runJobs();
					T.runIdleOnlyJobs()
				}
			}
		})(this);
		i.on("mapglidle", function() {
			e.isIdle = true;
			e.runJobs();
			e.runIdleOnlyJobs();
			e.idleWorkTimer = setInterval(e._idleWorkerTicker, ba.MAX_IDLE_TIME)
		})
	}
	ba.MAX_IDLE_TIME = 50;
	ba.MAX_FRAME_TIME = 6;
	ba.prototype.runJobs = function(i) {
		if (this._jobQueue.length === 0) {
			return
		}
		var i9 = hl();
		var e = 0;
		i = i || ba.MAX_FRAME_TIME;
		while (this._jobQueue.length && e < i) {
			var T = this._jobQueue.shift();
			if (T.state !== "invalid") {
				T.call()
			}
			e = hl() - i9
		}
	};
	ba.prototype.runIdleOnlyJobs = function() {
		if (this._idleOnlyJobQueue.length === 0) {
			return
		}
		var T = hl();
		var e = 0;
		while (this._idleOnlyJobQueue.length && e < ba.MAX_IDLE_TIME) {
			var i = this._idleOnlyJobQueue.shift();
			if (i.state !== "invalid") {
				i.call()
			}
			e = hl() - T
		}
	};
	ba.prototype.checkIdleRunning = function() {
		if (this.isIdle && !this.idleWorkTimer) {
			this.runJobs();
			this.runIdleOnlyJobs();
			this.idleWorkTimer = setInterval(this._idleWorkerTicker, 50)
		}
	};
	ba.prototype.addJob = function(e) {
		this._jobQueue.push(e);
		this.checkIdleRunning()
	};
	ba.prototype.clearJobs = function() {
		this._jobQueue.length = 0;
		this._idleOnlyJobQueue.length = 0
	};
	ba.prototype.addIdleOnlyJob = function(e) {
		this._idleOnlyJobQueue.push(e);
		this.checkIdleRunning()
	};
	var dq = {};
	(function(jc) {
		if (!jg) {
			var jg = 0.000001
		}
		if (!i) {
			var i = (typeof Float32Array !== "undefined") ? Float32Array : Array
		}
		if (!ja) {
			var ja = Math.random
		}
		var T = {};
		var jb = Math.PI / 180;
		T.toRadian = function(jh) {
			return jh * jb
		};
		var jf = {};
		jf.create = function(ji) {
			ji = ji || i;
			var jh = new ji(2);
			jh[0] = 0;
			jh[1] = 0;
			return jh
		};
		jf.clone = function(jh, jj) {
			jj = jj || i;
			var ji = new jj(2);
			ji[0] = jh[0];
			ji[1] = jh[1];
			return ji
		};
		jf.fromValues = function(jh, jk, jj) {
			jj = jj || i;
			var ji = new jj(2);
			ji[0] = jh;
			ji[1] = jk;
			return ji
		};
		jf.copy = function(ji, jh) {
			ji[0] = jh[0];
			ji[1] = jh[1];
			return ji
		};
		jf.set = function(ji, jh, jj) {
			ji[0] = jh;
			ji[1] = jj;
			return ji
		};
		jf.add = function(jj, ji, jh) {
			jj[0] = ji[0] + jh[0];
			jj[1] = ji[1] + jh[1];
			return jj
		};
		jf.subtract = function(jj, ji, jh) {
			jj[0] = ji[0] - jh[0];
			jj[1] = ji[1] - jh[1];
			return jj
		};
		jf.sub = jf.subtract;
		jf.multiply = function(jj, ji, jh) {
			jj[0] = ji[0] * jh[0];
			jj[1] = ji[1] * jh[1];
			return jj
		};
		jf.mul = jf.multiply;
		jf.divide = function(jj, ji, jh) {
			jj[0] = ji[0] / jh[0];
			jj[1] = ji[1] / jh[1];
			return jj
		};
		jf.div = jf.divide;
		jf.min = function(jj, ji, jh) {
			jj[0] = Math.min(ji[0], jh[0]);
			jj[1] = Math.min(ji[1], jh[1]);
			return jj
		};
		jf.max = function(jj, ji, jh) {
			jj[0] = Math.max(ji[0], jh[0]);
			jj[1] = Math.max(ji[1], jh[1]);
			return jj
		};
		jf.scale = function(jj, ji, jh) {
			jj[0] = ji[0] * jh;
			jj[1] = ji[1] * jh;
			return jj
		};
		jf.scaleAndAdd = function(jj, ji, jh, jk) {
			jj[0] = ji[0] + (jh[0] * jk);
			jj[1] = ji[1] + (jh[1] * jk);
			return jj
		};
		jf.distance = function(jj, ji) {
			var jh = ji[0] - jj[0],
				jk = ji[1] - jj[1];
			return Math.sqrt(jh * jh + jk * jk)
		};
		jf.dist = jf.distance;
		jf.squaredDistance = function(jj, ji) {
			var jh = ji[0] - jj[0],
				jk = ji[1] - jj[1];
			return jh * jh + jk * jk
		};
		jf.sqrDist = jf.squaredDistance;
		jf.length = function(ji) {
			var jh = ji[0],
				jj = ji[1];
			return Math.sqrt(jh * jh + jj * jj)
		};
		jf.len = jf.length;
		jf.squaredLength = function(ji) {
			var jh = ji[0],
				jj = ji[1];
			return jh * jh + jj * jj
		};
		jf.sqrLen = jf.squaredLength;
		jf.negate = function(ji, jh) {
			ji[0] = -jh[0];
			ji[1] = -jh[1];
			return ji
		};
		jf.normalize = function(jk, jj) {
			var ji = jj[0],
				jl = jj[1];
			var jh = ji * ji + jl * jl;
			if (jh > 0) {
				jh = 1 / Math.sqrt(jh);
				jk[0] = jj[0] * jh;
				jk[1] = jj[1] * jh
			}
			return jk
		};
		jf.dot = function(ji, jh) {
			return ji[0] * jh[0] + ji[1] * jh[1]
		};
		jf.cross = function(jj, ji, jh) {
			var jk = ji[0] * jh[1] - ji[1] * jh[0];
			jj[0] = jj[1] = 0;
			jj[2] = jk;
			return jj
		};
		jf.lerp = function(jj, ji, jh, jk) {
			var jm = ji[0],
				jl = ji[1];
			jj[0] = jm + jk * (jh[0] - jm);
			jj[1] = jl + jk * (jh[1] - jl);
			return jj
		};
		jf.random = function(jh, jj) {
			jj = jj || 1;
			var ji = ja() * 2 * Math.PI;
			jh[0] = Math.cos(ji) * jj;
			jh[1] = Math.sin(ji) * jj;
			return jh
		};
		jf.transformMat2 = function(jk, jj, ji) {
			var jh = jj[0],
				jl = jj[1];
			jk[0] = ji[0] * jh + ji[2] * jl;
			jk[1] = ji[1] * jh + ji[3] * jl;
			return jk
		};
		jf.transformMat2d = function(jk, jj, ji) {
			var jh = jj[0],
				jl = jj[1];
			jk[0] = ji[0] * jh + ji[2] * jl + ji[4];
			jk[1] = ji[1] * jh + ji[3] * jl + ji[5];
			return jk
		};
		jf.transformMat3 = function(jk, jj, ji) {
			var jh = jj[0],
				jl = jj[1];
			jk[0] = ji[0] * jh + ji[3] * jl + ji[6];
			jk[1] = ji[1] * jh + ji[4] * jl + ji[7];
			return jk
		};
		jf.transformMat4 = function(jk, jj, ji) {
			var jh = jj[0],
				jl = jj[1];
			jk[0] = ji[0] * jh + ji[4] * jl + ji[12];
			jk[1] = ji[1] * jh + ji[5] * jl + ji[13];
			return jk
		};
		jf.rotate = function(jk, ji, jh, jo) {
			var jn = ji[0] - jh[0];
			var jm = ji[1] - jh[1];
			var jj = Math.sin(jo);
			var jl = Math.cos(jo);
			jk[0] = jn * jl - jm * jj + jh[0];
			jk[1] = jn * jj + jm * jl + jh[1];
			return jk
		};
		jf.forEach = (function() {
			var jh = jf.create();
			return function(jk, jo, jp, jn, jm, ji) {
				var jl, jj;
				if (!jo) {
					jo = 2
				}
				if (!jp) {
					jp = 0
				}
				if (jn) {
					jj = Math.min((jn * jo) + jp, jk.length)
				} else {
					jj = jk.length
				}
				for (jl = jp; jl < jj; jl += jo) {
					jh[0] = jk[jl];
					jh[1] = jk[jl + 1];
					jm(jh, jh, ji);
					jk[jl] = jh[0];
					jk[jl + 1] = jh[1]
				}
				return jk
			}
		})();
		jf.str = function(jh) {
			return "vec2(" + jh[0] + ", " + jh[1] + ")"
		};
		jc.vec2 = jf;
		var je = {};
		je.create = function(ji) {
			ji = ji || i;
			var jh = new ji(3);
			jh[0] = 0;
			jh[1] = 0;
			jh[2] = 0;
			return jh
		};
		je.clone = function(jh, jj) {
			jj = jj || i;
			var ji = new jj(3);
			ji[0] = jh[0];
			ji[1] = jh[1];
			ji[2] = jh[2];
			return ji
		};
		je.fromValues = function(jh, jl, jj, jk) {
			jk = jk || i;
			var ji = new jk(3);
			ji[0] = jh;
			ji[1] = jl;
			ji[2] = jj;
			return ji
		};
		je.copy = function(ji, jh) {
			ji[0] = jh[0];
			ji[1] = jh[1];
			ji[2] = jh[2];
			return ji
		};
		je.set = function(ji, jh, jk, jj) {
			ji[0] = jh;
			ji[1] = jk;
			ji[2] = jj;
			return ji
		};
		je.add = function(jj, ji, jh) {
			jj[0] = ji[0] + jh[0];
			jj[1] = ji[1] + jh[1];
			jj[2] = ji[2] + jh[2];
			return jj
		};
		je.subtract = function(jj, ji, jh) {
			jj[0] = ji[0] - jh[0];
			jj[1] = ji[1] - jh[1];
			jj[2] = ji[2] - jh[2];
			return jj
		};
		je.sub = je.subtract;
		je.multiply = function(jj, ji, jh) {
			jj[0] = ji[0] * jh[0];
			jj[1] = ji[1] * jh[1];
			jj[2] = ji[2] * jh[2];
			return jj
		};
		je.mul = je.multiply;
		je.divide = function(jj, ji, jh) {
			jj[0] = ji[0] / jh[0];
			jj[1] = ji[1] / jh[1];
			jj[2] = ji[2] / jh[2];
			return jj
		};
		je.div = je.divide;
		je.min = function(jj, ji, jh) {
			jj[0] = Math.min(ji[0], jh[0]);
			jj[1] = Math.min(ji[1], jh[1]);
			jj[2] = Math.min(ji[2], jh[2]);
			return jj
		};
		je.max = function(jj, ji, jh) {
			jj[0] = Math.max(ji[0], jh[0]);
			jj[1] = Math.max(ji[1], jh[1]);
			jj[2] = Math.max(ji[2], jh[2]);
			return jj
		};
		je.scale = function(jj, ji, jh) {
			jj[0] = ji[0] * jh;
			jj[1] = ji[1] * jh;
			jj[2] = ji[2] * jh;
			return jj
		};
		je.scaleAndAdd = function(jj, ji, jh, jk) {
			jj[0] = ji[0] + (jh[0] * jk);
			jj[1] = ji[1] + (jh[1] * jk);
			jj[2] = ji[2] + (jh[2] * jk);
			return jj
		};
		je.distance = function(jj, ji) {
			var jh = ji[0] - jj[0],
				jl = ji[1] - jj[1],
				jk = ji[2] - jj[2];
			return Math.sqrt(jh * jh + jl * jl + jk * jk)
		};
		je.dist = je.distance;
		je.squaredDistance = function(jj, ji) {
			var jh = ji[0] - jj[0],
				jl = ji[1] - jj[1],
				jk = ji[2] - jj[2];
			return jh * jh + jl * jl + jk * jk
		};
		je.sqrDist = je.squaredDistance;
		je.length = function(ji) {
			var jh = ji[0],
				jk = ji[1],
				jj = ji[2];
			return Math.sqrt(jh * jh + jk * jk + jj * jj)
		};
		je.len = je.length;
		je.squaredLength = function(ji) {
			var jh = ji[0],
				jk = ji[1],
				jj = ji[2];
			return jh * jh + jk * jk + jj * jj
		};
		je.sqrLen = je.squaredLength;
		je.negate = function(ji, jh) {
			ji[0] = -jh[0];
			ji[1] = -jh[1];
			ji[2] = -jh[2];
			return ji
		};
		je.normalize = function(jk, jj) {
			var ji = jj[0],
				jm = jj[1],
				jl = jj[2];
			var jh = ji * ji + jm * jm + jl * jl;
			if (jh > 0) {
				jh = 1 / Math.sqrt(jh);
				jk[0] = jj[0] * jh;
				jk[1] = jj[1] * jh;
				jk[2] = jj[2] * jh
			}
			return jk
		};
		je.dot = function(ji, jh) {
			return ji[0] * jh[0] + ji[1] * jh[1] + ji[2] * jh[2]
		};
		je.cross = function(ji, jn, jm) {
			var jh = jn[0],
				jp = jn[1],
				jo = jn[2],
				jl = jm[0],
				jk = jm[1],
				jj = jm[2];
			ji[0] = jp * jj - jo * jk;
			ji[1] = jo * jl - jh * jj;
			ji[2] = jh * jk - jp * jl;
			return ji
		};
		je.lerp = function(jj, ji, jh, jk) {
			var jn = ji[0],
				jm = ji[1],
				jl = ji[2];
			jj[0] = jn + jk * (jh[0] - jn);
			jj[1] = jm + jk * (jh[1] - jm);
			jj[2] = jl + jk * (jh[2] - jl);
			return jj
		};
		je.random = function(jh, jl) {
			jl = jl || 1;
			var jj = ja() * 2 * Math.PI;
			var jk = (ja() * 2) - 1;
			var ji = Math.sqrt(1 - jk * jk) * jl;
			jh[0] = Math.cos(jj) * ji;
			jh[1] = Math.sin(jj) * ji;
			jh[2] = jk * jl;
			return jh
		};
		je.transformMat4 = function(jk, jj, ji) {
			var jh = jj[0],
				jm = jj[1],
				jl = jj[2];
			jk[0] = ji[0] * jh + ji[4] * jm + ji[8] * jl + ji[12];
			jk[1] = ji[1] * jh + ji[5] * jm + ji[9] * jl + ji[13];
			jk[2] = ji[2] * jh + ji[6] * jm + ji[10] * jl + ji[14];
			return jk
		};
		je.transformMat3 = function(jk, jj, ji) {
			var jh = jj[0],
				jm = jj[1],
				jl = jj[2];
			jk[0] = jh * ji[0] + jm * ji[3] + jl * ji[6];
			jk[1] = jh * ji[1] + jm * ji[4] + jl * ji[7];
			jk[2] = jh * ji[2] + jm * ji[5] + jl * ji[8];
			return jk
		};
		je.transformQuat = function(jn, jt, jh) {
			var ju = jt[0],
				js = jt[1],
				jr = jt[2],
				jp = jh[0],
				jo = jh[1],
				jm = jh[2],
				jq = jh[3],
				jk = jq * ju + jo * jr - jm * js,
				jj = jq * js + jm * ju - jp * jr,
				ji = jq * jr + jp * js - jo * ju,
				jl = -jp * ju - jo * js - jm * jr;
			jn[0] = jk * jq + jl * -jp + jj * -jm - ji * -jo;
			jn[1] = jj * jq + jl * -jo + ji * -jp - jk * -jm;
			jn[2] = ji * jq + jl * -jm + jk * -jo - jj * -jp;
			return jn
		};
		je.rotateX = function(jj, ji, jh, jm) {
			var jl = [],
				jk = [];
			jl[0] = ji[0] - jh[0];
			jl[1] = ji[1] - jh[1];
			jl[2] = ji[2] - jh[2];
			jk[0] = jl[0];
			jk[1] = jl[1] * Math.cos(jm) - jl[2] * Math.sin(jm);
			jk[2] = jl[1] * Math.sin(jm) + jl[2] * Math.cos(jm);
			jj[0] = jk[0] + jh[0];
			jj[1] = jk[1] + jh[1];
			jj[2] = jk[2] + jh[2];
			return jj
		};
		je.rotateY = function(jj, ji, jh, jm) {
			var jl = [],
				jk = [];
			jl[0] = ji[0] - jh[0];
			jl[1] = ji[1] - jh[1];
			jl[2] = ji[2] - jh[2];
			jk[0] = jl[2] * Math.sin(jm) + jl[0] * Math.cos(jm);
			jk[1] = jl[1];
			jk[2] = jl[2] * Math.cos(jm) - jl[0] * Math.sin(jm);
			jj[0] = jk[0] + jh[0];
			jj[1] = jk[1] + jh[1];
			jj[2] = jk[2] + jh[2];
			return jj
		};
		je.rotateZ = function(jj, ji, jh, jm) {
			var jl = [],
				jk = [];
			jl[0] = ji[0] - jh[0];
			jl[1] = ji[1] - jh[1];
			jl[2] = ji[2] - jh[2];
			jk[0] = jl[0] * Math.cos(jm) - jl[1] * Math.sin(jm);
			jk[1] = jl[0] * Math.sin(jm) + jl[1] * Math.cos(jm);
			jk[2] = jl[2];
			jj[0] = jk[0] + jh[0];
			jj[1] = jk[1] + jh[1];
			jj[2] = jk[2] + jh[2];
			return jj
		};
		je.forEach = (function() {
			var jh = je.create();
			return function(jk, jo, jp, jn, jm, ji) {
				var jl, jj;
				if (!jo) {
					jo = 3
				}
				if (!jp) {
					jp = 0
				}
				if (jn) {
					jj = Math.min((jn * jo) + jp, jk.length)
				} else {
					jj = jk.length
				}
				for (jl = jp; jl < jj; jl += jo) {
					jh[0] = jk[jl];
					jh[1] = jk[jl + 1];
					jh[2] = jk[jl + 2];
					jm(jh, jh, ji);
					jk[jl] = jh[0];
					jk[jl + 1] = jh[1];
					jk[jl + 2] = jh[2]
				}
				return jk
			}
		})();
		je.str = function(jh) {
			return "vec3(" + jh[0] + ", " + jh[1] + ", " + jh[2] + ")"
		};
		jc.vec3 = je;
		var jd = {};
		jd.create = function(ji) {
			ji = ji || i;
			var jh = new ji(4);
			jh[0] = 0;
			jh[1] = 0;
			jh[2] = 0;
			jh[3] = 0;
			return jh
		};
		jd.clone = function(jh, jj) {
			jj = jj || i;
			var ji = new jj(4);
			ji[0] = jh[0];
			ji[1] = jh[1];
			ji[2] = jh[2];
			ji[3] = jh[3];
			return ji
		};
		jd.fromValues = function(jh, jm, jk, ji, jl) {
			jl = jl || i;
			var jj = new jl(4);
			jj[0] = jh;
			jj[1] = jm;
			jj[2] = jk;
			jj[3] = ji;
			return jj
		};
		jd.copy = function(ji, jh) {
			ji[0] = jh[0];
			ji[1] = jh[1];
			ji[2] = jh[2];
			ji[3] = jh[3];
			return ji
		};
		jd.set = function(jj, jh, jl, jk, ji) {
			jj[0] = jh;
			jj[1] = jl;
			jj[2] = jk;
			jj[3] = ji;
			return jj
		};
		jd.add = function(jj, ji, jh) {
			jj[0] = ji[0] + jh[0];
			jj[1] = ji[1] + jh[1];
			jj[2] = ji[2] + jh[2];
			jj[3] = ji[3] + jh[3];
			return jj
		};
		jd.subtract = function(jj, ji, jh) {
			jj[0] = ji[0] - jh[0];
			jj[1] = ji[1] - jh[1];
			jj[2] = ji[2] - jh[2];
			jj[3] = ji[3] - jh[3];
			return jj
		};
		jd.sub = jd.subtract;
		jd.multiply = function(jj, ji, jh) {
			jj[0] = ji[0] * jh[0];
			jj[1] = ji[1] * jh[1];
			jj[2] = ji[2] * jh[2];
			jj[3] = ji[3] * jh[3];
			return jj
		};
		jd.mul = jd.multiply;
		jd.divide = function(jj, ji, jh) {
			jj[0] = ji[0] / jh[0];
			jj[1] = ji[1] / jh[1];
			jj[2] = ji[2] / jh[2];
			jj[3] = ji[3] / jh[3];
			return jj
		};
		jd.div = jd.divide;
		jd.min = function(jj, ji, jh) {
			jj[0] = Math.min(ji[0], jh[0]);
			jj[1] = Math.min(ji[1], jh[1]);
			jj[2] = Math.min(ji[2], jh[2]);
			jj[3] = Math.min(ji[3], jh[3]);
			return jj
		};
		jd.max = function(jj, ji, jh) {
			jj[0] = Math.max(ji[0], jh[0]);
			jj[1] = Math.max(ji[1], jh[1]);
			jj[2] = Math.max(ji[2], jh[2]);
			jj[3] = Math.max(ji[3], jh[3]);
			return jj
		};
		jd.scale = function(jj, ji, jh) {
			jj[0] = ji[0] * jh;
			jj[1] = ji[1] * jh;
			jj[2] = ji[2] * jh;
			jj[3] = ji[3] * jh;
			return jj
		};
		jd.scaleAndAdd = function(jj, ji, jh, jk) {
			jj[0] = ji[0] + (jh[0] * jk);
			jj[1] = ji[1] + (jh[1] * jk);
			jj[2] = ji[2] + (jh[2] * jk);
			jj[3] = ji[3] + (jh[3] * jk);
			return jj
		};
		jd.distance = function(jk, ji) {
			var jh = ji[0] - jk[0],
				jm = ji[1] - jk[1],
				jl = ji[2] - jk[2],
				jj = ji[3] - jk[3];
			return Math.sqrt(jh * jh + jm * jm + jl * jl + jj * jj)
		};
		jd.dist = jd.distance;
		jd.squaredDistance = function(jk, ji) {
			var jh = ji[0] - jk[0],
				jm = ji[1] - jk[1],
				jl = ji[2] - jk[2],
				jj = ji[3] - jk[3];
			return jh * jh + jm * jm + jl * jl + jj * jj
		};
		jd.sqrDist = jd.squaredDistance;
		jd.length = function(jj) {
			var jh = jj[0],
				jl = jj[1],
				jk = jj[2],
				ji = jj[3];
			return Math.sqrt(jh * jh + jl * jl + jk * jk + ji * ji)
		};
		jd.len = jd.length;
		jd.squaredLength = function(jj) {
			var jh = jj[0],
				jl = jj[1],
				jk = jj[2],
				ji = jj[3];
			return jh * jh + jl * jl + jk * jk + ji * ji
		};
		jd.sqrLen = jd.squaredLength;
		jd.negate = function(ji, jh) {
			ji[0] = -jh[0];
			ji[1] = -jh[1];
			ji[2] = -jh[2];
			ji[3] = -jh[3];
			return ji
		};
		jd.normalize = function(jl, jk) {
			var ji = jk[0],
				jn = jk[1],
				jm = jk[2],
				jj = jk[3];
			var jh = ji * ji + jn * jn + jm * jm + jj * jj;
			if (jh > 0) {
				jh = 1 / Math.sqrt(jh);
				jl[0] = jk[0] * jh;
				jl[1] = jk[1] * jh;
				jl[2] = jk[2] * jh;
				jl[3] = jk[3] * jh
			}
			return jl
		};
		jd.dot = function(ji, jh) {
			return ji[0] * jh[0] + ji[1] * jh[1] + ji[2] * jh[2] + ji[3] * jh[3]
		};
		jd.lerp = function(jj, ji, jh, jk) {
			var jn = ji[0],
				jm = ji[1],
				jl = ji[2],
				jo = ji[3];
			jj[0] = jn + jk * (jh[0] - jn);
			jj[1] = jm + jk * (jh[1] - jm);
			jj[2] = jl + jk * (jh[2] - jl);
			jj[3] = jo + jk * (jh[3] - jo);
			return jj
		};
		jd.random = function(jh, ji) {
			ji = ji || 1;
			jh[0] = ja();
			jh[1] = ja();
			jh[2] = ja();
			jh[3] = ja();
			jd.normalize(jh, jh);
			jd.scale(jh, jh, ji);
			return jh
		};
		jd.transformMat4 = function(jl, jk, ji) {
			var jh = jk[0],
				jn = jk[1],
				jm = jk[2],
				jj = jk[3];
			jl[0] = ji[0] * jh + ji[4] * jn + ji[8] * jm + ji[12] * jj;
			jl[1] = ji[1] * jh + ji[5] * jn + ji[9] * jm + ji[13] * jj;
			jl[2] = ji[2] * jh + ji[6] * jn + ji[10] * jm + ji[14] * jj;
			jl[3] = ji[3] * jh + ji[7] * jn + ji[11] * jm + ji[15] * jj;
			return jl
		};
		jd.transformQuat = function(jn, jt, jh) {
			var ju = jt[0],
				js = jt[1],
				jr = jt[2],
				jp = jh[0],
				jo = jh[1],
				jm = jh[2],
				jq = jh[3],
				jk = jq * ju + jo * jr - jm * js,
				jj = jq * js + jm * ju - jp * jr,
				ji = jq * jr + jp * js - jo * ju,
				jl = -jp * ju - jo * js - jm * jr;
			jn[0] = jk * jq + jl * -jp + jj * -jm - ji * -jo;
			jn[1] = jj * jq + jl * -jo + ji * -jp - jk * -jm;
			jn[2] = ji * jq + jl * -jm + jk * -jo - jj * -jp;
			return jn
		};
		jd.forEach = (function() {
			var jh = jd.create();
			return function(jk, jo, jp, jn, jm, ji) {
				var jl, jj;
				if (!jo) {
					jo = 4
				}
				if (!jp) {
					jp = 0
				}
				if (jn) {
					jj = Math.min((jn * jo) + jp, jk.length)
				} else {
					jj = jk.length
				}
				for (jl = jp; jl < jj; jl += jo) {
					jh[0] = jk[jl];
					jh[1] = jk[jl + 1];
					jh[2] = jk[jl + 2];
					jh[3] = jk[jl + 3];
					jm(jh, jh, ji);
					jk[jl] = jh[0];
					jk[jl + 1] = jh[1];
					jk[jl + 2] = jh[2];
					jk[jl + 3] = jh[3]
				}
				return jk
			}
		})();
		jd.str = function(jh) {
			return "vec4(" + jh[0] + ", " + jh[1] + ", " + jh[2] + ", " + jh[3] + ")"
		};
		jc.vec4 = jd;
		var i9 = {};
		i9.create = function(ji) {
			ji = ji || i;
			var jh = new ji(4);
			jh[0] = 1;
			jh[1] = 0;
			jh[2] = 0;
			jh[3] = 1;
			return jh
		};
		i9.clone = function(jh, jj) {
			jj = jj || i;
			var ji = new jj(4);
			ji[0] = jh[0];
			ji[1] = jh[1];
			ji[2] = jh[2];
			ji[3] = jh[3];
			return ji
		};
		i9.copy = function(ji, jh) {
			ji[0] = jh[0];
			ji[1] = jh[1];
			ji[2] = jh[2];
			ji[3] = jh[3];
			return ji
		};
		i9.identity = function(jh) {
			jh[0] = 1;
			jh[1] = 0;
			jh[2] = 0;
			jh[3] = 1;
			return jh
		};
		i9.transpose = function(jj, ji) {
			if (jj === ji) {
				var jh = ji[1];
				jj[1] = ji[2];
				jj[2] = jh
			} else {
				jj[0] = ji[0];
				jj[1] = ji[2];
				jj[2] = ji[1];
				jj[3] = ji[3]
			}
			return jj
		};
		i9.invert = function(jl, jj) {
			var jk = jj[0],
				ji = jj[1],
				jh = jj[2],
				jn = jj[3],
				jm = jk * jn - jh * ji;
			if (!jm) {
				return null
			}
			jm = 1 / jm;
			jl[0] = jn * jm;
			jl[1] = -ji * jm;
			jl[2] = -jh * jm;
			jl[3] = jk * jm;
			return jl
		};
		i9.adjoint = function(jj, jh) {
			var ji = jh[0];
			jj[0] = jh[3];
			jj[1] = -jh[1];
			jj[2] = -jh[2];
			jj[3] = ji;
			return jj
		};
		i9.determinant = function(jh) {
			return jh[0] * jh[3] - jh[2] * jh[1]
		};
		i9.multiply = function(jl, jq, jo) {
			var jk = jq[0],
				jj = jq[1],
				ji = jq[2],
				jh = jq[3];
			var jr = jo[0],
				jp = jo[1],
				jn = jo[2],
				jm = jo[3];
			jl[0] = jk * jr + ji * jp;
			jl[1] = jj * jr + jh * jp;
			jl[2] = jk * jn + ji * jm;
			jl[3] = jj * jn + jh * jm;
			return jl
		};
		i9.mul = i9.multiply;
		i9.rotate = function(jl, jo, jn) {
			var jk = jo[0],
				jj = jo[1],
				ji = jo[2],
				jh = jo[3],
				jp = Math.sin(jn),
				jm = Math.cos(jn);
			jl[0] = jk * jm + ji * jp;
			jl[1] = jj * jm + jh * jp;
			jl[2] = jk * -jp + ji * jm;
			jl[3] = jj * -jp + jh * jm;
			return jl
		};
		i9.scale = function(jl, jm, jo) {
			var jk = jm[0],
				jj = jm[1],
				ji = jm[2],
				jh = jm[3],
				jp = jo[0],
				jn = jo[1];
			jl[0] = jk * jp;
			jl[1] = jj * jp;
			jl[2] = ji * jn;
			jl[3] = jh * jn;
			return jl
		};
		i9.str = function(jh) {
			return "mat2(" + jh[0] + ", " + jh[1] + ", " + jh[2] + ", " + jh[3] + ")"
		};
		i9.frob = function(jh) {
			return (Math.sqrt(Math.pow(jh[0], 2) + Math.pow(jh[1], 2) + Math.pow(jh[2], 2) + Math.pow(jh[3], 2)))
		};
		i9.LDU = function(jh, jk, jj, ji) {
			jh[2] = ji[2] / ji[0];
			jj[0] = ji[0];
			jj[1] = ji[1];
			jj[3] = ji[3] - jh[2] * jj[1];
			return [jh, jk, jj]
		};
		jc.mat2 = i9;
		var e = {};
		e.create = function(ji) {
			ji = ji || i;
			var jh = new ji(16);
			jh[0] = 1;
			jh[1] = 0;
			jh[2] = 0;
			jh[3] = 0;
			jh[4] = 0;
			jh[5] = 1;
			jh[6] = 0;
			jh[7] = 0;
			jh[8] = 0;
			jh[9] = 0;
			jh[10] = 1;
			jh[11] = 0;
			jh[12] = 0;
			jh[13] = 0;
			jh[14] = 0;
			jh[15] = 1;
			return jh
		};
		e.clone = function(jh) {
			var ji = new i(16);
			ji[0] = jh[0];
			ji[1] = jh[1];
			ji[2] = jh[2];
			ji[3] = jh[3];
			ji[4] = jh[4];
			ji[5] = jh[5];
			ji[6] = jh[6];
			ji[7] = jh[7];
			ji[8] = jh[8];
			ji[9] = jh[9];
			ji[10] = jh[10];
			ji[11] = jh[11];
			ji[12] = jh[12];
			ji[13] = jh[13];
			ji[14] = jh[14];
			ji[15] = jh[15];
			return ji
		};
		e.copy = function(ji, jh) {
			ji[0] = jh[0];
			ji[1] = jh[1];
			ji[2] = jh[2];
			ji[3] = jh[3];
			ji[4] = jh[4];
			ji[5] = jh[5];
			ji[6] = jh[6];
			ji[7] = jh[7];
			ji[8] = jh[8];
			ji[9] = jh[9];
			ji[10] = jh[10];
			ji[11] = jh[11];
			ji[12] = jh[12];
			ji[13] = jh[13];
			ji[14] = jh[14];
			ji[15] = jh[15];
			return ji
		};
		e.identity = function(jh) {
			jh[0] = 1;
			jh[1] = 0;
			jh[2] = 0;
			jh[3] = 0;
			jh[4] = 0;
			jh[5] = 1;
			jh[6] = 0;
			jh[7] = 0;
			jh[8] = 0;
			jh[9] = 0;
			jh[10] = 1;
			jh[11] = 0;
			jh[12] = 0;
			jh[13] = 0;
			jh[14] = 0;
			jh[15] = 1;
			return jh
		};
		e.transpose = function(jk, jj) {
			if (jk === jj) {
				var jo = jj[1],
					jm = jj[2],
					jl = jj[3],
					jh = jj[6],
					jn = jj[7],
					ji = jj[11];
				jk[1] = jj[4];
				jk[2] = jj[8];
				jk[3] = jj[12];
				jk[4] = jo;
				jk[6] = jj[9];
				jk[7] = jj[13];
				jk[8] = jm;
				jk[9] = jh;
				jk[11] = jj[14];
				jk[12] = jl;
				jk[13] = jn;
				jk[14] = ji
			} else {
				jk[0] = jj[0];
				jk[1] = jj[4];
				jk[2] = jj[8];
				jk[3] = jj[12];
				jk[4] = jj[1];
				jk[5] = jj[5];
				jk[6] = jj[9];
				jk[7] = jj[13];
				jk[8] = jj[2];
				jk[9] = jj[6];
				jk[10] = jj[10];
				jk[11] = jj[14];
				jk[12] = jj[3];
				jk[13] = jj[7];
				jk[14] = jj[11];
				jk[15] = jj[15]
			}
			return jk
		};
		e.invert = function(jA, jF) {
			var jJ = jF[0],
				jH = jF[1],
				jG = jF[2],
				jD = jF[3],
				jl = jF[4],
				jk = jF[5],
				jj = jF[6],
				ji = jF[7],
				jz = jF[8],
				jy = jF[9],
				jx = jF[10],
				jw = jF[11],
				jL = jF[12],
				jK = jF[13],
				jI = jF[14],
				jE = jF[15],
				jv = jJ * jk - jH * jl,
				ju = jJ * jj - jG * jl,
				jt = jJ * ji - jD * jl,
				js = jH * jj - jG * jk,
				jr = jH * ji - jD * jk,
				jq = jG * ji - jD * jj,
				jp = jz * jK - jy * jL,
				jo = jz * jI - jx * jL,
				jn = jz * jE - jw * jL,
				jm = jy * jI - jx * jK,
				jC = jy * jE - jw * jK,
				jB = jx * jE - jw * jI,
				jh = jv * jB - ju * jC + jt * jm + js * jn - jr * jo + jq * jp;
			if (!jh) {
				return null
			}
			jh = 1 / jh;
			jA[0] = (jk * jB - jj * jC + ji * jm) * jh;
			jA[1] = (jG * jC - jH * jB - jD * jm) * jh;
			jA[2] = (jK * jq - jI * jr + jE * js) * jh;
			jA[3] = (jx * jr - jy * jq - jw * js) * jh;
			jA[4] = (jj * jn - jl * jB - ji * jo) * jh;
			jA[5] = (jJ * jB - jG * jn + jD * jo) * jh;
			jA[6] = (jI * jt - jL * jq - jE * ju) * jh;
			jA[7] = (jz * jq - jx * jt + jw * ju) * jh;
			jA[8] = (jl * jC - jk * jn + ji * jp) * jh;
			jA[9] = (jH * jn - jJ * jC - jD * jp) * jh;
			jA[10] = (jL * jr - jK * jt + jE * jv) * jh;
			jA[11] = (jy * jt - jz * jr - jw * jv) * jh;
			jA[12] = (jk * jo - jl * jm - jj * jp) * jh;
			jA[13] = (jJ * jm - jH * jo + jG * jp) * jh;
			jA[14] = (jK * ju - jL * js - jI * jv) * jh;
			jA[15] = (jz * js - jy * ju + jx * jv) * jh;
			return jA
		};
		e.adjoint = function(jp, js) {
			var jw = js[0],
				ju = js[1],
				jt = js[2],
				jq = js[3],
				jk = js[4],
				jj = js[5],
				ji = js[6],
				jh = js[7],
				jo = js[8],
				jn = js[9],
				jm = js[10],
				jl = js[11],
				jy = js[12],
				jx = js[13],
				jv = js[14],
				jr = js[15];
			jp[0] = (jj * (jm * jr - jl * jv) - jn * (ji * jr - jh * jv) + jx * (ji * jl - jh * jm));
			jp[1] = -(ju * (jm * jr - jl * jv) - jn * (jt * jr - jq * jv) + jx * (jt * jl - jq * jm));
			jp[2] = (ju * (ji * jr - jh * jv) - jj * (jt * jr - jq * jv) + jx * (jt * jh - jq * ji));
			jp[3] = -(ju * (ji * jl - jh * jm) - jj * (jt * jl - jq * jm) + jn * (jt * jh - jq * ji));
			jp[4] = -(jk * (jm * jr - jl * jv) - jo * (ji * jr - jh * jv) + jy * (ji * jl - jh * jm));
			jp[5] = (jw * (jm * jr - jl * jv) - jo * (jt * jr - jq * jv) + jy * (jt * jl - jq * jm));
			jp[6] = -(jw * (ji * jr - jh * jv) - jk * (jt * jr - jq * jv) + jy * (jt * jh - jq * ji));
			jp[7] = (jw * (ji * jl - jh * jm) - jk * (jt * jl - jq * jm) + jo * (jt * jh - jq * ji));
			jp[8] = (jk * (jn * jr - jl * jx) - jo * (jj * jr - jh * jx) + jy * (jj * jl - jh * jn));
			jp[9] = -(jw * (jn * jr - jl * jx) - jo * (ju * jr - jq * jx) + jy * (ju * jl - jq * jn));
			jp[10] = (jw * (jj * jr - jh * jx) - jk * (ju * jr - jq * jx) + jy * (ju * jh - jq * jj));
			jp[11] = -(jw * (jj * jl - jh * jn) - jk * (ju * jl - jq * jn) + jo * (ju * jh - jq * jj));
			jp[12] = -(jk * (jn * jv - jm * jx) - jo * (jj * jv - ji * jx) + jy * (jj * jm - ji * jn));
			jp[13] = (jw * (jn * jv - jm * jx) - jo * (ju * jv - jt * jx) + jy * (ju * jm - jt * jn));
			jp[14] = -(jw * (jj * jv - ji * jx) - jk * (ju * jv - jt * jx) + jy * (ju * ji - jt * jj));
			jp[15] = (jw * (jj * jm - ji * jn) - jk * (ju * jm - jt * jn) + jo * (ju * ji - jt * jj));
			return jp
		};
		e.determinant = function(jC) {
			var jH = jC[0],
				jF = jC[1],
				jD = jC[2],
				jB = jC[3],
				jk = jC[4],
				jj = jC[5],
				ji = jC[6],
				jh = jC[7],
				jy = jC[8],
				jx = jC[9],
				jw = jC[10],
				jv = jC[11],
				jJ = jC[12],
				jI = jC[13],
				jG = jC[14],
				jE = jC[15],
				ju = jH * jj - jF * jk,
				jt = jH * ji - jD * jk,
				js = jH * jh - jB * jk,
				jr = jF * ji - jD * jj,
				jq = jF * jh - jB * jj,
				jp = jD * jh - jB * ji,
				jo = jy * jI - jx * jJ,
				jn = jy * jG - jw * jJ,
				jm = jy * jE - jv * jJ,
				jl = jx * jG - jw * jI,
				jA = jx * jE - jv * jI,
				jz = jw * jE - jv * jG;
			return ju * jz - jt * jA + js * jl + jr * jm - jq * jn + jp * jo
		};
		e.multiply = function(jt, jx, ju) {
			var jB = jx[0],
				jA = jx[1],
				jy = jx[2],
				jv = jx[3],
				jn = jx[4],
				jl = jx[5],
				jj = jx[6],
				jh = jx[7],
				js = jx[8],
				jr = jx[9],
				jq = jx[10],
				jp = jx[11],
				jD = jx[12],
				jC = jx[13],
				jz = jx[14],
				jw = jx[15];
			var jo = ju[0],
				jm = ju[1],
				jk = ju[2],
				ji = ju[3];
			jt[0] = jo * jB + jm * jn + jk * js + ji * jD;
			jt[1] = jo * jA + jm * jl + jk * jr + ji * jC;
			jt[2] = jo * jy + jm * jj + jk * jq + ji * jz;
			jt[3] = jo * jv + jm * jh + jk * jp + ji * jw;
			jo = ju[4];
			jm = ju[5];
			jk = ju[6];
			ji = ju[7];
			jt[4] = jo * jB + jm * jn + jk * js + ji * jD;
			jt[5] = jo * jA + jm * jl + jk * jr + ji * jC;
			jt[6] = jo * jy + jm * jj + jk * jq + ji * jz;
			jt[7] = jo * jv + jm * jh + jk * jp + ji * jw;
			jo = ju[8];
			jm = ju[9];
			jk = ju[10];
			ji = ju[11];
			jt[8] = jo * jB + jm * jn + jk * js + ji * jD;
			jt[9] = jo * jA + jm * jl + jk * jr + ji * jC;
			jt[10] = jo * jy + jm * jj + jk * jq + ji * jz;
			jt[11] = jo * jv + jm * jh + jk * jp + ji * jw;
			jo = ju[12];
			jm = ju[13];
			jk = ju[14];
			ji = ju[15];
			jt[12] = jo * jB + jm * jn + jk * js + ji * jD;
			jt[13] = jo * jA + jm * jl + jk * jr + ji * jC;
			jt[14] = jo * jy + jm * jj + jk * jq + ji * jz;
			jt[15] = jo * jv + jm * jh + jk * jp + ji * jw;
			return jt
		};
		e.mul = e.multiply;
		e.translate = function(jt, jv, jo) {
			var jn = jo[0],
				jm = jo[1],
				jl = jo[2],
				jy, jx, jw, ju, jk, jj, ji, jh, js, jr, jq, jp;
			if (jv === jt) {
				jt[12] = jv[0] * jn + jv[4] * jm + jv[8] * jl + jv[12];
				jt[13] = jv[1] * jn + jv[5] * jm + jv[9] * jl + jv[13];
				jt[14] = jv[2] * jn + jv[6] * jm + jv[10] * jl + jv[14];
				jt[15] = jv[3] * jn + jv[7] * jm + jv[11] * jl + jv[15]
			} else {
				jy = jv[0];
				jx = jv[1];
				jw = jv[2];
				ju = jv[3];
				jk = jv[4];
				jj = jv[5];
				ji = jv[6];
				jh = jv[7];
				js = jv[8];
				jr = jv[9];
				jq = jv[10];
				jp = jv[11];
				jt[0] = jy;
				jt[1] = jx;
				jt[2] = jw;
				jt[3] = ju;
				jt[4] = jk;
				jt[5] = jj;
				jt[6] = ji;
				jt[7] = jh;
				jt[8] = js;
				jt[9] = jr;
				jt[10] = jq;
				jt[11] = jp;
				jt[12] = jy * jn + jk * jm + js * jl + jv[12];
				jt[13] = jx * jn + jj * jm + jr * jl + jv[13];
				jt[14] = jw * jn + ji * jm + jq * jl + jv[14];
				jt[15] = ju * jn + jh * jm + jp * jl + jv[15]
			}
			return jt
		};
		e.scale = function(jk, ji, jj) {
			var jh = jj[0],
				jm = jj[1],
				jl = jj[2];
			jk[0] = ji[0] * jh;
			jk[1] = ji[1] * jh;
			jk[2] = ji[2] * jh;
			jk[3] = ji[3] * jh;
			jk[4] = ji[4] * jm;
			jk[5] = ji[5] * jm;
			jk[6] = ji[6] * jm;
			jk[7] = ji[7] * jm;
			jk[8] = ji[8] * jl;
			jk[9] = ji[9] * jl;
			jk[10] = ji[10] * jl;
			jk[11] = ji[11] * jl;
			jk[12] = ji[12];
			jk[13] = ji[13];
			jk[14] = ji[14];
			jk[15] = ji[15];
			return jk
		};
		e.rotate = function(jB, jI, jK, jh) {
			var jr = jh[0],
				jq = jh[1],
				jp = jh[2],
				jC = Math.sqrt(jr * jr + jq * jq + jp * jp),
				jw, jG, jv, jM, jL, jJ, jH, jo, jn, jm, jl, jA, jz, jy, jx, ju, jt, js, jF, jE, jD, jk, jj, ji;
			if (Math.abs(jC) < jg) {
				return null
			}
			jC = 1 / jC;
			jr *= jC;
			jq *= jC;
			jp *= jC;
			jw = Math.sin(jK);
			jG = Math.cos(jK);
			jv = 1 - jG;
			jM = jI[0];
			jL = jI[1];
			jJ = jI[2];
			jH = jI[3];
			jo = jI[4];
			jn = jI[5];
			jm = jI[6];
			jl = jI[7];
			jA = jI[8];
			jz = jI[9];
			jy = jI[10];
			jx = jI[11];
			ju = jr * jr * jv + jG;
			jt = jq * jr * jv + jp * jw;
			js = jp * jr * jv - jq * jw;
			jF = jr * jq * jv - jp * jw;
			jE = jq * jq * jv + jG;
			jD = jp * jq * jv + jr * jw;
			jk = jr * jp * jv + jq * jw;
			jj = jq * jp * jv - jr * jw;
			ji = jp * jp * jv + jG;
			jB[0] = jM * ju + jo * jt + jA * js;
			jB[1] = jL * ju + jn * jt + jz * js;
			jB[2] = jJ * ju + jm * jt + jy * js;
			jB[3] = jH * ju + jl * jt + jx * js;
			jB[4] = jM * jF + jo * jE + jA * jD;
			jB[5] = jL * jF + jn * jE + jz * jD;
			jB[6] = jJ * jF + jm * jE + jy * jD;
			jB[7] = jH * jF + jl * jE + jx * jD;
			jB[8] = jM * jk + jo * jj + jA * ji;
			jB[9] = jL * jk + jn * jj + jz * ji;
			jB[10] = jJ * jk + jm * jj + jy * ji;
			jB[11] = jH * jk + jl * jj + jx * ji;
			if (jI !== jB) {
				jB[12] = jI[12];
				jB[13] = jI[13];
				jB[14] = jI[14];
				jB[15] = jI[15]
			}
			return jB
		};
		e.rotateX = function(jh, jo, jn) {
			var jt = Math.sin(jn),
				jm = Math.cos(jn),
				js = jo[4],
				jr = jo[5],
				jq = jo[6],
				jp = jo[7],
				jl = jo[8],
				jk = jo[9],
				jj = jo[10],
				ji = jo[11];
			if (jo !== jh) {
				jh[0] = jo[0];
				jh[1] = jo[1];
				jh[2] = jo[2];
				jh[3] = jo[3];
				jh[12] = jo[12];
				jh[13] = jo[13];
				jh[14] = jo[14];
				jh[15] = jo[15]
			}
			jh[4] = js * jm + jl * jt;
			jh[5] = jr * jm + jk * jt;
			jh[6] = jq * jm + jj * jt;
			jh[7] = jp * jm + ji * jt;
			jh[8] = jl * jm - js * jt;
			jh[9] = jk * jm - jr * jt;
			jh[10] = jj * jm - jq * jt;
			jh[11] = ji * jm - jp * jt;
			return jh
		};
		e.rotateY = function(jl, js, jr) {
			var jt = Math.sin(jr),
				jq = Math.cos(jr),
				jk = js[0],
				jj = js[1],
				ji = js[2],
				jh = js[3],
				jp = js[8],
				jo = js[9],
				jn = js[10],
				jm = js[11];
			if (js !== jl) {
				jl[4] = js[4];
				jl[5] = js[5];
				jl[6] = js[6];
				jl[7] = js[7];
				jl[12] = js[12];
				jl[13] = js[13];
				jl[14] = js[14];
				jl[15] = js[15]
			}
			jl[0] = jk * jq - jp * jt;
			jl[1] = jj * jq - jo * jt;
			jl[2] = ji * jq - jn * jt;
			jl[3] = jh * jq - jm * jt;
			jl[8] = jk * jt + jp * jq;
			jl[9] = jj * jt + jo * jq;
			jl[10] = ji * jt + jn * jq;
			jl[11] = jh * jt + jm * jq;
			return jl
		};
		e.rotateZ = function(jl, jo, jn) {
			var jt = Math.sin(jn),
				jm = Math.cos(jn),
				jk = jo[0],
				jj = jo[1],
				ji = jo[2],
				jh = jo[3],
				js = jo[4],
				jr = jo[5],
				jq = jo[6],
				jp = jo[7];
			if (jo !== jl) {
				jl[8] = jo[8];
				jl[9] = jo[9];
				jl[10] = jo[10];
				jl[11] = jo[11];
				jl[12] = jo[12];
				jl[13] = jo[13];
				jl[14] = jo[14];
				jl[15] = jo[15]
			}
			jl[0] = jk * jm + js * jt;
			jl[1] = jj * jm + jr * jt;
			jl[2] = ji * jm + jq * jt;
			jl[3] = jh * jm + jp * jt;
			jl[4] = js * jm - jk * jt;
			jl[5] = jr * jm - jj * jt;
			jl[6] = jq * jm - ji * jt;
			jl[7] = jp * jm - jh * jt;
			return jl
		};
		e.fromRotationTranslation = function(ju, js, jq) {
			var jn = js[0],
				jm = js[1],
				jl = js[2],
				jo = js[3],
				jv = jn + jn,
				jh = jm + jm,
				jp = jl + jl,
				jk = jn * jv,
				jj = jn * jh,
				ji = jn * jp,
				jt = jm * jh,
				jr = jm * jp,
				jy = jl * jp,
				jz = jo * jv,
				jx = jo * jh,
				jw = jo * jp;
			ju[0] = 1 - (jt + jy);
			ju[1] = jj + jw;
			ju[2] = ji - jx;
			ju[3] = 0;
			ju[4] = jj - jw;
			ju[5] = 1 - (jk + jy);
			ju[6] = jr + jz;
			ju[7] = 0;
			ju[8] = ji + jx;
			ju[9] = jr - jz;
			ju[10] = 1 - (jk + jt);
			ju[11] = 0;
			ju[12] = jq[0];
			ju[13] = jq[1];
			ju[14] = jq[2];
			ju[15] = 1;
			return ju
		};
		e.fromQuat = function(jr, jo) {
			var jl = jo[0],
				jk = jo[1],
				jj = jo[2],
				jm = jo[3],
				js = jl + jl,
				jh = jk + jk,
				jn = jj + jj,
				ji = jl * js,
				jq = jk * js,
				jp = jk * jh,
				jy = jj * js,
				jx = jj * jh,
				jv = jj * jn,
				jw = jm * js,
				ju = jm * jh,
				jt = jm * jn;
			jr[0] = 1 - jp - jv;
			jr[1] = jq + jt;
			jr[2] = jy - ju;
			jr[3] = 0;
			jr[4] = jq - jt;
			jr[5] = 1 - ji - jv;
			jr[6] = jx + jw;
			jr[7] = 0;
			jr[8] = jy + ju;
			jr[9] = jx - jw;
			jr[10] = 1 - ji - jp;
			jr[11] = 0;
			jr[12] = 0;
			jr[13] = 0;
			jr[14] = 0;
			jr[15] = 1;
			return jr
		};
		e.frustum = function(jl, ji, jq, jh, jp, jn, jm) {
			var jo = 1 / (jq - ji),
				jk = 1 / (jp - jh),
				jj = 1 / (jn - jm);
			jl[0] = (jn * 2) * jo;
			jl[1] = 0;
			jl[2] = 0;
			jl[3] = 0;
			jl[4] = 0;
			jl[5] = (jn * 2) * jk;
			jl[6] = 0;
			jl[7] = 0;
			jl[8] = (jq + ji) * jo;
			jl[9] = (jp + jh) * jk;
			jl[10] = (jm + jn) * jj;
			jl[11] = -1;
			jl[12] = 0;
			jl[13] = 0;
			jl[14] = (jm * jn * 2) * jj;
			jl[15] = 0;
			return jl
		};
		e.perspective = function(jk, jj, ji, jl, jh) {
			var jn = 1 / Math.tan(jj / 2),
				jm = 1 / (jl - jh);
			jk[0] = jn / ji;
			jk[1] = 0;
			jk[2] = 0;
			jk[3] = 0;
			jk[4] = 0;
			jk[5] = jn;
			jk[6] = 0;
			jk[7] = 0;
			jk[8] = 0;
			jk[9] = 0;
			jk[10] = (jh + jl) * jm;
			jk[11] = -1;
			jk[12] = 0;
			jk[13] = 0;
			jk[14] = (2 * jh * jl) * jm;
			jk[15] = 0;
			return jk
		};
		e.ortho = function(jk, ji, jq, jh, jo, jn, jm) {
			var jl = 1 / (ji - jq),
				jp = 1 / (jh - jo),
				jj = 1 / (jn - jm);
			jk[0] = -2 * jl;
			jk[1] = 0;
			jk[2] = 0;
			jk[3] = 0;
			jk[4] = 0;
			jk[5] = -2 * jp;
			jk[6] = 0;
			jk[7] = 0;
			jk[8] = 0;
			jk[9] = 0;
			jk[10] = 2 * jj;
			jk[11] = 0;
			jk[12] = (ji + jq) * jl;
			jk[13] = (jo + jh) * jp;
			jk[14] = (jm + jn) * jj;
			jk[15] = 1;
			return jk
		};
		e.lookAt = function(jv, jC, jD, jn) {
			var jB, jA, jy, jj, ji, jh, jq, jp, jo, jw, jz = jC[0],
				jx = jC[1],
				ju = jC[2],
				jm = jn[0],
				jl = jn[1],
				jk = jn[2],
				jt = jD[0],
				js = jD[1],
				jr = jD[2];
			if (Math.abs(jz - jt) < jg && Math.abs(jx - js) < jg && Math.abs(ju - jr) < jg) {
				return e.identity(jv)
			}
			jq = jz - jt;
			jp = jx - js;
			jo = ju - jr;
			jw = 1 / Math.sqrt(jq * jq + jp * jp + jo * jo);
			jq *= jw;
			jp *= jw;
			jo *= jw;
			jB = jl * jo - jk * jp;
			jA = jk * jq - jm * jo;
			jy = jm * jp - jl * jq;
			jw = Math.sqrt(jB * jB + jA * jA + jy * jy);
			if (!jw) {
				jB = 0;
				jA = 0;
				jy = 0
			} else {
				jw = 1 / jw;
				jB *= jw;
				jA *= jw;
				jy *= jw
			}
			jj = jp * jy - jo * jA;
			ji = jo * jB - jq * jy;
			jh = jq * jA - jp * jB;
			jw = Math.sqrt(jj * jj + ji * ji + jh * jh);
			if (!jw) {
				jj = 0;
				ji = 0;
				jh = 0
			} else {
				jw = 1 / jw;
				jj *= jw;
				ji *= jw;
				jh *= jw
			}
			jv[0] = jB;
			jv[1] = jj;
			jv[2] = jq;
			jv[3] = 0;
			jv[4] = jA;
			jv[5] = ji;
			jv[6] = jp;
			jv[7] = 0;
			jv[8] = jy;
			jv[9] = jh;
			jv[10] = jo;
			jv[11] = 0;
			jv[12] = -(jB * jz + jA * jx + jy * ju);
			jv[13] = -(jj * jz + ji * jx + jh * ju);
			jv[14] = -(jq * jz + jp * jx + jo * ju);
			jv[15] = 1;
			return jv
		};
		e.str = function(jh) {
			return "mat4(" + jh[0] + ", " + jh[1] + ", " + jh[2] + ", " + jh[3] + ", " + jh[4] + ", " + jh[5] + ", " + jh[6] + ", " + jh[7] + ", " + jh[8] + ", " + jh[9] + ", " + jh[10] + ", " + jh[11] + ", " + jh[12] + ", " + jh[13] + ", " + jh[14] + ", " + jh[15] + ")"
		};
		e.frob = function(jh) {
			return (Math.sqrt(Math.pow(jh[0], 2) + Math.pow(jh[1], 2) + Math.pow(jh[2], 2) + Math.pow(jh[3], 2) + Math.pow(jh[4], 2) + Math.pow(jh[5], 2) + Math.pow(jh[6], 2) + Math.pow(jh[6], 2) + Math.pow(jh[7], 2) + Math.pow(jh[8], 2) + Math.pow(jh[9], 2) + Math.pow(jh[10], 2) + Math.pow(jh[11], 2) + Math.pow(jh[12], 2) + Math.pow(jh[13], 2) + Math.pow(jh[14], 2) + Math.pow(jh[15], 2)))
		};
		jc.mat4 = e
	})(window);

	function bX() {
		this.result = {
			bkData: [],
			eleData: [
				[],
				[],
				[],
				[],
				[],
				[],
				[],
				[],
				[],
				[]
			],
			tileLabels: []
		}
	}
	es.extend(bX.prototype, {
		createLayer: function(T, i) {
			var e = this.result.bkData;
			i = i || {};
			if (!e[T]) {
				e[T] = [
					[],
					[],
					[]
				]
			}
			e[T].tileTypeName = i.tileTypeName || "na";
			e[T].dataType = i.dataType || 2;
			e[T].png8 = i.png8 || false;
			e[T].clipTile = i.clipTile || false;
			e[T].boundary = i.boundary || false;
			if (i.ontology) {
				e[T].ontology = i.ontology
			}
		},
		removeLayer: function(i) {
			var e = this.result.bkData;
			e[i] = null
		},
		hasLayerBoundary: function() {
			var e = this.result.bkData;
			var T = false;
			for (var i9 = 0; i9 < e.length; i9++) {
				if (e[i9] && e[i9].boundary) {
					T = true;
					break
				}
			}
			return T
		},
		getResult: function() {
			return this.result
		},
		setData: function(jb, ja, jc) {
			var e = this.result.bkData;
			var T = e[ja] ? e[ja][jc] : null;
			if (!T) {
				return
			}
			for (var i9 = 0; i9 < T.length; i9++) {
				if (T[i9].key && T[i9].key === jb.key) {
					T[i9] = jb;
					return
				}
			}
			T.push(jb)
		},
		setLabelData: function(e) {
			this.result.tileLabels = e
		},
		getLabelData: function() {
			return this.result.tileLabels
		},
		setOverlayData: function(i, e) {
			if (!this.result.eleData[e]) {
				return
			}
			this.result.eleData[e] = i
		},
		clearLabelOverlayData: function() {
			this.result.eleData[2] = [];
			this.result.eleData[3] = [];
			this.result.eleData[4] = []
		},
		clearData: function(i9) {
			var e = this.result.bkData;
			if (typeof i9 === "number") {
				if (e[i9]) {
					e[i9][0] = [];
					e[i9][1] = [];
					e[i9][2] = []
				}
				return
			}
			for (var T = 0; T < e.length; T++) {
				if (!e[T]) {
					continue
				}
				e[T][0] = [];
				e[T][1] = [];
				e[T][2] = []
			}
		},
		sortThumbData: function(i) {
			var e = this.result.bkData;
			var T = e[i];
			if (!T) {
				return
			}
			if (T[0] && T[0].length > 0) {
				T[0].sort(function(ja, i9) {
					return ja.tileInfo.useZoom - i9.tileInfo.useZoom
				})
			}
		}
	});
	var fH = (function() {
		var jj = new Int8Array(4);
		var T = new Int32Array(jj.buffer, 0, 1);
		var je = new Float32Array(jj.buffer, 0, 1);

		function jl(js) {
			T[0] = js;
			return je[0]
		}

		function i(js) {
			je[0] = js;
			return T[0]
		}

		function jf(js) {
			var ju = (js[3] << 24 | js[2] << 16 | js[1] << 8 | js[0]);
			var jt = jl(ju & 4278190079);
			return jt
		}
		var ja = 0;
		var jd = 1;
		var jh = 2;
		var jp = 0;
		var jm = 1;
		var jk = 2;
		var jb = 9;

		function ji(js, jt) {
			var ju;
			if (jt % 2 === 0) {
				ju = [-js[1], js[0]]
			} else {
				ju = [js[1], -js[0]]
			}
			return ju
		}

		function e(js, jt, ju) {
			var jv = ji(js, jt);
			var jw;
			if (ju === jd) {
				return jv
			} else {
				if (jt === 4 || jt === 5) {
					jw = [jv[0] - js[0], jv[1] - js[1]]
				} else {
					jw = [jv[0] + js[0], jv[1] + js[1]]
				}
				if (ju === ja) {
					vec2.normalize(jw, jw)
				}
				return jw
			}
		}

		function jo(jt, js) {
			return Math.sqrt(Math.pow(jt[0] - js[0], 2) + Math.pow(jt[1] - js[1], 2))
		}

		function i9(jw, jv, ju, js) {
			var jt = vec2.dot(jw, jv);
			if (ju === jk || ju === jm) {
				if ((js === 0 || js === 1) && jt > 0) {
					return true
				} else {
					if ((js === 2 || js === 3) && jt < 0) {
						return true
					}
				}
			}
			if ((js === 0 || js === 1) && jt < 0) {
				return true
			} else {
				if ((js === 2 || js === 3) && jt > 0) {
					return true
				}
			}
			return false
		}

		function jg(jt, jy, jA) {
			var jz = ji(jt, jy);
			var jv;
			var jx = jt;
			var jw = jA;
			var jC = [];
			vec2.normalize(jC, [jx[0] + jw[0], jx[1] + jw[1]]);
			var jB = vec2.dot(jz, [-jC[1], jC[0]]);
			if (Math.abs(jB) < 0.1) {
				jB = 1
			}
			var ju = 1 / jB;
			jv = [-jC[1] * ju, jC[0] * ju];
			var js = vec2.dot(jt, jv);
			if (js < 0) {
				vec2.negate(jv, jv)
			}
			return {
				cos2: js,
				offset: jv
			}
		}

		function jr(jt, jy, jA, js) {
			var jz = ji(jt, jy);
			var jx;
			var jw;
			var jv;
			if (jy === 0 || jy === 1) {
				jx = jA;
				jw = jt
			} else {
				jx = jt;
				jw = jA
			}
			if (!jx || !jw) {
				return jz
			}
			var jC = [jx[0] + jw[0], jx[1] + jw[1]];
			if (jC[0] === 0 && jC[1] === 0) {
				vec2.normalize(jC, jw)
			} else {
				vec2.normalize(jC, jC)
			}
			var jD = i9(jC, jz, js, jy);
			if (jD) {
				return jz
			}
			var jB = vec2.dot(jz, [-jC[1], jC[0]]);
			if (Math.abs(jB) < 0.1) {
				jB = 1
			}
			var ju = 1 / jB;
			jv = [-jC[1] * ju, jC[0] * ju];
			return jv
		}

		function jq(jD, jE, jx, jw, jF, jC, jv, jy, ju, jB) {
			var jA;
			var jt = 0;
			var js = false;
			jA = jC.length / jb - 1;
			jc(jE[0], jD[0], jx[0], jF, jw, 4, jy, ju, undefined, jC, jB);
			jA++;
			jt++;
			jc(jE[0], jD[0], jx[0], jF, jw, 5, jy, ju, undefined, jC, jB);
			jA++;
			jt++;
			for (var jz = 0; jz < jD.length; jz++) {
				jc(jE[jz], jD[jz], jx[jz], jF, jw, 0, jy, ju, jD[jz - 1], jC, jB);
				jn(jv, ++jA, ++jt, js);
				jc(jE[jz], jD[jz], jx[jz], jF, jw, 1, jy, ju, jD[jz - 1], jC, jB);
				jn(jv, ++jA, ++jt, js);
				jc(jE[jz + 1], jD[jz], jx[jz + 1], jF, jw, 2, jy, ju, jD[jz + 1], jC, jB);
				jn(jv, ++jA, ++jt, js);
				jc(jE[jz + 1], jD[jz], jx[jz + 1], jF, jw, 3, jy, ju, jD[jz + 1], jC, jB);
				jn(jv, ++jA, ++jt, js);
				if (jw === jm && jz !== jD.length - 1) {
					jc(jE[jz + 1], jD[jz], jx[jz + 1], jF, jw, 8, jy, ju, jD[jz + 1], jC, jB);
					jn(jv, ++jA, ++jt, js);
					js = js ? false : true
				}
			}
			jc(jE[jE.length - 1], jD[jD.length - 1], jx[jE.length - 1], jF, jw, 6, jy, ju, undefined, jC, jB);
			jn(jv, ++jA, ++jt, js);
			jc(jE[jE.length - 1], jD[jD.length - 1], jx[jE.length - 1], jF, jw, 7, jy, ju, undefined, jC, jB);
			jn(jv, ++jA, ++jt, js)
		}

		function jc(jF, jv, jz, jG, ju, jA, jx, jt, jD, jC, jB) {
			var jE = jA % 2 === 0 ? 1 : -1;
			var jy;
			if (jA === 4 || jA === 5 || jA === 6 || jA === 7) {
				jy = e(jv, jA, jG)
			} else {
				if (jA === 0 || jA === 1 || jA === 2 || jA === 3) {
					jy = jr(jv, jA, jD, ju)
				} else {
					if (jA === 8) {
						var jw = jg(jv, jA, jD);
						jy = jw.offset;
						vec2.normalize(jy, jy);
						var js = jw.cos2;
						if (js < 0) {
							jE = -jE
						}
					}
				}
			}
			jC[jC.length] = jF[0] * 10;
			jC[jC.length] = jF[1] * 10;
			jC[jC.length] = jy[0] * jt * 10;
			jC[jC.length] = jy[1] * jt * 10;
			jC[jC.length] = jx;
			jC[jC.length] = jE;
			jC[jC.length] = 0;
			jC[jC.length] = jB || 0;
			jC[jC.length] = jz
		}

		function jn(jw, ju, js, jv) {
			var jt;
			if (js % 2 === 0) {
				if (jv) {
					jw[jw.length] = ju - 2;
					jw[jw.length] = ju - 1;
					jw[jw.length] = ju
				} else {
					jw[jw.length] = ju - 1;
					jw[jw.length] = ju - 2;
					jw[jw.length] = ju
				}
			} else {
				if (jv) {
					jw[jw.length] = ju - 1;
					jw[jw.length] = ju - 2;
					jw[jw.length] = ju
				} else {
					jw[jw.length] = ju - 2;
					jw[jw.length] = ju - 1;
					jw[jw.length] = ju
				}
			}
		}
		return {
			getVertexCount: function(jt, js) {
				if (js === jm) {
					return jt * 5 - 2
				} else {
					return jt * 4
				}
			},
			buildData: function(jD, ju, jE, jA, js, jx, jt, jB) {
				var jC = [];
				var jz = 0;
				var jw = [0];
				for (var jy = 0; jy < jD.length; jy++) {
					if (jy > 0) {
						jz += jo(jD[jy], jD[jy - 1]);
						jw.push(jz * 10)
					}
					if (jy !== jD.length - 1) {
						var jv = [jD[jy + 1][0] - jD[jy][0], jD[jy + 1][1] - jD[jy][1]];
						var jF = [];
						if (jv[0] === 0 && jv[1] === 0) {
							jF = [0, 0]
						} else {
							vec2.normalize(jF, jv)
						}
						jC[jC.length] = [jF[0], jF[1]]
					}
				}
				return jq(jC, jD, jw, ju, jE, jA, js, jf(jx), jt, jB)
			},
			toTileSolidLineVertices: function(jw, jt) {
				var ju = new Float32Array(jw.length / jb * 5);
				var js = new Int16Array(ju.buffer);
				var jy = 0;
				var jv = 0;
				for (var jx = 0; jx < jw.length; jx += jb) {
					js[jy] = ~~jw[jx];
					js[jy + 1] = ~~jw[jx + 1];
					js[jy + 2] = ~~jw[jx + 2];
					js[jy + 3] = ~~jw[jx + 3];
					ju[jv + 2] = jw[jx + 4];
					js[jy + 6] = jw[jx + 5];
					js[jy + 7] = jt ? jt : 0;
					js[jy + 8] = jw[jx + 7];
					js[jy + 9] = 0;
					jy += 10;
					jv += 5
				}
				return ju
			}
		}
	})();
	var fY = 1;
	var gT = 2;
	var eH = {
		drawIndex: 0,
		devicePixelRatio: fz(),
		zoomState: 1,
		curViewTilesInfo: null,
		iconSetImg: null,
		LAST_CALC_ZOOM: -1,
		LAST_LOAD_VECTOR_ZOOM_CHANGE: false,
		lastCollisionTestTime: 0,
		remove: function() {
			this.tileCache.clear()
		},
		initDrawData: function() {
			this.drawIndex = this.zIndex;
			var e = {
				tileTypeName: this.tileType.getName(),
				dataType: this.dataType,
				png8: this.png8,
				clipTile: this.clipTile,
				boundary: this.boundary
			};
			if (this.ontology) {
				e.ontology = this.ontology
			}
			this.map._featureMgr.createLayer(this.drawIndex, e);
			this.dispatchEvent(new e7("oninitDrawData"))
		},
		destroyDrawData: function() {
			this.map._featureMgr.removeLayer(this.drawIndex);
			var i = new e7("onremoveLayerMask");
			i.hasLayerBoundary = this.map._featureMgr.hasLayerBoundary();
			this.map.dispatchEvent(i)
		},
		setZIndex: function(jd) {
			jd = Math.abs(Math.floor(jd)) || 1;
			if (!jd || jd === this.zIndex) {
				return
			}
			var i = this.map._featureMgr.result.bkData;
			var i9 = this.map.tileMgr.tileLayers;

			function T(jg) {
				var jf = null;
				for (var je = 0; je < i9.length; je++) {
					if (i9[je].zIndex === jg) {
						jf = i9[je];
						break
					}
				}
				return jf
			}
			var e = [];
			var jc = [];
			var jb = this.zIndex;
			if (i[jd]) {
				e.push(T(jd));
				jc.push(i[jd]);
				this.setTargetZIndex(jd);
				i[jd] = i[jb];
				i[jb] = null
			} else {
				this.setTargetZIndex(jd);
				i[jd] = i[jb];
				i[jb] = null;
				this.map.dispatchEvent(new e7("onrefresh"));
				return
			}
			var ja = jd + 1;
			while (ja) {
				if (i[ja]) {
					e.push(T(ja));
					jc.push(i[ja]);
					e.shift()
						.setTargetZIndex(ja);
					i[ja] = jc.shift();
					ja += 1
				} else {
					e.shift()
						.setTargetZIndex(ja);
					i[ja] = jc.shift();
					ja = 0
				}
			}
			this.map.dispatchEvent(new e7("onrefresh"))
		},
		setZIndexTop: function() {
			var e = this.map._featureMgr.result.bkData;
			e[e.length] = e[this.zIndex];
			e[this.zIndex] = null;
			this.setTargetZIndex(e.length - 1);
			this.map.dispatchEvent(new e7("onrefresh"))
		},
		getTileKey: function(e, i9) {
			i9 = i9 || {};
			var i = typeof i9.useZoom === "number" ? i9.useZoom : e.useZoom;
			var T = e.style || this.mapStyleId || "default";
			return this.mapType + "_" + T + "_" + e.col + "_" + e.row + "_" + e.zoom + "_" + i
		},
		getTileRenderDataKey: function(i) {
			var T = i.col;
			var i9 = i.zoom;
			var e = i.baseTileSize;
			T = ev.calcLoopParam(T, i9, e)
				.col;
			return this.mapType + "_" + T + "_" + i.row + "_" + i9 + "_" + i.useZoom
		},
		getTileUnits: function(e) {
			var i9 = this.map;
			var T = dO[i9.getMapType()];
			var i = T.baseUnits * Math.pow(2, T.zoomLevelBase - e);
			return i
		},
		getTilesUrl: function(ja, jj, jk) {
			var i = ja.x;
			var jl = ja.y;
			var jg = iO("ditu", "normal");
			var jc = jg.ver;
			var jd = jg.udt;
			i = ev.calcLoopParam(i, jj, jk)
				.col;
			var ji = dO.B_NORMAL_MAP.vectorTileUrls;
			var jb = Math.abs(i + jl) % ji.length;
			var jh = ji[jb];
			if (window.offLineIPAddress) {
				ji = [window.offLineIPAddress + "pvd/"];
				jh = ji[0]
			}
			var T = "x=" + i + "&y=" + jl + "&z=" + Math.floor(jj);
			var jf = this.devicePixelRatio > 1 ? "&scaler=2" : "";
			var je = "&textimg=1";
			if (this.map.config.textRenderType === "canvas") {
				je = "&textimg=0"
			}
			var i9 = this.map.config.style;
			if (typeof i9 === "string" && i9 !== "default") {
				T += "&styleId=" + w.mapStyleNameIdPair[i9]
			}
			T += "&styles=pl" + je + jf + "&v=" + jc + "&udt=" + jd + "&json=0";
			var e = jh + "?qt=vtile&param=" + window.encodeURIComponent(eo(T));
			return e
		},
		getRasterTilesUrl: function(T, jb, i9) {
			var ja = dO[this.map.mapType];
			var i = this.map.config.style;
			var e = ja.tileUrls[Math.abs(jb + T) % ja.tileUrls.length] + "?qt=tile&x=" + T + "&y=" + jb + "&z=" + i9 + ((i === "default" || typeof i !== "string") ? "" : ("&styleId=" + w.mapStyleNameIdPair[i])) + "&styles=pl&udt=" + this.normalUdt + "&scaler=" + this.scaler + "&p=1";
			e = e.replace(/-(\d+)/gi, "M$1");
			return e
		},
		getZoomState: function() {
			var T = this.map;
			var i = T.getZoom();
			var e = i - this.lastZoom;
			if (e > 0) {
				this.zoomState = 1
			} else {
				if (e < 0) {
					this.zoomState = -1
				}
			}
			this.lastZoom = i;
			return this.zoomState
		},
		releaseOutViewTileData: function(e) {
			var ja = this.map._workerMgr.releasePendingData(e);
			for (var i9 = 0, T = ja.length; i9 < T; i9++) {
				var jb = this.getTileKey(ja[i9]);
				this.tileCache.removeData(jb)
			}
		},
		loadLayerData: function(e, i9, i) {
			this.hasZoomChange = i;
			this.curViewTilesInfo = e;
			this.mapStyleId = this.map.getMapStyleId();
			this.releaseOutViewTileData(e);
			var T = this.getZoomState();
			if (this.dataType === gT) {
				if (i9) {
					this.getVectorLayerDataFromCache(e, T)
				} else {
					this.loadVectorLayerData(e)
				}
			} else {
				this.loadRasterLayerData(e, i9)
			}
		},
		getVectorLayerDataFromCache: function(je, jo) {
			this.map.temp.isPermitSpotOver = false;
			this.tileLabels = [];
			if (this.baseLayer === true) {
				var ji = this.map._customLabelMgr.virtualTile;
				if (ji && ji.label) {
					this.tileLabels.push(ji.label)
				}
			}
			this.thumbCache = {};
			var jp = -1;
			for (var jl = 0, jj = je.length; jl < jj; jl++) {
				var jm = je[jl];
				var ja = jm.col;
				var jb = jm.row;
				var T = jm.zoom;
				var jk = this._getTileTexImgKey(jm);
				var i9 = jm.useZoom;
				jp = T;
				var jc = this.getTileKey(jm);
				var jr = this.tileCache.getData(jc);
				if (jr && jr.status === "ready") {
					var js = jr;
					this.map._featureMgr.setData(jr, this.drawIndex, 2);
					if (jr.label) {
						if (jr.label.status === "ready") {
							jr.label.tileInfo = jr.tileInfo;
							this.tileLabels.push(jr.label);
							if (jr.label.textureSources && jr.label.textureSources[i9] && this.map._webglMapScene) {
								var jq = this.map._webglMapScene._painter;
								if (!jq._labelTextureAtlasOffset[jk]) {
									jq._addToAsyncJob(jr.label.textureSources[i9])
								}
							}
						} else {
							if (jr.label.status !== "processing") {
								this.processLabelData(jr)
							}
						}
					}
				} else {
					var jn = {
						tileInfo: jm,
						dataType: gT,
						key: jc
					};
					this.map._featureMgr.setData(jn, this.drawIndex, 2);
					if (this.useThumbData) {
						this.setThumbData(ja, jb, T, i9, jo)
					}
				}
			}
			this.tileLabels.labelZoom = jp;
			this.updateLabels(jo);
			var jf = this.map.getZoom();
			var jd = Math.floor(jf);
			var jh = jf - jd;
			var jg = Math.floor(this.LAST_CALC_ZOOM);
			var e = this.LAST_CALC_ZOOM - jg;
			var jt = false;
			if (this.hasZoomChange) {
				if (Math.abs(jf - this.LAST_CALC_ZOOM) >= 0.5) {
					jt = true
				} else {
					if (jh < 0.5 && e >= 0.5) {
						jt = true
					} else {
						if (jh >= 0.5 && e < 0.5) {
							jt = true
						}
					}
				}
				if (jt) {
					this.cacheDataCollideLabels(0)
				}
				this.LAST_CALC_ZOOM = jf
			} else {
				if (this.tileLabels.length > 0) {
					this.cacheDataCollideLabels(es.Browser.ie ? 50 : 30)
				}
			}
		},
		loadVectorLayerData: function(jf) {
			this.map.temp.isPermitSpotOver = false;
			var je = this;

			function jd(i, jg) {
				var ji = je.tileCache.getData(jg);
				if (!ji) {
					return
				}
				if (!i || i.error) {
					i.event && bo.fetchDebug && bo.fetchDebug.sendError({
						title: i.event.title,
						msg: i.event.msg,
						category: bo.fetchDebug.category.AJAX,
						level: bo.fetchDebug.levels.ERROR,
						url: i.event.title
					});
					var jh = new e7("ontileloaderror");
					i = i || {};
					jh.error = i.error || "";
					jh.message = i.message || "";
					je.map.fire(jh);
					ji.status = "init";
					ji.reloadTimer = setTimeout(function() {
						if (ji.retry < 3) {
							ji.retry++;
							ji.status = "loading";
							je.loadVectorTileData(i.tileInfo, jd)
						} else {
							je.tileCache.removeData(jg)
						}
					}, 4000);
					je.map._featureMgr.clearData(je.drawIndex);
					je._checkTilesLoaded();
					je.getVectorLayerDataFromCache(je.curViewTilesInfo, je.getZoomState());
					return
				}
				if (ji.reloadTimer) {
					clearTimeout(ji.reloadTimer);
					ji.reloadTimer = null
				}
				je.callbackDataQueue.push([i, jg]);
				if (je.processDataTimer) {
					return
				}
				je.processDataTimer = setTimeout(function() {
					while (je.callbackDataQueue.length > 0) {
						var jk = je.callbackDataQueue.shift();
						je.vectorTileDataCbk(jk[0], jk[1]);
						je._checkTilesLoaded()
					}
					je.map._featureMgr.clearData(je.drawIndex);
					je.getVectorLayerDataFromCache(je.curViewTilesInfo, je.getZoomState());
					var jj = new e7("onrefresh");
					jj.source = "webgllayer";
					je.map.dispatchEvent(jj);
					je.processDataTimer = null
				}, 200)
			}
			for (var jc = 0, ja = jf.length; jc < ja; jc++) {
				var T = jf[jc];
				var jb = this.getTileKey(T);
				var e = this.tileCache.getData(jb);
				if (!e) {
					e = {
						status: "init",
						tileInfo: T,
						dataType: gT,
						key: jb,
						retry: 0
					}
				}
				if (e.status !== "ready" && e.status !== "loading") {
					this.numLoading++;
					e.status = "loading";
					this.tileCache.setData(jb, e);
					var i9 = this.getProcessedLabelZoom(T);
					if (i9) {
						T.processedLabelZooms = i9
					}
					this.loadVectorTileData(T, jd)
				}
			}
		},
		setThumbData: function(i, ja, i9, e, T) {
			if (T === 1) {
				if (this._findParentZoomTile(i, ja, i9, e, 8) === false) {
					this._findChildZoomTile(i, ja, i9, e, 3)
				}
			} else {
				if (T === -1) {
					if (this._findChildZoomTile(i, ja, i9, e, 3) === false) {
						this._findParentZoomTile(i, ja, i9, e, 8)
					}
				}
			}
			this.map._featureMgr.sortThumbData(this.drawIndex)
		},
		_findParentZoomTile: function(jc, jl, jk, ja, jf) {
			var jb = dO[this.getMapType()];
			var T = jb.minDataZoom;
			var e = jc;
			var ji = jl;
			var jg = jk;
			var jh = ja;
			for (var je = 1; je <= jf; je++) {
				var i9 = this.tileType.getParentTile(e, ji, jg, jh, T);
				if (i9 === null) {
					continue
				}
				var jj = this.getTileKey(i9);
				var jd = this.tileCache.getData(jj);
				if (jd && jd.status === "ready") {
					if (this.thumbCache[jj]) {
						continue
					}
					this.map._featureMgr.setData(jd, this.drawIndex, 0);
					this.thumbCache[jj] = true;
					return true
				}
				e = i9.col;
				ji = i9.row;
				jg = i9.zoom;
				jh = i9.useZoom
			}
			return false
		},
		_findChildZoomTile: function(jd, jf, e, ja, jo) {
			var jm = dO[this.getMapType()];
			var ji = jm.maxDataZoom;
			var jc = jd;
			var je = jf;
			var jg = e;
			var i9 = ja;
			var jb = true;
			for (var jl = 1; jl <= jo; jl++) {
				var jj = false;
				var T = this.tileType.getChildTiles(jc, je, jg, i9, ji, jl);
				if (!T) {
					continue
				}
				for (var jk = 0; jk < T.length; jk++) {
					var jh = this.getTileKey(T[jk]);
					var jn = this.tileCache.getData(jh);
					if (jn && jn.status === "ready") {
						if (!this.thumbCache[jh]) {
							this.map._featureMgr.setData(jn, this.drawIndex, 1);
							this.thumbCache[jh] = true
						}
						jj = true
					} else {
						jb = false
					}
				}
				if (jj) {
					break
				}
			}
			return jb
		},
		loadVectorTileData: function(jl, jm) {
			var ja = jl.col;
			var jb = jl.row;
			var e = jl.zoom;
			var jj = jl.baseTileSize;
			var i9 = this.getTilesUrl(new eL(ja, jb), e, jj);
			var jc = this.map.getPrivateRegions();
			if (!this.processData && this.map.getPrivateStatus() && jc) {
				var jh = jl.useZoom;
				var jg = this.tileType.getMercatorSize(jh);
				var jf = ja * jg;
				var je = jb * jg;
				var ji = new cd(jf + jg / 2, je + jg / 2);
				var jd = new ha(new cd(jf, je), new cd(jf + jg, je + jg));
				for (var jk = 0; jk < jc.length; jk++) {
					if (jc[jk] instanceof cp) {
						if (jc[jk].crossPoint(ji, jd, jh)) {
							var jn = {
								x: ja,
								y: jb,
								z: e,
								mapZoom: jh
							};
							var T = jc[jk].tileUrlFunction(i9, jn);
							if (T && T.url) {
								i9 = T.url;
								T.header && (jl.header = T.header)
							}
							break
						}
					}
				}
			}
			if (!i9) {
				return
			}
			var jp = this.getTileKey(jl);
			gv(this.map);
			if (!this.processData) {
				this.map._workerMgr.loadTileData(i9, jl, jp, jm);
				return
			}
			var jm = "cbk" + jp.replace(/-/g, "_");
			var jo = this;
			bo[jm] = function(i) {
				var jq = (function(jr) {
					return function() {
						jr.tileInfo = jl;
						var jx = jo.processData(jr);
						if (!jx.road) {
							return
						}
						var ju = {
							tileInfo: jl,
							renderData: {
								base: []
							},
							status: "ready",
							key: jp,
							mapType: jo.mapType
						};
						var jA = [];
						var jD = [];
						for (var jw = 0; jw < jx.road.length; jw++) {
							var jz = jx.road[jw];
							var jy = -1;
							for (var jv = 0; jv < jz.length; jv++) {
								var jB = jz[jv];
								var jC = [];
								if (jA.length / 7 + jB[0].length / 2 > 65536) {
									ju.renderData.base.push({
										type: "line",
										data: [fH.toTileSolidLineVertices(jA, 4000), new Uint16Array(jD)]
									});
									jA = [];
									jD = []
								}
								for (var jt = 0; jt < jB[0].length; jt += 2) {
									jC[jC.length] = [jB[0][jt], jB[0][jt + 1]]
								}
								var js = jB[3];
								fH.buildData(jC, jB[1], jB[2], jA, jD, js, jB[4], jw + 20, false)
							}
							ju.renderData.base.push({
								type: "line",
								data: [fH.toTileSolidLineVertices(jA, 4000), new Uint16Array(jD)]
							})
						}
						jo.tileCache.setData(jp, ju);
						jo.map._featureMgr.clearData(jo.drawIndex);
						jo.getVectorLayerDataFromCache(jo.curViewTilesInfo, jo.getZoomState());
						jo.map.dispatchEvent(new e7("onrefresh"))
					}
				})(i);
				jo.map.jobScheduler.addJob(jq);
				delete bo[jm]
			};
			i9 += "&fn=" + encodeURIComponent(eV + "." + jm);
			f5.load(i9)
		},
		vectorTileDataCbk: function(i9, ja) {
			var je = new e7("ontileloaded");
			je.perfStat = i9.perfStat || [];
			var e = this.map;
			e.fire(je);
			var i = i9.tileInfo;
			var T = i.col;
			var ji = i.row;
			var jh = i.zoom;
			var jg = i.baseTileSize;
			var jc = this.tileCache.getData(ja);
			if (!jc) {
				return
			}
			if (!this.showLabel) {
				i9.label = null
			}
			jc.renderData = i9;
			jc.tileInfo = i;
			var jb = ev.calcLoopParam(T, jh, jg);
			var jf = jb.geoOffsetX;
			jc.tileInfo.loopOffsetX = jf;
			jc.status = "ready";
			jc.mapType = this.mapType;
			this.tileCache.setData(ja, jc);
			jc.label = i9.label;
			i9.label = null;
			if (i9.indoorData && e._indoorMgr) {
				e._indoorMgr.setData(i9.indoorData)
			}
			var jd = "id_" + T + "_" + ji + "_" + jh;
			if (!this.curViewTilesInfo[jd]) {
				e.fire(new e7("ontilenotinview"));
				return
			}
			this.processLabelData(jc);
			if (i9.indoorData && e._indoorMgr && e._indoorMgr.currentUid) {
				this._refreshIndoorData(e._indoorMgr.currentUid, e._indoorMgr.currentFloor)
			}
		},
		_refreshIndoorData: function(jh, jg) {
			var jj = this.map._indoorMgr.getIndoorData(jh);
			var jm = jj.tileKeys;
			var jk = Math.floor(this.map.getZoom());
			for (var je = 0; je < jm.length; je++) {
				var jb = jm[je];
				var jd = this.tileCache.getData(jb);
				if (!jd) {
					continue
				}
				var jl = jd.renderData;
				jl.indoorBase = [];
				jl.indoorBaseContour = [];
				jl.indoorBorder3D = [];
				jl.indoorArea3D = [];
				jd.label.indoorLabel = [];
				this.labelProcessor.clearCollisionCache(jd.label);
				for (var jf in jl.indoorData) {
					if (jf === "tileInfo") {
						continue
					}
					var e = jl.indoorData[jf];
					var ja = e.defaultFloor;
					if (jf === jh) {
						ja = jg;
						e.currentFloor = jg
					}
					if (e.floors[ja]) {
						if (e.floors[ja].base) {
							for (var jc = 0; jc < e.floors[ja].base.length; jc++) {
								jl.indoorBase.push(e.floors[ja].base[jc])
							}
						}
						if (e.floors[ja].contour) {
							for (var jc = 0; jc < e.floors[ja].contour.length; jc++) {
								jl.indoorBaseContour.push(e.floors[ja].contour[jc])
							}
						}
						if (e.floors[ja].indoorBorder3D) {
							jl.indoorBorder3D.push(e.floors[ja].indoorBorder3D)
						}
						if (e.floors[ja].area3D) {
							jl.indoorArea3D.push(e.floors[ja].area3D)
						}
						if (e.floors[ja].pois) {
							jd.label.indoorLabel = jd.label.indoorLabel.concat(e.floors[ja].pois)
						}
					}
				}
				this.updateAllIconsTextureCoords(jd);
				var ji = this;
				this.labelProcessor.loadIconImages(jd, function(i) {
					ji.updateAllIconsTextureCoords(i)
				});
				var i9 = jb.split("_");
				var T = parseInt(i9[i9.length - 1], 10);
				if (T !== jk) {
					continue
				}
				ji.map._featureMgr.setData(jd, this.drawIndex, 2)
			}
			this.dataBackCollideLabels();
			this.map.dispatchEvent(new e7("onrefresh"))
		},
		_removeIndoorData: function(i) {
			if (!i.indoorData) {
				return
			}
			for (var e in i.indoorData) {
				if (e === "tileInfo") {
					continue
				}
				this.map._indoorMgr.removeData(e, i.key)
			}
		},
		getProcessedLabelZoom: function(i9) {
			var ja = i4.baseZoomInfo[i9.zoom];
			if (!ja) {
				return false
			}
			var T = [];
			for (var jb = 0; jb < ja.length; jb++) {
				var jc = this.getTileKey(i9, {
					useZoom: ja[jb]
				});
				var e = this.tileCache.getData(jc);
				if (e && e.status === "ready" && e.label && e.label.status === "ready") {
					T.push(ja[jb])
				}
			}
			if (T.length) {
				return T
			} else {
				return false
			}
		},
		getSameZoomDataFromCache: function(T) {
			var i9 = i4.baseZoomInfo[T.zoom];
			for (var ja = 0; ja < i9.length; ja++) {
				var jb = this.getTileKey(T, {
					useZoom: i9[ja]
				});
				if (T.useZoom === i9[ja]) {
					continue
				}
				var e = this.tileCache.getData(jb);
				if (e && e.status === "ready" && e.label && e.label.status === "ready") {
					return e
				}
			}
			return false
		},
		hasSameLabelData: function(i9, T) {
			for (var e = 0; e < T.length; e++) {
				if (T[e].key === i9) {
					return true
				}
			}
			return false
		},
		getDataByFloorName: function(T, i9) {
			for (var e = 0; e < T.length; e++) {
				if (T[e].floorName === i9) {
					return T[e]
				}
			}
			return null
		},
		mergeIndoorLabelData: function(je, e) {
			for (var jc in je) {
				if (jc === "tileInfo") {
					continue
				}
				if (e[jc]) {
					var T = je[jc].floors;
					var jf = e[jc].floors;
					for (var ja = 0; ja < T.length; ja++) {
						var i9 = T[ja];
						var jd = i9.floorName;
						var jb = this.getDataByFloorName(jf, jd);
						if (jb) {
							if (jb.pois) {
								jb.pois = jb.pois.concat(i9.pois);
								i9.pois = jb.pois
							} else {
								jb.pois = i9.pois
							}
						}
					}
				}
			}
		},
		mergeSameZoomLabelData: function(jc) {
			var ja = jc.label;
			if (!ja) {
				return
			}
			var e = jc.tileInfo;
			var jb = this.getSameZoomDataFromCache(e);
			if (!jb) {
				return
			}
			var i9 = jb.label;
			if (!i9) {
				return
			}
			for (var T = 0; T < ja.fixedLabel.length; T++) {
				if (!this.hasSameLabelData(ja.fixedLabel[T].key, i9.fixedLabel)) {
					i9.hasNewData = true;
					i9.fixedLabel.push(ja.fixedLabel[T])
				}
			}
			for (var T = 0; T < ja.lineLabel.length; T++) {
				if (!this.hasSameLabelData(ja.lineLabel[T].key, i9.lineLabel)) {
					i9.hasNewData = true;
					i9.lineLabel.push(ja.lineLabel[T])
				}
			}
			for (var T = 0; T < ja.indoorLabel.length; T++) {
				if (!this.hasSameLabelData(ja.indoorLabel[T].key, i9.indoorLabel)) {
					i9.hasNewData = true;
					i9.indoorLabel.push(ja.indoorLabel[T])
				}
			}
			jc.label = i9;
			if (jb.renderData.indoorData && jc.renderData.indoorData) {
				this.mergeIndoorLabelData(jc.renderData.indoorData, jb.renderData.indoorData)
			}
		},
		processLabelData: function(jb) {
			if (!jb.label) {
				return
			}
			if (jb.label.status === "processing") {
				return
			}
			jb.label.status = "processing";
			var i9 = this;
			i9.updateAllIconsTextureCoords(jb);
			this.labelProcessor.loadIconImages(jb, function(jc) {
				i9.updateAllIconsTextureCoords(jc)
			});
			if (this.map.config.textRenderType === "canvas") {
				var e = this.labelProcessor.drawLabelsOnCanvas(jb, function(je, jg) {
					var jd = jb.tileInfo;
					var jf = i9.map.config.mapStyleId;
					if (!bo["customStyleInfo_" + jf]) {
						i9.mergeSameZoomLabelData(jb)
					}
					if (je) {
						if (!jb.label.textureHeights) {
							jb.label.textureHeights = []
						}
						jb.label.textureHeights[jd.useZoom] = je.height
					}
					if (jg) {
						if (!jb.label.indoorTextureHeights) {
							jb.label.indoorTextureHeights = []
						}
						jb.label.indoorTextureHeights[jd.useZoom] = jg.height
					}
					var jc = i9._getTileTexImgKey(jd);
					i9._doWorkAfterLabelImageLoad(jb, je, jg, jc)
				});
				return
			}
			var T = jb.label.textImageBitmap || jb.label.textImgStr;
			var ja = jb.label.indoorTextImageBitmap || jb.label.indoorTextImgStr;
			this.labelProcessor.loadImgByStr(T, ja, function i(jh, jf) {
				var je = jb.label.textureHeight;
				var ji = jb.label.indoorTextureHeight;
				jb.label.textureHeight = undefined;
				jb.label.indoorTextureHeight = undefined;
				var jd = jb.tileInfo;
				i9.mergeSameZoomLabelData(jb);
				var jg = jb.label;
				jg.textImgStr = "";
				jg.indoorTextImgStr && (jg.indoorTextImgStr = "");
				if (!jg.textureHeights) {
					jg.textureHeights = []
				}
				jg.textureHeights[jd.useZoom] = je;
				if (!jg.indoorTextureHeights) {
					jg.indoorTextureHeights = []
				}
				jg.indoorTextureHeights[jd.useZoom] = ji;
				var jc = i9._getTileTexImgKey(jd);
				i9._doWorkAfterLabelImageLoad(jb, jh, jf, jc)
			})
		},
		_getTileTexImgKey: function(i) {
			var T = i.style || this.mapStyleId || "default";
			var e = T + "_" + i.col + "_" + i.row + "_" + i.zoom;
			if (this.map.config.textRenderType === "canvas") {
				e += "_" + i.useZoom
			}
			return e
		},
		_doWorkAfterLabelImageLoad: function(jd, jb, i9, i) {
			var jc = this;
			var ja = jd.label;
			ja.tileInfo = jd.tileInfo;
			ja.status = "ready";
			if (jb || i9) {
				var e = ja.tileInfo;
				if (jb) {
					jb.id = i;
					if (!ja.textureSources) {
						ja.textureSources = []
					}
					ja.textureSources[e.useZoom] = jb
				}
				if (i9) {
					i9.id = i + "_indoor";
					if (!ja.indoorTextureSources) {
						ja.indoorTextureSources = []
					}
					ja.indoorTextureSources[e.useZoom] = i9
				}
				if (jc.map._webglMapScene) {
					var T = jc.map._webglMapScene._painter;
					if (jb) {
						T._addToAsyncJob(ja.textureSources[e.useZoom])
					}
				}
			}
			if (jd.custom !== true) {
				jc.tileLabels.push(ja)
			}
			if (jc.collisionTimer) {
				return
			}
			jc.collisionTimer = setTimeout(function() {
				jc.dataBackCollideLabels();
				jc.collisionTimer = null
			}, 300)
		},
		_updateIconTextureCoords: function(jd, T) {
			if (!jd) {
				return
			}
			var jc = this.map;
			for (var i9 = 0; i9 < jd.length; i9++) {
				var jb = jd[i9];
				if (!jb.iconPos) {
					continue
				}
				if (jc._webglMapScene) {
					var e = jc._webglMapScene._painter;
					var ja = T + "_" + jb.iconPos.iconType;
					jb.iconPos.texcoord = e._iconTextureAtlasCoords[ja] || null
				}
			}
		},
		updateAllIconsTextureCoords: function(ja) {
			if (this.map.viewAnimationTime) {
				return
			}
			if (ja) {
				if (ja.label) {
					var i = ja.tileInfo.style;
					this._updateIconTextureCoords(ja.label.fixedLabel, i);
					this._updateIconTextureCoords(ja.label.indoorLabel, i)
				}
			} else {
				var i9 = this.tileCache.getAllData();
				for (var T in i9) {
					var e = i9[T].data;
					if (e.status === "ready" && e.label) {
						var i = e.tileInfo.style;
						this._updateIconTextureCoords(e.label.fixedLabel, i);
						this._updateIconTextureCoords(e.label.indoorLabel, i)
					}
				}
			}
			this.updateLabels();
			this.map.dispatchEvent(new e7("onrefresh"))
		},
		cacheDataCollideLabels: function(T) {
			var ja = this;
			var i = this.map._featureMgr;

			function i9() {
				ja.cacheLabelTimer = null;
				var jb;
				var jc = ja.map.getTilt();
				var je = ja.map.getHeading() % 360;
				if (ja.tileLabels.length === 0 || (ja.tileLabels.length === 1 && ja.tileLabels[0].tileInfo.zoom === 0)) {
					jb = i.getLabelData();
					if (jb.length > 0) {
						jb = ja.labelProcessor.collisionTest(jb, -1)
					}
				} else {
					if (jc || je) {
						if (this._collisionTimer) {
							if (!jc) {
								clearTimeout(this._collisionTimer)
							} else {
								if (Date.now() - ja.lastCollisionTestTime > 500) {
									ja.lastCollisionTestTime = Date.now()
								} else {
									clearTimeout(this._collisionTimer)
								}
							}
						}
						this._collisionTimer = setTimeout(function() {
							jb = ja.labelProcessor.collisionTest(ja.tileLabels);
							if (jb) {
								if (ja.map.stencil && ja.map.stencil.isPoiMask) {
									var jf = ja.isPoiInPolygon(jb);
									i.setLabelData(jf)
								} else {
									i.setLabelData(jb)
								}
							}
							ja.updateLabels();
							ja.map.dispatchEvent(new e7("onrefresh"));
							ja._collisionTimer = null
						}, 60);
						return
					} else {
						jb = ja.labelProcessor.getCachedLabels(ja.tileLabels)
					}
				}
				if (jb) {
					if (ja.map.stencil && ja.map.stencil.isPoiMask) {
						var jd = ja.isPoiInPolygon(jb);
						i.setLabelData(jd)
					} else {
						i.setLabelData(jb)
					}
				}
				ja.updateLabels();
				ja.map.dispatchEvent(new e7("onrefresh"))
			}
			if (!T) {
				clearTimeout(ja.cacheLabelTimer);
				i9()
			} else {
				if (ja.cacheLabelTimer) {
					return
				}
				ja.cacheLabelTimer = setTimeout(function e() {
					i9()
				}, T)
			}
		},
		isPoiInPolygon: function(T) {
			var js = this;
			var ji = js.map.stencil;
			var ja = js.map._featureMgr.result.eleData[9];
			var i9 = [];
			for (var jn = 0; jn < ja.length; jn++) {
				var jj = ja[jn].overlay.points;
				i9 = i9.concat(jj)
			}
			for (var jq = 1; jq < T.length; jq++) {
				var jc = [];
				var jb = [];
				for (var jo = 0; jo < T[jq].fixedLabel.length; jo++) {
					var jh = T[jq].fixedLabel[jo];
					var jl = jh.pt;
					if (jh.pt && am(jl, i9)) {
						jc.push(jh)
					} else {
						jb.push(jh)
					}
				}
				if (ji.showRegion === "inside") {
					T[jq].fixedLabel = jc
				} else {
					if (ji.showRegion === "outside") {
						T[jq].fixedLabel = jb
					}
				}
				var jm = [];
				var je = [];
				for (var jn = 0; jn < T[jq].lineLabel.length; jn++) {
					var jp = T[jq].lineLabel[jn];
					var e = jp.pt;
					if (e && am(e, i9)) {
						jm.push(jp)
					} else {
						je.push(jp)
					}
				}
				if (ji.showRegion === "inside") {
					T[jq].lineLabel = jm
				} else {
					if (ji.showRegion === "outside") {
						T[jq].lineLabel = je
					}
				}
				var jk = [];
				var jg = [];
				for (var jf = 0; jf < T[jq].indoorLabel.length; jf++) {
					var jr = T[jq].indoorLabel[jf];
					var jd = jr.pt;
					if (jd && am(jd, i9)) {
						jk.push(jr)
					} else {
						jg.push(jr)
					}
				}
				if (ji.showRegion === "inside") {
					T[jq].indoorLabel = jk
				} else {
					if (ji.showRegion === "outside") {
						T[jq].indoorLabel = jg
					}
				}
			}
			return T
		},
		dataBackCollideLabels: function() {
			var T = this;
			if ((T.tileLabels && T.tileLabels.length === 0)) {
				return
			}
			var e;
			T.labelProcessor.calcLabelsCollision(T.tileLabels);
			e = T.labelProcessor.getCachedLabels(T.tileLabels);
			if (e) {
				if (T.map.stencil && T.map.stencil.isPoiMask) {
					var i = T.isPoiInPolygon(e);
					T.map._featureMgr.setLabelData(i)
				} else {
					T.map._featureMgr.setLabelData(e)
				}
			}
			T.updateLabels();
			T.map.dispatchEvent(new e7("onrefresh"));
			if (bJ()) {
				this.labelProcessor._refreshSpotData()
			}
		},
		updateLabels: function(ja) {
			var jb = this.map;
			var i = jb._featureMgr;
			var T = i.getLabelData();
			if (T.length > 0) {
				var i9 = jb.getZoom();
				if (T.labelZoom - i9 < 3) {
					this.labelProcessor.updateLabels(T);
					var e = this.labelProcessor.fixDataFormat(T);
					i.setOverlayData(e[0], 2);
					i.setOverlayData(e[1], 3);
					i.setOverlayData(e[2], 4)
				} else {
					i.clearLabelOverlayData()
				}
				jb.temp.isPermitSpotOver = false;
				this.labelProcessor.curSpotAdded = false
			}
		},
		loadRasterLayerData: function(je, i9) {
			this.thumbCache = {};
			var jf = this.getZoomState();
			if (i9) {
				for (var jc = 0, ja = je.length; jc < ja; jc++) {
					var T = je[jc];
					var jb = this.getTileKey(T);
					var e = this.tileCache.getData(jb);
					if (e && e.status === "ready") {
						if (T.tileTypeName === "xyz") {
							e.tileInfo = T
						}
						this.map._featureMgr.setData(e, this.drawIndex, 2)
					} else {
						if (this.useThumbData) {
							this.setThumbData(T.col, T.row, T.zoom, T.useZoom, jf)
						}
					}
				}
				return
			}
			for (var jc = 0, ja = je.length; jc < ja; jc++) {
				var T = je[jc];
				var jb = this.getTileKey(T);
				var e = this.tileCache.getData(jb);
				if (!e) {
					this.tileCache.setData(jb, {});
					var jd = this;
					this.loadRasterTileData(T, function(i, jg) {
						jd.rasterTileDataCbk(i, jg)
					})
				}
			}
		},
		loadRasterTileData: function(i, e) {
			var T = new Image();
			var ja = i.col;
			var jd = i.row;
			var jb = i.zoom;
			var i9 = this.getTilesUrl(new eL(ja, jd), jb, i);
			if (!i9) {
				return
			}
			var jc = this.getTileKey(i);
			if (i.combine) {
				T = i9;
				T.tileInfo = i;
				if (T) {
					e && e(T, jc)
				} else {
					e && e(null, jc)
				}
			} else {
				T = this.loadTileImage(i9, jc, e)
			}
			T.tileInfo = i
		},
		loadTileImage: function(i9, T, e) {
			var i = new Image();
			i.crossOrigin = "anonymous";
			i.onload = function() {
				e && e(this, T)
			};
			i.onerror = function() {
				bo.fetchDebug && bo.fetchDebug.sendError({
					title: i9,
					msg: i9,
					category: bo.fetchDebug.category.RESOURCE,
					level: bo.fetchDebug.levels.ERROR,
					url: i9
				});
				e && e(null, T)
			};
			i.src = i9;
			return i
		},
		rasterTileDataCbk: function(jb, i9) {
			if (!jb || typeof jb === "string") {
				this.tileCache.removeData(i9);
				return
			}
			var i = jb.tileInfo;
			var T = i.col;
			var jh = i.row;
			var jg = i.zoom;
			var e = this.tileCache.getData(i9);
			if (!e) {
				return
			}
			var jc = "id_" + T + "_" + jh + "_" + jg;
			var jf = this;
			e.dataType = fY;
			e.tileInfo = i;
			if (i.tileTypeName === "xyz") {
				var je = i.tileSize;
				e.textureSource = jb;
				e.renderData = {
					vertexAll: [0, 0, 0, 0, 0, je, 0, 0, 1, 0, je, je, 0, 1, 1, 0, 0, 0, 0, 0, je, je, 0, 1, 1, 0, je, 0, 0, 1]
				};
				jf.setRasterTileData(i9, e, jc)
			} else {
				e.textureSource = jb;
				var ja = ev.calcLoopParam(T, jg);
				var jd = ja.geoOffsetX;
				jb.tileInfo.loopOffsetX = jd;
				e.renderData = {
					vertexAll: [0, 0, 0, 0, 0, 256, 0, 0, 1, 0, 256, 256, 0, 1, 1, 0, 0, 0, 0, 0, 256, 256, 0, 1, 1, 0, 256, 0, 0, 1]
				};
				this.setRasterTileData(i9, e, jc)
			}
		},
		setRasterTileData: function(ja, e, i9) {
			e.status = "ready";
			this.tileCache.setData(ja, e);
			var T = false;
			if (this.curViewTilesInfo[i9]) {
				e.dataType = fY;
				e.png8 = this.png8 || false;
				this.map._featureMgr.setData(e, this.drawIndex, 2);
				T = true
			}
			if (T) {
				var i = new e7("onrefresh");
				i.source = "webgllayer";
				this.map.dispatchEvent(i)
			}
		},
		_checkTilesLoaded: function() {
			this.numLoading--;
			if (this.map.firstTileLoad === false) {
				this.map.dispatchEvent(new e7("onfirsttilesloaded"));
				this.map.firstTileLoad = true
			}
			var e = this;
			if (this.numLoading === 0) {
				if (this._checkLoadedTimer) {
					clearTimeout(this._checkLoadedTimer);
					this._checkLoadedTimer = null
				}
				this._checkLoadedTimer = setTimeout(function() {
					if (e.numLoading === 0) {
						e.map.dispatchEvent(new e7("ontilesloaded"))
					}
					e._checkLoadedTimer = null
				}, 60)
			}
		},
		isClickableLabel: function(e) {
			if (e.isDel) {
				return false
			}
			if (e.zoom > 9 && !e.guid) {
				return false
			}
			if (e.zoom <= 9 && !e.name && !e.guid) {
				return false
			}
			return true
		}
	};
	var aJ = 5;
	var h7 = 4;
	var fR = 3;
	var H = 2;
	var dU = 1;
	var gH = 0;

	function ap(e) {
		this._ratio = fz();
		this._iconCache = {};
		this._map = e;
		this._drawingCanvasPool = [];
		this._drawingCanvasHeight = 4096
	}
	es.extend(ap.prototype, {
		_loadIcons: function(i, jd) {
			var jb = 0;
			var ja = this;
			var T = this._map.config.style;
			for (var jc in i) {
				jb++;
				var e = new Image();
				e.id = jc;
				e.crossOrigin = "anonymous";
				e.onload = function() {
					ja._iconCache[this.id].loaded = true;
					jb--;
					if (jb === 0) {
						jd()
					}
					this.onload = null
				};
				e.onerror = function() {
					ja._iconCache[this.id] = null;
					jb--;
					if (jb === 0) {
						jd()
					}
					this.onerror = null
				};
				var i9 = w.getIconSetPath(T) + jc + ".png";
				e.src = i9;
				this._iconCache[jc] = {
					loaded: false,
					image: e
				}
			}
		},
		_getEmptyDrawingCanvas: function() {
			for (var T = 0; T < this._drawingCanvasPool.length; T++) {
				if (this._drawingCanvasPool[T]._free === true) {
					this._drawingCanvasPool[T]._free = false;
					return this._drawingCanvasPool[T]
				}
			}
			var e = this._createNewDrawingCanvas();
			this._drawingCanvasPool.push(e);
			e._free = false;
			return e
		},
		_createNewDrawingCanvas: function() {
			var e = bK("canvas");
			e.width = 512;
			e.height = this._drawingCanvasHeight;
			e._free = true;
			e._id = bo.getGUID();
			var i = e.getContext("2d");
			i.textBaseline = "bottom";
			i.lineJoin = "round";
			return e
		},
		drawLabelsOnCanvas: function(jr, i9) {
			var jh = jr.label.fixedLabel.slice(0);
			var jn = jr.label.lineLabel.slice(0);
			var T = jr.label.indoorLabel.slice(0);
			if (jh.length === 0 && jn.length === 0 && T.length === 0) {
				i9();
				return
			}
			var jc = function(jw, i) {
				return jw.styleId - i.styleId
			};
			jh.sort(jc);
			jn.sort(jc);
			T.sort(jc);
			var jq = {};
			var e = this._getEmptyDrawingCanvas();
			var jm = e.getContext("2d");
			jm.clearRect(0, 0, e.width, e.height);
			var ju = 0;
			var ji = null;
			var jb = 0;
			if (jh.length > 0) {
				while (jb < jh.length && !jh[jb].styleText[0]) {
					jb++
				}
				if (jh[jb] && jh[jb].styleText[0]) {
					ji = jh[jb].styleText[0].fontSize + jh[jb].styleText[0].haloSize * 2
				}
			}
			if (ji === null && T.length > 0) {
				jb = 0;
				while (jb < T.length && !T[jb].styleText[0]) {
					jb++
				}
				if (T[jb] && T[jb].styleText[0]) {
					ji = T[jb].styleText[0].fontSize + T[jb].styleText[0].haloSize * 2
				}
			}
			if (ji === null && jn.length > 0) {
				jb = 0;
				while (jb < jn.length && !jn[jb].styleText[0]) {
					jb++
				}
				if (jn[jb] && jn[jb].styleText[0]) {
					ji = jn[jb].styleText[0].fontSize + jn[jb].styleText[0].haloSize * 2
				}
			}
			if (ji === null || isNaN(ji)) {
				i9();
				return
			}
			var je = 0;
			var jd = ji;
			var jk = {};
			var jv = 0;
			var jl = [];
			for (var jp = 0; jp < jh.length; jp++) {
				var jg = jh[jp];
				var jj = jg.name;
				var jo = jg.styleText;
				if (!jj || jo.length === 0) {
					continue
				}
				var ja = jg.icon;
				if (jg.textOnIcon && (!this._iconCache[ja] || this._iconCache[ja].loaded === false)) {
					jl.push(jg);
					jv++;
					if (!jk[ja]) {
						jk[ja] = true
					}
					continue
				}
				var js = this._drawEachText(jm, jg, ju, je, jd, ji, jq);
				if (!js) {
					continue
				}
				je = js.curX;
				jd = js.curY;
				ji = js.curLineHeight;
				ju = js.styleId
			}
			var js = this._drawEachTypeOfLabels(jm, T, ju, je, jd, ji, jq);
			ju = js.curStyleId;
			je = js.curX;
			jd = js.curY;
			ji = js.curLineHeight;
			var js = this._drawEachTypeOfLabels(jm, jn, ju, je, jd, ji, jq);
			ju = js.curStyleId;
			je = js.curX;
			jd = js.curY;
			ji = js.curLineHeight;
			if (jv > 0) {
				var jt = this;
				this._loadIcons(jk, function() {
					js = jt._drawEachTypeOfLabels(jm, jl, ju, je, jd, ji, jq);
					ju = js.curStyleId;
					je = js.curX;
					jd = js.curY;
					ji = js.curLineHeight;
					var i = jt._generateEachLabelCanvas(e, jd, jh, jn, T, jr);
					i9(i[0], i[1])
				});
				return
			}
			var jf = this._generateEachLabelCanvas(e, jd, jh, jn, T, jr);
			i9(jf[0], jf[1])
		},
		drawCustomLabelsOnCanvas: function(jc, ji) {
			if (jc.length === 0) {
				ji();
				return
			}
			var T = 0;
			var e = (jc[0].style.fontSize + (jc[0].style.haloSize || 0) * 2) || 0;
			var i9 = e;
			var je = this._getEmptyDrawingCanvas();
			var jj = je.getContext("2d");
			jj.clearRect(0, 0, je.width, je.height);
			var jf = {};
			var jh = -1;
			for (var ja = 0; ja < jc.length; ja++) {
				if (!jc[ja].name) {
					continue
				}
				var jg = this._drawEachText(jj, jc[ja], jh, T, e, i9, jf);
				if (!jg) {
					continue
				}
				T = jg.curX;
				e = jg.curY;
				i9 = jg.curLineHeight;
				jh = jg.styleId
			}
			var jb = e;
			var jd = this._copyToNewCanvas(je, jb);
			for (var ja = 0; ja < jc.length; ja++) {
				if (!jc[ja].name && jc[ja].style.iconSize) {
					this._addFixedLabelBounds(jc[ja]);
					continue
				}
				if (!jc[ja].textSize) {
					continue
				}
				this._updateFixedLabelCoords(jc[ja], jb);
				this._addFixedLabelBounds(jc[ja])
			}
			ji(jd)
		},
		_drawEachTypeOfLabels: function(ji, jc, jg, i9, T, ja, je) {
			for (var jb = 0; jb < jc.length; jb++) {
				var jd = jc[jb];
				var jh = jd.name;
				var e = jd.styleText;
				if (!jh || e.length === 0) {
					continue
				}
				var jf = this._drawEachText(ji, jd, jg, i9, T, ja, je);
				if (!jf) {
					continue
				}
				i9 = jf.curX;
				T = jf.curY;
				ja = jf.curLineHeight;
				jg = jf.styleId;
				if (jf.curY > this._drawingCanvasHeight) {
					return {
						curX: i9,
						curY: T,
						curLineHeight: ja,
						curStyleId: jg
					}
				}
			}
			return {
				curX: i9,
				curY: T,
				curLineHeight: ja,
				curStyleId: jg
			}
		},
		_drawIndoorTextLabelOnCanvas: function(ja) {
			var e = this._getEmptyDrawingCanvas();
			var jh = e.getContext("2d");
			jh.clearRect(0, 0, e.width, e.height);
			var jp = 0;
			var jg = null;
			var jf = 0;
			var jd;
			var jm = {};
			var jl = [];
			for (var jb in ja) {
				if (jb === "tileInfo") {
					continue
				}
				var i9 = ja[jb];
				var jk = i9.defaultFloor;
				var je = i9.floors;
				for (var jj = 0; jj < je.length; jj++) {
					if (jj === jk) {
						continue
					}
					var jn = je[jj];
					if (!jn.pois) {
						continue
					}
					var jc = jn.pois;
					for (var ji = 0; ji < jc.length; ji++) {
						if (jg === null && jc[ji].styleText[0]) {
							jg = jc[ji].styleText[0].fontSize + jc[ji].styleText[0].haloSize * 2;
							jd = jg
						}
						jl.push(jc[ji])
					}
				}
			}
			if (jg === null) {
				return null
			}
			jl.sort(function(jq, i) {
				return i.rank - jq.rank || jq.styleId - i.styleId
			});
			var jo = this._drawEachTypeOfLabels(jh, jl, jp, jf, jd, jg, jm);
			jp = jo.curStyleId;
			jf = jo.curX;
			jd = jo.curY;
			jg = jo.curLineHeight;
			var T = this._copyToNewCanvas(e, jd);
			return T
		},
		_updateIndoorLabelsCoords: function(jg, jh) {
			for (var jf in jg) {
				if (jf === "tileInfo") {
					continue
				}
				var e = jg[jf];
				var jb = e.defaultFloor;
				var jc = e.floors;
				for (var jd = 0; jd < jc.length; jd++) {
					if (jd === jb) {
						continue
					}
					var T = jc[jd];
					if (!T.pois) {
						continue
					}
					var ja = T.pois;
					for (var i9 = 0; i9 < ja.length; i9++) {
						var je = ja[i9];
						if (je.name && (!je.textSize || je.textSize.length === 0)) {
							ja.splice(i9, 1);
							i9--;
							continue
						}
						this._updateFixedLabelCoords(je, jh);
						this._addFixedLabelBounds(je)
					}
				}
			}
		},
		_generateEachLabelCanvas: function(jc, jb, jd, e, jf, T) {
			jb = Math.min(jb, this._drawingCanvasHeight);
			var je = this._copyToNewCanvas(jc, jb);
			var i9 = null;
			if (T.renderData.indoorData) {
				i9 = this._drawIndoorTextLabelOnCanvas(T.renderData.indoorData);
				if (i9) {
					this._updateIndoorLabelsCoords(T.renderData.indoorData, i9.height)
				}
			}
			for (var ja = 0; ja < jd.length; ja++) {
				if (!jd[ja].textSize) {
					continue
				}
				this._updateFixedLabelCoords(jd[ja], jb);
				this._addFixedLabelBounds(jd[ja])
			}
			for (var ja = 0; ja < jf.length; ja++) {
				if (!jf[ja].textSize) {
					continue
				}
				this._updateFixedLabelCoords(jf[ja], jb);
				this._addFixedLabelBounds(jf[ja])
			}
			for (var ja = 0; ja < e.length; ja++) {
				this._updateLineLabelCoords(e[ja], jb)
			}
			return [je, i9]
		},
		_copyToNewCanvas: function(T, i) {
			if (i === 0) {
				return null
			}
			var i9 = bK("canvas");
			i9.width = T.width;
			i9.height = i;
			var e = i9.getContext("2d");
			e.drawImage(T, 0, 0, 512, i, 0, 0, 512, i);
			i9._id = T._id;
			T._free = true;
			return i9
		},
		_drawEachText: function(jr, jd, T, jt, js, jA, ja) {
			var jz = jd.name;
			var ji = jd.styleText ? jd.styleText[0] : jd.style;
			if (!ji) {
				return null
			}
			var jl = ji.fontSize;
			var jE = ji.fontWeight;
			var jR = ji.haloSize || 0;
			if (!jm) {}
			if (ji.fontRgba) {
				var jX = ji.fontRgba[3] / 255;
				var jh = [];
				jh[3] = jX;
				for (var jW = 0; jW < 3; jW++) {
					jh[jW] = ji.fontRgba[jW]
				}
			}
			if (ji.haloRgba) {
				var jX = ji.haloRgba[3] / 255;
				var jo = [];
				jo[3] = jX;
				for (var jW = 0; jW < 3; jW++) {
					jo[jW] = ji.haloRgba[jW]
				}
			}
			var jL = jh ? "rgba(" + jh.join(",") + ")" : ji.color;
			var jc = jo ? "rgba(" + jo.join(",") + ")" : ji.strokeColor;
			var jT = jd.styleId || 0;
			if (jR > 4) {
				jR = 4
			}
			var jB = [];
			var jq = [];
			var jx = 0;
			if (ja && !ja[jT]) {
				ja[jT] = {}
			}
			var jk = jl + jR * 2;
			var jC = jk;
			if (jd.containDescendings) {
				jC += 4
			}
			if (jR === 0) {
				jC += 2
			}
			if (jd.textOnIcon) {
				jC = Math.max(jC, jd.iconSize[1])
			}
			if (jT !== T || jC > jA) {
				T = jT;
				if (jE >= 10 && jE % 10 === 0) {
					jr.font = jE * 10 + " " + jl + "px sans-serif"
				} else {
					jr.font = jl + "px sans-serif"
				}
				if (jC > jA) {
					var jy = jC - jA;
					jA += jy;
					js += jy
				}
				if (jR > 0) {
					jr.lineWidth = jR * 2;
					jr.strokeStyle = jc
				}
				jr.fillStyle = jL
			}
			if (jd.type === "line") {
				var jf = jz.split("");
				for (var jU = 0; jU < jf.length; jU++) {
					var jN = jf[jU];
					var ju;
					var jF;
					if (ja[jT][jN]) {
						var jm = ja[jT][jN];
						ju = jm.displaySize;
						jF = jm.curWordPosition
					} else {
						var i9 = Math.ceil(jr.measureText(jN)
							.width);
						if (jt + i9 > 512) {
							jt = 0;
							js += jC;
							jA = jC
						}
						if (js > this._drawingCanvasHeight) {
							return {
								curX: jt,
								curY: js,
								curLineHeight: jA,
								styleId: jT
							}
						}
						var jO = jt;
						if (jR > 0) {
							i9 += jR;
							jO -= Math.round(jR / 2);
							jr.strokeText(jN, jt, js)
						}
						jr.fillText(jN, jt, js);
						var jK = [i9, jC];
						ju = [Math.round(jK[0] / 2), Math.round(jK[1] / 2)];
						jF = [jO, js - jC];
						ja[jT][jN] = {
							displaySize: ju,
							curWordPosition: jF,
							totalHeight: jx
						};
						jt += i9 + 2
					}
					jB.push(ju);
					jq.push(jF)
				}
				jx = Math.round(jB[0][1])
			} else {
				if (ja[jT][jz]) {
					var jm = ja[jT][jz];
					jB = jm.textSize;
					jq = jm.labelImagePosition;
					jx = jm.totalHeight
				} else {
					var jn = jz.split("\\");
					if (jn.length > 1 && jd.textOnIcon) {
						var jV = 0;
						var jS = 0;
						var jY = [];
						var jv = 8;
						for (var jU = 0; jU < jn.length; jU++) {
							var jz = jn[jU];
							var jj = Math.ceil(jr.measureText(jz)
								.width);
							if (jj > jV) {
								jV = jj
							}
							jY.push(Math.round(jj / 2));
							jS += jC
						}
						var jg = jV + 2 * jv;
						var jQ = jS + 2 * jv;
						if (jt + jg > 512) {
							jt = 0;
							js += jA
						}
						js += jS - jC + 2 * jv;
						var jJ = jt;
						var jw = js - jQ;
						var e = Math.round(jg / 2);
						var jp = this._iconCache[jd.icon].image;
						this.drawStretchedIcon(jr, jp, [jJ, jw], jv, jV, jS);
						for (var jU = 0; jU < jn.length; jU++) {
							var jz = jn[jU];
							var jP = jJ + (e - jY[jU]);
							var jM = jw + 4 + (jU + 1) * jC;
							jr.fillText(jz, jP, jM)
						}
						jB.push([Math.round(jg / 2), Math.round(jQ / 2)]);
						jq.push([jJ, jw]);
						jt += jg;
						jA = jQ;
						jx = Math.round(jQ / 2)
					} else {
						for (var jU = 0; jU < jn.length; jU++) {
							var jz = jn[jU];
							var jj = Math.ceil(jr.measureText(jz)
								.width);
							var jg = jj;
							var jb = 0;
							if (jd.textOnIcon) {
								jb = 10;
								jg += jb * 2;
								if (jd.styleId === 519) {
									jg = jd.iconSize[0];
									jb = Math.round((jg - jj) / 2)
								}
							}
							if (jt + jg > 512) {
								jt = 0;
								js += jC;
								jA = jC
							}
							if (js > this._drawingCanvasHeight) {
								return {
									curX: jt,
									curY: js,
									curLineHeight: jA,
									styleId: jT
								}
							}
							var jJ = jt;
							var jw = js - jC;
							var jI = jt;
							var jH = js;
							if (jd.containDescendings) {
								jH -= 4
							}
							if (jd.textOnIcon) {
								var jD = false;
								var jp = this._iconCache[jd.icon].image;
								var jG = jd.iconSize.concat([]);
								if (jk > jG[1]) {
									jG[1] = jk;
									jD = true
								}
								if (jj > jG[0]) {
									jG[0] = jj;
									jD = true
								}
								if (jd.styleId === 519) {
									jr.drawImage(jp, 0, 0, jG[0], jG[1], jJ, jw, jG[0], jG[1])
								} else {
									if (jD) {
										this.drawStretchedIcon(jr, jp, [jJ, jw], jb, jj, jG[1])
									} else {
										this.draw3StretchedIcon(jr, jp, [jJ, jw], jb, jj, jG[1])
									}
								}
								jI += jb;
								if (jd.iconSize[1] > jk) {
									jH -= (jd.iconSize[1] - jk) / 2 - 1
								}
								jg += 1
							}
							if (jR > 0) {
								jg += jR;
								jJ -= Math.round(jR / 2);
								jw += Math.round(jR / 2);
								if (jT === 71028) {
									jC -= 2
								}
								if (jT === 32) {
									jC -= 2
								}
								jr.strokeText(jz, jI, jH)
							}
							jr.fillText(jz, jI, jH);
							var je = [jg, jC];
							var ju = [Math.round(je[0] / 2), Math.round(je[1] / 2)];
							jB.push(ju);
							jq.push([jJ, jw]);
							jx += Math.round(ju[1]);
							jt += jg
						}
					}
					ja[jT][jz] = {
						textSize: jB,
						labelImagePosition: jq,
						totalHeight: jx
					}
				}
			}
			jd.textSize = jB;
			jd.labelImagePosition = jq;
			jd.totalHeight = jx;
			return {
				curX: jt,
				curY: js,
				curLineHeight: jA,
				styleId: jT
			}
		},
		drawStretchedIcon: function(e, T, i9, jc, jd, i) {
			var jb = i9[0];
			var ja = i9[1];
			e.drawImage(T, 0, 0, jc, jc, jb, ja, jc, jc);
			e.drawImage(T, jc, 0, 1, jc, jb + jc, ja, jd, jc);
			e.drawImage(T, T.width - jc, 0, jc, jc, jb + jd + jc, ja, jc, jc);
			e.drawImage(T, 0, jc, jc, 1, jb, ja + jc, jc, i);
			e.drawImage(T, jc, jc, 1, 1, jb + jc, ja + jc, jd, i);
			e.drawImage(T, T.width - jc, jc, jc, 1, jb + jd + jc, ja + jc, jc, i);
			e.drawImage(T, 0, T.height - jc, jc, jc, jb, ja + i + jc, jc, jc);
			e.drawImage(T, jc, T.height - jc, 1, jc, jb + jc, ja + i + jc, jd, jc);
			e.drawImage(T, T.width - jc, T.height - jc, jc, jc, jb + jd + jc, ja + i + jc, jc, jc)
		},
		draw3StretchedIcon: function(e, i, T, jb, jd, jc) {
			var ja = T[0];
			var i9 = T[1];
			e.drawImage(i, 0, 0, jb, i.height, ja, i9, jb, i.height);
			e.drawImage(i, jb, 0, 1, i.height, ja + jb, i9, jd, i.height);
			e.drawImage(i, i.width - jb, 0, jb, i.height, ja + jb + jd, i9, jb, i.height)
		},
		_updateFixedLabelCoords: function(ja, jp) {
			if (jp === 0) {
				return
			}
			var jk = [];
			var jw = [];
			var jx = 0;
			var jn = ja.totalHeight;
			var jF = ja.textSize.length;
			var jb = ja.direction;
			if (typeof jb !== "number") {
				jb = 0
			}
			for (var jy = 0; jy < jF; jy++) {
				var jq = ja.labelImagePosition[jy];
				var jo = ja.textSize[jy];
				var jm = jq[0];
				var i9 = jq[1];
				var jc = jo[0];
				var jh = jo[1];
				var jj = 0;
				var jv = 0;
				if (typeof ja.textMargin === "number") {
					jv = ja.textMargin
				}
				var ji;
				var e;
				var je = 0;
				var jl = 0;
				if (!ja.iconPos) {
					if (!ja.custom) {
						jb = h7
					}
				} else {
					je = ja.iconPos.width;
					jl = ja.iconPos.height
				}
				switch (jb) {
					case fR:
						var T = jn / 2 - jh + jj * (jF - 1) / 2;
						ji = Math.round(-je / 2 - jc - jv);
						e = Math.round(T - jx - jj * jy);
						break;
					case dU:
						var T = jn / 2 - jh + jj * (jF - 1) / 2;
						ji = Math.round(je / 2 + jv);
						e = Math.round(T - jx - jj * jy);
						break;
					case H:
						var T = jl / 2 + jn - jh + jj * jF;
						ji = Math.round(-jc / 2);
						e = Math.round(T - jx - jj * jy);
						break;
					case gH:
						var T = -jl / 2 - jj - jh;
						ji = Math.round(-jc / 2);
						e = Math.round(T - jx - jj * jy);
						break;
					case h7:
						var T = -jn / 2 - jj * (jF - 1) / 2;
						ji = Math.round(-jc / 2);
						e = Math.round(T - jx - jj * jy);
						break
				}
				jx += jh;
				var jg = ji + jc;
				var jG = e;
				var jf = jg;
				var jE = jG + jh;
				var jd = ji;
				var jD = jE;
				jk.push(ji, e, jg, jG, jf, jE, ji, e, jf, jE, jd, jD);
				var jC = jm / 512;
				var ju = (jp - i9 - jh * 2) / jp;
				var jB = (jm + jc * 2) / 512;
				var jt = ju;
				var jA = jB;
				var js = (jp - i9) / jp;
				var jz = jC;
				var jr = js;
				jw.push(jC, ju, jB, jt, jA, js, jC, ju, jA, js, jz, jr)
			}
			if (!ja.textPos) {
				ja.textPos = {}
			}
			ja.textPos.vertex = jk;
			ja.textPos.texcoord = jw
		},
		_addFixedLabelBounds: function(jf) {
			var jb = 1000;
			var i9 = 1000;
			var T = -1000;
			var e = -1000;
			if (jf.iconPos) {
				var jd = jf.iconPos["vertex"];
				for (var je = 0, ja = jd.length; je < ja; je += 2) {
					var jj = jd[je];
					var jh = jd[je + 1];
					if (jj < jb) {
						jb = jj
					}
					if (jj > T) {
						T = jj
					}
					if (jh < i9) {
						i9 = jh
					}
					if (jh > e) {
						e = jh
					}
				}
			}
			if (jf.custom && jf.style.iconSize && !jf.name) {
				var jg = jf.style.iconSize;
				var ji = jf.direction;
				switch (ji) {
					case h7:
						jb = -Math.round(jg[0] / 2);
						i9 = -Math.round(jg[1] / 2);
						T = Math.round(jg[0] / 2);
						e = Math.round(jg[1] / 2);
						break;
					case H:
						jb = -Math.round(jg[0] / 2);
						i9 = 0;
						T = Math.round(jg[0] / 2);
						e = jg[1];
						break
				}
			}
			if (jf.textPos) {
				var jc = jf.textPos["vertex"];
				for (var je = 0, ja = jc.length; je < ja; je += 2) {
					var jj = jc[je];
					var jh = jc[je + 1];
					if (jj < jb) {
						jb = jj
					}
					if (jj > T) {
						T = jj
					}
					if (jh < i9) {
						i9 = jh
					}
					if (jh > e) {
						e = jh
					}
				}
			}
			jf.bds = [jb, i9, T, e]
		},
		_updateLineLabelCoords: function(jq, jg) {
			if (jg === 0) {
				return
			}
			var i9 = jq.wordsInfo;
			var jn = jq.wordCount;
			if (!jq.labelImagePosition) {
				return
			}
			var ji = jq.labelImagePosition.slice(0);
			if (jq.reverse) {
				ji.reverse()
			}
			var jz = 1000;
			var jw = 1000;
			var jx = -1000;
			var jv = -1000;
			for (var jr = 0; jr < jn; jr++) {
				var jA = ji[jr];
				var jy = jA[0];
				var jo = jA[1];
				var jm = jq.textSize[jr];
				var jf = jm[0];
				var e = jm[1];
				var je = jy / 512;
				var jl = (jg - jo - e * 2) / jg;
				var jc = (jy + jf * 2) / 512;
				var jk = jl;
				var ja = jc;
				var jj = (jg - jo) / jg;
				var T = je;
				var jh = jj;
				i9[jr].size = [jf, e];
				i9[jr].texcoord = [je, jl, jc, jk, ja, jj, je, jl, ja, jj, T, jh];
				var ju = i9[jr].offset[0];
				var jt = i9[jr].offset[1];
				var js = ju - jf / 2;
				var jd = jt + e / 2;
				var jb = jt - e / 2;
				var jp = ju + jf / 2;
				if (js < jz) {
					jz = js
				}
				if (jp > jx) {
					jx = jp
				}
				if (jb < jw) {
					jw = jb
				}
				if (jd > jv) {
					jv = jd
				}
			}
			jq.bds = [jz, jw, jx, jv]
		}
	});
	var fo = {
		0: "00000000",
		16: "00010000",
		32: "00100000",
		48: "00110000",
		64: "01000000",
		96: "01100000"
	};

	function dM(T, i9, ja) {
		var e = T.bds;
		if (!e) {
			return false
		}
		var i = T.tracer;
		var jd;
		if (i) {
			if (!fo[i]) {
				jd = i.toString(2);
				if (jd.length < 8) {
					jd = new Array(8 - jd.length + 1)
						.join("0") + jd
				}
				fo[i] = jd
			}
			jd = fo[i];
			var jc = i4.mapZoomStartZoomMapping[i9];
			return jd[i9 - jc] === "1"
		}
		var jb = T.displayRange;
		if (ja >= jb[0] && ja <= jb[1]) {
			return true
		}
		return false
	}

	function ic(i, e) {
		this.map = i.map;
		this.layer = i;
		e = e || [];
		this.allLabels = [];
		this._spotData = [];
		this._strategyInfo = null;
		this.RANK1 = 1000000;
		this.RANK2 = 2000000;
		this.RANK3 = 3000000;
		this.RANK4 = 4000000;
		this.RANK5 = 5000000;
		this._ratio = fz();
		this._useRound = true;
		this._sharpenRender = false;
		if (this._ratio > gV.HIGH_RES_MIN_RATIO) {
			this._useRound = false;
			this._sharpenRender = true
		}
		this._mapIsMoving = false;
		this._onMapIdleCallback = e.onMapIdleCallback;
		this.map.temp.isPermitSpotOver = true;
		this.currentSelectedLabel = null;
		this.map._labelProcessor = this;
		this.iconCache = {};
		this.fixedLabelData = [];
		this.lineLabelData = [];
		this.highlightLabelData = [];
		this._iconLoadTimer = null;
		this._labelTextCanvas = null;
		if (this.map.config.textRenderType === "canvas") {
			this._labelTextCanvas = this.map.tileMgr.getLabelTextCanvas()
		}
		this.bind()
	}
	es.extend(ic.prototype, {
		bind: function() {
			var T = this.map;
			var i = this;
			T.addEventListener("mapstatusbusy_inner", function(i9) {
				i._mapIsMoving = true;
				if (i._ratio > gV.HIGH_RES_MIN_RATIO) {
					i._sharpenRender = false
				} else {
					i._useRound = false
				}
			});
			T.addEventListener("mapstatusidle_inner", function(i9) {
				if (i._ratio > gV.HIGH_RES_MIN_RATIO) {
					i._sharpenRender = true
				} else {
					i._useRound = true
				}
				i._mapIsMoving = false
			});
			T.addEventListener("onspotmouseover", function(jb) {
				if (!this.temp.isPermitSpotOver) {
					return
				}
				if (jb.spots.length > 0) {
					var ja = jb.spots[0].userdata.uid;
					var jc = jb.spots[0].userdata.tilePosStr;
					var i9 = i.getLabelByUid(ja, jc);
					i9 && i9.formatedData && i._toHighlightColor(i9.formatedData)
				}
			});
			T.addEventListener("onspotmouseout", function(jb) {
				if (!this.temp.isPermitSpotOver) {
					return
				}
				if (jb.spots.length > 0) {
					var ja = jb.spots[0].userdata.uid;
					var jc = jb.spots[0].userdata.tilePosStr;
					var i9 = i.getLabelByUid(ja, jc);
					i9 && i9.formatedData && i._toDefaultColor(i9.formatedData)
				}
			});
			T.addEventListener("spotclick", function(jb) {
				if (jb.spots && jb.spots.length > 0) {
					if (jb.spots[0].userdata.zoom < 10) {
						return
					}
					var ja = jb.spots[0].userdata.uid;
					var jc = jb.spots[0].userdata.tilePosStr;
					if (i.currentSelectedLabel && (i.currentSelectedLabel.uid !== ja || i.currentSelectedLabel.tilePosStr !== jc)) {
						i._recoverNormalState()
					}
					var i9 = i.getLabelByUid(ja, jc);
					i9 && i._changeBaseMapState(i9)
				} else {
					i._recoverNormalState()
				}
			});
			T.on("spot_status_reset", function() {
				i._recoverNormalState()
			});
			T.on("spot_highlight", function(ja) {
				var i9 = i.getLabelByUid(ja.uid, ja.tilePosStr);
				i9 && i9.formatedData && i._toHighlightColor(i9.formatedData)
			});
			T.addEventListener("mousemove", function(i9) {
				if (i.curSpotAdded) {
					return
				}
				if (this.currentOperation !== dI.idle || i._mapIsMoving === true) {
					return
				}
				i._refreshSpotData();
				this.temp.isPermitSpotOver = true;
				i.curSpotAdded = true
			});
			if (bJ()) {
				function e() {
					i._refreshSpotData()
				}
				T.addEventListener("mapstatusidle_inner", e)
			}
			T.on("style_loaded", function() {
				if (i.map.config.textRenderType === "canvas" && !i._labelTextCanvas) {
					i._labelTextCanvas = i.map.tileMgr.getLabelTextCanvas()
				}
			})
		},
		getLabelByUid: function(jd, je) {
			var e = this.map._featureMgr.getResult()
				.tileLabels;
			for (var jc = 0; jc < e.length; jc++) {
				var i9 = e[jc].fixedLabel;
				for (var jb = 0; jb < i9.length; jb++) {
					if (e[jc].fixedLabel[jb].guid === jd && e[jc].fixedLabel[jb].tilePosStr === je) {
						return e[jc].fixedLabel[jb]
					}
				}
				var ja = e[jc].indoorLabel;
				for (var T = 0; T < ja.length; T++) {
					if (e[jc].indoorLabel[T].guid === jd && e[jc].indoorLabel[T].tilePosStr === je) {
						return e[jc].indoorLabel[T]
					}
				}
			}
			return null
		},
		getTileByLabelUid: function(jd) {
			var e = this.map._featureMgr.getResult()
				.tileLabels;
			for (var jc = 0; jc < e.length; jc++) {
				var i9 = e[jc].fixedLabel;
				for (var jb = 0; jb < i9.length; jb++) {
					if (e[jc].fixedLabel[jb].guid === jd) {
						return e[jc]
					}
				}
				var ja = e[jc].indoorLabel;
				for (var T = 0; T < ja.length; T++) {
					if (e[jc].indoorLabel[T].guid === jd) {
						return e[jc]
					}
				}
			}
			return null
		},
		_toHighlightColor: function(T) {
			if (T.tempRank && T.tempRank === this.RANK5) {
				return
			}
			var e = this.map._featureMgr.getResult()
				.eleData[4] || [];
			var ja = false;
			for (var i9 = 0; i9 < e.length; i9++) {
				if (e[i9] === T || (e[i9].guid === T.guid && e[i9].tilePosStr === T.tilePosStr && e[i9].zoom === T.zoom)) {
					ja = true;
					break
				}
			}
			if (ja) {
				return
			}
			e.push(T);
			this.map._featureMgr.setOverlayData(e, 4);
			this.map.dispatchEvent(new e7("onrefresh"))
		},
		_toDefaultColor: function(T) {
			if (T.tempRank && T.tempRank === this.RANK5) {
				return
			}
			var e = this.map._featureMgr.getResult()
				.eleData[4] || [];
			for (var i9 = 0; i9 < e.length; i9++) {
				if (T === e[i9] || (T.guid === e[i9].guid && T.tilePosStr === e[i9].tilePosStr && T.zoom === e[i9].zoom)) {
					e.splice(i9, 1);
					break
				}
			}
			this.map._featureMgr.setOverlayData(e, 4);
			this.map.dispatchEvent(new e7("onrefresh"))
		},
		_changeBaseMapState: function(i) {
			var ja = i.guid;
			var je = i.formatedData.guidExt;
			var jf = {
				guid: ja,
				tilePosStr: i.tilePosStr,
				guidExt: je
			};
			this._strategyInfo = jf;
			this.currentSelectedLabel = i;
			var i9 = this.map._featureMgr;
			var e = i9.getLabelData();
			e = this.collisionTest(e);
			this.updateLabels(e);
			var jg = this.fixDataFormat(e);
			i9.setOverlayData(jg[0], 2);
			i9.setOverlayData(jg[1], 3);
			i9.setOverlayData(jg[2], 4);
			var T = this.getTileByLabelUid(ja);
			this.currentSelectedLabel.tileInfo = T.tileInfo;
			var jd = this.layer.tileCache.getAllData();
			for (var jc in jd) {
				var jb = jd[jc].data;
				if (!jb.label) {
					continue
				}
				this.clearCollisionCache(jb.label)
			}
			this.map.dispatchEvent(new e7("onrefresh"))
		},
		_recoverNormalState: function() {
			this._strategyInfo = null;
			var jd = false;
			var jb = this.map._featureMgr.getLabelData();
			if (this.currentSelectedLabel) {
				var T = this.currentSelectedLabel.guid;
				this.clearCollisionCache(this.getTileByLabelUid(T));
				var ja = this.layer.tileCache.getAllData();
				for (var i9 in ja) {
					if (Object.prototype.hasOwnProperty.call(ja, i9)) {
						var jc = ja[i9].data;
						if (!jc.label) {
							continue
						}
						this.clearCollisionCache(jc.label)
					}
				}
				this.currentSelectedLabel.tempRank = null;
				this.currentSelectedLabel = null;
				jd = true
			}
			jb = this.collisionTest(jb);
			this.updateLabels(jb);
			var e = this.fixDataFormat(jb);
			var i = this.map._featureMgr;
			i.setOverlayData(e[0], 2);
			i.setOverlayData(e[1], 3);
			i.setOverlayData([], 4);
			this.map.dispatchEvent(new e7("onrefresh"));
			if (jd) {
				this.curSpotAdded = false;
				this._refreshSpotData()
			}
		},
		loadIconImages: function(ja, jl) {
			var jd = ja.label;
			var jb = ja.tileInfo.style;
			var T = jd.fixedLabel;
			var ji = jd.indoorLabel;
			var jm = T.length + ji.length;
			var jf = this;
			var i9 = 0;
			var jk = 200;
			for (var jc = 0; jc < jm; jc++) {
				var je;
				if (jc < T.length) {
					je = T[jc]
				} else {
					je = ji[jc - T.length]
				}
				if (!je.iconPos) {
					continue
				}
				var jh = je.iconPos.iconType;
				var jj = jb + "_" + jh;
				i9++;
				if (this.iconCache[jj]) {
					if (this.iconCache[jj].loaded) {
						jl(ja)
					}
					continue
				}
				var e = w.getIconSetPath(this.map.config.style) + jh + ".png";
				var jg = new Image();
				jg.id = jj;
				jg.iconUrl = e;
				jg.crossOrigin = "anonymous";
				jg.onload = function() {
					jf.iconCache[this.id].loaded = true;
					jf._addToIconTexture(this);
					if (jf._iconLoadTimer === null) {
						jf._iconLoadTimer = setTimeout(function() {
							jl();
							jf._iconLoadTimer = null
						}, jk)
					}
					this.onload = null
				};
				jg.onerror = function() {
					if (!jf._iconLoadTimer) {
						jf._iconLoadTimer = setTimeout(function() {
							jl();
							jf._iconLoadTimer = null
						}, jk)
					}
					jf.iconCache[this.id] = null;
					this.onerror = null;
					bo.fetchDebug && bo.fetchDebug.sendError({
						title: this.iconUrl,
						msg: this.iconUrl,
						category: bo.fetchDebug.category.RESOURCE,
						level: bo.fetchDebug.levels.ERROR,
						url: this.iconUrl
					})
				};
				jg.src = e;
				this.iconCache[jj] = {
					loaded: false,
					image: jg
				}
			}
			return i9
		},
		_addToIconTexture: function(jb) {
			if (!this.map._webglMapScene) {
				return
			}
			var jd = this.map._webglMapScene._painter;
			var e = jd._iconTextureAtlas.addTexture(jb);
			jd._iconTextureAtlasOffset[jb.id] = e;
			var jg = 0 * jb.width / 1024 + e.width;
			var ja = 0 * jb.height / 1024 + e.height;
			var jf = jb.width / 1024 + e.width;
			var i9 = ja;
			var je = jf;
			var T = jb.height / 1024 + e.height;
			var jc = jg;
			var i = T;
			jd._iconTextureAtlasCoords[jb.id] = [jg, ja, jf, i9, je, T, jg, ja, je, T, jc, i]
		},
		loadImgByStr: function(i9, ja, jb) {
			if (!i9 && !ja) {
				jb && jb(null, null);
				return
			}
			if (typeof i9 === "object" && typeof ja === "object") {
				jb(i9, ja);
				return
			}
			var i = 0;
			var T = null;
			var e = null;
			if (i9) {
				i++;
				T = new Image();
				T.onload = function() {
					i--;
					if (i === 0) {
						jb && jb(this, e)
					}
					this.onload = null
				};
				T.src = i9
			}
			if (ja) {
				i++;
				e = new Image();
				e.onload = function() {
					i--;
					if (i === 0) {
						jb && jb(T, this)
					}
					this.onload = null
				};
				e.src = ja
			}
		},
		collisionTest: function(jp, kf, jK) {
			if (this.map.viewAnimationTime) {
				return []
			}
			if (!jp) {
				return []
			}
			var jA = this.map;
			var jT = jA.getHeading();
			jT = this.calcLoopHeading(jT);
			var j5 = jA.height;
			var jZ = this.allLabels;
			jZ.length = 0;
			jp.sort(function(j1, i) {
				var ki = j1.tileInfo;
				var j2 = i.tileInfo;
				if (ki.col * ki.row < j2.col * j2.row) {
					return -1
				} else {
					return 1
				}
			});
			var jB = jA.getTilt();
			var jr = jA.getZoom();
			var jY;
			if (jK) {
				jY = jK
			} else {
				jY = this.getZoomStep()
			}
			for (var kb = 0, j6 = jp.length; kb < j6; kb++) {
				var jF = jp[kb];
				var jn = jF.tileInfo;
				var jh = jn.zoom;
				var jX = jn.loopOffsetX / Math.pow(2, 18 - jh);
				if (!jT && !jB) {
					if (jF.unnecessaryCollisionTest && jF.unnecessaryCollisionTest[jK]) {
						continue
					}
				}
				var jP = jF.fixedLabel || [];
				for (var j9 = 0, jH = jP.length; j9 < jH; j9++) {
					var jk = jP[j9];
					jk.zoom = jh;
					if (kf === -1 && jk.isDel) {
						continue
					}
					if (!dM(jk, jn.useZoom, jr)) {
						jk.isDel = true;
						continue
					}
					this.calcCollisionBounds(jk, jY, jX, j5);
					jZ.push(jk)
				}
				var jN = jF.indoorLabel || [];
				for (var j7 = 0, jc = jN.length; j7 < jc; j7++) {
					var jC = jN[j7];
					jC.zoom = jh;
					if (kf === -1 && jC.isDel) {
						continue
					}
					if (!dM(jC, jn.useZoom)) {
						jC.isDel = true;
						continue
					}
					this.calcCollisionBounds(jC, jY, jX, j5);
					jZ.push(jC)
				}
				var jm = jF.lineLabel || [];
				for (var kc = 0, jv = jm.length; kc < jv; kc++) {
					var i9 = jm[kc];
					if (kf === -1 && i9.isDel) {
						continue
					}
					if (!dM(i9, jn.useZoom)) {
						i9.isDel = true;
						continue
					}
					var kh = i9.pt;
					var jJ = jA.pointToPixelIn(kh, {
						zoom: jY,
						useRound: this._useRound
					});
					var jG = jJ.x + jX;
					var jE = j5 - jJ.y;
					var jM = i9.bds;
					var j4 = jM[0];
					var j0 = jM[1];
					var jy = jM[2];
					var jx = jM[3];
					var jU = j4;
					var jS = j0;
					var ju = jy;
					var jt = jx;
					if ((jT >= 0 && jT < 45) || (jT >= 315 && jT < 360)) {
						jU = j4;
						jS = j0;
						ju = jy;
						jt = jx
					} else {
						if (jT >= 45 && jT < 135) {
							jU = j0;
							jS = -jy;
							ju = jx;
							jt = -j4
						} else {
							if (jT >= 135 && jT < 225) {
								jU = -jy;
								jS = -jx;
								ju = -j4;
								jt = -j0
							} else {
								if (jT >= 225 && jT < 315) {
									jU = -jx;
									jS = j4;
									ju = -j0;
									jt = jy
								}
							}
						}
					}
					i9._tempBds = [jG + jU, jE + jS, jG + ju, jE + jt];
					var jo = jA.pixelToPointIn(new eL(i9._tempBds[0], jJ.y + jS), {
						zoom: jY
					});
					var jb = jA.pixelToPointIn(new eL(i9._tempBds[2], jJ.y + jt), {
						zoom: jY
					});
					i9._mcBds = [jo, jb];
					jZ.push(i9)
				}
			}
			var jW = this._strategyInfo;
			if (jW) {
				var js = jW.guid;
				var jD = jW.guidExt;
				var ja = false;
				for (var jI = 0, jl = jZ.length; jI < jl; jI++) {
					var j3 = jZ[jI];
					delete j3.tempRank;
					if (!this.layer.isClickableLabel(j3) || (jD === 1 && !j3.guidExt)) {
						continue
					}
					if (js === j3.guid && jW.tilePosStr === j3.tilePosStr) {
						j3.tempRank = this.RANK5;
						ja = true
					}
				}
				if (!ja && this.currentSelectedLabel) {
					this.currentSelectedLabel.tempRank = this.RANK5;
					var jL = this.currentSelectedLabel.tileInfo;
					var T = jL.zoom;
					var jV = jL.loopOffsetX / Math.pow(2, 18 - T);
					this.calcCollisionBounds(this.currentSelectedLabel, jY, jV, j5);
					jZ.push(this.currentSelectedLabel)
				}
			} else {
				for (var jw = 0, jj = jZ.length; jw < jj; jw++) {
					var kg = jZ[jw];
					if (kg.type === "line" || !kg.iconPos) {
						continue
					}
					delete kg.tempRank
				}
			}
			jZ.sort(function(j2, j1) {
				var ki = j2.tempRank ? j2.tempRank : j2.rank;
				var i = j1.tempRank ? j1.tempRank : j1.rank;
				return i - ki || j2.startZoom - j1.startZoom || j1.pt.lng - j2.pt.lng || j1.pt.lat - j2.pt.lat
			});
			var jd = 0;
			if (jB > 0) {
				jd = 6
			}
			jr = jA.getZoom();
			if (jr >= 8 && jr < 9) {
				jr < 8.5 ? (jd = 6) : (jd = 3)
			}
			if (jA._displayOptions.labelMargin > 0) {
				jd = jA._displayOptions.labelMargin
			}
			var e = 2;
			if (jr < 6 && jr >= 5) {
				e = -1
			}
			for (var ji = 0, jg = jZ.length; ji < jg; ji++) {
				var jR = jZ[ji];
				var jq = jR._tempBds;
				jR.isDel = false;
				jR._intersectIdx = [];
				for (var ka = ji + 1; ka < jg; ka++) {
					var jz = jZ[ka];
					var ke = jz._tempBds;
					if (!(jq[2] + jd + e < ke[0] - jd || jq[0] - jd > ke[2] + jd + e || jq[3] + jd + e < ke[1] - jd || jq[1] - jd > ke[3] + jd + e)) {
						jR._intersectIdx.push(ka)
					}
				}
			}
			for (var jf = 0, je = jZ.length; jf < je; jf++) {
				var kd = jZ[jf];
				if (kd.isDel === false) {
					var jQ = kd._intersectIdx;
					for (var j8 = 0, jO = jQ.length; j8 < jO; j8++) {
						jZ[jQ[j8]].isDel = true
					}
				}
			}
			return jp
		},
		calcCollisionBounds: function(jf, jd, i, je) {
			var jb = jf.ptFix || jf.pt;
			var i9 = this.map;
			var ja = i9.pointToPixelIn(jb, {
				zoom: jd,
				useRound: this._useRound
			});
			var T = ja.x + i;
			var jh = je - ja.y;
			var e = jf.bds;
			jf._tempBds = [T + e[0], jh + e[1], T + e[2], jh + e[3]];
			var jc = i9.pixelToPointIn(new eL(jf._tempBds[0], ja.y + e[1]), {
				zoom: jd
			});
			var jg = i9.pixelToPointIn(new eL(jf._tempBds[2], ja.y + e[3]), {
				zoom: jd
			});
			jf._mcBds = [jc, jg]
		},
		getZoomStep: function() {
			var T = this.map.getZoom();
			var e = Math.floor(T);
			var i = T - e >= 0.5 ? e + 0.5 : e;
			return i
		},
		clearCollisionCache: function(e) {
			if (!e) {
				return
			}
			e.cacheState = null;
			e.unnecessaryCollisionTest = null
		},
		getCachedLabels: function(e) {
			e = e || [];
			var T = this.getZoomStep();
			var jb = false;
			for (var i9 = 0; i9 < e.length; i9++) {
				var ja = e[i9];
				if (!ja.cacheState || !ja.cacheState[T]) {
					jb = true;
					break
				}
				if (ja.hasNewData) {
					jb = true;
					break
				}
			}
			if (jb) {
				this.calcLabelsCollision(e)
			}
			return e
		},
		calcLabelsCollision: function(T) {
			var ja = this.getZoomStep();
			var jb = {};
			var ji;
			var i9;
			var jk;
			var jm;
			var jl;
			var jj;
			T = this.collisionTest(T, undefined, ja);
			aN.addLabelIntoAreaSpots(T);
			for (var jf = 0; jf < T.length; jf++) {
				ji = T[jf];
				i9 = ji.tileInfo;
				jm = i9.col + "," + i9.row;
				jb[jm] = 1
			}
			var e = {};
			for (var jd = 0; jd < T.length; jd++) {
				ji = T[jd];
				if (!ji.cacheState) {
					ji.cacheState = {}
				}
				i9 = ji.tileInfo;
				jl = i9.col;
				jj = i9.row;
				jm = jl + "," + jj;
				if (ji.cacheState[ja] === "stable") {
					e[jm] = 1;
					if (!ji.hasNewData) {
						continue
					}
				}
				for (var je = 0; je < ji.fixedLabel.length; je++) {
					jk = ji.fixedLabel[je];
					if (!jk.cachedIsDel) {
						jk.cachedIsDel = {}
					}
					jk.cachedIsDel[ja] = jk.isDel
				}
				for (var jh = 0; jh < ji.indoorLabel.length; jh++) {
					jk = ji.indoorLabel[jh];
					if (!jk.cachedIsDel) {
						jk.cachedIsDel = {}
					}
					jk.cachedIsDel[ja] = jk.isDel
				}
				for (var jg = 0; jg < ji.lineLabel.length; jg++) {
					jk = ji.lineLabel[jg];
					if (!jk.cachedIsDel) {
						jk.cachedIsDel = {}
					}
					jk.cachedIsDel[ja] = jk.isDel
				}
				if (jb[(jl - 1) + "," + (jj - 1)] && jb[(jl - 1) + "," + jj] && jb[(jl - 1) + "," + (jj + 1)] && jb[jl + "," + (jj - 1)] && jb[jl + "," + (jj + 1)] && jb[(jl + 1) + "," + (jj - 1)] && jb[(jl + 1) + "," + jj] && jb[(jl + 1) + "," + (jj + 1)]) {
					ji.cacheState[ja] = "stable";
					e[jm] = 1
				} else {
					if (!ji.cacheState[ja]) {
						ji.cacheState[ja] = "unstable"
					}
				}
			}
			for (var jc = 0; jc < T.length; jc++) {
				ji = T[jc];
				i9 = ji.tileInfo;
				jm = i9.col + "," + i9.row;
				jl = +i9.col;
				jj = +i9.row;
				if (e[(jl - 1) + "," + (jj - 1)] && e[(jl - 1) + "," + jj] && e[(jl - 1) + "," + (jj + 1)] && e[jl + "," + (jj - 1)] && e[jl + "," + (jj + 1)] && e[(jl + 1) + "," + (jj - 1)] && e[(jl + 1) + "," + jj] && e[(jl + 1) + "," + (jj + 1)]) {
					if (!ji.unnecessaryCollisionTest) {
						ji.unnecessaryCollisionTest = {}
					}
					ji.unnecessaryCollisionTest[ja] = 1
				}
			}
			T.hasNewData = false
		},
		updateLabels: function(ja) {
			var T = this.map;
			var jg = T.getZoom();
			var ji = T.getHeading();
			ji = this.calcLoopHeading(ji);
			var jh = T.getTilt();
			var jb = this.getZoomStep();
			for (var jf = 0, jc = ja.length; jf < jc; jf++) {
				var je = ja[jf];
				var i9 = je.tileInfo;
				var jd = i9.loopOffsetX || 0;
				var e = {
					zoom: jg,
					mcOffsetX: jd
				};
				this.updateFixedLabel(je.fixedLabel, jh, ji, je, jb, e);
				e = {
					zoom: jg,
					mcOffsetX: 0
				};
				this.updateFixedLabel(je.indoorLabel, jh, ji, je, jb, e);
				this.updateLineLabel(je.lineLabel, jh, ji, je, jb)
			}
		},
		updateFixedLabel: function(je, jh, i, jk, ja, jf) {
			if (je.length === 1) {}
			var e = jf.zoom;
			var i9 = jf.mcOffsetX;
			var jp;
			for (var jl = 0, jc = je.length; jl < jc; jl++) {
				var jg = je[jl];
				if (!jg.cachedIsDel) {
					continue
				}
				if (!jh && !i && jk.cacheState && jk.cacheState[ja]) {
					jg.isDel = jg.cachedIsDel[ja];
					if (typeof jg.isDel === "undefined") {
						jg.isDel = jg.cachedIsDel[ja] = true
					}
				}
				if (jg.startScale > e) {
					jg.isDel = true
				}
				if (jg.isDel) {
					continue
				}
				var jn = jg.pt;
				var T = jg.iconPos;
				if (T && T.texcoord) {
					if (!T.rtVertex) {
						T.rtVertex = [];
						jp = T.vertex;
						var jd = hO(jn.lng);
						var jm = hO(jn.lat);
						T.rtVertex = [jd[0], jm[0], jd[1], jm[1], 0, jp[0], jp[1], 0, 0, T.texcoord[0], T.texcoord[1], jd[0], jm[0], jd[1], jm[1], 0, jp[2], jp[3], 0, 0, T.texcoord[2], T.texcoord[3], jd[0], jm[0], jd[1], jm[1], 0, jp[4], jp[5], 0, 0, T.texcoord[4], T.texcoord[5], jd[0], jm[0], jd[1], jm[1], 0, jp[6], jp[7], 0, 0, T.texcoord[6], T.texcoord[7], jd[0], jm[0], jd[1], jm[1], 0, jp[8], jp[9], 0, 0, T.texcoord[8], T.texcoord[9], jd[0], jm[0], jd[1], jm[1], 0, jp[10], jp[11], 0, 0, T.texcoord[10], T.texcoord[11]]
					}
				}
				var jo = jg.textPos;
				if (jo) {
					if (!jo.rtVertex) {
						jo.rtVertex = [];
						jp = jo.vertex;
						var jb = jo.rtVertex;
						var jj = hO(jn.lng);
						var js = hO(jn.lat);
						var jr = hO(i9);
						for (var ji = 0, jq = jp.length; ji < jq; ji += 12) {
							jb.push(jj[0], js[0], jj[1], js[1], 0, jp[ji], jp[ji + 1], jr[0], jr[1], jo.texcoord[0], jo.texcoord[1]);
							jb.push(jj[0], js[0], jj[1], js[1], 0, jp[ji + 2], jp[ji + 3], jr[0], jr[1], jo.texcoord[2], jo.texcoord[3]);
							jb.push(jj[0], js[0], jj[1], js[1], 0, jp[ji + 4], jp[ji + 5], jr[0], jr[1], jo.texcoord[4], jo.texcoord[5]);
							jb.push(jj[0], js[0], jj[1], js[1], 0, jp[ji + 6], jp[ji + 7], jr[0], jr[1], jo.texcoord[6], jo.texcoord[7]);
							jb.push(jj[0], js[0], jj[1], js[1], 0, jp[ji + 8], jp[ji + 9], jr[0], jr[1], jo.texcoord[8], jo.texcoord[9]);
							jb.push(jj[0], js[0], jj[1], js[1], 0, jp[ji + 10], jp[ji + 11], jr[0], jr[1], jo.texcoord[10], jo.texcoord[11])
						}
					}
				}
			}
		},
		updateLineLabel: function(je, jH, jx, js, jt) {
			je = je || [];
			var jn = this.map;
			var jh = jn.getZoomUnits();
			for (var jG = 0, jE = je.length; jG < jE; jG++) {
				var jd = je[jG];
				if (!jd.cachedIsDel) {
					continue
				}
				if (!jH && !jx && js.cacheState && js.cacheState[jt]) {
					jd.isDel = jd.cachedIsDel[jt];
					if (typeof jd.isDel === "undefined") {
						jd.isDel = jd.cachedIsDel[jt] = true
					}
				}
				if (jd.isDel) {
					continue
				}
				if (!jd.styleText || jd.styleText.length === 0) {
					continue
				}
				var jf = jd.mcInTile;
				var jA = jf.x;
				var jy = jf.y;
				var jr = jd.wordsInfo;
				var jp = jd.labelAngle;
				var jl = false;
				var jz = 0;
				if (jx !== 0) {
					var jm = jr[0].angle;
					var jD = this.calcLoopHeading(jm - jx);
					if (jD > 45 && jD < 315) {
						if (jD > 45 && jD <= 135) {
							jz = 270
						} else {
							if (jD > 135 && jD <= 225) {
								jz = 180
							} else {
								if (jD > 225 && jD < 315) {
									jz = 90
								}
							}
						}
						if (jp > 225 && jp <= 315 && jz <= 180) {
							jl = true
						} else {
							if ((jp >= 0 && jp <= 45 || jp >= 315 && jp < 360) && jz >= 180) {
								jl = true
							}
						}
					}
				}
				for (var jF = 0, ji = jr.length; jF < ji; jF++) {
					var jC = jr[jF];
					var jk = jC.calcInfo;
					var jw = jC.offset[0];
					var ju = jC.offset[1];
					if (!jC.size) {
						continue
					}
					var e = jC.size[0];
					var T = jC.size[1];
					var jj = jC.angle;
					if (!jk) {
						jk = {}
					}
					if (jx !== jk.mapHeading || jh !== jk.zoomUnits) {
						jk.mapHeading = jx;
						jk.zoomUnits = jh;
						if (jl) {
							var jo = jr[ji - 1 - jF];
							jw = jo.offset[0];
							ju = jo.offset[1];
							jj = jo.angle
						}
						var ja = jA + jw * jh;
						var i9 = jy + ju * jh;
						jk.rotationCenter = {
							lng: ja,
							lat: i9
						};
						jk.calcHeading = jz;
						jk.angle = jj;
						jk.offsetX = jw;
						jk.offsetY = ju;
						jC.calcInfo = jk
					}
					if (!jC.rtVertex) {
						jC.rtVertex = []
					}
					jC.rtVertex.length = 0;
					var jq = jk.calcHeading + jk.angle;
					var jb = jk.rotationCenter;
					jw = jk.offsetX;
					ju = jk.offsetY;
					var jc = Math.round(jw - e / 2);
					var jB = Math.round(jw + e / 2);
					var jv = Math.round(ju + T / 2);
					var jg = Math.round(ju - T / 2);
					jC.rtVertex.push(jA, jy, jC.z, jc, jg, jb.lng, jb.lat, jq, jC.texcoord[0], jC.texcoord[1], jA, jy, jC.z, jB, jg, jb.lng, jb.lat, jq, jC.texcoord[2], jC.texcoord[3], jA, jy, jC.z, jB, jv, jb.lng, jb.lat, jq, jC.texcoord[4], jC.texcoord[5], jA, jy, jC.z, jc, jg, jb.lng, jb.lat, jq, jC.texcoord[6], jC.texcoord[7], jA, jy, jC.z, jB, jv, jb.lng, jb.lat, jq, jC.texcoord[8], jC.texcoord[9], jA, jy, jC.z, jc, jv, jb.lng, jb.lat, jq, jC.texcoord[10], jC.texcoord[11])
				}
			}
		},
		calcLoopHeading: function(e) {
			while (e >= 360) {
				e -= 360
			}
			while (e < 0) {
				e += 360
			}
			return e
		},
		fixDataFormat: function(jh) {
			var i9 = this.fixedLabelData;
			var e = this.lineLabelData;
			var T = this.highlightLabelData;
			var jp = 0;
			var jd = 0;
			var jm = 0;
			var jn;
			if (this.currentSelectedLabel) {
				var jc = this.getLabelByUid(this.currentSelectedLabel.guid, this.currentSelectedLabel.tilePosStr);
				if (!jc || jc.isDel) {
					i9[jp] = this.currentSelectedLabel.formatedData;
					jp++;
					T[jm] = this.currentSelectedLabel.formatedData;
					jm++
				}
			}
			for (var jl = 0; jl < jh.length; jl++) {
				var jf = jh[jl];
				var je = jf.fixedLabel;
				var ja = jf.indoorLabel;
				var jk = jf.lineLabel;
				var jo = {
					highlightLabelData: T,
					highlightLabelDataLen: jm
				};
				jn = this.fixFixedLabelDataFormat(je, jf, i9, jp, jo);
				jp = jn[0];
				jm = jn[1];
				jn = this.fixFixedLabelDataFormat(ja, jf, i9, jp, jo, true);
				jp = jn[0];
				jm = jn[1];
				e[jd] = {
					tileInfo: jf.tileInfo,
					lineLabels: []
				};
				for (var jj = 0; jj < jk.length; jj++) {
					if (jk[jj].isDel) {
						continue
					}
					var jg = jk[jj].wordsInfo;
					if (jg) {
						for (var ji = 0; ji < jg.length; ji++) {
							if (!jg[ji].rtVertex) {
								continue
							}
							var jb = jg[ji].formatedData;
							if (!jb) {
								jb = {
									textureSource: jf.textureSources[jk[jj].processedInZoom],
									textureHeight: jf.textureHeights[jk[jj].processedInZoom],
									renderData: {
										vertex: jg[ji].rtVertex,
										textureCoord: jg[ji].texcoord
									}
								};
								jg[ji].formatedData = jb
							}
							e[jd].lineLabels.push(jb)
						}
					}
				}
				jd++
			}
			i9.length = jp;
			e.length = jd;
			T.length = jm;
			return [e, i9, T]
		},
		fixFixedLabelDataFormat: function(jd, jg, jh, je, T, jf) {
			var jb = T.highlightLabelData;
			var e = T.highlightLabelDataLen;
			for (var i = 0; i < jd.length; i++) {
				if (jd[i].isDel) {
					continue
				}
				var jc = jd[i].textPos;
				var ja = jd[i].iconPos;
				var i9 = null;
				if (jc && jc.rtVertex) {
					if (!jd[i].formatedData) {
						i9 = {
							guid: jd[i].guid,
							guidExt: jd[i].guidExt,
							tilePosStr: jd[i].tilePosStr,
							zoom: jd[i].zoom,
							tempRank: jd[i].tempRank,
							textureSource: jg.textureSources[jd[i].processedInZoom],
							textureHeight: jg.textureHeights[jd[i].processedInZoom],
							renderData: {
								vertex: jc.rtVertex,
								textureCoord: jc.texcoord
							}
						};
						if (jf && jd[i].onDefaultFloor === false) {
							i9.textureSource = jg.indoorTextureSources[jd[i].processedInZoom];
							i9.textureHeight = jg.indoorTextureHeights[jd[i].processedInZoom]
						}
						jd[i].formatedData = i9
					} else {
						i9 = jd[i].formatedData;
						i9.tempRank = jd[i].tempRank
					}
					if (this.currentSelectedLabel && i9.guid === this.currentSelectedLabel.guid && i9.tilePosStr === this.currentSelectedLabel.tilePosStr) {
						jb[e] = i9;
						e++
					}
				}
				if (ja && ja.rtVertex) {
					if (i9) {
						if (!i9.iconRenderData) {
							i9.iconRenderData = {
								vertex: ja.rtVertex,
								textureCoord: ja.texcoord
							}
						}
					} else {
						i9 = {
							guid: jd[i].guid,
							guidExt: jd[i].guidExt,
							zoom: jd[i].zoom,
							tempRank: jd[i].tempRank,
							iconRenderData: {
								vertex: ja.rtVertex,
								textureCoord: ja.texcoord
							}
						};
						jd[i].formatedData = i9
					}
				}
				jh[je] = i9;
				je++
			}
			return [je, e]
		},
		_refreshSpotData: function() {
			this._spotData.length = 0;
			var je = this.map;
			var jc = Math.floor(je.getZoom());
			var T = this.map._featureMgr.getLabelData();
			if (T) {
				for (var ja = 0, i9 = T.length; ja < i9; ja++) {
					this._addFixedSpotData(T[ja].fixedLabel, jc);
					this._addFixedSpotData(T[ja].indoorLabel, jc)
				}
			}
			var jf = this.currentSelectedLabel;
			if (jf && !this.getTileByLabelUid(jf.guid, jf.tilePosStr)) {
				var jb = this._getSpotDataFromLabel(this.currentSelectedLabel);
				if (jb) {
					this._spotData.push(jb)
				}
			}
			var jd = new e7("onspotsdataready");
			jd.spots = this._spotData;
			je._spotDataOnCanvas = this._spotData;
			je.dispatchEvent(jd)
		},
		_addFixedSpotData: function(ja, i9) {
			for (var e = 0; e < ja.length; e++) {
				var T = ja[e];
				if (!this.layer.isClickableLabel(T) || (T.guidExt === 1 && T.startScale > i9)) {
					continue
				}
				var i = ja[e].spot || this._getSpotDataFromLabel(ja[e]);
				if (i) {
					this._spotData.push(i)
				}
			}
		},
		_getSpotDataFromLabel: function(T) {
			var jb = this.map;
			if (!T.bds) {
				return null
			}
			var e = T.bds.slice(0);
			var i9 = null;
			if (T.iconPos) {
				i9 = new cd(T.pt.lng, T.pt.lat)
			}
			var i = T.name ? T.name.replace("\\\\", "<br>") : "";
			if (T.iconPos && T.iconPos.iconType.indexOf("ditie") > -1 && jb.getZoom() > 14) {
				i = ""
			}
			var ja = {
				n: i,
				pt: new cd(T.pt.lng, T.pt.lat),
				userdata: {
					iconPoint: i9,
					uid: T.guid,
					name: i,
					mapPoi: true,
					type: T.iconPos ? T.iconPos.iconType : "",
					rank: T.rank,
					zoom: T.zoom,
					tilePosStr: T.tilePosStr
				},
				bd: e,
				tag: "MAP_SPOT_INFO"
			};
			T.spot = ja;
			return ja
		},
		drawLabelsOnCanvas: function(i, e) {
			if (this._labelTextCanvas) {
				this._labelTextCanvas.drawLabelsOnCanvas(i, e)
			}
		}
	});

	function h6(e) {
		this._map = e;
		this.virtualTile = {
			custom: true,
			label: {
				fixedLabel: [],
				indoorLabel: [],
				lineLabel: [],
				textureHeights: [],
				status: "ready"
			},
			tileInfo: {
				col: 0,
				row: 0,
				zoom: 0,
				useZoom: 0,
				loopOffsetX: 0
			},
			status: "ready"
		};
		this.virtualTile.label.tileInfo = this.virtualTile.tileInfo;
		this.init()
	}
	h6.prototype.init = function() {
		var T = this._map;
		var i = this;

		function e() {
			i.updateLabels()
		}
		T.addEventListener("add_tile_labels", e);
		T.addEventListener("onremove_tile_labels", e);
		T.addEventListener("onclear_labels", e)
	};
	h6.prototype.updateLabels = function() {
		var i = this._map.tileMgr.getLabelTextCanvas();
		var T = this._map;
		var e = this;
		i.drawCustomLabelsOnCanvas(T._customTileLabels, function(ja) {
			var i9 = e.virtualTile;
			if (ja) {
				i9.label.textureHeights[0] = [ja.height]
			}
			i9.label.fixedLabel = T._customTileLabels;
			var jb = new e7("oncustom_labels_ready");
			jb.virtualTile = i9;
			jb.labelCanvas = ja;
			jb.imgKey = bo.getGUID("custom_labels_");
			T.dispatchEvent(jb)
		})
	};
	bo.register(function(e) {
		e._customLabelMgr = new h6(e)
	});
	var ft = function(jr, jq) {
		var jp = {
			"\x63\x65\x61\x6c\x69": function(js, T) {
				return js < T
			},
			"\x63\x68\x65\x61\x68": function(T, js) {
				return T(js)
			},
			"\x63\x68\x69\x68\x69": function(js, T) {
				return js + T
			},
			"\x61\x61\x63\x61\x65": "\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72",
			"\x64\x65\x69\x61\x61": "\x31\x2e\x31\x2e\x32",
			"\x64\x6c\x61\x64\x6c": "\x43\x68\x61\x72",
			"\x65\x64\x65\x6d\x63": function(js, T) {
				return js + T
			},
			"\x69\x69\x65\x64\x6c": function(jt, js, T) {
				return jt(js, T)
			}
		};
		var jl = jp["\x64\x65\x69\x61\x61"];

		function jj(jw, ju) {
			var T = jw["\x6c\x65\x6e\x67\x74\x68"];
			var jv = [];
			for (var jt = 0; jp["\x63\x65\x61\x6c\x69"](jt, T); jt++) {
				var js = jp["\x63\x68\x65\x61\x68"](ju, jw[jt]);
				jv["\x70\x75\x73\x68"](js)
			}
			return jv
		}
		var jo, jn, jm, jk, ji, jh = decodeURIComponent,
			jg = jp["\x64\x6c\x61\x64\x6c"],
			jf = "";
		var je = [ft];
		jo = "\x64\x65";
		jn = "\x66\x72";
		jm = "\x6f";
		ji = jp["\x65\x64\x65\x6d\x63"](jn + jm, "\x6d");
		jk = "\x43\x6f" + jo;
		var jd = function(T) {
			return jp["\x63\x68\x69\x68\x69"](T, jf)[jp["\x61\x61\x63\x61\x65"]][ji + jg + jk](T)
		};
		var jc = function(T) {
			return jj(T, function(js) {
				return jd(js)
			})
		};
		var jb = jc["\x63\x61\x6c\x6c"](jd, [39, 34, 37, 96, 60, 120, 97, 65, 98, 66, 99, 67, 100, 68, 101, 69, 102, 70, 103, 110, 109, 111, 112, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);
		var ja = jp["\x69\x69\x65\x64\x6c"](jj, [28782, 27702, 26416, 25167, 24183], function(T) {
			return jh(T)
		});
		var i9 = jc["\x63\x61\x6c\x6c"](ja, [22354, 22749, 24415, 23346, 22257, 22688, 24306, 25174, 23595, 25547, 22984, 25690, 22212, 27547, 21594, 27210, 23090, 29193, 22394, 29368, 29532, 29459, 29530, 24146, 24500, 26352, 27441, 28788, 29370, 27673, 26925, 25249, 24430]),
			i = {};
		ja = jc(ja);
		var e = new RegExp(ja["\x6a\x6f\x69\x6e"]("\x7c"));
		for (var jo = 0; jo < jb["\x6c\x65\x6e\x67\x74\x68"]; jo++) {
			i[i9[jo]] = jb[jo]
		}
		jq = jj(jq["\x73\x70\x6c\x69\x74"](jf), function(T) {
			return i[T] || T
		})["\x6a\x6f\x69\x6e"](jf);
		return jj(jq["\x73\x70\x6c\x69\x74"](e), function(T) {
			return jh(T)
		})
	}(this, "\x77\u545a\u5c2b\x6b\x69\x74\x55\x52\x4c\u706e\u59c8\u5ef2\x6c\u58a0\u56c4\u706e\u735c\x68\x68\u58a0\u5ef2\u6730\x69\u735c\u735a\u7313\x72\x74\x53\u59c8\x72\x69\u735a\x74\x73\x28\u5f5f\u66f0\u66f0\u6730\u545a\x6c\u5ef2\x6c\x68\u706e\u63cb\x6c\u7313\u5c2b\u63cb\x75\x69\x6c\u56c4\u545a\x72\u5e77\x57\u545a\u5c2b\x4b\x69\x74\u63cb\x6c\u7313\u5c2b\u63cb\x75\x69\x6c\u56c4\u545a\x72\u5e77\x4d\u7313\x7a\u63cb\x6c\u7313\u5c2b\u63cb\x75\x69\x6c\u56c4\u545a\x72\u5e77\u58a0\u735c\u59c8\x6c\x68\u6730\u577a\u545a\x74\u63cb\x6c\u7313\u5c2b\u706e\u5ef2\u58a0\x68\u545a\u545a\u706e\u545a\x68\x6c\u6c36\x69\x68\x69\u5ef2\u6730\x69\x6c\u735c\u706e\u56c4\u59c8\u5ef2\u6730\u58a0\u58a0\u59c8\u5e77\u545a\u545a\x68\u624f\u545a\u59c8\u545a\u59c8\u5e77\x6c\x6c\u545a\u706e\u545a\x68\u545a\u6c36\u56c4\u735c\u5ef2\u706e\u58a0\u735c\u545a\x6c\u624f\u545a\u58a0\x69\u6730\x69\u5ef2\u545a\u6730\u5ef2\x68\x69\u624f\x73\x74\x72\x69\u72b8\u577a\u6c36\u545a\u545a\u545a\u6c36\u5ef2\u59c8\x68\x69\u624f\x6c\u59c8\u58a0\u624f\u545a\u735c\x6c\u6730\x69\x68\x6c\u6730\u545a\u735c\u735c\u624f\u56c4\u58a0\x6c\u624f\u545a\x68\u59c8\u6c36\u5ef2\u545a\u59c8\u6c36\u735c\x68\u58a0\u706e\x69\x68\u545a\u6730\x69\x6c\x69\u6c36\u58a0\u56c4\u735c\u545a\u624f\u5ef2\x72\x72\x57\u7313\x72\x6b\u545a\x72\u624f\u545a\u5ef2\u59c8\u6c36\u56c4\u56c4\u545a\x6c\u735c\u624f\u545a\u5ef2\u545a\u735c\u59c8\u6730\u5ef2\x72\x72\x50\u545a\u72b8\u56c4\x69\u72b8\u577a\u6b9b\u5ef2\x74\u5ef2\u6730\u545a\u5ef2\u5ef2\u58a0\u545a\u6c36\x68\x68\u545a\u56c4\u58a0\u6c36\x72\u5ef2\x74\x69\u7313\u6c36\u5ef2\u545a\u56c4\x6c\x69\u624f\u5ef2\u56c4\u5ef2\u5ef2\u59c8\u6730\u58a0\u735c\u545a\u5ef2\x6c\u6730\u5ef2\u545a\x6c\u735c\u5ef2\u624f\x68\u5ef2\u5ef2\u6730\x6c\u545a\u56c4\u735c\u5ef2\u6730\x6c\u5ef2\u58a0\u545a\u735c\u624f\u545a\x6c\u56c4\x6c\u545a\u5e77\x6c\u735c\u735c\u545a\u706e\x68\u545a\x68\u6c36\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\u645a\x75\x73\x74\u7313\u735c\x53\x74\x79\x6c\u545a\x49\u72b8\u5a32\u7313\u624f\x6c\u5ef2\u5ef2\u58a0\u5ef2\u5e77\u735c\u5ef2\u545a\u706e\u545a\u58a0\x68\x6c\u735c\u6c36\u59c8\u7313\u72b8\u5a32\x69\u577a\u706e\x73\x74\x79\x6c\u545a\u6c36\x68\u5ef2\u545a\u706e\x6c\u545a\u72b8\u577a\x74\x68\u6730\x68\u5ef2\x6c\u58a0\u59c8\u624f\x69\x73\x53\u545a\u72b8\u56c4\u7209\x53\u6c36\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\u645a\x75\x73\x74\u7313\u735c\x53\x74\x79\x6c\u545a\x49\u72b8\u5a32\u7313\x5a\u7313\u7313\u735c\u624f\x74\u545a\u58a0\x74\x53\x69\x7a\u545a\x52\u5ef2\x74\x69\u7313\u624f\u545a\u59c8\u59c8\u6c36\x6c\u735c\u59c8\u706e\u735c\u5ef2\u735a\u5e77\u5ef2\u735c\u545a\u5e77\u59c8\u5ef2\u72b8\x55\x73\u545a\x57\u545a\u5c2b\u6256\x73\x73\u545a\u735c\u5c2b\x6c\x79\u6730\u56c4\u58a0\u58a0\x69\u545a\u624f\u545a\u5ef2\u545a\x69\u545a\u706e\u545a\u545a\u59c8\x69\u735c\u6c36\u5ef2\x68\u59c8\x68\u545a\u5e77\x68\u58a0\x68\u545a\x6c\u6c36\u5ef2\x6c\u56c4\x68\u59c8\u6730\u58a0\u735c\u59c8\u59c8\u735c\u6c36\u58a0\u545a\u5ef2\u735c\u5ef2\u6730\x73\x68\x69\u5a32\x74\u5e77\x6c\u7313\u5ef2\u56c4\x54\x69\x6c\u545a\u6b9b\u5ef2\x74\u5ef2\u706e\x75\x72\x6c\u6c36\x74\x69\x6c\u545a\x49\u72b8\u5a32\u7313\u706e\u59c8\u5c2b\x6b\u5e77\x69\u5ef2\x6c\u59c8\x69\u6c36\u7313\u72b8\u735c\u545a\x73\x73\u5ef2\u577a\u545a\u6730\u5ef2\x69\u545a\u624f\u545a\u735c\u59c8\u545a\u5ef2\u5e77\u58a0\u59c8\u56c4\u6c36\u5a32\x69\x72\u545a\u6730\x5f\u735a\u5ef2\x72\x73\x69\u72b8\u577a\x54\x69\x6c\u545a\x49\u72b8\u5a32\u7313\u5e77\x6c\x68\u545a\u624f\u56c4\u5ef2\x74\u5ef2\u706e\u545a\u735c\u58a0\u545a\x69\u706e\x69\u5ef2\u56c4\u6730\x6c\u56c4\u545a\u624f\x5f\u59c8\u5c2b\x6b\u6c36\x5f\u735a\u5ef2\x72\x73\x69\u72b8\u577a\x54\x69\x6c\u545a\x4b\u545a\x79\u706e\u56c4\u59c8\x6c\u6c36\u545a\u5ef2\x68\u59c8\u545a\u5e77\u56c4\u545a\u56c4\u6c36\u58a0\u5ef2\x69\u5ef2\u59c8\u706e\u56c4\u735c\u545a\u56c4\u5ef2\u5e77\u545a\u5ef2\x6c\x68\u545a\u6730\x68\u545a\u5ef2\u6730\x74\x69\x6c\u545a\x4b\u545a\x79\u624f\x73\u7313\x75\x72\u59c8\u545a\u706e\x77\u7313\x72\x6b\u545a\x72\u735c\u577a\x72\u6730\x68\u56c4\u5ef2\x69\u59c8\u5e77\u5ef2\u545a\u735c\u545a\u56c4\u624f\u59c8\u56c4\u59c8\u56c4\u5ef2\u624f\x69\x69\u545a\u6c36\u735a\x75\x73\x68\u624f\u735c\x69\x68\x69\u56c4\u5e77\x6c\u545a\x6c\u5e77\u545a\u59c8\u58a0\u545a\u58a0\u6c36\u735c\x68\x68\x6c\u735c\u624f\u545a\u545a\u545a\u58a0\x6c\u6c36\u59c8\u735c\u545a\x68\u545a\u6730\u56c4\u5ef2\x69\u5ef2\u5ef2\u706e\u545a\u545a\u545a\u59c8\u545a\u6c36\u545a\x69\u58a0\u545a\u545a\u706e\u59c8\u58a0\u58a0\u624f\x6c\u545a\u735c\x69\x69\u624f\x68\u5ef2\x72\u56c4\x77\u5ef2\x72\u545a\u645a\u7313\u72b8\u59c8\x75\x72\x72\u545a\u72b8\u59c8\x79\u706e\u56c4\u545a\x73\x74\x72\u7313\x79\u6c36\x74\u545a\x72\u735c\x69\u72b8\u5ef2\x74\u545a\u706e\u56c4\x6c\u5ef2\u545a\x69\u706e\x68\u545a\u59c8\u545a\x69\u6c36\u58a0\x68\u545a\u59c8\u59c8\u6730\u545a\x69\u5ef2\x68\x68\u5e77\x77\u7313\x72\u56c4\x53\u735a\u5ef2\u59c8\u545a\x52\u5ef2\x74\x69\u7313\u5e77\u545a\u5ef2\x68\x69\x69\u624f\u56c4\x6c\u58a0\u59c8\u5ef2\u624f\u63cb\x72\u7313\x77\x73\u545a\x72\u6c36\u56c4\u735c\u59c8\u735c\x6c\u624f\x68\u545a\u5ef2\u545a\u735c\u6c36\u58a0\u545a\u56c4\u5e77\u735c\u56c4\u545a\u56c4\u5e77\x6c\x6c\x68\u706e\x6c\x68\u59c8\u706e\u545a\u56c4\x69\x6c\u5ef2\u706e\x69\u56c4\u58a0\x6c\u5ef2\u6730\x5f\x69\x73\u63cb\x75\x73\x79\u5e77\u59c8\x69\x69\u6730\u56c4\u56c4\x68\u735c\u59c8\u6c36\x74\x69\x6c\u545a\x54\x79\u735a\u545a\x4e\u5ef2\u735c\u545a\u5e77\x69\u545a\u59c8\u56c4\u5ef2\u6730\x68\u735c\x6c\u735c\x6c\u6c36\u5ef2\x69\x6c\u735c\u545a\u624f\u59c8\u7313\x6c\u706e\x73\u735a\x6c\x69\u59c8\u545a\u6c36\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\x49\u59c8\u7313\u72b8\x53\u545a\x74\x49\u72b8\u5a32\u7313\u5e77\u545a\u5ef2\u58a0\u5e77\u5ef2\u58a0\u545a\u5e77\u59c8\x75\x73\x74\u7313\u735c\x53\x74\x79\x6c\u545a\x49\u72b8\u5a32\u7313\x5f\u6c36\u5ef2\u59c8\u735c\u5e77\u5ef2\u58a0\u59c8\u6730\u735c\u56c4\u59c8\u624f\x68\x69\u735c\u5e77\u735c\u735c\u545a\u6730\u545a\u545a\u5ef2\u6c36\u56c4\u735c\x68\u5e77\u735c\u545a\u58a0\u5ef2\u706e\u735c\x6c\x6c\u5e77\u5ef2\u58a0\x6c\u5e77\u645a\x75\x73\x74\u7313\u735c\u6c36\u58a0\x69\u59c8\u6730\u58a0\u545a\u545a\u6c36\u577a\u545a\x74\x49\u56c4\x6c\u545a\x57\u7313\x72\x6b\u545a\x72\u6c36\x5f\u56c4\x69\x73\u735a\x6c\u5ef2\x79\x4f\u735a\x74\x69\u7313\u72b8\x73\u5e77\u735a\u7313\x69\u6c36\u735a\u7313\x69\x54\u545a\u58a0\x74\u706e\x69\u5ef2\x68\u624f\u59c8\u56c4\u5ef2\u624f\u59c8\u5ef2\u59c8\u5ef2\u5ef2\u5e77\x69\u72b8\u56c4\u545a\u58a0\x4f\u5a32\u624f\x69\u545a\u545a\u56c4\u59c8\u6c36\u5ef2\u58a0\u5ef2\u5e77\u577a\u545a\x74\x4d\u5ef2\u735a\x53\x74\x79\x6c\u545a\x49\u56c4\u5e77\u58a0\x68\u545a\u624f\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\u7209\u545a\u5ef2\x74\x75\x72\u545a\x53\x74\x79\x6c\u545a\u6730\u7209\u545a\u5ef2\x74\x75\x72\u545a\x53\x74\x79\x6c\u545a\u706e\x6c\u58a0\x69\u5e77\x69\u56c4\u56c4\u6730\x68\u735c\u59c8\x68\u5ef2\u6730\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x79\u6c36\x69\u59c8\u7313\u72b8\x53\u545a\x74\x49\u72b8\u5a32\u7313\u6c36\u5ef2\x69\x6c\u5e77\u5ef2\u545a\u545a\u5ef2\u545a\u6730\u5ef2\u735c\u545a\u59c8\u545a\u706e\x6c\u545a\u545a\u6c36\x68\x69\u59c8\u6c36\x6c\u735c\x68\u735c\u545a\u6c36\u545a\x68\u545a\u5ef2\x68\u706e\u59c8\x69\u5ef2\u5ef2\u59c8\u6c36\x69\u59c8\u7313\u72b8\x49\u72b8\u5a32\u7313\u6c36\x68\u58a0\x69\u545a\u5ef2\u624f\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\x49\u72b8\u56c4\u7313\u7313\x72\x53\x74\x79\x6c\u545a\u6730\u545a\u59c8\x6c\u706e\u59c8\u5ef2\x68\u56c4\u735c\u5e77\x69\u72b8\u56c4\u7313\u7313\x72\x53\x74\x79\x6c\u545a\u6730\x68\u5ef2\u59c8\u624f\x69\x69\u59c8\u545a\u59c8\u706e\u58a0\u59c8\u5ef2\x69\u5ef2\u5e77\u56c4\u5ef2\x68\u6730\x6c\u5ef2\u56c4\x6c\u545a\u706e\u5ef2\u5ef2\x68\u5ef2\u5ef2\u6730\x68\u735c\u545a\u59c8\u735c\u6c36\u58a0\u545a\u735c\u5ef2\u545a\u5e77\x69\u56c4\x68\x69\u545a\u624f\u545a\x69\x6c\u59c8\x68\u624f\u59c8\u545a\u56c4\x69\u545a\u6730\u735a\u7313\x73\x74\x4d\u545a\x73\x73\u5ef2\u577a\u545a\u706e\x6c\u58a0\u735c\u59c8\u59c8\u5e77\x69\u5ef2\u56c4\u59c8\x69\u6730\u545a\u59c8\u5ef2\u735c\x69\u706e\u5a32\u545a\u5ef2\x74\x75\x72\u545a\x53\x74\x79\x6c\u545a\u6c36\u59c8\u5ef2\u5ef2\u59c8\x68\u706e\u735c\u5ef2\u735a\x53\x74\x79\x6c\u545a\x49\u56c4\u706e\u5ef2\u58a0\u735c\u5e77\u735c\x6c\u5ef2\u59c8\u59c8\u6c36\u59c8\x6c\u545a\u545a\u5ef2\u6c36\x6c\x69\x6c\u59c8\x6c\u706e\u59c8\u5ef2\u58a0\x69\x68\u6c36\x6c\u735c\x69\u59c8\u58a0\u5e77\x68\x69\x6c\u545a\x6c\u6c36\u545a\u58a0\x74\u545a\u72b8\u56c4\u706e\u735a\x72\u7313\x74\u7313\x74\x79\u735a\u545a\u5e77\u5ef2\u735c\x6c\x6c\u624f\x68\u5ef2\x68\u624f\u545a\u5ef2\x6c\u6730\u58a0\u58a0\u5ef2\u59c8\u545a\u6730\u735c\u735c\x68\u56c4\u56c4\u624f\u545a\u56c4\u545a\u6730\x69\u72b8\x4d\u5ef2\u735a\x48\u7313\x73\x74\u6c36\u7313\u72b8\u545a\x72\x72\u7313\x72\u6c36\u735a\x72\u545a\x76\u545a\u72b8\x74\u6b9b\u545a\u5a32\u5ef2\x75\x6c\x74\u5e77\u735c\u56c4\x68\u545a\u58a0\u624f\u58a0\u545a\u5ef2\u6730\x68\u545a\x69\u5e77\u5ef2\u59c8\u5ef2\u735c\u6c36\u56c4\u5ef2\u5ef2\u6730\u5f5f\u66f0\u66f0\x29\u5f5f\u6b31\u63cb\u706e\u5ef2\u735a\u735a\x6c\x69\u59c8\u5ef2\x74\x69\u7313\u72b8\u5f5f\u66f0\u7209\x6a\u5ef2\x76\u5ef2\x73\u59c8\x72\x69\u735a\x74\u6c36\u5ef2\u5ef2\u5ef2\u56c4\u58a0\u6730\u545a\u59c8\u59c8\x69\u6730\u5ef2\x68\u59c8\x6c\u58a0\u6730\x69\u58a0\u735c\x68\u58a0\u6730\x69\x6c\u545a\u5e77\u5ef2\u58a0\u56c4\x69\u545a\u624f\u545a\u735c\u5ef2\u6c36\u56c4\x69\u545a\u5e77\u59c8\x72\u545a\u5ef2\x74\u545a\x4f\u5c2b\x6a\u545a\u59c8\x74\x55\x52\x4c\u5e77\u56c4\u5ef2\u545a\u5e77\x55\x52\x4c");
	(function(T, i) {
		var e = function(i9) {
			while (--i9) {
				T.push(T.shift())
			}
		};
		e(++i)
	}(ft, 232));
	var fs = function(T, i) {
		T = T - 0;
		var e = ft[T];
		return e
	};

	function iK(i9) {
		var T = {
			"\x78\x78\x61\x63\x65": function(jc, jb) {
				return jc !== jb
			},
			"\x6d\x6d\x68\x64\x64": fs("0x0"),
			"\x65\x78\x69\x6c\x65": function(jc, jb) {
				return jc(jb)
			},
			"\x6d\x64\x68\x65\x78": fs("0x1")
		};
		var i = fs("0x2");
		while (T[fs("0x3")](i, T[fs("0x4")])) {
			switch (i) {
				case fs("0x1"):
					return e;
				case fs("0x2"):
					var e = null;
					i = fs("0x5");
					break;
				case fs("0x5"):
					try {
						if (aA[fs("0x6")]) {
							e = new Worker(i9);
							e[fs("0x7")] = function(jb) {
								jb[fs("0x8")]();
								e = fQ(i9)
							}
						} else {
							e = fQ(i9)
						}
					} catch (ja) {
						e = T["\x65\x78\x69\x6c\x65"](fQ, i9)
					}
					i = T[fs("0x9")];
					break
			}
		}
	}

	function fQ(ja) {
		var T = {
			"\x61\x61\x61\x64\x78": "\x61\x63\x6c",
			"\x61\x68\x63\x6c\x78": fs("0xa"),
			"\x69\x78\x6d\x68\x78": fs("0xb"),
			"\x61\x78\x64\x69\x65": function(ji, jh) {
				return ji !== jh
			},
			"\x6c\x78\x69\x78\x61": fs("0xc"),
			"\x63\x61\x6c\x78\x64": fs("0xd"),
			"\x6d\x68\x68\x78\x61": function(ji, jh) {
				return ji + jh
			},
			"\x78\x6d\x63\x6c\x68": function(ji, jh) {
				return ji + jh
			},
			"\x65\x6c\x61\x6c\x68": fs("0xe"),
			"\x61\x78\x68\x65\x65": fs("0xf")
		};
		var je = T[fs("0x10")];
		while (je !== fs("0x11")) {
			switch (je) {
				case T[fs("0x12")]:
					return jd;
				case T[fs("0x10")]:
					var jd = null;
					je = fs("0xb");
					break;
				case T[fs("0x13")]:
					try {
						var jc = fs("0x14");
						while (T[fs("0x15")](jc, T["\x6c\x78\x69\x78\x61"])) {
							switch (jc) {
								case fs("0x16"):
									jd = new Worker(jb);
									jc = fs("0xc");
									break;
								case fs("0x17"):
									var jb = i9[fs("0x18")](i);
									jc = fs("0x16");
									break;
								case fs("0x19"):
									var i9 = window[fs("0x1a")] || window[fs("0x1b")];
									jc = "\x64\x69\x65";
									break;
								case fs("0x14"):
									var i;
									jc = T[fs("0x1c")];
									break;
								case "\x64\x61\x61":
									try {
										i = new Blob([T[fs("0x1d")](T["\x78\x6d\x63\x6c\x68"](fs("0x1e"), ja), T[fs("0x1f")])], {
											type: fs("0xf")
										})
									} catch (e) {
										var jg = new(window[(fs("0x20"))] || window[(fs("0x21"))] || window[(fs("0x22"))])();
										jg["\x61\x70\x70\x65\x6e\x64"](T[fs("0x23")](fs("0x1e"), ja) + fs("0xe"));
										i = jg[fs("0x24")](T[fs("0x25")])
									}
									jc = fs("0x19");
									break
							}
						}
					} catch (jf) {}
					je = T[fs("0x12")];
					break
			}
		}
	}

	function iv(e) {
		this["\x69\x6e\x69\x74"](e)
	}
	var gl = {
		"\x69\x6e\x69\x74": function(ja) {
			var i9 = {
				"\x6c\x61\x78\x65\x6d": "\x68\x61\x65",
				"\x65\x6c\x64\x6c\x65": function(jc, jb) {
					return jc !== jb
				},
				"\x6c\x61\x61\x78\x61": fs("0x26"),
				"\x65\x78\x68\x6c\x6d": function(jb, jc) {
					return jb !== jc
				},
				"\x68\x61\x6c\x78\x63": function(jc, jb) {
					return jc < jb
				},
				"\x65\x6d\x63\x65\x61": fs("0x27"),
				"\x65\x6d\x78\x65\x69": "\x6c\x64\x65",
				"\x64\x6d\x65\x64\x61": fs("0x28"),
				"\x61\x6c\x64\x68\x63": "\x64\x61\x65",
				"\x65\x61\x68\x63\x65": fs("0x29"),
				"\x78\x61\x69\x61\x63": fs("0x2a"),
				"\x65\x61\x6c\x68\x65": "\x6f\x6e\x72\x65\x66\x72\x65\x73\x68",
				"\x68\x64\x61\x69\x63": fs("0x2b"),
				"\x78\x6d\x63\x63\x6d": fs("0x2c"),
				"\x64\x78\x78\x69\x65": fs("0x2d"),
				"\x65\x61\x65\x69\x65": fs("0x2e"),
				"\x65\x65\x63\x69\x6d": fs("0x2f"),
				"\x61\x68\x63\x68\x65": "\x68\x65\x69",
				"\x68\x78\x68\x65\x6c": "\x78\x68\x64",
				"\x68\x68\x65\x64\x78": function(jc, jb) {
					return jc > jb
				},
				"\x78\x65\x61\x6d\x61": (window.location.protocol === "http:" ? "http:" : "https:") + "//api.map.baidu.com/res/webgl/10/worker_asm_0nl4rd.js",
				"\x69\x61\x6c\x63\x69": fs("0x30"),
				"\x61\x65\x6d\x65\x64": "\x69\x69\x65",
				"\x63\x64\x63\x64\x61": fs("0x31"),
				"\x6d\x69\x68\x69\x64": fs("0x32"),
				"\x65\x65\x65\x78\x6c": fs("0x33"),
				"\x63\x6d\x65\x68\x65": fs("0x34"),
				"\x64\x61\x69\x61\x61": fs("0x35"),
				"\x65\x65\x65\x63\x65": fs("0x36"),
				"\x65\x69\x64\x61\x78": "\x65\x61\x63",
				"\x65\x69\x78\x65\x65": fs("0x37"),
				"\x64\x6d\x63\x6d\x6c": fs("0x38"),
				"\x64\x64\x65\x6c\x6d": fs("0x39"),
				"\x65\x61\x65\x6d\x63": fs("0x3a"),
				"\x6c\x65\x6d\x69\x69": fs("0x3b"),
				"\x65\x61\x61\x78\x65": fs("0x3c"),
				"\x61\x65\x64\x6c\x69": "\x69\x61\x61",
				"\x61\x64\x61\x61\x63": "\x6d\x78\x78",
				"\x78\x6d\x65\x61\x6c": fs("0x3d"),
				"\x61\x65\x6c\x6d\x61": function(jb) {
					return jb()
				},
				"\x6c\x65\x64\x6d\x61": "\x6f\x6e\x73\x74\x79\x6c\x65\x5f\x6c\x6f\x61\x64\x65\x64",
				"\x65\x63\x78\x65\x78": fs("0x3e"),
				"\x6d\x68\x68\x6c\x6d": "\x6f\x6e\x73\x74\x79\x6c\x65\x7a\x6f\x6f\x6d\x75\x70\x64\x61\x74\x65",
				"\x64\x6c\x61\x65\x69": "\x78\x64\x6d\x65",
				"\x68\x65\x63\x65\x69": function(jc, jb) {
					return jc === jb
				},
				"\x78\x68\x65\x63\x63": "\x61\x6d\x65",
				"\x65\x69\x61\x68\x68": "\x68\x61\x61",
				"\x65\x61\x68\x69\x69": fs("0x3f"),
				"\x64\x6c\x78\x63\x61": function(jb) {
					return jb()
				},
				"\x6c\x65\x65\x61\x61": fs("0x40"),
				"\x68\x65\x61\x65\x6d": "\x64\x78\x68"
			};
			var i = "\x64\x78\x68";
			while (i !== fs("0x41")) {
				switch (i) {
					case i9["\x64\x6d\x63\x6d\x6c"]:
						this[fs("0x42")] = [];
						i = fs("0x3d");
						break;
					case fs("0x43"):
						this["\x73\x74\x72\x69\x6e\x67\x69\x66\x69\x65\x64\x43\x75\x73\x74\x6f\x6d\x53\x74\x79\x6c\x65\x49\x6e\x66\x6f\x5a\x6f\x6f\x6d"] = [];
						i = i9[fs("0x44")];
						break;
					case i9[fs("0x45")]:
						this[fs("0x46")] = [];
						i = i9["\x6c\x65\x6d\x69\x69"];
						break;
					case i9[fs("0x47")]:
						i = i9[fs("0x48")](this[fs("0x49")], 1) ? i9[fs("0x4a")] : i9[fs("0x4b")];
						break;
					case i9[fs("0x4c")]:
						this[fs("0x49")] = i9[fs("0x4d")](fz);
						i = fs("0x4e");
						break;
					case "\x6c\x65\x6c":
						ja["\x6f\x6e"](i9[fs("0x4f")], function() {
							var jb = i9[fs("0x50")];
							while (i9[fs("0x51")](jb, fs("0x52"))) {
								switch (jb) {
									case fs("0x53"):
										e[fs("0x54")] = null;
										jb = i9[fs("0x55")];
										break;
									case fs("0x56"):
										if (i9[fs("0x57")](typeof this[fs("0x58")][fs("0x59")], "\x73\x74\x72\x69\x6e\x67")) {
											jb = fs("0x53");
											break
										}
										jb = fs("0x52");
										break;
									case fs("0x5a"):
										for (var jd = 0, jc = e[fs("0x42")][fs("0x5b")]; i9[fs("0x5c")](jd, jc); jd++) {
											e[fs("0x42")][jd][fs("0x5d")] = ![]
										}
										jb = fs("0x56");
										break;
									case i9[fs("0x55")]:
										e[fs("0x5e")] = [];
										jb = fs("0x52");
										break
								}
							}
						});
						i = fs("0x3e");
						break;
					case i9[fs("0x4b")]:
						this[fs("0x5f")] = 1;
						i = fs("0x60");
						break;
					case fs("0x61"):
						this[fs("0x62")] = ja;
						i = fs("0x3a");
						break;
					case fs("0x63"):
						this[fs("0x54")] = null;
						i = fs("0x43");
						break;
					case i9[fs("0x44")]:
						eW[fs("0x64")](function(jc) {
							var jf = fs("0x2d");
							while (jf !== i9["\x78\x6d\x63\x63\x6d"]) {
								switch (jf) {
									case i9[fs("0x65")]:
										var je;
										jf = fs("0x2e");
										break;
									case i9[fs("0x66")]:
										jf = jc ? i9[fs("0x67")] : i9[fs("0x68")];
										break;
									case i9[fs("0x69")]:
										if (i9[fs("0x48")](e["\x61\x72\x72\x50\x65\x6e\x64\x69\x6e\x67\x44\x61\x74\x61"][fs("0x5b")], 0)) {
											jf = i9[fs("0x6a")];
											break
										}
										jf = i9[fs("0x6b")];
										break;
									case i9[fs("0x68")]:
										je = i9[fs("0x6c")];
										jf = fs("0x32");
										break;
									case i9[fs("0x6a")]:
										for (var jd = 0; i9[fs("0x5c")](jd, Math["\x6d\x69\x6e"](e[fs("0x46")]["\x6c\x65\x6e\x67\x74\x68"], T)); jd++) {
											var jb = e[fs("0x46")][fs("0x6d")]();
											e[fs("0x6e")](jb[fs("0x6f")], jb[fs("0x70")], jb["\x74\x69\x6c\x65\x4b\x65\x79"], jb[fs("0x71")])
										}
										jf = fs("0x2c");
										break;
									case fs("0x32"):
										for (var jj = 0; i9[fs("0x5c")](jj, T); jj++) {
											var jh = fs("0x31");
											while (jh !== i9[fs("0x72")]) {
												switch (jh) {
													case fs("0x5"):
														ji[fs("0x73")] = function jg(jm) {
															var jl = fs("0x74");
															while (jl !== i9[fs("0x75")]) {
																switch (jl) {
																	case fs("0x19"):
																		this["\x5f\x69\x73\x42\x75\x73\x79"] = ![];
																		jl = fs("0x76");
																		break;
																	case fs("0x2b"):
																		ja[fs("0x77")](jn);
																		jl = i9[fs("0x75")];
																		break;
																	case fs("0x29"):
																		var jo = e[fs("0x46")][fs("0x6d")]();
																		jl = "\x69\x61\x64";
																		break;
																	case fs("0x2a"):
																		this[fs("0x78")] = null;
																		jl = fs("0x79");
																		break;
																	case "\x61\x69\x65":
																		jl = jm[fs("0x7a")] ? i9[fs("0x7b")] : i9["\x64\x6d\x65\x64\x61"];
																		break;
																	case fs("0x7c"):
																		var jk = jo[fs("0x71")];
																		jl = fs("0x5a");
																		break;
																	case fs("0x7d"):
																		this[fs("0x7e")] && this[fs("0x7e")](jm["\x64\x61\x74\x61"], this[fs("0x7f")]);
																		jl = i9[fs("0x6a")];
																		break;
																	case fs("0x80"):
																		if (e[fs("0x46")]["\x6c\x65\x6e\x67\x74\x68"] > 0) {
																			jl = i9[fs("0x81")];
																			break
																		}
																		jl = fs("0x82");
																		break;
																	case fs("0x76"):
																		this["\x5f\x63\x62\x6b"] = null;
																		jl = i9[fs("0x83")];
																		break;
																	case "\x6c\x68\x65":
																		this[fs("0x7f")] = null;
																		jl = "\x64\x63\x6c";
																		break;
																	case i9[fs("0x84")]:
																		this[fs("0x7e")] && this[fs("0x7e")](null, this[fs("0x7f")]);
																		jl = fs("0x19");
																		break;
																	case fs("0x82"):
																		var jn = new e7(i9[fs("0x85")]);
																		jl = fs("0x86");
																		break;
																	case "\x68\x61\x65":
																		e[fs("0x6e")](jo[fs("0x6f")], jo[fs("0x70")], jo[fs("0x87")], jk);
																		jl = fs("0x82");
																		break;
																	case fs("0x86"):
																		jn[fs("0x88")] = fs("0x89");
																		jl = i9[fs("0x8a")];
																		break
																}
															}
														};
														jh = i9[fs("0x8b")];
														break;
													case i9[fs("0x8c")]:
														var ji = iK(je);
														jh = fs("0x5");
														break;
													case fs("0x8d"):
														e[fs("0x42")][fs("0x8e")](ji);
														jh = fs("0x30");
														break
												}
											}
										}
										jf = i9[fs("0x69")];
										break;
									case i9[fs("0x67")]:
										je = (window.location.protocol === "http:" ? "http:" : "https:") + "//api.map.baidu.com/res/webgl/10/worker_wasm_4i3lbq.js";
										jf = i9[fs("0x8f")];
										break
								}
							}
						});
						i = fs("0x90");
						break;
					case i9[fs("0x91")]:
						ja["\x6f\x6e"](i9[fs("0x92")], function() {
							var jd = i9[fs("0x93")];
							while (jd !== fs("0x36")) {
								switch (jd) {
									case fs("0x43"):
										if (typeof this[fs("0x58")][fs("0x59")] !== i9[fs("0x94")]) {
											jd = i9[fs("0x95")];
											break
										}
										jd = i9[fs("0x96")];
										break;
									case fs("0x33"):
										for (var jc = 0, jb = e[fs("0x42")][fs("0x5b")]; i9[fs("0x5c")](jc, jb); jc++) {
											e["\x61\x72\x72\x57\x6f\x72\x6b\x65\x72"][jc][fs("0x5d")] = ![]
										}
										jd = i9["\x65\x69\x64\x61\x78"];
										break;
									case i9[fs("0x95")]:
										e["\x73\x74\x72\x69\x6e\x67\x69\x66\x69\x65\x64\x43\x75\x73\x74\x6f\x6d\x53\x74\x79\x6c\x65\x49\x6e\x66\x6f"] = null;
										jd = i9[fs("0x97")];
										break;
									case i9[fs("0x97")]:
										e[fs("0x5e")] = [];
										jd = fs("0x36");
										break
								}
							}
						});
						i = fs("0x98");
						break;
					case i9[fs("0x99")]:
						var T = navigator[fs("0x9a")] || 4;
						i = fs("0x3f");
						break;
					case fs("0x98"):
						ja["\x6f\x6e"](fs("0x9b"), function() {
							for (var jb = 0; jb < e[fs("0x42")][fs("0x5b")]; jb++) {
								if (e[fs("0x42")][jb]) {
									e["\x61\x72\x72\x57\x6f\x72\x6b\x65\x72"][jb][fs("0x9c")]()
								}
							}
							e[fs("0x42")][fs("0x5b")] = 0
						});
						i = i9[fs("0x9d")];
						break;
					case fs("0x60"):
						if (i9[fs("0x9e")](typeof this[fs("0x62")][fs("0x58")][fs("0x59")], fs("0x34"))) {
							i = i9[fs("0x9f")];
							break
						}
						i = i9[fs("0x44")];
						break;
					case i9[fs("0xa0")]:
						this[fs("0xa1")] = this[fs("0x49")];
						i = i9[fs("0x47")];
						break;
					case i9[fs("0xa2")]:
						if ((i9[fs("0xa3")](bJ) || es[fs("0xa4")]["\x69\x65"]) && i9[fs("0x48")](T, 2)) {
							i = i9["\x6c\x65\x65\x61\x61"];
							break
						}
						i = i9[fs("0xa5")];
						break;
					case i9[fs("0xa6")]:
						var e = this;
						i = fs("0x61");
						break;
					case fs("0x40"):
						T = 2;
						i = fs("0x38");
						break;
					case i9[fs("0x4a")]:
						this[fs("0x5f")] = 2;
						i = fs("0x60");
						break
				}
			}
		},
		"\x67\x65\x74\x49\x64\x6c\x65\x57\x6f\x72\x6b\x65\x72": function() {
			var e = {
				"\x78\x6c\x6d\x61\x65": fs("0xa7"),
				"\x65\x78\x63\x69\x78": function(jc, jb) {
					return jc !== jb
				},
				"\x65\x64\x69\x6c\x61": fs("0xa8"),
				"\x69\x64\x78\x6c\x61": fs("0xa9"),
				"\x64\x64\x68\x6d\x63": fs("0xaa")
			};
			for (var ja = 0, i9 = this[fs("0x42")][fs("0x5b")]; ja < i9; ja++) {
				var T = e["\x78\x6c\x6d\x61\x65"];
				while (e["\x65\x78\x63\x69\x78"](T, e[fs("0xab")])) {
					switch (T) {
						case fs("0xa7"):
							var i = this[fs("0x42")][ja];
							T = e[fs("0xac")];
							break;
						case "\x6c\x6c\x68":
							if (!i[fs("0xad")]) {
								T = "\x63\x69\x69";
								break
							}
							T = fs("0xa8");
							break;
						case fs("0xae"):
							i[fs("0xad")] = !![];
							T = e[fs("0xaf")];
							break;
						case e[fs("0xaf")]:
							return i
					}
				}
			}
			return null
		},
		"\x72\x65\x6c\x65\x61\x73\x65\x50\x65\x6e\x64\x69\x6e\x67\x44\x61\x74\x61": function(i) {
			var e = {
				"\x78\x65\x6c\x6c\x61": function(jf, je) {
					return jf !== je
				},
				"\x69\x65\x63\x64\x61": function(je, jf) {
					return je + jf
				},
				"\x68\x6d\x6c\x6d\x6c": function(jf, je) {
					return jf + je
				},
				"\x61\x69\x6c\x6d\x65": "\x69\x64\x5f"
			};
			var jd = [];
			var jb = this[fs("0x46")];
			for (var i9 = jb[fs("0x5b")] - 1; i9 >= 0; i9--) {
				var jc = jb[i9];
				var ja = jc[fs("0x70")];
				if (e["\x78\x65\x6c\x6c\x61"](i["\x74\x69\x6c\x65\x54\x79\x70\x65\x4e\x61\x6d\x65"], ja[fs("0xb0")])) {
					continue
				}
				var T = e[fs("0xb1")](e[fs("0xb1")](e[fs("0xb2")](e[fs("0xb3")] + ja[fs("0xb4")], "\x5f"), ja["\x72\x6f\x77"]) + "\x5f", ja["\x7a\x6f\x6f\x6d"]);
				if (!i[T]) {
					jb[fs("0xb5")](i9, 1);
					jd[fs("0x8e")](ja)
				}
			}
			return jd
		},
		"\x6c\x6f\x61\x64\x54\x69\x6c\x65\x44\x61\x74\x61": function(ja, i9, T, i) {
			var e = {
				"\x63\x61\x63\x61\x61": function(jl, jk) {
					return jl === jk
				},
				"\x69\x65\x65\x64\x63": "\x61\x78\x6d",
				"\x68\x6d\x63\x68\x61": function(jl, jk) {
					return jl + jk
				},
				"\x68\x69\x6c\x65\x6c": fs("0xb6"),
				"\x78\x65\x6d\x61\x65": fs("0xb7"),
				"\x61\x65\x65\x61\x65": fs("0xb8"),
				"\x63\x61\x68\x64\x6d": "\x68\x61\x63",
				"\x61\x6d\x65\x63\x65": fs("0xb9"),
				"\x6c\x6d\x68\x6d\x65": fs("0xba"),
				"\x65\x68\x65\x61\x68": fs("0xbb"),
				"\x63\x69\x61\x61\x63": fs("0xbc"),
				"\x68\x78\x69\x65\x61": "\x63\x61\x6d",
				"\x69\x69\x63\x65\x63": fs("0xbd"),
				"\x78\x63\x61\x69\x61": fs("0xbe"),
				"\x6c\x61\x64\x6c\x65": "\x68\x69\x63",
				"\x61\x61\x68\x61\x61": function(jl, jk) {
					return jl + jk
				},
				"\x68\x6d\x65\x63\x6d": fs("0xbf"),
				"\x69\x64\x68\x69\x65": fs("0x53"),
				"\x65\x69\x6c\x63\x68": fs("0x6e"),
				"\x63\x65\x64\x69\x65": fs("0xc0"),
				"\x6c\x78\x6d\x63\x63": fs("0xc1"),
				"\x69\x61\x64\x63\x69": fs("0xc2"),
				"\x65\x63\x61\x6d\x69": fs("0xc3"),
				"\x63\x61\x61\x63\x68": fs("0xc4"),
				"\x6d\x6c\x61\x63\x63": fs("0xc5"),
				"\x63\x6c\x65\x65\x61": "\x73\x74\x72\x69\x6e\x67\x69\x66\x69\x65\x64\x46\x65\x61\x74\x75\x72\x65\x53\x74\x79\x6c\x65",
				"\x6c\x69\x6c\x63\x6c": function(jl, jk) {
					return jl + jk
				},
				"\x63\x61\x78\x69\x68": fs("0x63"),
				"\x6c\x6d\x69\x63\x78": fs("0xc6")
			};
			var jj = this[fs("0xc7")]();
			var ji = this[fs("0x62")][fs("0xc8")][fs("0xc9")];
			var jh = ji ? this[fs("0x62")][fs("0xc8")][fs("0xca")] : ![];
			if (jj) {
				var jg = fs("0xcb");
				while (jg !== fs("0xc1")) {
					switch (jg) {
						case fs("0xcc"):
							var jf = !!e[fs("0xcd")](je[fs("0xce")]("\x63\x75\x73\x74\x6f\x6d"), 0);
							jg = e[fs("0xcf")];
							break;
						case fs("0xd0"):
							var je = this["\x6d\x61\x70"][fs("0xd1")]();
							jg = fs("0xcc");
							break;
						case fs("0xd2"):
							if (!this[fs("0xd3") + je] && bo[fs("0xd4") + je]) {
								jg = fs("0xd5");
								break
							}
							jg = fs("0xd6");
							break;
						case fs("0xbf"):
							this[e[fs("0xd7")](e["\x68\x69\x6c\x65\x6c"], jc)] = JSON[fs("0xd8")](bo[fs("0xd9") + jc]);
							jg = e["\x78\x65\x6d\x61\x65"];
							break;
						case fs("0xda"):
							if (jf && this[fs("0x54")]) {
								jg = fs("0xc0");
								break
							}
							jg = e[fs("0xdb")];
							break;
						case e["\x63\x61\x68\x64\x6d"]:
							if (jf && bo[e["\x68\x6d\x63\x68\x61"](e[fs("0xdc")], je)]) {
								jg = fs("0xdd");
								break
							}
							jg = fs("0xde");
							break;
						case "\x6d\x64\x63":
							if (!jj["\x69\x73\x53\x65\x6e\x64\x46\x53"]) {
								jg = fs("0xd2");
								break
							}
							jg = e[fs("0xdf")];
							break;
						case fs("0xc5"):
							if (jf) {
								jg = e[fs("0xe0")];
								break
							}
							jg = e[fs("0xe1")];
							break;
						case e[fs("0xdb")]:
							jd[fs("0xe2")] = {
								"\x77\x6f\x72\x64\x53\x70\x61\x63\x65\x52\x61\x74\x69\x6f": this[fs("0xa1")],
								"\x74\x65\x78\x74\x53\x69\x7a\x65\x52\x61\x74\x69\x6f": this[fs("0x5f")]
							};
							jg = e[fs("0xe3")];
							break;
						case "\x65\x61\x78":
							if (!this[fs("0xe4")]) {
								jg = fs("0xe5");
								break
							}
							jg = e[fs("0xe6")];
							break;
						case fs("0xe5"):
							this["\x73\x74\x72\x69\x6e\x67\x69\x66\x69\x65\x64\x49\x6e\x64\x6f\x6f\x72\x53\x74\x79\x6c\x65"] = JSON[fs("0xd8")](bo[fs("0xe7")]);
							jg = fs("0xe8");
							break;
						case e[fs("0xe9")]:
							jd[fs("0xe7")] = this[fs("0xe4")];
							jg = fs("0xda");
							break;
						case e[fs("0xea")]:
							jj[fs("0x5d")] = !![];
							jg = e[fs("0xdf")];
							break;
						case fs("0xdd"):
							if (!this[fs("0x54")]) {
								jg = fs("0xeb");
								break
							}
							jg = e[fs("0xec")];
							break;
						case fs("0xd6"):
							if (!this[e[fs("0xed")](fs("0xb6"), jc)]) {
								jg = e[fs("0xee")];
								break
							}
							jg = e[fs("0xef")];
							break;
						case e[fs("0xf0")]:
							var jd = {
								"\x61\x63\x74\x69\x6f\x6e": e[fs("0xf1")],
								"\x75\x72\x6c": ja,
								"\x74\x69\x6c\x65\x49\x6e\x66\x6f": i9,
								"\x74\x69\x6c\x65\x4b\x65\x79": T,
								"\x69\x73\x54\x65\x78\x74": jh,
								"\x69\x73\x50\x6f\x69": ji
							};
							jg = fs("0xd0");
							break;
						case e[fs("0xf2")]:
							jd["\x63\x75\x73\x74\x6f\x6d\x4d\x61\x70\x53\x74\x79\x6c\x65"] = this[fs("0x54")];
							jg = fs("0xb8");
							break;
						case "\x61\x63\x6d":
							jj[fs("0xf3")](jd);
							jg = e[fs("0xf4")];
							break;
						case fs("0xcb"):
							jj[fs("0x7e")] = i;
							jg = fs("0x63");
							break;
						case e[fs("0xf5")]:
							jj[fs("0x7f")] = T;
							jg = e[fs("0xf0")];
							break;
						case e[fs("0xf6")]:
							jd[fs("0xf7")] = this[e[fs("0xed")](fs("0xd3"), je)];
							jg = fs("0xc6");
							break;
						case fs("0xeb"):
							this[fs("0x54")] = JSON[fs("0xd8")](bo[e[fs("0xed")](fs("0xb9"), je)]);
							jg = e[fs("0xec")];
							break;
						case e[fs("0xe0")]:
							jc = e[fs("0xf8")];
							jg = e[fs("0xe1")];
							break;
						case e[fs("0xe3")]:
							jd[fs("0xf9")] = je;
							jg = e[fs("0xea")];
							break;
						case fs("0xfa"):
							var jc = je;
							jg = e[fs("0xfb")];
							break;
						case fs("0xd5"):
							this[e[fs("0xfc")] + je] = JSON[fs("0xd8")](bo[e[fs("0xfd")](fs("0xd4"), je)]);
							jg = fs("0xd6");
							break;
						case e[fs("0xfe")]:
							jj[fs("0x78")] = i9;
							jg = fs("0xc2");
							break;
						case e[fs("0xec")]:
							if (this[e[fs("0xfd")](e[fs("0xfc")], je)]) {
								jg = e[fs("0xf6")];
								break
							}
							jg = e[fs("0xff")];
							break;
						case e[fs("0xff")]:
							jd[fs("0xd9")] = this[e[fs("0xfd")](e[fs("0x100")], jc)];
							jg = e[fs("0xe9")];
							break
					}
				}
			} else {
				var jb = {
					"\x75\x72\x6c": ja,
					"\x74\x69\x6c\x65\x49\x6e\x66\x6f": i9,
					"\x74\x69\x6c\x65\x4b\x65\x79": T,
					"\x63\x62\x6b": i
				};
				this[fs("0x46")][fs("0x8e")](jb)
			}
		}
	};
	es[fs("0x101")](iv[fs("0x102")], gl);

	function hU(i) {
		this.tileLayers = [];
		this.map = i;
		var e = this.config = dO[this.map.mapType];
		this.errorUrl = e.errorUrl;
		this.tileSize = e.tileSize;
		this.baseUnits = e.baseUnits;
		this.baseZoomLevel = e.zoomLevelBase;
		this.tileURLs = e.tileUrls;
		this.tilesInfoCache = {};
		this.loadDelay = 10;
		this._labelTextCanvas = null
	}
	bo.register(function(i) {
		if (i._renderType !== "webgl") {
			return
		}
		var e = i.tileMgr = new hU(i);
		i.addEventListener("addtilelayer", function(i9) {
			e.addWebGLLayer(i9.target)
		});
		i.addEventListener("removetilelayer", function(i9) {
			e.removeWebGLLayer(i9.target)
		});
		i.on("update", function T(ja) {
			if (i.getFeatureStyleTags()
				.length === 0 || !i.customLoaded) {
				return
			}
			var i9 = false;
			if (ja.changedStatus && ja.changedStatus.onzoom_changed) {
				i9 = true
			}
			e.loadLayersData({
				zoomChanged: i9
			})
		});
		i.on("style_changed", function() {
			e.loadLayersData()
		})
	});
	es.extend(hU.prototype, {
		addWebGLLayer: function(T) {
			this.tileLayers.push(T);
			T.initDrawData();
			if (this.tileLayers.length > 1) {
				for (var e = 1; e < this.tileLayers.length; e++) {
					if (this.tileLayers[e].isFlat) {
						this.map.setDisplayOptions({
							isFlat: true
						});
						break
					}
				}
			}
			if (this.map.getFeatureStyleTags()
				.length > 0 && this.map.customLoaded) {
				this.loadLayersData()
			} else {
				var i9 = this;
				this.map.loadMapStyleFiles(function() {
					i9.loadLayersData()
				})
			}
		},
		removeWebGLLayer: function(jb) {
			var jc = false;
			for (var ja = 0, i9 = this.tileLayers.length; ja < i9; ja++) {
				if (jb === this.tileLayers[ja]) {
					jc = true;
					this.tileLayers.splice(ja, 1);
					break
				}
			}
			if (jc === false) {
				return
			}
			jb.destroyDrawData();
			if (this.map.getFeatureStyleTags()
				.length > 0) {
				this.loadLayersData()
			}
			if (this.tileLayers.length === 1) {
				this.map.setDisplayOptions({
					isFlat: false
				})
			} else {
				var e = false;
				for (var ja = 1; ja < this.tileLayers.length; ja++) {
					if (this.tileLayers[ja].isFlat) {
						e = true;
						break
					}
				}
				this.map.setDisplayOptions({
					isFlat: e
				})
			}
			var T = new e7("onrefresh");
			T.source = "removewebgllayer";
			this.map.fire(T)
		},
		getLabelTextCanvas: function() {
			if (!this._labelTextCanvas) {
				this._labelTextCanvas = new ap(this.map)
			}
			return this._labelTextCanvas
		},
		loadLayersData: function(i) {
			if (this.map.suspendLoad) {
				return
			}
			var i9 = this;
			i = i || {};
			var T = !!i.zoomChanged;
			var e = (T === true || this.map.getTilt() > 50);
			if (!e) {
				if (!this.syncLoadTimer) {
					this.syncLoadTimer = setTimeout(function() {
						i9._loadLayersFromCache(T);
						i9.syncLoadTimer = null
					}, 40)
				}
			} else {
				this._loadLayersFromCache(T)
			}
			if (!i9.map.viewAnimationTime) {
				this.timer && window.clearTimeout(this.timer)
			}
			this.timer = window.setTimeout(function() {
				if (i9.map.viewAnimationTime) {
					if (new Date()
						.getTime() - i9.map.viewAnimationTime < 1000) {
						return
					}
					i9.map.viewAnimationTime = new Date()
						.getTime()
				}
				var jb = i9.tileLayers.length;
				i9.tilesInfoCache = {};
				for (var jc = 0; jc < jb; jc++) {
					var je = i9.tileLayers[jc];
					var jd = je.tileType;
					var ja = null;
					if (i9.tilesInfoCache[jd.getName()]) {
						ja = i9.tilesInfoCache[jd.getName()]
					} else {
						ja = i9.calcTilesInfo(jd, je);
						i9.tilesInfoCache[jd.getName()] = ja
					}
					je.loadLayerData(ja, false, T)
				}
				i9.timer = null
			}, this.loadDelay);
			if ((bJ() || es.Browser.ie) && T) {
				this.loadDelay = 200
			} else {
				this.loadDelay = 80
			}
		},
		_loadLayersFromCache: function(ja) {
			this.map._featureMgr.clearData();
			var jd = this.tileLayers;
			jd.sort(function(je, i) {
				return je.zIndex - i.zIndex > 0
			});
			var T = jd.length;
			this.tilesInfoCache = {};
			for (var i9 = 0; i9 < T; i9++) {
				var jc = jd[i9];
				var jb = jc.tileType;
				var e = null;
				if (this.tilesInfoCache[jb.getName()]) {
					e = this.tilesInfoCache[jb.getName()]
				} else {
					e = this.calcTilesInfo(jb, jc);
					this.tilesInfoCache[jb.getName()] = e
				}
				jc.loadLayerData(e, true, ja)
			}
		},
		calcTilesInfo: function(jm, jN) {
			var jz = this.map;
			var jF = jz.getMapType();
			var jA = dO[jF];
			var jt = jz.getZoom();
			var e = Math.floor(jt);
			var jc = jm.getDataZoom(jt);
			var jS = jm.getName();
			jc = bV(jc, jA.minDataZoom, jA.maxDataZoom);
			var jI = e;
			if (jm._name === "web" || jm._name === "xyz") {
				jI = jc
			} else {
				if (jI < 3) {
					jI = 3
				}
			}
			var jx = jm.getTileSize(jt);
			var jb = jm.getBaseTileSize(jt);
			var jv = jz.getBoundsIn();
			var jq = jm.getMercatorSize(jt, jc);
			var jp;
			var jG;
			var jw;
			var jK;
			var jB = jz.getCenterIn();
			if (jF !== BMAP_SATELLITE_MAP) {
				jB = ev.calcLoopCenterPoint(jB)
			}
			if (jS === "xyz") {
				return this.calcXYZTilesInfo(jB, jv, jc, jS, jN, jz)
			}
			var ju = Math.floor(jB.lng / jq);
			var je = Math.floor(jB.lat / jq);
			var jD = 0;
			var i9 = 0;
			if (jS !== "web") {
				jv = ev.calcLoopMapBounds(jv, jz.getCenter())
			}
			if (jv.ne.lng > ev._mc180X) {
				var jk = ev.getSpaceDistanceInPixel(jc);
				jD = Math.ceil(jk / jb)
			}
			if (jv.sw.lng < ev._mcM180X) {
				var jk = ev.getSpaceDistanceInPixel(jc);
				i9 = Math.ceil(jk / jb)
			}
			if (jv.ne.lat > 19505879.362428114 || jv.sw.lat < -15949096.637571886) {
				jv.ne.lat = 19505879.362428114;
				jv.sw.lat = -15949096.637571886
			}
			var jg = [Math.floor(jv.sw.lng / jq) - i9, Math.floor(jv.sw.lat / jq)];
			var jQ = [Math.floor(jv.ne.lng / jq) + jD, Math.floor(jv.ne.lat / jq)];
			jp = jg[0];
			jG = jQ[0] + 1;
			jw = jg[1];
			jK = jQ[1] + 1;
			var jl = [];
			for (var ji = jp; ji < jG; ji++) {
				if (ev.isTileBlank(ji, jc, jb) === true) {
					continue
				}
				for (var jn = jw; jn < jK; jn++) {
					var jM = false;
					var jh = 256;
					if (jS === "web") {
						var jH = ev.calcLoopParam(ji, jc);
						var jP = {
							col: jH.col,
							row: jn,
							baseTileSize: 256,
							zoom: jc
						};
						var jy = ia.prototype.tileToBound(jP, jz.getCenter());
						if (jy.LL.sw.lng * jy.LL.ne.lng < 0 && Math.floor(jy.LL.ne.lng) < 0) {
							jM = true;
							jh = ev.pixelWidth(jy.MC.sw.lng, jz.getZoom())
						}
					}
					var jj = {
						col: ji,
						row: jn,
						zoom: jc,
						useZoom: jI,
						tileTypeName: jS,
						loopOffsetX: 0,
						tileSize: jx,
						baseTileSize: jb,
						mercatorSize: jq,
						combine: jM,
						dataIndex: jh
					};
					jl.push(jj);
					var jE = "id_" + ji + "_" + jn + "_" + jc;
					jl[jE] = true
				}
			}
			if (jF !== BMAP_SATELLITE_MAP) {
				jl = ev.calcLoopTiles(jl, jc, jb, jq)
			}
			if (jc === 3) {
				for (var jO = 0, jL = jl.length; jO < jL; jO++) {
					var ji = jl[jO].col;
					var jn = jl[jO].row;
					var jH = ev.calcLoopParam(ji, jc);
					var jd = jH.T;
					var jr = ji >= 0 ? ji - jd : ji + jd;
					var js = "id_" + jr + "_" + jn + "_" + jc;
					if (!jl[js]) {
						var jj = {
							col: jr,
							row: jn,
							zoom: jc,
							useZoom: jI,
							loopOffsetX: 0,
							tileSize: jx,
							baseTileSize: jb,
							mercatorSize: jq,
							combine: false
						};
						jl.push(jj);
						jl[js] = true
					}
				}
			}
			if (this.map._tilt > 0) {
				for (var jO = 0; jO < jl.length; jO++) {
					var jf = jl[jO];
					var jJ = jf.col;
					var jR = jf.row;
					var jC = [];
					jC.minX = jJ * jq;
					jC.maxX = (jJ + 1) * jq;
					jC.minY = jR * jq;
					jC.maxY = (jR + 1) * jq;
					var ja = new cd(0, 0);
					ja.lng = (jC.minX + jC.maxX) / 2;
					ja.lat = (jC.minY + jC.maxY) / 2;
					var jo = jz.pointToPixelIn(ja);
					if (jo.x > 0 && jo.x < this.map.width && jo.y > 0 && jo.y < this.map.height) {
						continue
					}
					if (jC.minX < jB.lng && jC.maxX > jB.lng && jC.minY < jB.lat && jC.maxY > jB.lat) {
						continue
					}
					if (!this.ifTileInMapBounds(jC, jv, jJ, jR)) {
						jl.splice(jO, 1);
						jO--
					}
				}
			}
			jl.sort((function(i) {
				return function(T, jT) {
					return ((0.4 * Math.abs(T.col - i[0]) + 0.6 * Math.abs(T.row - i[1])) - (0.4 * Math.abs(jT.col - i[0]) + 0.6 * Math.abs(jT.row - i[1])))
				}
			})([ju, je]));
			jl.zoom = jc;
			jl.tileTypeName = jS;
			return jl
		},
		calcXYZTilesInfo: function(jk, jd, jj, jo, jc, jr) {
			var jf = jr.width;
			var jp = jr.height;
			var je = Math.floor(jj);
			var i9 = da.transformBDmcPoint(jk);
			if (!i9) {
				return []
			}
			var jg = null;
			if (jc.transform.source === "BD09MC") {
				var ja = da.getRangeExtent(i9, jf, jp, je, jc.transform);
				jg = [ja.minX, ja.minY, ja.maxX, ja.maxY]
			} else {
				var jb = da.transformBDmcPoint(jd.ne);
				var ji = da.transformBDmcPoint(jd.sw);
				jg = da.getLoopBox(i9, [ji[0], ji[1], jb[0], jb[1]])
			}
			if (!jg) {
				return []
			}
			if (jc.transform.source === "BD09MC") {
				je += 1
			}
			var T = da.getTileRangeForExtentFactory(jg, je, jc.transform);
			var e = [];
			var js = da.getResolutionScale(je, jc.transform);
			for (var jn = T.minX; jn <= T.maxX; jn++) {
				for (var jl = T.minY; jl <= T.maxY; jl++) {
					var jm = {
						col: jn,
						row: jl,
						zoom: je,
						useZoom: je,
						tileTypeName: jo,
						loopOffsetX: 0,
						tileSize: 256 * js,
						transform: jc.transform,
						combine: false,
						dataIndex: 0
					};
					e.push(jm);
					var jh = "id_" + jn + "_" + jl + "_" + je;
					e[jh] = true
				}
			}
			var jq = da.getTileCoordForCoordAndZ(i9, je);
			e.sort((function(i) {
				return function(jt, ju) {
					return ((0.4 * Math.abs(jt.col - i[0]) + 0.6 * Math.abs(jt.row - i[1])) - (0.4 * Math.abs(ju.col - i[0]) + 0.6 * Math.abs(ju.row - i[1])))
				}
			})([jq[1], jq[2]]));
			e.zoom = je;
			e.tileTypeName = jo;
			return e
		},
		getCurrentViewTilesInfo: function(i) {
			var e = this.tilesInfoCache[i.getName()];
			if (!e) {
				return this.calcTilesInfo(i)
			}
			return e
		},
		ifTileInMapBounds: function(e, jb, T, ja) {
			var i = jb.normalizedBottomLeft;
			var jm = jb.normalizedTopRight;
			var je = jb.normalizedTopLeft;
			var jc = jb.normalizedBottomRight;
			var i9 = false;
			var jl = new cd(e.minX, e.minY);
			var ji = new cd(e.maxX, e.maxY);
			var jd = new cd(ji.lng, jl.lat);
			var jj = new cd(jl.lng, ji.lat);
			var jg = [jj, ji, jd, jl];
			for (var jk = 0, jf = jg.length; jk < jf; jk++) {
				var jh = jk + 1;
				if (jh === jf) {
					jh = 0
				}
				var jn = jk;
				var jo = h9(jg[jh], jg[jn], je, i);
				if (jo) {
					i9 = true;
					break
				}
				jo = h9(jg[jh], jg[jn], jc, jm);
				if (jo) {
					i9 = true;
					break
				}
				jo = h9(jg[jh], jg[jn], jm, je);
				if (jo) {
					i9 = true;
					break
				}
				jo = h9(jg[jh], jg[jn], i, jc);
				if (jo) {
					i9 = true;
					break
				}
			}
			return i9
		},
		getTileLayer: function(ja) {
			for (var i9 = 0, e = this.tileLayers.length; i9 < e; i9++) {
				var T = this.tileLayers[i9];
				if (T.mapType === ja) {
					return T
				}
			}
			return null
		},
		getZoomState: function(i) {
			var e = i - this.lastZoom;
			if (e > 0) {
				this.zoomState = 1
			} else {
				if (e < 0) {
					this.zoomState = -1
				}
			}
			this.lastZoom = i;
			return this.zoomState
		}
	});

	function gF(e) {
		this._map = e;
		this._spotsId = null;
		this._init()
	}
	gF.prototype._init = function() {
		var e = this._map;
		e.addEventListener("onspotsdataready", function(T) {
			var i = T.spots;
			if (this._spotsId) {
				e.removeSpots(this._spotsId)
			}
			this._spotsId = e.addSpots(i)
		})
	};
	bo.register(function(e) {
		if (!e.config.enableIconClick) {
			return
		}
		e._mapIcon = new gF(e)
	});

	function cI(e) {
		this._indoorData = {};
		this._map = e;
		this.currentUid = null;
		this.currentFloor = null;
		this._indoorControl = null;
		this.enterMethod = null;
		this.showMask = false;
		this._isMobile = bJ();
		this._autoEnterZoom = 19;
		if (this._isMobile) {
			this._autoEnterZoom = 17
		}
		this._init(e);
		window._indoorMgr = this
	}
	cI.prototype._init = function(i) {
		var e = this;
		i.on("indoor_status_changed", function(jc) {
			var T = jc.uid;
			var ja = jc.floor;
			if (T === null) {
				T = e.currentUid;
				if (e._indoorData[T]) {
					ja = e._indoorData[T].defaultFloor
				}
				if (e._indoorControl) {
					e._indoorControl.hide()
				}
				e.currentUid = null;
				e.currentFloor = null;
				e.enterMethod = null
			} else {
				if (e._indoorData[T]) {
					var jb = e._indoorData[T];
					ja = (typeof ja === "number") ? ja : jb.defaultFloor;
					if (!e._indoorControl) {
						if (i.config.showControls && i._displayOptions.indoor) {
							e._indoorControl = new an(i, jb)
						}
					} else {
						e._indoorControl.setInfo(jb);
						e._indoorControl.show()
					}
					e.currentUid = T;
					e.currentFloor = ja
				}
			}
			if (!e._indoorData || !e._indoorData[T] || e._indoorData[T].currentFloor === ja) {
				this.fire(new e7("onrefresh"));
				return
			}
			var i9 = new e7("onindoor_data_refresh");
			i9.uid = T;
			i9.floor = ja;
			i9.tileKey = e._indoorData[T].tileKey;
			e._indoorData[T].currentFloor = ja;
			e.currentFloor = ja;
			this.fire(i9)
		});
		i.on("spotclick", function(i9) {
			var T = null;
			if (i9.curAreaSpot && this.areaSpots[i9.curAreaSpot]) {
				T = this.areaSpots[i9.curAreaSpot].userData.uid
			}
			if (T === e.currentUid) {
				if (i9.curAreaSpot) {
					e.enterMethod = "byClick"
				}
				return
			}
			if (T === null) {
				if (e.currentUid && e.enterMethod === "byClick") {
					i.showIndoor(null);
					e.enterMethod = null
				}
			} else {
				e.enterMethod = "byClick";
				if (e.currentUid) {
					i.showIndoor(e.currentUid, e._indoorData[e.currentUid].defaultFloor)
				}
				i.showIndoor(T, e._indoorData[T].defaultFloor)
			}
		});
		i.on("moveend", function() {
			if (this.getZoom() >= e._autoEnterZoom) {
				e._checkIndoorByMove()
			}
		});
		i.on("zoomend", function() {
			if (this.getZoom() >= e._autoEnterZoom) {
				e._checkIndoorByMove()
			} else {
				if (e.enterMethod !== "byClick" && e.currentUid !== null) {
					this.showIndoor(null)
				}
			}
		})
	};
	cI.prototype._checkIndoorByMove = function() {
		var T = this._map;
		var jf = T.getSize();
		var jk = {
			x: jf.width / 2,
			y: jf.height / 2
		};
		var jj = Math.max(jf.width, jf.height);
		var jl = [];
		for (var jg in this._indoorData) {
			var e = this._indoorData[jg].center;
			var i9 = T.pointToPixelIn(new bo.Point(e[0], e[1]));
			var jc = b1(jk, i9);
			jl.push({
				uid: jg,
				distance: jc
			})
		}
		if (jl.length === 0) {
			return
		}
		jl.sort(function(jm, i) {
			return jm.distance - i.distance
		});
		var jb = jl[0];
		var jh = T.getCenterIn();
		var ja = false;
		for (var je = 0; je < this._indoorData[jb.uid].contour.length; je++) {
			if (bB([jh.lng, jh.lat], this._indoorData[jb.uid].contour[je])) {
				ja = true;
				break
			}
		}
		if (ja === false && jb.uid === "e96b44200baa3b4082288acc") {
			var jd = this._indoorData[jb.uid].boundsMin;
			var ji = this._indoorData[jb.uid].boundsMax;
			if (jh.lng > jd[0] && jh.lat > jd[1] && jh.lng < ji[0] && jh.lat < ji[1]) {
				ja = true
			}
		}
		if (ja) {
			if (this.enterMethod !== "byClick") {
				if (this.currentUid !== null && this.currentUid !== jb.uid) {
					this._map.showIndoor(this.currentUid, this._indoorData[this.currentUid].defaultFloor)
				}
				if (this.currentUid !== jb.uid) {
					this._map.showIndoor(jb.uid, this._indoorData[jb.uid].defaultFloor)
				}
				this.enterMethod = "byMove"
			}
		} else {
			if (this.enterMethod !== "byClick") {
				this._map.showIndoor(null)
			}
		}
	};
	cI.prototype.setData = function(i9) {
		if (i9 === null) {
			return
		}
		for (var T in i9) {
			if (T === "tileInfo") {
				continue
			}
			var ja = i9[T].tileKey;
			if (this._indoorData[T]) {
				if (!this._indoorData[T][ja]) {
					this._indoorData[T].tileKeys.push(ja);
					this._indoorData[T][ja] = true
				}
			} else {
				this._indoorData[T] = i9[T];
				this._indoorData[T].tileKeys = [i9[T].tileKey];
				this._indoorData[T][ja] = true;
				for (var e = 0; e < this._indoorData[T].contour.length; e++) {
					this._map.addAreaSpot(this._indoorData[T].contour[e], {
						id: T + e,
						userData: {
							uid: T
						}
					})
				}
			}
		}
		if (this._map.getZoom() >= this._autoEnterZoom) {
			this._checkIndoorByMove()
		}
	};
	cI.prototype.removeData = function(T, ja) {
		if (!this._indoorData[T]) {
			return
		}
		var i9 = this._indoorData[T];
		for (var e = 0; e < i9.tileKeys.length; e++) {
			if (i9.tileKeys[e] === ja) {
				i9.tileKeys.splice(e, 1);
				break
			}
		}
		delete i9[ja];
		if (i9.tileKeys.length === 0) {
			delete this._indoorData[T]
		}
	};
	cI.prototype.getIndoorData = function(e) {
		return this._indoorData[e] || null
	};
	cI.prototype.getData = function() {
		return this._indoorData
	};
	bo.register(function(e) {
		e._indoorMgr = new cI(e)
	});
	var aO = (function() {
		var i9 = {};
		var ji = {};
		var je = {};

		function jg(jk) {
			if (Object.prototype.toString.call(jk) === "[object Object]") {
				for (var jj in jk) {
					return false
				}
				return true
			} else {
				return false
			}
		}

		function jf(jq, jr, ju, jn, jt) {
			var jj = jj || null;
			jn = jn || jj;
			var jl;
			if (jn) {
				jl = jh(jq, jr, ju, jn)
			} else {
				jl = T(jq, jr, ju, jt)
			}
			var jp = jl.drawId;
			var jk = jl.style;
			var js = jl.styleUpdate;
			var jv = [];
			if (!jp) {
				return jv
			}
			for (var jm = 0; jm < jp.length; jm++) {
				var jo = js[jp[jm]] || jk[jp[jm]];
				if (jo) {
					switch (jr) {
						case "polygon":
							jo = ja(jo, jq);
							break;
						case "line":
							jo = jd(jo, jq);
							break;
						case "pointText":
							jo = jb(jo, jq);
							break;
						case "point":
							jo = e(jo, jq);
							break;
						case "polygon3d":
							jo = jc(jo, jq);
							break
					}
					if (jo) {
						jo.did = jp[jm];
						jv[jv.length] = jo
					}
				}
			}
			return jv
		}

		function jh(jk, jm, jn, jj) {
			var jl = jj[2];
			switch (jm) {
				case "point":
					jl = jl[0];
					break;
				case "pointText":
					jl = jl[1];
					break;
				case "line":
					jl = jl[3];
					break;
				case "polygon":
					jl = jl[4];
					break;
				case "polygon3d":
					jl = jl[5];
					break
			}
			var jp = jn - 1;
			if (jm === "line" && jn === 12) {
				jp = jn
			}
			var jq = jj[1][jp][0];
			var jo = jq[jk];
			if (!jo) {
				if (jm === "point" || jm === "pointText") {
					jq = jj[1][jn][0];
					jo = jq[jk]
				}
			}
			return {
				drawId: jo,
				style: jl,
				styleUpdate: []
			}
		}

		function T(jn, jo, jr, jq) {
			if (!jq) {
				return {
					drawId: null,
					style: [],
					styleUpdate: []
				}
			}
			var jp;
			var jl = jq.baseFs;
			if (jg(jq.zoomRegion)) {
				jp = jq.StyleBody || []
			} else {
				jp = jq.zoomStyleBody[jr] || []
			}
			var jk = jl[2];
			switch (jo) {
				case "point":
					jk = jk[0];
					jp = jp[0] || {};
					break;
				case "pointText":
					jk = jk[1];
					jp = jp[1] || {};
					break;
				case "line":
					jk = jk[3];
					jp = jp[3] || {};
					break;
				case "polygon":
					jk = jk[4];
					jp = jp[4] || {};
					break;
				case "polygon3d":
					jk = jk[5];
					jp = jp[5] || {};
					break
			}
			var jj = jl[1][jr - 1][0];
			var jm = jj[jn];
			return {
				drawId: jm,
				style: jk,
				styleUpdate: jp
			}
		}

		function jb(jk, jj) {
			if (!jk || jk.length === 0) {
				return null
			}
			return {
				sid: jj,
				fontRgba: i(jk[0]),
				haloRgba: i(jk[1]),
				backRgba: i(jk[2]),
				fontSize: jk[3],
				haloSize: jk[4],
				fontWeight: jk[5],
				fontStyle: jk[6],
				density: jk[7]
			}
		}

		function e(jk, jj) {
			return {
				sid: jj,
				rank: jk[0],
				ucflag: jk[1],
				icon: jk[2],
				iconType: jk[3],
				nineGG: jk[4],
				density: jk[5],
				zoom: jk[6]
			}
		}

		function jd(jk, jj) {
			return {
				sid: jj,
				borderRgba: i(jk[0]),
				fillRgba: i(jk[1]),
				borderWidth: jk[2],
				fillWidth: jk[3],
				borderCap: jk[4],
				fillCap: jk[5],
				haveBorderLine: jk[6],
				haveBorderTexture: jk[7],
				haveFillTexture: jk[8],
				isUseBorderRgba: jk[9],
				isUseFillRgba: jk[10],
				borderTexture: jk[11],
				fillTexture: jk[12],
				borderTextureType: jk[13],
				fillTextureType: jk[14],
				isRealWidth: jk[15],
				haveArrow: jk[16],
				needRound: jk[17],
				realBorderWidth: jk[18]
			}
		}

		function ja(jk, jj) {
			return {
				sid: jj,
				fillRgba: i(jk[0]),
				borderRgba: i(jk[1]),
				borderWidth: jk[2],
				borderTexture: jk[3],
				borderTextureType: jk[4],
				waterStyle: jk[5],
				haloStyle: jk[6],
				textureStyle: jk[7],
				thickRgba: i(jk[8])
			}
		}

		function jc(jk, jj) {
			return {
				sid: jj,
				filter: jk[0],
				ratio: jk[1],
				haveBorder: jk[2],
				borderWidth: jk[3],
				borderRgba: i(jk[4]),
				fillTop: i(jk[5]),
				fillSide: i(jk[6]),
				polyTexture: jk[7]
			}
		}

		function i(jo) {
			var jn = jo;
			if (je[jn]) {
				return je[jn]
			}
			jo = jo >>> 0;
			var jm = (jo) & 255;
			var jl = (jo >> 8) & 255;
			var jj = (jo >> 16) & 255;
			var jk = (jo >> 24) & 255;
			je[jn] = [jm, jl, jj, jk];
			return je[jn]
		}
		return {
			getStyleFromCache: function(jq, jl, jo, jp, jk, jn, jj) {
				jq = jq || "default";
				var jm = jq + "-" + jl + "-" + jo + "-" + jp;
				if (jn) {
					jm += "-indoor"
				}
				if (jk) {
					if (!ji[jm]) {
						ji[jm] = jf(jl, jo, jp, jk)
					}
					return ji[jm]
				}
				if (!i9[jm]) {
					i9[jm] = jf(jl, jo, jp, jk, jj)
				}
				return i9[jm]
			}
		}
	})();
	bo.register(function(i) {
		var e = new hk(i)
	});

	function hk(e) {
		e.container.appendChild(this.render());
		this.bind(e)
	}
	hk.prototype.render = function() {
		var i = document.createElement("div");
		i.className = "click-ripple-container";
		var e = document.createElement("div");
		e.className = "click-ripple";
		i.appendChild(e);
		this._div = i;
		this._ripple = e;
		return i
	};
	hk.prototype.bind = function(i) {
		var e = this;
		i.addEventListener("spotclick", function(T) {
			if (!T.spots || T.spots.length === 0) {
				return
			}
			e._div.style.left = T.pixel.x + "px";
			e._div.style.top = T.pixel.y + "px";
			es.ac(e._ripple, "ripple-playing")
		});
		es.on(e._ripple, "transitionend", function() {
			es.rc(e._ripple, "ripple-playing")
		})
	};

	function bI(e) {
		cJ.call(this);
		if (!e) {
			return
		}
		this._opts = {};
		this._map = e;
		this._maxLat = 84.6;
		this._minLat = -80.6;
		this._maxLatMC = ia.convertLL2MC(new b8(this._maxLat, 0))
			.lat;
		this._minLatMC = ia.convertLL2MC(new b8(this._minLat, 0))
			.lat
	}
	bI.inherits(cJ, "ToolbarItem");
	es.extend(bI.prototype, {
		open: function() {
			if (this._isOpen == true) {
				return true
			}
			if (this._map._toolInUse) {
				return false
			}
			this._map._toolInUse = true;
			this._isOpen = true;
			return true
		},
		close: function() {
			if (!this._isOpen) {
				return
			}
			this._map._toolInUse = false;
			this._isOpen = false
		},
		_checkStr: function(e) {
			if (!e) {
				return ""
			}
			return e.replace(/</g, "&lt;")
				.replace(/>/g, "&gt;")
		}
	});

	function bZ(T, i) {
		bI.call(this, T);
		i = i || {};
		this._opts = es.extend(es.extend(this._opts || {}, {
			autoClear: false,
			tips: "测距",
			followText: "单击确定起点，双击结束绘制",
			unit: "metric",
			showResult: true,
			lineColor: "blue",
			lineStroke: 2,
			opacity: 1,
			lineStyle: "solid",
			cursor: w.distCursor,
			styleCodes: {
				lnCode: 0,
				spCode: 0,
				slCode: 0,
				tlCode: 0
			},
			enableMassClear: true
		}), i);
		if (this._opts.showResult === false) {
			if (typeof i.tips === "undefined") {
				this._opts.tips = "绘制折线"
			}
			if (!i.cursor) {
				this._opts.cursor = "crosshair"
			}
		}
		if (this._opts.lineStroke <= 0) {
			this._opts.lineStroke = 2
		}
		if (this._opts.opacity > 1) {
			this._opts.opacity = 1
		} else {
			if (this._opts.opacity < 0) {
				this._opts.opacity = 0
			}
		}
		if (this._opts.lineStyle !== "solid" && this._opts.lineStyle !== "dashed") {
			this._opts.lineStyle = "solid"
		}
		this._checked = false;
		this._drawing = null;
		this.followTitle = null;
		this._totalDis = {};
		this._points = [];
		this._paths = [];
		this._dots = [];
		this._segDistance = [];
		this._overlays = [];
		this._units = {
			metric: {
				name: "metric",
				conv: 1,
				incon: 1000,
				u1: "米",
				u2: "公里"
			},
			us: {
				name: "us",
				conv: 3.2808,
				incon: 5279.856,
				u1: "英尺",
				u2: "英里"
			}
		};
		if (!this._units[this._opts.unit]) {
			this._opts.unit = "metric"
		}
		this._dLineColor = "#ff6319";
		this._dLineStroke = 3;
		this._dOpacity = 0.8;
		this._dLineStyle = "solid";
		this._dCursor = w.distCursor;
		if (this._opts.showResult) {
			this._opts.followText = "单击确定起点"
		}
		this._followTextM = "单击确定地点，双击结束";
		this._sectionMarkerTip = "单击可删除此点，拖拽可调整位置";
		this._movingTimerId = null;
		if (this._opts.showResult) {
			this.text = "测距"
		} else {
			this.text = "绘线"
		}
		this._isOpen = false;
		var e = this;
		gi.load("tools", function() {
			e._draw()
		})
	}
	bZ.inherits(bI, "PolylineTItem");
	es.extend(bZ.prototype, {
		setLineColor: function(e) {
			this._opts.lineColor = e
		},
		setLineStroke: function(e) {
			if (Math.round(e) > 0) {
				this._opts.lineStroke = Math.round(e)
			}
		},
		setOpacity: function(e) {
			if (e >= 0 && e <= 1) {
				this._opts.opacity = e
			}
		},
		setLineStyle: function(e) {
			if (e === "solid" || e === "dashed") {
				this._opts.lineStyle = e
			}
		},
		clear: function() {
			for (var T = 0, e = this._overlays.length; T < e; T++) {
				if (this._overlays[T]) {
					this._map.removeOverlay(this._overlays[T])
				}
			}
			this._overlays.length = 0;
			for (var T = 0, e = this._dots.length; T < e; T++) {
				if (this._dots[T] && this._dots[T].parentNode) {
					this._dots[T].parentNode.removeChild(this._dots[T])
				}
			}
			this._dots.length = 0
		},
		setCursor: function(e) {
			if (this._opts.showResult === true) {
				return
			}
			this._opts.cursor = e
		},
		getCursor: function() {
			if (this._opts.showResult === true) {
				return this._dCursor
			}
			var e = this._opts.cursor.match(/^url\((.+)\)(,.*)?/);
			if (e !== null) {
				return e[1]
			} else {
				return this._opts.cursor
			}
		},
		showResult: function(e) {
			this._opts.showResult = !!e
		}
	});

	function bt() {
		var ja = 3;
		var jh = 256;
		var i9 = Math.pow(2, 18 - ja) * jh;
		var ji = 2;
		var jg = (ji + 1) * i9;
		var T = ia.convertLL2MC(new cd(180, 0));
		var je = T.lng;
		var jc = jg - je;
		var jf = -3;
		var e = jf * i9;
		var jb = ia.convertLL2MC(new cd(-180, 0));
		var jd = jb.lng;
		var i = jd - e;
		this._validPixels = je / Math.pow(2, 18 - ja);
		this._mc180X = je;
		this._mcM180X = jd;
		this._loopOffset = jc + i;
		this._mcTSpan = je - jd;
		this._spaceDistance = jc;
		this._mSpaceDistance = i
	}
	bt.prototype = {
		calcLoopParam: function(i9, i, jg) {
			jg = jg || 256;
			var jd = 0;
			var ja = 3;
			var jc = 6;
			var jb = jc * Math.pow(2, (i - ja)) * 256 / jg;
			var jf = jb / 2 - 1;
			var je = -jb / 2;
			while (i9 > jf) {
				i9 -= jb;
				jd -= this._loopOffset
			}
			while (i9 < je) {
				i9 += jb;
				jd += this._loopOffset
			}
			var e = jd;
			jd = Math.round(jd / Math.pow(2, 18 - i));
			return {
				offsetX: jd,
				geoOffsetX: e,
				col: i9,
				T: jb,
				maxCol: jf,
				minCol: je
			}
		},
		calcLoopCenterPoint: function(i) {
			var e = i.lng;
			while (e > this._mc180X) {
				e -= this._mcTSpan
			}
			while (e < this._mcM180X) {
				e += this._mcTSpan
			}
			i.lng = e;
			return i
		},
		calcLoopMapBounds: function(T, i9) {
			var i = i9 || T.getCenter();
			var e = T.sw.lng;
			var ja = T.ne.lng;
			while (i.lng > this._mc180X) {
				i.lng -= this._mcTSpan;
				e -= this._mcTSpan;
				ja -= this._mcTSpan
			}
			while (i.lng < this._mcM180X) {
				i.lng += this._mcTSpan;
				e += this._mcTSpan;
				ja += this._mcTSpan
			}
			T.sw.lng = e;
			T.ne.lng = ja;
			if (T.pointBottomLeft) {
				T.pointBottomLeft = this.calcLoopCenterPoint(T.pointBottomLeft);
				T.pointTopLeft = this.calcLoopCenterPoint(T.pointTopLeft);
				T.pointTopRight = this.calcLoopCenterPoint(T.pointTopRight);
				T.pointBottomRight = this.calcLoopCenterPoint(T.pointBottomRight)
			}
			return T
		},
		calcLoopTiles: function(jh, e, jl, je) {
			jl = jl || 256;
			var ja = je || Math.pow(2, 18 - e) * jl;
			var jg = Math.floor(this._mc180X / ja);
			var jc = Math.floor(this._mcM180X / ja);
			var ji = Math.floor(this._loopOffset / ja);
			var jj = [];
			for (var jd = 0; jd < jh.length; jd++) {
				var jk = jh[jd];
				var i9 = jk[0];
				var jm = jk[1];
				if (i9 >= jg) {
					var jf = i9 + ji;
					if (this.isTileBlank(jf, e, jl) === true) {
						continue
					}
					var T = "id_" + jf + "_" + jm + "_" + e;
					if (!jh[T]) {
						jh[T] = true;
						jj.push([jf, jm, e, 0])
					}
				} else {
					if (i9 <= jc) {
						var jf = i9 - ji;
						if (this.isTileBlank(jf, e, jl) === true) {
							continue
						}
						var T = "id_" + jf + "_" + jm + "_" + e;
						if (!jh[T]) {
							jh[T] = true;
							jj.push([jf, jm, e, 0])
						}
					}
				}
			}
			for (var jd = 0, jb = jj.length; jd < jb; jd++) {
				jh.push(jj[jd])
			}
			for (var jd = jh.length - 1; jd >= 0; jd--) {
				var i9 = jh[jd][0];
				if (this.isTileBlank(i9, e, jl)) {
					jh.splice(jd, 1)
				}
			}
			return jh
		},
		isTileBlank: function(T, ja, e) {
			var jb = Math.pow(2, ja - 3);
			var i = Math.round(this._validPixels * jb);
			var i9 = 6 * jb * 256 / e;
			while (T > i9 / 2 - 1) {
				T -= i9
			}
			while (T < -(i9 / 2)) {
				T += i9
			}
			if (T > 0 && T * e > i) {
				return true
			}
			if (T < 0 && Math.abs((T + 1) * e) > i) {
				return true
			}
			return false
		},
		isAddWidth: function(e, i) {
			return e < this._mcM180X || i > this._mc180X
		},
		pixelWidth: function(e, i) {
			if (e < 0) {
				e = -e
			}
			return Math.abs(e - this._mc180X) / (Math.pow(2, 18 - i))
		},
		getSpaceDistanceInPixel: function(i) {
			var e = Math.round((this._spaceDistance + this._mSpaceDistance) / Math.pow(2, 18 - i));
			return e
		}
	};
	var ev = new bt();
	var iC = (function() {
		var i = true;
		var ja = 256;
		var e = true;
		var jc = iO("ditu", "normalTraffic");
		var i9 = jc.udt;
		var jd = "//its.map.baidu.com/traffic/";
		var jb = [
			[2, "79,210,125,1", 3, 2, 0, [], 0, 0],
			[2, "79,210,125,1", 3, 2, 0, [], 0, 0],
			[2, "79,210,125,1", 4, 2, 0, [], 0, 0],
			[2, "79,210,125,1", 5, 2, 0, [], 0, 0],
			[2, "79,210,125,1", 6, 2, 0, [], 0, 0],
			[2, "255,208,69,1", 3, 2, 0, [], 0, 0],
			[2, "255,208,69,1", 3, 2, 0, [], 0, 0],
			[2, "255,208,69,1", 4, 2, 0, [], 0, 0],
			[2, "255,208,69,1", 5, 2, 0, [], 0, 0],
			[2, "255,208,69,1", 6, 2, 0, [], 0, 0],
			[2, "232,14,14,1", 3, 2, 0, [], 0, 0],
			[2, "232,14,14,1", 3, 2, 0, [], 0, 0],
			[2, "232,14,14,1", 4, 2, 0, [], 0, 0],
			[2, "232,14,14,1", 5, 2, 0, [], 0, 0],
			[2, "232,14,14,1", 6, 2, 0, [], 0, 0],
			[2, "181,0,0,1", 3, 2, 0, [], 0, 0],
			[2, "181,0,0,1", 3, 2, 0, [], 0, 0],
			[2, "181,0,0,1", 4, 2, 0, [], 0, 0],
			[2, "181,0,0,1", 5, 2, 0, [], 0, 0],
			[2, "181,0,0,1", 6, 2, 0, [], 0, 0],
			[2, "255,255,255,1", 4, 0, 0, [], 0, 0],
			[2, "255,255,255,1", 5.5, 0, 0, [], 0, 0],
			[2, "255,255,255,1", 7, 0, 0, [], 0, 0],
			[2, "255,255,255,1", 8.5, 0, 0, [], 0, 0],
			[2, "255,255,255,1", 10, 0, 0, [], 0, 0]
		];
		var T = new gI({
			transparentPng: true,
			dataType: 2,
			cacheSize: 256,
			clipTile: true,
			isFlat: true
		});
		T.zIndex = 2;
		T.getTilesUrl = function(jg, jh) {
			if (!jg || jh < 7) {
				return null
			}
			var jf = jg.x;
			var ji = jg.y;
			var je = jd + "TrafficTileService?level=" + jh + "&x=" + jf + "&y=" + ji + "&time=" + (+new Date());
			if (this.map.getRenderType() === "webgl") {
				je = jd + "?qt=vtraffic&z=" + jh + "&x=" + jf + "&y=" + ji + "&udt=" + i9
			}
			return je
		};
		T.setColors = function(je) {
			for (var jh = 0; jh < jb.length; jh++) {
				var jg = Math.floor(jh / 5);
				var jf = je[jg];
				if (jf) {
					if (Object.prototype.toString.call(jf) === "[object String]") {
						jf = gM.parseCSSColor(jf)
					}
					jb[jh][1] = [jf[0], jf[1], jf[2], jf[3] / 255].join(",")
				}
			}
		};
		T.setEdge = function(je) {
			e = !!je
		};
		T.processData = function(jh) {
			var jl = jh.content;
			var jj = 10;
			if (typeof jh.precision === "number") {
				jj = jh.precision * 10
			}
			var js = {
				road: [
					[],
					[]
				]
			};
			if (!jl) {
				return js
			}
			var jq = jl.tf;
			if (!jq) {
				return js
			}
			for (var ji = 0; ji < jq.length; ji++) {
				var jr = jq[ji][1];
				var jp = [];
				var jn = 0;
				var jm = 0;
				var jo = jb[jq[ji][3]];
				for (var jg = 0, je = jr.length; jg < je / 2; jg++) {
					jn += jr[jg * 2] / jj;
					jm += jr[jg * 2 + 1] / jj;
					jp.push(jn, 256 - jm)
				}
				var jf = jo[1].split(",");
				jf[3] = jf[3] * 255;
				var jk = jo[2] / 2;
				if (e) {
					js.road[0].push([jp, 1, 2, [255, 255, 255, 255], jk + 2])
				}
				js.road[1].push([jp, 1, 2, jf, jk])
			}
			return js
		};
		return T
	})();

	function ii() {}
	ii.prototype = iC;

	function dw(e) {
		d6.call(this);
		e = e || {};
		this._opts = {};
		this._opts.districts = e.name || "";
		this._opts.kind = e.kind || 0;
		this._config = {};
		this._config.strokeColor = e.strokeColor || "#00f";
		this._config.strokeOpacity = typeof e.strokeOpacity === "number" ? e.strokeOpacity : 1;
		bV(this._config.strokeOpacity, 0, 1);
		this._config.fillColor = e.fillColor || "#ff0";
		this._config.fillOpacity = typeof e.fillOpacity === "number" ? e.fillOpacity : 0.6;
		bV(this._config.fillOpacity, 0, 1);
		this._config.strokeWeight = e.strokeWeight || 1;
		this._config.viewport = e.viewport || false;
		this.disOverlays = [];
		this.eventAndCallback = {};
		var i = this;
		gi.load("layer", function() {
			i._asyncSearch()
		})
	}
	dw.inherits(cJ, "DistrictLayer");
	es.extend(dw.prototype, {
		initialize: function(e) {
			this._map = e;
			this.addDistrict()
		},
		removeDistrict: function(i, e) {
			this._map = i;
			this.deleteDistrict(e)
		},
		toString: function() {
			return "DistrictLayer"
		}
	});

	function iY(i) {
		var i = i || {};
		const ja = i.transform || {
			source: "EPSG3857",
			target: "BD09MC"
		};
		const i9 = i.tileUrlTemplate || "";
		const jd = i.xTemplate || function(jk, jm, jl) {
			return jk
		};
		const jh = i.yTemplate || (i.tms ? function(jk, jm, jl) {
			return Math.pow(2, jl) - jm - 1
		} : function(jk, jm, jl) {
			return jm
		});
		const jc = i.zTemplate || function(jk, jm, jl) {
			return jl
		};
		const jg = i.bTemplate || function(jk, jn, jm) {
			const jl = da.getTileRangeExtent([jm, jk, jn]);
			return jl.minX + "," + jl.minY + "," + jl.maxX + "," + jl.maxY
		};
		var ji = i.extent || [];
		const jb = i.extentCRSIsWGS84 || false;
		var T = i.minZoom || 0;
		var jf = i.maxZoom || 23;
		var je = true;
		var jj = new gI({
			transform: ja,
			transparentPng: je,
			dataType: 1,
			tileTypeName: "xyz",
			cacheSize: 256,
			customLayer: true,
			clipTile: false,
			boundary: i.boundary || false,
			useThumbData: i.useThumbData || false
		});
		jj.zIndex = 2;
		(ji.length === 4) && jb && (ji = da.fromEPSG4326(ji));
		jj.getTilesUrl = function(jl, jr, jp) {
			if (!jl || jr < 0 || jr < T || jr > jf) {
				jj.tileCache.clear();
				return null
			}
			if (ja.source !== "BD09MC") {
				jl.x = da.getTilesLoop(jr, jl.x)
			}
			var jq = da.getTileRangeExtent([jr, jl.x, jl.y]);
			var jo = e([jq.minX, jq.minY, jq.maxX, jq.maxY]);
			if (!jo) {
				return null
			}
			var jm = "";
			if (i9) {
				jm = i9;
				var jn = /[^\{}]*\{(.*)\}[^\}]*/;
				jm.match(jn);
				var jk = [];
				if (RegExp.$1) {
					jk = RegExp.$1.split(",")
				}
				jm = jm.replace(/\{(.*)\}/, jk[(jl.x + jl.y) % jk.length]);
				jm = jm.replace(/\[x\]/gi, jd(jl.x, jl.y, jr));
				jm = jm.replace(/\[y\]/gi, jh(jl.x, jl.y, jr));
				jm = jm.replace(/\[z\]/gi, jc(jl.x, jl.y, jr));
				jm = jm.replace(/\[b\]/gi, jg(jl.x, jl.y, jr))
			} else {
				return null
			}
			return jm
		};

		function e(jk) {
			if (ji && ji instanceof Array && ji.length === 4) {
				if ((ji[0] <= jk[2] && ji[1] <= jk[3]) && (ji[2] >= jk[0] && ji[3] >= jk[1])) {
					return true
				} else {
					return false
				}
			}
			return true
		}
		return jj
	}

	function c2(i) {
		this.src = cF();
		this.tileMaskUvCache = new at(64, {
			clearCallback: function(jb) {}
		});
		var ja = 6;
		if (i.pixelMap) {
			this.opacity = typeof i.pixelMap.opacity === "number" ? i.pixelMap.opacity : 1;
			bV(this.opacity, 0, 1);
			if (this.opacity < 1) {
				i.useThumbData = false
			}
			var i9 = i.pixelMap || {};
			this.colors = i9.colors || ["#F9F871", "#FFC75F", "#FF9671", "#FF6F91", "#D65DB1", "#845EC2"];
			this.positions = i9.positions || [0, 0.2, 0.4, 0.6, 0.8, 1];
			this.domain = i9.domain || [0, 255];
			this.clamp = i9.clamp || this.domain;
			this.noData = (i9.noData !== undefined) ? i9.noData : -99999;
			this.fomularC = i9.fomularC || "float generateValue(vec4 pixel){return pixel.r * 255.;}";
			this.fomularJS = i9.fomularJS || function(jb) {
				return jb.r
			};
			this.maskPng = i9.maskPng || null;
			if (this.maskPng) {
				this.loadMaskPng(this.maskPng)
			}
			this.maskData = i9.maskData || -1;
			this.maskCoord = i9.maskCoord || null;
			this.fHashcode = l({
				str: this.fomularC
			});
			var e = this.canPixelMap();
			if (e) {
				this.isPixelMap = true;
				this.setPixelMap()
			}
			ja = i.pixelMap.cacheSize || ja
		}
		var T = new iY(i);
		T.ontology = this;
		this.layer = T;
		this.cacheSize = ja;
		this.tileCache = new at(this.cacheSize, {
			clearCallback: function(jb) {}
		});
		this.tileImageDataCache = new at(this.cacheSize, {
			clearCallback: function(jb) {}
		})
	}
	c2.inherits(es.BaseClass, "PixelLayer");
	es.extend(c2.prototype, {
		canPixelMap: function() {
			if (this.colors && this.positions) {
				return true
			}
			return false
		},
		setPixelMap: function() {
			if (!this.isPixelMap || !this.canPixelMap()) {
				return
			}
			var i = this.colors;
			var e = this.positions;
			this.pHashcode = l({
				colors: i,
				positions: e
			});
			this.pixelColorMap = gM.generateColorRamp(i, e)
		},
		setDomain: function(e) {
			if (e instanceof Array && e.length === 2) {
				this.domain = e;
				this.doOnceDraw()
			}
		},
		setClamp: function(e) {
			if (e instanceof Array && e.length === 2) {
				this.clamp = e;
				this.doOnceDraw()
			}
		},
		setNoData: function(e) {
			this.noData = e;
			this.doOnceDraw()
		},
		setPositions: function(e) {
			this.positions = e;
			this.setPixelMap();
			this.doOnceDraw()
		},
		setColors: function(e) {
			this.colors = e;
			this.setPixelMap();
			this.doOnceDraw()
		},
		setFomular: function(e, i) {
			if (e && i) {
				this.fomularJS = e;
				this.fomularC = i;
				this.fHashcode = l({
					str: this.fomularC
				});
				this.doOnceDraw()
			}
		},
		setOpacity: function(e) {
			this.opacity = e;
			this.doOnceDraw()
		},
		setIsPixelMap: function(e) {
			this.isPixelMap = e;
			this.doOnceDraw()
		},
		setMaskPng: function(e) {
			this.maskPng = e;
			this.loadMaskPng(this.maskPng);
			this.doOnceDraw()
		},
		setMaskData: function(e) {
			this.maskData = e;
			this.doOnceDraw()
		},
		setMaskCoord: function(e) {
			this.maskCoord = e || null;
			this.calMaskBox();
			this.doOnceDraw()
		},
		doOnceDraw: function() {
			if (this.layer.map) {
				var e = new e7("onupdate");
				this.layer.map.dispatchEvent(e)
			}
		},
		_getInLayer: function(jh) {
			if (!this.map) {
				return null
			}
			var jg = Math.floor(this.map.getZoom());
			var i9 = da.transformBDmcPoint(jh);
			var jd = da.getTileCoordForXYAndZ_(i9[0], i9[1], jg, false);
			var T = jd.join("-");
			var e = this.tileCache.getData(T);
			if (e) {
				return e
			}
			var ja = this.layer.zIndex;
			var jc = this.map._featureMgr.result.bkData;
			var je = jc[ja][2];
			var ji = null;
			for (var jb = 0; jb < je.length; jb++) {
				var jd = je[jb];
				var jf = jd.tileInfo.zoom + "-" + jd.tileInfo.col + "-" + jd.tileInfo.row;
				if (T === jf) {
					ji = jd;
					break
				}
			}
			this.tileCache.setData(T, ji);
			return ji
		},
		_initEvent: function(ja) {
			this.map = ja;
			var T = this;
			this._layerMouseEvent = function(je) {
				if (!T.map) {
					return
				}
				var jc;
				var i = je.point;
				var jd = T._getInLayer(i);
				if (jd) {
					T.prox = jd;
					jc = new e7("onmousemove");
					T.map.platform.style.cursor = T.map.config.overlayMoveCursor
				} else {
					T.map.platform.style.cursor = T.map.config.defaultCursor;
					T.prox = null
				}
				if (jc) {
					jc.point = je.point;
					jc.pixel = je.pixel;
					jc.latLng = je.latlng;
					T.dispatchEvent(jc)
				}
			};
			this._layerClickEvent = function(je) {
				if (!T.map) {
					return
				}
				var jc;
				var i = je.point;
				var jd = T.getImagePixel(i);
				if (jd) {
					jc = new e7(je.type);
					jc.point = i;
					jc.pixel = je.pixel;
					jc.latLng = je.latlng;
					jc.color = jd;
					jc.value = T.getValue(jc.color);
					T.dispatchEvent(jc)
				}
			};
			ja.addEventListener("onmousemove", this._layerMouseEvent);
			var i9 = ["onclick", "dblclick"];
			for (var e = 0; e < i9.length; e++) {
				var jb = i9[e];
				ja.addEventListener(jb, this._layerClickEvent)
			}
			ja.addEventListener("removetilelayer", function(i) {
				if (i.target && i.target.ontology) {
					if (i.target.ontology.src === T.src) {
						T.prox = null;
						T.tileCache.clear();
						T.tileImageDataCache.clear();
						T.tileMaskUvCache.clear();
						ja.removeEventListener("onmousemove", this._layerMouseEvent);
						ja.removeEventListener("onclick", this._layerClickEvent);
						ja.removeEventListener("ondblclick", this._layerClickEvent)
					}
				}
			})
		},
		getImagePixel: function(je) {
			if (!this.map) {
				return null
			}
			var i9 = da.transformBDmcPoint(je);
			var jd = this._getInLayer(je);
			if (!jd) {
				return null
			}
			if (!this.getImageMaskPixel(i9)) {
				return null
			}
			var jb = [jd.tileInfo.zoom, jd.tileInfo.col, jd.tileInfo.row];
			var jc = da.getTileRangeExtent(jb);
			var e = this.getImageObject(jd.textureSource, jb.join("-"));
			var T = Math.floor((i9[0] - jc.minX) / (jc.maxX - jc.minX) * e.width);
			var i = Math.floor((-i9[1] + jc.maxY) / (jc.maxY - jc.minY) * e.height);
			var ja = Math.floor((i * e.width + T) * 4);
			return [e.data.data[ja], e.data.data[ja + 1], e.data.data[ja + 2], e.data.data[ja + 3], ]
		},
		getImageObject: function(ja, i9) {
			var jb = this.tileImageDataCache.getData(i9);
			if (jb) {
				return jb
			}
			var i = document.createElement("canvas");
			i.width = ja.width;
			i.height = ja.height;
			var T = i.getContext("2d");
			T.drawImage(ja, 0, 0, ja.width, ja.height);
			var e = {
				width: ja.width,
				height: ja.height,
				data: T.getImageData(0, 0, ja.width, ja.height)
			};
			this.tileImageDataCache.setData(i9, e);
			T = null;
			i = null;
			return e
		},
		getValue: function(i) {
			if (this.isPixelMap && i && this.fomularJS) {
				if (!(i instanceof Array)) {
					i = this.getImagePixel(i.point)
				}
				var e = this.fomularJS({
					r: i[0],
					g: i[1],
					b: i[2],
					a: i[3]
				});
				if (e >= this.clamp[0] && e <= this.clamp[1]) {
					return e
				}
			}
			return null
		},
		setMaskImageObject: function(T) {
			var e = document.createElement("canvas");
			e.width = T.width;
			e.height = T.height;
			var i = e.getContext("2d");
			i.drawImage(T, 0, 0, T.width, T.height);
			this.imageMaskObject = {
				width: T.width,
				height: T.height,
				data: i.getImageData(0, 0, T.width, T.height)
			};
			i = null;
			e = null
		},
		getImageMaskPixel: function(e) {
			if (!this.imageMaskObject || !this.maskBox) {
				return true
			}
			var i9 = [e];
			var je = this.maskBox;
			var jb = je[1][0] - je[0][0];
			var ja = je[1][1] - je[0][1];
			var T = Math.floor((i9[0][0] - je[0][0]) / jb * this.imageMaskObject.width);
			var i = Math.floor((-i9[0][1] + je[1][1]) / ja * this.imageMaskObject.height);
			var jd = Math.floor((i * this.imageMaskObject.width + T) * 4);
			if (T > this.imageMaskObject.width || T < 0) {
				return null
			}
			if (i > this.imageMaskObject.height || i < 0) {
				return null
			}
			var jc = this.imageMaskObject.data.data;
			if (jd + 3 > jc.length) {
				return false
			}
			if (jc[jd + 3] > 0) {
				if (this.maskData > -1 && this.maskData !== jc[jd]) {
					return false
				}
				return true
			}
			return false
		},
		calMaskBox: function() {
			var T = this.maskCoord || [];
			if (this.hasMaskPng && T && T.length === 2) {
				var e = [];
				for (var i9 = 0; i9 < T.length; i9++) {
					e[i9] = da.transformBDmcPoint(ia.convertLL2MC(T[i9]))
				}
				this.maskBox = e;
				this.tileMaskUvCache.clear()
			} else {
				this.maskBox = null
			}
		},
		buildFillMaskVertex: function(jf, jd, jc) {
			var je = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
			if (!this.maskBox) {
				return je
			}
			var jh = [jf, jd, jc].join("-");
			var e = this.tileMaskUvCache.getData(jh);
			if (e) {
				return e
			}
			if (this.hasMaskPng) {
				var jk = this.maskBox || [];
				var jb = [jc, jf, jd];
				var jg = da.getTileRangeExtent(jb);
				var ja = jk[1][0] - jk[0][0];
				var T = jk[1][1] - jk[0][1];
				var jj = (jg.minX - jk[0][0]) / ja;
				var ji = (jg.minY - jk[0][1]) / T;
				var i9 = (jg.maxX - jk[0][0]) / ja;
				var i = (jg.maxY - jk[0][1]) / T;
				je = [jj, ji, i9, ji, i9, i, jj, ji, i9, i, jj, i]
			}
			this.tileMaskUvCache.setData(jh, je);
			return je
		},
		loadMaskPng: function(T) {
			var e = this;

			function i(ja, i9) {
				if (i9) {
					e.hasMaskPng = true;
					e.setMaskImageObject(ja);
					e.calMaskBox();
					e.doOnceDraw()
				} else {
					e.hasMaskPng = false
				}
				e.maskTextureSource = i9 ? ja : null
			}
			this.imageLoad(T, i)
		},
		imageLoad: function(i, ja) {
			if (!i) {
				ja && ja(null, false)
			}
			var e = new Image();
			e.crossOrigin = "anonymous";
			e.onload = function i9() {
				ja && ja(this, true)
			};
			e.onerror = function T() {
				ja && ja(null, false)
			};
			e.src = i
		},
		toString: function() {
			return "PixelLayer"
		}
	});
	var O = function(e) {
		var e = e || {};
		this.inputCRS = e.inputCRS || "EPSG3857";
		this.outCRS = e.outCRS || "EPSG3857";
		this.minZoom = e.minZoom || 3;
		this.maxZoom = e.maxZoom || 19;
		this.retry = e.retry || false;
		this.retryTime = e.retryTime || 600;
		this.useThumbData = e.useThumbData || true;
		this.lastZoom = 3;
		this.cacheSize = e.cacheSize || 128;
		this.tileType = hb.getInstance("web");
		this._mapCenter = {};
		this._featureMgr = [
			[],
			[],
			[]
		];
		this._gridRefs = {
			row: {},
			col: {}
		};
		this.tileCache = new at(this.cacheSize, {
			clearCallback: function(i) {}
		})
	};
	O.inherits(cJ, "BaiduLayer");
	es.extend(O.prototype, {
		fetch: function(i, i9, ja) {
			var i9 = Math.ceil(i9) || 3;
			var i = i || [];
			if (i.length !== 4 || i9 > 19) {
				ja(null);
				return
			}
			var e = this.getZoomState(i9);
			var T = this.calCoord(i, i9, e);
			this.curViewTilesInfo = this.calTilesOrders(T.sw, T.ne, i9);
			this.clearData();
			this.clearRefs();
			this.loadLayerData(this.curViewTilesInfo, e, true, ja)
		},
		calCoord: function(T, i9, i) {
			if (T.length !== 4) {
				return
			}
			var e = gcoord.transform([T[0], T[1]], gcoord[this.inputCRS], gcoord.BD09MC);
			var ja = gcoord.transform([T[2], T[3]], gcoord[this.inputCRS], gcoord.BD09MC);
			if (ja[1] > 19505879.362428114 || e[1] < -15949096.637571886) {
				ja[1] = 19505879.362428114;
				e[1] = -15949096.637571886
			}
			this._mapCenter[i9] = new cd((e[0] + ja[0]) / 2, (e[1] + ja[1]) / 2);
			return {
				sw: e,
				ne: ja
			}
		},
		calTilesOrders: function(je, jk, jg) {
			var jh = this.tileType.getMercatorSize(jg, jg);
			var jc = [Math.floor(je[0] / jh), Math.floor(je[1] / jh)];
			var i = [Math.floor(jk[0] / jh), Math.floor(jk[1] / jh)];
			var jd = jc[0] - 1;
			var jb = i[0] + 2;
			var ja = jc[1] - 1;
			var jj = i[1] + 2;
			var jf = [];
			for (var i9 = jd; i9 < jb; i9++) {
				for (var ji = ja; ji < jj; ji++) {
					var T = {
						col: i9,
						row: ji,
						zoom: jg,
						useZoom: jg,
						tileTypeName: "web",
						loopOffsetX: 0,
						tileSize: 256,
						baseTileSize: 256,
						mercatorSize: jh,
						combine: false,
						dataIndex: 256
					};
					jf.push(T);
					var e = "id_" + i9 + "_" + ji + "_" + jg;
					jf[e] = true
				}
			}
			jf.sort((function(jl) {
				return function(jm, jn) {
					return ((0.4 * Math.abs(jm.col - jl[0]) + 0.6 * Math.abs(jm.row - jl[1])) - (0.4 * Math.abs(jn.col - jl[0]) + 0.6 * Math.abs(jn.row - jl[1])))
				}
			})([(jd + jb) / 2, (ja + jj) / 2]));
			jf.zoom = jg;
			jf.tileTypeName = "web";
			return jf
		},
		getZoomState: function(i) {
			var e = i - this.lastZoom;
			if (e > 0) {
				this.zoomState = 1
			} else {
				if (e < 0) {
					this.zoomState = -1
				}
			}
			this.lastZoom = i;
			return this.zoomState || 0
		},
		loadLayerData: function(jg, i9, ja, jf) {
			this.thumbCache = {};
			if (ja) {
				for (var jd = 0, jb = jg.length; jd < jb; jd++) {
					var T = jg[jd];
					var jc = this.getTileKey(T);
					var e = this.tileCache.getData(jc);
					if (e && e.status === "ready") {
						e.key = jc;
						this.setData(e, 2)
					} else {
						if (this.useThumbData) {
							i9 === 1 && this.setThumbData(T.col, T.row, T.zoom, T.useZoom, i9)
						}
					}
				}
				this.calOutData(jf)
			}
			for (var jd = 0, jb = jg.length; jd < jb; jd++) {
				var T = jg[jd];
				var jc = this.getTileKey(T);
				var e = this.tileCache.getData(jc);
				if (!e) {
					this.tileCache.setData(jc, {});
					var je = this;
					this.loadRasterTileData(T, function(i, jh) {
						je.rasterTileDataCbk(i, jh, jf)
					})
				}
			}
		},
		loadRasterTileData: function(i, e) {
			var T = new Image();
			var ja = i.col;
			var jd = i.row;
			var jb = i.zoom;
			var i9 = this.getTilesUrl(new eL(ja, jd), jb);
			if (!i9) {
				return
			}
			var jc = this.getTileKey(i);
			T = this.loadTileImage(i9, i, jc, e);
			T.tileInfo = i
		},
		loadTileImage: function(jd, e, T, jb) {
			var i9 = new Image();
			i9.crossOrigin = "anonymous";
			var jc = this;
			var ja;

			function je() {
				if (jc.retry) {
					ja && clearInterval(ja);
					ja = null
				}
			}
			if (this.retry) {
				var i = 1;
				ja = setInterval(function() {
					if (i > 3) {
						je();
						return
					}
					var jf = jc.getTilesUrl(new eL(e.col, e.row), e.zoom, i);
					i9.src = jf;
					i++
				}, this.retryTime)
			}
			i9.onload = function() {
				je();
				jb && jb(this, T)
			};
			i9.onerror = function() {
				je();
				jb && jb(null, T)
			};
			i9.src = jd;
			return i9
		},
		rasterTileDataCbk: function(ja, i9, jd) {
			if (!ja || typeof ja === "string") {
				this.tileCache.removeData(i9);
				return
			}
			var i = ja.tileInfo;
			var T = i.col;
			var jf = i.row;
			var je = i.zoom;
			var e = this.tileCache.getData(i9);
			if (!e) {
				return
			}
			e.textureSource = ja;
			e.dataType = fY;
			e.tileInfo = i;
			e.status = "ready";
			this.tileCache.setData(i9, e);
			var jb = "id_" + T + "_" + jf + "_" + je;
			var jc = false;
			if (this.curViewTilesInfo[jb]) {
				e.png8 = this.png8 || false;
				e.key = i9;
				this.setData(e, 2);
				jc = true
			}
			if (jc) {
				this.calOutData(jd, e)
			}
		},
		getTilesUrl: function(ja, jh, i) {
			var jc = i || 0;
			var T = ja.x;
			var ji = ja.y;
			var je = iO("ditu", "normal");
			var jd = je.udt;
			var jg = dO.B_NORMAL_MAP.tileUrls;
			var jb = Math.abs(T + ji + jc) % jg.length;
			var jf = jg[jb];
			if (T < 0) {
				T = "M" + (-T)
			}
			if (ji < 0) {
				ji = "M" + (-ji)
			}
			var i9 = "x=" + T + "&y=" + ji + "&z=" + Math.floor(jh);
			i9 += "&styles=pl&scaler=2&udt=" + jd + "&from=jsapi3_0";
			var e = jf + "?qt=vtile&" + i9;
                        console.log('111111111111')
			return e
		},
		calOutData: function(jf, T) {
			if (!T) {
				for (var jc = 0; jc < this._featureMgr.length; jc++) {
					var e = this._featureMgr[jc];
					for (var ja = 0; ja < e.length; ja++) {
						var i9 = e[ja].tileInfo;
						if (jc === 2) {
							var jd = e[ja].extent;
							if (jd) {
								this.addRefs(jd, i9.col, i9.row)
							} else {
								var je = this.calBoxCoord(i9);
								if (!je) {
									continue
								}
								e[ja].extent = this.findRefs(je, i9.col, i9.row)
							}
						}
					}
				}
				jf({
					size: this.curViewTilesInfo.length,
					zoom: this.lastZoom,
					data: this._featureMgr
				})
			} else {
				var jb = this.calBoxCoord(T.tileInfo);
				if (!jb) {
					return
				}
				T.extent = this.findRefs(jb, T.tileInfo.col, T.tileInfo.row);
				jf({
					zoom: this.lastZoom,
					size: this.curViewTilesInfo.length,
					data: [
						[],
						[],
						[T]
					]
				})
			}
		},
		calOutData_back: function(jh, i9) {
			if (!i9) {
				var jb;
				var ji;
				var jf;
				for (var jd = 0; jd < this._featureMgr.length; jd++) {
					var T = this._featureMgr[jd];
					for (var jc = 0; jc < T.length; jc++) {
						var ja = T[jc].tileInfo;
						if (jd === 2) {
							if (jc === 0) {
								var je = this.calBoxCoord(ja);
								T[0].extent = je;
								jb = T[0];
								ji = je[2] - je[0];
								jf = je[3] - je[1]
							} else {
								if (jb && ji && jf) {
									var e = (ja.row - jb.tileInfo.row) * jf;
									var jg = (ja.col - jb.tileInfo.col) * ji;
									var je = jb.extent;
									T[jc].extent = [je[0] + jg, je[1] + e, je[2] + jg, je[3] + e]
								}
							}
						} else {
							var je = this.calBoxCoord(ja);
							T[jc].extent = je
						}
					}
				}
				jh({
					size: this.curViewTilesInfo.length,
					zoom: this.lastZoom,
					data: this._featureMgr
				})
			} else {
				if (this._featureMgr[2].length === 1) {
					var je = this.calBoxCoord(i9.tileInfo);
					i9.extent = je;
					this.featureCell = i9;
					this.cellW = je[2] - je[0];
					this.cellH = je[3] - je[1]
				} else {
					var e = (i9.tileInfo.row - this.featureCell.tileInfo.row) * this.cellH;
					var jg = (i9.tileInfo.col - this.featureCell.tileInfo.col) * this.cellW;
					var je = this.featureCell.extent;
					i9.extent = [je[0] + jg, je[1] + e, je[2] + jg, je[3] + e]
				}
				jh({
					zoom: this.lastZoom,
					size: this.curViewTilesInfo.length,
					data: [
						[],
						[],
						[i9]
					]
				})
			}
		},
		calBoxCoord: function(e) {
			var i = ia.prototype.tileToBound(e, this._mapCenter[e.zoom])
				.LL;
			var T = gcoord.transform([i.sw.lng, i.sw.lat], gcoord.BD09LL, gcoord[this.outCRS]);
			var i9 = gcoord.transform([i.ne.lng, i.ne.lat], gcoord.BD09LL, gcoord[this.outCRS]);
			return [T[0], T[1], i9[0], i9[1]]
		},
		clearData: function() {
			this._featureMgr = [
				[],
				[],
				[]
			]
		},
		addRefs: function(i, e, T) {
			this._gridRefs.row[T] = i[1];
			this._gridRefs.row[T + 1] = i[3];
			this._gridRefs.col[e] = i[0];
			this._gridRefs.col[e + 1] = i[2]
		},
		findRefs: function(i, e, i9) {
			var T = [];
			this._gridRefs.row[i9] && (T[1] = this._gridRefs.row[i9]);
			this._gridRefs.row[i9 + 1] && (T[3] = this._gridRefs.row[i9 + 1]);
			this._gridRefs.col[e] && (T[0] = this._gridRefs.col[e]);
			this._gridRefs.col[e + 1] && (T[2] = this._gridRefs.col[e + 1]);
			!this._gridRefs.row[i9] && (this._gridRefs.row[i9] = i[1]) && (T[1] = i[1]);
			!this._gridRefs.row[i9 + 1] && (this._gridRefs.row[i9 + 1] = i[3]) && (T[3] = i[3]);
			!this._gridRefs.col[e] && (this._gridRefs.col[e] = i[0]) && (T[0] = i[0]);
			!this._gridRefs.col[e + 1] && (this._gridRefs.col[e + 1] = i[2]) && (T[2] = i[2]);
			return T
		},
		clearRefs: function() {
			this._gridRefs = {
				row: {},
				col: {}
			}
		},
		destroy: function() {
			this.tileCache.clear();
			this.clearData();
			this.clearRefs();
			this._mapCenter = {}
		},
		setData: function(ja, T) {
			var e = this._featureMgr[T];
			for (var i9 = 0; i9 < e.length; i9++) {
				if (e[i9].key && e[i9].key === ja.key) {
					e[i9] = ja;
					return
				}
			}
			e.push(ja)
		},
		getTileKey: function(e, i9) {
			i9 = i9 || {};
			var i = typeof i9.useZoom === "number" ? i9.useZoom : e.useZoom;
			var T = "default";
			return "web_" + T + "_" + e.col + "_" + e.row + "_" + e.zoom + "_" + i
		},
		setThumbData: function(i, ja, i9, e, T) {
			if (T === 1) {
				if (this._findParentZoomTile(i, ja, i9, e, 8) === false) {
					this._findChildZoomTile(i, ja, i9, e, 3)
				}
			} else {
				if (T === -1) {
					if (this._findChildZoomTile(i, ja, i9, e, 3) === false) {
						this._findParentZoomTile(i, ja, i9, e, 8)
					}
				}
			}
			this.sortThumbData()
		},
		_findParentZoomTile: function(jc, jl, jk, ja, jf) {
			var jb = "web";
			var T = 3;
			var e = jc;
			var ji = jl;
			var jg = jk;
			var jh = ja;
			for (var je = 1; je <= jf; je++) {
				var i9 = this.tileType.getParentTile(e, ji, jg, jh, T);
				if (i9 === null) {
					continue
				}
				var jj = this.getTileKey(i9);
				var jd = this.tileCache.getData(jj);
				if (jd && jd.status === "ready") {
					if (this.thumbCache[jj]) {
						continue
					}
					jd.key = jj;
					this.setData(jd, 0);
					this.thumbCache[jj] = true;
					return true
				}
				e = i9.col;
				ji = i9.row;
				jg = i9.zoom;
				jh = i9.useZoom
			}
			return false
		},
		_findChildZoomTile: function(jd, jf, e, ja, jo) {
			var jm = "web";
			var ji = 21;
			var jc = jd;
			var je = jf;
			var jg = e;
			var i9 = ja;
			var jb = true;
			for (var jl = 1; jl <= jo; jl++) {
				var jj = false;
				var T = this.tileType.getChildTiles(jc, je, jg, i9, ji, jl);
				if (!T) {
					continue
				}
				for (var jk = 0; jk < T.length; jk++) {
					var jh = this.getTileKey(T[jk]);
					var jn = this.tileCache.getData(jh);
					if (jn && jn.status === "ready") {
						if (!this.thumbCache[jh]) {
							jn.key = jh;
							this.setData(jn, 1);
							this.thumbCache[jh] = true
						}
						jj = true
					} else {
						jb = false
					}
				}
				if (jj) {
					break
				}
			}
			return jb
		},
		sortThumbData: function() {
			var e = this._featureMgr;
			if (!e) {
				return
			}
			if (e[0] && e[0].length > 0) {
				e[0].sort(function(T, i) {
					return T.tileInfo.useZoom - i.tileInfo.useZoom
				})
			}
		}
	});
	bo.register(function(i) {
		if (i.config && i.config.isOverviewMap) {
			return
		}
		if (i.isLoaded()) {
			E(i)
		} else {
			i.addEventListener("load", function() {
				E(this)
			})
		}
		i.cityName = "中国";
		i.cCode = "1";
		var e = {};
		e.enableRequest = true;
		e.request = function() {
			if (e.enableRequest) {
				e.enableRequest = false;
				setTimeout(function() {
					e._request()
				}, 500)
			}
		};
		e._request = function() {
			var i9 = i.getBoundsIn();
			var jb = i.getZoom();
			var T = i9.getSouthWest();
			var ja = i9.getNorthEast();
			iU.request(function(jf) {
				if (jf.current_city["code"] >= 9000 && jf.current_city["code"] <= 9378) {
					jf.current_city["name"] = "台湾省"
				}
				if (jf.current_city["code"] >= 20000 && jf.current_city["code"] <= 20499) {
					jf.current_city["name"] = "新加坡"
				}
				if (jf.current_city["code"] >= 20500 && jf.current_city["code"] <= 25999) {
					jf.current_city["name"] = "泰国"
				}
				if (jf.current_city["code"] >= 26000 && jf.current_city["code"] <= 29999) {
					jf.current_city["name"] = "日本"
				}
				if (jf.current_city["code"] >= 30000 && jf.current_city["code"] <= 30999) {
					jf.current_city["name"] = "韩国"
				}
				if (jf.current_city["code"] >= 31000 && jf.current_city["code"] <= 37000) {
					jf.current_city["name"] = "亚太"
				}
				if (jf.current_city["code"] >= 46609 && jf.current_city["code"] <= 52505) {
					jf.current_city["name"] = "欧洲"
				}
				if (jf.current_city["code"] >= 39509 && jf.current_city["code"] <= 53500) {
					jf.current_city["name"] = "南美洲"
				}
				if (jf.current_city["code"] >= 54000 && jf.current_city["code"] <= 70000) {
					jf.current_city["name"] = "北美洲"
				}
				if (jf.current_city["code"] === 54003 && jf.current_city["code"] >= 60731 && jf.current_city["code"] <= 61123) {
					jf.current_city["name"] = "美国"
				}
				if (jf.current_city["code"] === 54015 || jf.current_city["code"] >= 57970 && jf.current_city["code"] <= 60223) {
					jf.current_city["name"] = "加拿大"
				}
				if (jf.current_city["code"] === 54025 || jf.current_city["code"] >= 54338 && jf.current_city["code"] <= 57374) {
					jf.current_city["name"] = "墨西哥"
				}
				e.enableRequest = true;
				if (jf && jf.current_city) {
					var je = jf.current_city["name"];
					var jd = jf.current_city["code"];
					if (jd !== i.cCode) {
						var jc = new e7("oncitychange");
						jc.name = je;
						jc.code = jd;
						i.dispatchEvent(jc)
					}
					i.cityName = je;
					i.cCode = jd;
					if (!bJ()) {
						cD(i)
					}
				}
			}, {
				qt: "cen",
				b: T.lng + "," + T.lat + ";" + ja.lng + "," + ja.lat,
				l: jb
			}, "", "", true)
		};
		i.addEventListener("load", function(T) {
			e.request()
		});
		i.addEventListener("moveend", function(T) {
			e.request()
		});
		i.addEventListener("zoomend", function(T) {
			e.request()
		});
		e.request()
	});

	function E(i) {
		if (i.temp.copyadded) {
			return
		}
		i.temp.copyadded = true;
		if (!i.cpyCtrl) {
			var i9 = new h3(2, 2);
			i.config.cpyCtrlOffset = i9;
			if (bJ()) {
				i9.width = 72;
				i9.height = 0
			}
			var T = new fr({
				offset: i9,
				printable: true
			});
			i.cpyCtrl = T
		}
		if (!bJ()) {
			cD(i);
			i.addEventListener("maptypechange", function() {
				cD(i)
			})
		}
		i.addControl(T);
		var e = new br();
		e._opts = {
			printable: true
		};
		i.logoCtrl = e;
		i.addControl(e);
		i.addEventListener("resize", function() {
			if (this.getSize()
				.width >= 300 && i.getSize()
				.height >= 100) {
				e.show();
				T.setOffset(i.config.cpyCtrlOffset)
			} else {
				e.hide();
				T.setOffset(new h3(4, 2))
			}
		});
		if (i.getSize()
			.width >= 300 && i.getSize()
			.height >= 100) {
			e.show()
		} else {
			e.hide();
			T.setOffset(new h3(4, 2))
		}
		i.addEventListener("oncopyrightoffsetchange", function(ja) {
			i.logoCtrl.setOffset(ja.target.logo);
			i.cpyCtrl.setOffset(ja.target.cpy)
		});
		i.dispatchEvent(new e7("oncopyrightaddend"))
	}

	function cD(jo) {
		if (!jo.cpyCtrl) {
			var jw = new h3(2, 2);
			if (bJ()) {
				jw.width = 72;
				jw.height = 0
			}
			var jr = new fr({
				offset: jw,
				printable: true
			});
			jo.cpyCtrl = jr
		}
		var jF = jo.cityName || "中国";
		var jp = jo.getMapType();
		var jq = ["常州市", "南昌市", "乌鲁木齐市", "无锡市", "福州市", "泉州市", "珠海市", "贵阳市"];
		var ji = ["北京市", "上海市", "广州市", "深圳市", "宁波市", "石家庄市", "沈阳市", "长春市", "青岛市", "温州市", "台州市", "金华市", "佛山市", "中山市", "昆明市", "南宁市", "苏州市", "西安市", "济南市", "郑州市", "合肥市", "呼和浩特市", "杭州市", "成都市", "武汉市", "长沙市", "天津市", "南京市", "重庆市", "大连市", "东莞市", "厦门市"];
		var jk = ["香港特别行政区"];
		var je = ["台湾省"];
		var jx = ["日本"];
		var jD = ["韩国"];
		var js = ["泰国"];
		var jv = ["亚太"];
		var jf = ["新加坡"];
		var jE = ["欧洲"];
		var i9 = ["南美洲"];
		var jA = ["北美洲"];
		var T = ["美国"];
		var ju = ["墨西哥"];
		var jc = ["加拿大"];
		for (var jB in jq) {
			if (jq[jB] === jF) {
				var jl = true;
				break
			}
		}
		for (var jB in ji) {
			if (ji[jB] === jF) {
				var ja = true;
				break
			}
		}
		for (var jB in jk) {
			if (jk[jB] === jF) {
				var jH = true;
				break
			}
		}
		if (je[0] === jF) {
			var jz = true
		}
		if (jf[0] === jF) {
			var i = true
		}
		if (jx[0] === jF) {
			var jh = true
		}
		if (jD[0] === jF) {
			var jn = true
		}
		if (js[0] === jF) {
			var jm = true
		}
		if (jv[0] === jF) {
			var jd = true
		}
		if (jE[0] === jF) {
			var jj = true
		}
		if (i9[0] === jF) {
			var jg = true
		}
		if (jA[0] === jF) {
			var e = true
		}
		if (T[0] === jF) {
			var jC = true
		}
		if (jc[0] === jF) {
			var jy = true
		}
		if (ju[0] === jF) {
			var jb = true
		}
		var jG = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "];
		var jt = "rgba(255, 255, 255, 0.701961)";
		if (jo.getZoom() <= 9) {
			jG = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
		} else {
			if (jz) {
				jG = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
			} else {
				if (jh || jn) {
					jG = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
				} else {
					if (i || jm) {
						jG = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
					} else {
						if (jd) {
							jG = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
						} else {
							if (jj) {
								jG = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
							} else {
								if (jg) {
									jG = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
								} else {
									if (e) {
										jG = ["&copy;&nbsp;2022 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]
									}
								}
							}
						}
					}
				}
			}
		}
		if (jo.getZoom() <= 9) {
			jG.push("长地万方");
			jG.push(' &amp; <a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>');
			jG.push(' &amp; <a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>');
			if (jp === BMAP_SATELLITE_MAP || jp === BMAP_HYBRID_MAP) {
				jG.push(' &amp; <a target="_blank" href="http://www.eso.org/public/">ESO</a>');
				jt = "rgba(0,0,0,.7)"
			}
		} else {
			if (jh || jn) {
				jG.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>')
			} else {
				if (i || jm) {
					jG.push('<a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>')
				} else {
					if (jd) {
						jG.push('<a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>');
						jG.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
					} else {
						if (jj) {
							jG.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>');
							jG.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
						} else {
							if (jg) {
								jG.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>');
								jG.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
							} else {
								if (jC || jb || jy) {
									jG.push('<a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>');
									jG.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
								} else {
									if (e) {
										jG.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>');
										jG.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>')
									} else {
										jG.push("长地万方");
										if (jl) {
											jG.push(' &amp; <a target="_blank" href="http://www.palmcity.cn/palmcity/">PalmCity</a>')
										}
										if (jH) {
											jG.push(' &amp; <a target="_blank" href="http://www.mapking.com/HongKong/eng/home/MapKing_Webmap.html">MapKing</a>')
										}
										if (jz) {
											jG.push(' &amp; <a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>');
											jG.push(' &amp; <a target="_blank" href="http://www.localking.com.tw/about/localking.aspx">樂客LocalKing</a>')
										}
										if (jp === BMAP_SATELLITE_MAP || jp === BMAP_HYBRID_MAP) {
											jt = "rgba(0,0,0,.7)"
										}
									}
								}
							}
						}
					}
				}
			}
		}
		jG.unshift('<span style="background: ' + jt + ';padding: 0px 1px;line-height: 16px;display: inline;height: 16px;">');
		jG.push("</span>");
		jG = jG.join("");
		jo.cpyCtrl.addCopyright({
			id: 1,
			content: jG
		})
	}
	window.BMAP_STATUS_SUCCESS = 0;
	window.BMAP_STATUS_CITY_LIST = 1;
	window.BMAP_STATUS_UNKNOWN_LOCATION = 2;
	window.BMAP_STATUS_UNKNOWN_ROUTE = 3;
	window.BMAP_STATUS_INVALID_KEY = 4;
	window.BMAP_STATUS_INVALID_REQUEST = 5;
	window.BMAP_STATUS_PERMISSION_DENIED = 6;
	window.BMAP_STATUS_SERVICE_UNAVAILABLE = 7;
	window.BMAP_STATUS_TIMEOUT = 8;
	window.BMAP_ROUTE_TYPE_WALKING = 2;
	window.BMAP_ROUTE_TYPE_DRIVING = 3;
	window.BMAP_ROUTE_TYPE_RIDING = 6;
	window.BMAP_ROUTE_STATUS_NORMAL = 0;
	window.BMAP_ROUTE_STATUS_EMPTY = 1;
	window.BMAP_ROUTE_STATUS_ADDRESS = 2;
	var cQ = "cur";
	var U = "cen";
	var D = "s";
	var c7 = "con";
	var cZ = "bd";
	var cu = "nb";
	var gf = "bt";
	var aE = "nav";
	var hj = "walk";
	var fe = "gc";
	var dt = "rgc";
	var F = "dec";
	var hw = "iploc";
	var f1 = "bse";
	var fA = "nse";
	var cN = "bl";
	var dS = "bsl";
	var fc = "bda";
	var dP = "sa";
	var aZ = "nba";
	var ho = "drag";
	var h4 = "ext";
	var iD = "exts";
	var iG = "hip";
	var gK = "ride";
	var iS = "drct";
	var eR = 2;
	var a5 = 4;
	var fl = 7;
	var hp = 11;
	var bS = 12;
	var en = 14;
	var cr = 15;
	var dG = 18;
	var au = 20;
	var aY = 21;
	var C = 19;
	var a = 23;
	var hI = 26;
	var av = 28;
	var fB = 31;
	var eA = 35;
	var hx = 44;
	var a3 = 45;
	var aq = 46;
	var iB = 47;
	var fF = -1;
	var a1 = 0;
	var bn = 1;
	var h8 = 2;
	var dj = 3;
	window.BMAP_POI_TYPE_NORMAL = 0;
	var cg = 1;
	var hr = 2;
	BMapGL.I = es.I;
	var bx = {};
	bx.removeHtml = function(e) {
		e = e.replace(/<\/?[^>]*>/g, "");
		e = e.replace(/[ | ]* /g, " ");
		return e
	};
	bx.parseGeoExtReg1 = function(e) {
		return e.replace(/([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0|[1-9]\d*),([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0|[1-9]\d*)(,)/g, "$1,$2;")
	};
	bx.parseGeoExtReg2 = function(i, e) {
		var T = new RegExp("(((-?\\d+)(\\.\\d+)?),((-?\\d+)(\\.\\d+)?);)(((-?\\d+)(\\.\\d+)?),((-?\\d+)(\\.\\d+)?);){" + e + "}", "ig");
		return i.replace(T, "$1")
	};
	var dd = 0;
	var cP = 1;
	var N = 2;
	bx.unique = function(T) {
		var jb = false;
		var ja = [];
		var jc = {};
		for (var i9 = 0, e = T.length; i9 < e; i9++) {
			if (!jc[T[i9]]) {
				jc[T[i9]] = true;
				ja.push(T[i9])
			}
		}
		return ja
	};
	bx.getBestLevel = function(T, i) {
		if (i) {
			var e = Math.min(i.width / 1100, i.height / 660);
			T = Math.round(T + (Math.log(e) / Math.log(2)))
		}
		if (T < 1) {
			T = 1
		}
		if (T > 21) {
			T = 21
		}
		return T
	};
	bx.parseGeo = function(jc, jf) {
		if (typeof jc != "string" || !jc) {
			return
		}
		var jh = jc.split("|");
		var e;
		var ja;
		var T;
		if (jh.length == 1) {
			e = bN(jc)
		} else {
			e = bN(jh[2]);
			ja = bN(jh[0]);
			T = bN(jh[1]);
			if (!jf) {
				return e
			}
		}
		var jd = {
			type: e.geoType
		};
		if (jf) {
			switch (jd.type) {
				case N:
					var je = new cd(e.geo[0][0], e.geo[0][1]);
					var jg = ia.convertMC2LL(je);
					jd.point = jg;
					jd.points = [jg];
					break;
				case cP:
					jd.points = [];
					var ji = e.geo[0];
					for (var jb = 0, i9 = ji.length - 1; jb < i9; jb += 2) {
						var jj = new cd(ji[jb], ji[jb + 1]);
						jj = ia.convertMC2LL(jj);
						jd.points.push(jj)
					}
					ja = new cd(ja.geo[0][0], ja.geo[0][1]);
					T = new cd(T.geo[0][0], T.geo[0][1]);
					ja = ia.convertMC2LL(ja);
					T = ia.convertMC2LL(T);
					jd.bounds = new ha(ja, T);
					break;
				default:
					break
			}
		}
		return jd
	};
	bx.parseGeoExt = function(js, jj) {
		if (!jj) {
			jj = 0
		} else {
			if (jj < 0.25) {
				jj = 0
			} else {
				if (jj > 0.25 && jj < 1) {
					jj = 1
				} else {
					if (jj > 32) {
						jj = 32
					}
				}
			}
		}
		var je = js.split("|");
		if (je.length == 1) {
			var i9 = bN(je[0]);
			return {
				type: i9.type,
				bound: "",
				points: i9.geo.join(",")
			}
		} else {
			if (je.length > 1) {
				var jk = js.split(";.=");
				var jg = [];
				var ja = [];
				var jl = 0;
				var jp = jk.length;
				for (var jm = 0; jm < jp; jm++) {
					var jr = jk[jm];
					if (jp > 1) {
						if (jm == 0) {
							jr = jr + ";"
						}
						if (jm > 0 && jm < jp - 1) {
							jr = ".=" + jr + ";"
						}
						if (jm == jp - 1) {
							jr = ".=" + jr
						}
					}
					var jb = jr.split("|");
					var jo = bN(jb[0]);
					var jn = bN(jb[1]);
					jg.push(jo.geo.join(","));
					jg.push(jn.geo.join(","));
					var i9 = bN(jb[2]);
					jl = i9.type;
					var jq = i9.geo.join(",");
					jq = bx.parseGeoExtReg1(jq);
					if (jj > 0) {
						jq = bx.parseGeoExtReg2(jq, jj)
					}
					ja.push(jq)
				}
				if (jp <= 1) {
					ja = ja.join(";")
				}
				if (jp == 2) {
					var T = ja[0] + ";" + ja[1];
					var jc = T.split(";");
					var e = [];
					for (var jm = 0; jm < jc.length; jm++) {
						var jf = jc[jm].split(",")[0];
						var jd = jc[jm].split(",")[1];
						var jh = new cd(jf, jd);
						var ji = ia.convertMC2LL(jh);
						e.push(ji)
					}
					ja = e
				}
				return {
					type: jl,
					bound: jg.join(";"),
					points: ja
				}
			}
		}
	};
	bx.getPoiPoint = function(e) {
		var T = [];
		var i = null;
		if (e.toString() == "Point") {
			i = e
		} else {
			if (typeof e == "string") {
				T = es.trim(e)
					.split(",");
				if (T.length < 2) {
					return
				}
				T[0] = parseFloat(es.trim(T[0]));
				T[1] = parseFloat(es.trim(T[1]))
			} else {
				T = e.slice(0);
				if (T.length < 2) {
					return
				}
			}
			i = new BMap.Point(T[0], T[1])
		}
		return i
	};
	bx.parseGeoStr = function(T) {
		var i = T.split(",");
		var e = new cd(i[0], i[1]);
		return ia.convertMC2LL(e)
	};
	bx.level = {
		country: 4,
		province: 11,
		city: 12,
		area: 13
	};
	var gq = ["=", ".", "-", "*"];
	var cK = 1 << 23;

	function bN(jf) {
		var je = g6(jf.charAt(0));
		var T = jf.substr(1);
		var jh = 0;
		var e = T.length;
		var ji = [];
		var jc = [];
		var jd = [];
		while (jh < e) {
			if (T.charAt(jh) == gq[0]) {
				if ((e - jh) < 13) {
					return 0
				}
				jd = dF(T.substr(jh, 13), ji);
				if (jd < 0) {
					return 0
				}
				jh += 13
			} else {
				if (T.charAt(jh) == ";") {
					jc.push(ji.slice(0));
					ji.length = 0;
					++jh
				} else {
					if ((e - jh) < 8) {
						return 0
					}
					jd = bY(T.substr(jh, 8), ji);
					if (jd < 0) {
						return 0
					}
					jh += 8
				}
			}
		}
		for (var jb = 0, i9 = jc.length; jb < i9; jb++) {
			for (var ja = 0, jg = jc[jb].length; ja < jg; ja++) {
				jc[jb][ja] /= 100
			}
		}
		return {
			geoType: je,
			geo: jc
		}
	}

	function g6(i) {
		var e = -1;
		if (i == gq[1]) {
			e = N
		} else {
			if (i == gq[2]) {
				e = cP
			} else {
				if (i == gq[3]) {
					e = dd
				}
			}
		}
		return e
	}

	function dF(ja, T) {
		var e = 0;
		var jc = 0;
		var jb = 0;
		for (var i9 = 0; i9 < 6; i9++) {
			jb = c6(ja.substr(1 + i9, 1));
			if (jb < 0) {
				return -1 - i9
			}
			e += jb << (6 * i9);
			jb = c6(ja.substr(7 + i9, 1));
			if (jb < 0) {
				return -7 - i9
			}
			jc += jb << (6 * i9)
		}
		T.push(e);
		T.push(jc);
		return 0
	}

	function bY(jb, i9) {
		var T = i9.length;
		if (T < 2) {
			return -1
		}
		var e = 0;
		var jd = 0;
		var jc = 0;
		for (var ja = 0; ja < 4; ja++) {
			jc = c6(jb.substr(ja, 1));
			if (jc < 0) {
				return -1 - ja
			}
			e += jc << (6 * ja);
			jc = c6(jb.substr(4 + ja, 1));
			if (jc < 0) {
				return -5 - ja
			}
			jd += jc << (6 * ja)
		}
		if (e > cK) {
			e = cK - e
		}
		if (jd > cK) {
			jd = cK - jd
		}
		i9.push(i9[T - 2] + e);
		i9.push(i9[T - 1] + jd);
		return 0
	}

	function c6(i) {
		var e = i.charCodeAt(0);
		if (i >= "A" && i <= "Z") {
			return e - "A".charCodeAt(0)
		} else {
			if (i >= "a" && i <= "z") {
				return (26 + e - "a".charCodeAt(0))
			} else {
				if (i >= "0" && i <= "9") {
					return (52 + e - "0".charCodeAt(0))
				} else {
					if (i == "+") {
						return 62
					} else {
						if (i == "/") {
							return 63
						}
					}
				}
			}
		}
		return -1
	}
	bx.pathToPoints = function(jb) {
		var i9 = [];
		if (typeof jb !== "string") {
			return i9
		} else {
			var ja = jb.split(";");
			for (var T = 0; T < ja.length; T++) {
				var e = ja[T].split(",");
				i9.push(new cd(e[0], e[1]))
			}
		}
		return i9
	};
	window.BMAP_POI_TYPE_NORMAL = 0;
	window.BMAP_POI_TYPE_BUSSTOP = 1;
	window.BMAP_POI_TYPE_BUSLINE = 2;
	window.BMAP_POI_TYPE_SUBSTOP = 3;
	window.BMAP_POI_TYPE_SUBLINE = 4;
	var L = 0;
	var gP = 1;
	var e3 = {};
	window.APIPack = e3;

	function az(i, e) {
		cJ.call(this);
		this._loc = {};
		this.setLocation(i);
		e = e || {};
		e.renderOptions = e.renderOptions || {};
		this._opts = {
			renderOptions: {
				panel: e.renderOptions.panel || null,
				map: e.renderOptions.map || null,
				autoViewport: e.renderOptions.autoViewport || true,
				selectFirstResult: e.renderOptions.selectFirstResult,
				highlightMode: e.renderOptions.highlightMode,
				enableDragging: e.renderOptions.enableDragging || false
			},
			onSearchComplete: e.onSearchComplete || function() {},
			onMarkersSet: e.onMarkersSet || function() {},
			onInfoHtmlSet: e.onInfoHtmlSet || function() {},
			onResultsHtmlSet: e.onResultsHtmlSet || function() {},
			onGetBusListComplete: e.onGetBusListComplete || function() {},
			onGetBusLineComplete: e.onGetBusLineComplete || function() {},
			onBusListHtmlSet: e.onBusListHtmlSet || function() {},
			onBusLineHtmlSet: e.onBusLineHtmlSet || function() {},
			onPolylinesSet: e.onPolylinesSet || function() {},
			reqFrom: e.reqFrom || ""
		};
		if (typeof e != "undefined" && typeof e.renderOptions != "undefined" && typeof e.renderOptions["autoViewport"] != "undefined") {
			this._opts.renderOptions.autoViewport = e.renderOptions["autoViewport"]
		} else {
			this._opts.renderOptions.autoViewport = true
		}
		this._opts.renderOptions.panel = es.G(this._opts.renderOptions.panel)
	}
	az.inherits(cJ, "BaseSearch");
	es.extend(az.prototype, {
		getResults: function() {
			if (!this._isMultiKey) {
				return this._results
			} else {
				return this._arrResults
			}
		},
		enableAutoViewport: function() {
			this._opts.renderOptions.autoViewport = true
		},
		disableAutoViewport: function() {
			this._opts.renderOptions.autoViewport = false
		},
		setLocation: function(e) {
			if (!e) {
				return
			}
			this._loc.src = e
		},
		setSearchCompleteCallback: function(e) {
			this._opts.onSearchComplete = e || function() {}
		},
		setMarkersSetCallback: function(e) {
			this._opts.onMarkersSet = e || function() {}
		},
		setPolylinesSetCallback: function(e) {
			this._opts.onPolylinesSet = e || function() {}
		},
		setInfoHtmlSetCallback: function(e) {
			this._opts.onInfoHtmlSet = e || function() {}
		},
		setResultsHtmlSetCallback: function(e) {
			this._opts.onResultsHtmlSet = e || function() {}
		},
		getStatus: function() {
			return this._status
		}
	});
	var cf = function(T, i) {
		az.call(this, T, i);
		i = i || {};
		i.renderOptions = i.renderOptions || {};
		this.setPageCapacity(i.pageCapacity);
		if (typeof i.renderOptions["selectFirstResult"] != "undefined" && !i.renderOptions["selectFirstResult"]) {
			this.disableFirstResultSelection()
		} else {
			this.enableFirstResultSelection()
		}
		this._overlays = [];
		this._arrPois = [];
		this._curIndex = -1;
		this._queryList = [];
		var e = this;
		gi.load("localSearch", function() {
			e._check()
		}, true)
	};
	cf.inherits(az, "LocalSearch");
	cf.DEFAULT_PAGE_CAPACITY = 10;
	cf.MIN_PAGE_CAPACITY = 1;
	cf.MAX_PAGE_CAPACITY = 100;
	cf.DEFAULT_RADIUS = 2000;
	cf.MAX_RADIUS = 100000;
	es.extend(cf.prototype, {
		search: function(e, i) {
			this._queryList.push({
				method: "search",
				arguments: [e, i]
			})
		},
		searchInBounds: function(e, T, i) {
			this._queryList.push({
				method: "searchInBounds",
				arguments: [e, T, i]
			})
		},
		searchNearby: function(T, i, e, i9) {
			this._queryList.push({
				method: "searchNearby",
				arguments: [T, i, e, i9]
			})
		},
		clearResults: function() {
			delete this._json;
			delete this._status;
			delete this._results;
			delete this._ud;
			this._curIndex = -1;
			this._setStatus();
			if (this._opts.renderOptions.panel) {
				this._opts.renderOptions.panel.innerHTML = ""
			}
		},
		gotoPage: function() {},
		enableFirstResultSelection: function() {
			this._opts.renderOptions.selectFirstResult = true
		},
		disableFirstResultSelection: function() {
			this._opts.renderOptions.selectFirstResult = false
		},
		setPageCapacity: function(e) {
			if (typeof e == "number" && !isNaN(e)) {
				this._opts.pageCapacity = e < 1 ? cf.DEFAULT_PAGE_CAPACITY : (e > cf.MAX_PAGE_CAPACITY ? cf.DEFAULT_PAGE_CAPACITY : e)
			} else {
				this._opts.pageCapacity = cf.DEFAULT_PAGE_CAPACITY
			}
		},
		getPageCapacity: function() {
			return this._opts.pageCapacity
		},
		toString: function() {
			return "LocalSearch"
		}
	});

	function a6(i) {
		this._opts = {};
		es.extend(this._opts, i);
		this._queryList = [];
		var e = this;
		gi.load("otherSearch", function() {
			e._asyncSearch()
		})
	}
	a6.inherits(cJ, "Geocoder");
	es.extend(a6.prototype, {
		getPoint: function(e, T, i) {
			this._queryList.push({
				method: "getPoint",
				arguments: [e, T, i]
			})
		},
		getLocation: function(e, T, i) {
			this._queryList.push({
				method: "getLocation",
				arguments: [e, T, i]
			})
		},
		toString: function() {
			return "Geocoder"
		}
	});

	function cz(e) {
		e = e || {};
		this.config = {
			timeout: e.timeout || 1000 * 10,
			maximumAge: e.maximumAge || 0,
			enableHighAccuracy: e.enableHighAccuracy || true,
			SDKLocation: e.SDKLocation || false
		};
		this._pendingCalls = [];
		var i = this;
		gi.load("otherSearch", function() {
			var T = i._pendingCalls.length;
			for (var i9 = 0; i9 < T; i9++) {
				var ja = i._pendingCalls[i9];
				i[ja.method].apply(i, ja.arguments)
			}
		})
	}
	es.extend(cz.prototype, {
		getCurrentPosition: function(e, i) {
			this._pendingCalls.push({
				method: "getCurrentPosition",
				arguments: arguments
			})
		},
		getStatus: function() {
			return BMAP_STATUS_UNKNOWN_LOCATION
		},
		enableSDKLocation: function() {
			if (bJ()) {
				this.config.SDKLocation = true
			}
		},
		disableSDKLocation: function() {
			this.config.SDKLocation = false
		}
	});

	function eN() {
		this._queryList = [];
		var e = this;
		gi.load("otherSearch", function() {
			e._asyncSearch()
		})
	}
	eN.inherits(cJ, "Boundary");
	es.extend(eN.prototype, {
		get: function(i, e) {
			this._queryList.push({
				method: "get",
				arguments: [i, e]
			})
		},
		toString: function() {
			return "Boundary"
		},
		parsebdStr: function(i, e) {}
	});

	function eG(i) {
		i = i || {};
		i.renderOptions = i.renderOptions || {};
		this._opts = {
			renderOptions: {
				map: i.renderOptions.map || null
			}
		};
		this._queryList = [];
		var e = this;
		gi.load("otherSearch", function() {
			e._asyncSearch()
		})
	}
	eG.inherits(cJ, "LocalCity");
	es.extend(eG.prototype, {
		get: function(e) {
			this._queryList.push({
				method: "get",
				arguments: [e]
			})
		},
		toString: function() {
			return "LocalCity"
		}
	});

	function gu(e, T) {
		cJ.call(this);
		this.markersList = [];
		this.destList = [];
		this.pointsList = [];
		this._opts = T;
		this.json = e;
		this.map = this._opts.renderOptions.map || null;
		this.sType = this._opts.sType;
		this.infoWindow = null;
		this.curPointIndex = 0;
		this.startName = "";
		this.endIndex = 1;
		this.endName = "";
		this.resCity = [0, 0, 0, 0, 0, 0, 0];
		this.locPois = [];
		this.curPageIndex = [1, 1, 1, 1, 1, 1, 1];
		this.totalPage = [1, 1, 1, 1, 1, 1, 1];
		this.resCount = [0, 0, 0, 0, 0, 0, 0];
		this.resType = [0, 0, 0, 0, 0, 0, 0];
		this.qInfo = [{
			n: "",
			c: 0,
			u: 0,
			x: 0,
			y: 0,
			t: -1
		}, {
			n: "",
			c: 0,
			u: 0,
			x: 0,
			y: 0,
			t: -1
		}, {
			n: "",
			c: 0,
			u: 0,
			x: 0,
			y: 0,
			t: -1
		}, {
			n: "",
			c: 0,
			u: 0,
			x: 0,
			y: 0,
			t: -1
		}, {
			n: "",
			c: 0,
			u: 0,
			x: 0,
			y: 0,
			t: -1
		}, {
			n: "",
			c: 0,
			u: 0,
			x: 0,
			y: 0,
			t: -1
		}, {
			n: "",
			c: 0,
			u: 0,
			x: 0,
			y: 0,
			t: -1
		}];
		this.curSelectedIndex = -1;
		this.tpList = [];
		this.tpListInMap = [];
		var i = this;
		gi.load("route", function() {})
	}
	gu.inherits(cJ, "RouteAddr");

	function d2(T, i) {
		az.call(this, T, i);
		this.QUERY_TYPE_BUSLIST = cN;
		this.RETURN_TYPE_BUSLIST = cr;
		this.QUERY_TYPE_BUSLINE = dS;
		this.RETURN_TYPE_BUSLINE = dG;
		this._queryList = [];
		var e = this;
		gi.load("buslineSearch", function() {
			e._asyncSearch()
		})
	}
	var e2 = w.staticHost + "/wolfman/static/common/images/";
	d2._iconOpen = w.apiIMG + "/iw_plus.gif";
	d2._iconClose = w.apiIMG + "/iw_minus.gif";
	d2._stopUrl = e2 + "new/bus-stop-1x_ddd4723.png";
	d2.inherits(az, "BusLineSearch");
	es.extend(d2.prototype, {
		getBusList: function(e) {
			this._queryList.push({
				method: "getBusList",
				arguments: [e]
			})
		},
		getBusLine: function(e) {
			this._queryList.push({
				method: "getBusLine",
				arguments: [e]
			})
		},
		setGetBusListCompleteCallback: function(e) {
			this._opts.onGetBusListComplete = e || function() {}
		},
		setGetBusLineCompleteCallback: function(e) {
			this._opts.onGetBusLineComplete = e || function() {}
		},
		setBusListHtmlSetCallback: function(e) {
			this._opts.onBusListHtmlSet = e || function() {}
		},
		setBusLineHtmlSetCallback: function(e) {
			this._opts.onBusLineHtmlSet = e || function() {}
		},
		setPolylinesSetCallback: function(e) {
			this._opts.onPolylinesSet = e || function() {}
		}
	});

	function h5(i) {
		az.call(this, i);
		i = i || {};
		this._options = {
			input: i.input || null,
			baseDom: i.baseDom || null,
			types: i.types || [],
			onSearchComplete: i.onSearchComplete || function() {}
		};
		this._loc.src = i.location || "全国";
		this._word = "";
		this._show = false;
		this._suggestion = null;
		this._inputValue = "";
		this._initialize();
		var e = this;
		gi.load("autocomplete", function() {
			e._asyncSearch()
		}, true)
	}
	h5.inherits(az, "Autocomplete");
	es.extend(h5.prototype, {
		_initialize: function() {},
		show: function() {
			this._show = true
		},
		hide: function() {
			this._show = false
		},
		setTypes: function(e) {
			this._options.types = e
		},
		setLocation: function(e) {
			this._loc.src = e
		},
		search: function(e) {
			this._word = e
		},
		setInputValue: function(e) {
			this._inputValue = e
		},
		setSearchCompleteCallback: function(e) {
			this._options.onSearchComplete = e
		}
	});
	var iJ = function(i, e) {
		az.call(this, i, e)
	};
	es.inherit(iJ, az, "BaseRoute");
	es.extend(iJ.prototype, {
		clearResults: function() {}
	});
	window.BMAP_TRANSIT_POLICY_RECOMMEND = 0;
	window.BMAP_TRANSIT_POLICY_LEAST_TIME = 4;
	window.BMAP_TRANSIT_POLICY_LEAST_TRANSFER = 1;
	window.BMAP_TRANSIT_POLICY_LEAST_WALKING = 2;
	window.BMAP_TRANSIT_POLICY_AVOID_SUBWAYS = 3;
	window.BMAP_TRANSIT_POLICY_FIRST_SUBWAYS = 5;
	window.BMAP_LINE_TYPE_BUS = 0;
	window.BMAP_LINE_TYPE_SUBWAY = 1;
	window.BMAP_LINE_TYPE_FERRY = 2;
	window.BMAP_LINE_TYPE_TRAIN = 3;
	window.BMAP_LINE_TYPE_AIRPLANE = 4;
	window.BMAP_LINE_TYPE_COACH = 5;
	var hs = 3;
	var dE = 4;
	var ab = 1;
	var hq = 2;
	var aM = 5;
	var ct = 6;
	window.BMAP_TRANSIT_TYPE_IN_CITY = 0;
	window.BMAP_TRANSIT_TYPE_CROSS_CITY = 1;
	window.BMAP_TRANSIT_PLAN_TYPE_ROUTE = 0;
	window.BMAP_TRANSIT_PLAN_TYPE_LINE = 1;
	window.BMAP_TRANSIT_TYPE_POLICY_TRAIN = 0;
	window.BMAP_TRANSIT_TYPE_POLICY_AIRPLANE = 1;
	window.BMAP_TRANSIT_TYPE_POLICY_COACH = 2;
	window.BMAP_INTERCITY_POLICY_LEAST_TIME = 0;
	window.BMAP_INTERCITY_POLICY_EARLY_START = 1;
	window.BMAP_INTERCITY_POLICY_CHEAP_PRICE = 2;

	function eh(T, i) {
		iJ.call(this, T, i);
		i = i || {};
		this.setPolicy(i.policy);
		this.setIntercityPolicy(i.intercityPolicy);
		this.setTransitTypePolicy(i.transitTypePolicy);
		this.setPageCapacity(i.pageCapacity);
		this.QUERY_TYPE = gf;
		this.RETURN_TYPE = en;
		this.ROUTE_TYPE = gP;
		this._overlays = [];
		this._curIndex = -1;
		this._opts._enableTraffic = i.enableTraffic || false;
		this._queryList = [];
		var e = this;
		gi.load("route", function() {
			e._asyncSearch()
		}, true)
	}
	eh.MAX_PAGE_CAPACITY = 100;
	eh.LINE_TYPE_MAPPING = [0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 1];
	eh.LINE_TYPE_MAPPING_CROSS_CITY = [0, 3, 4, 0, 0, 0, 5];
	es.inherit(eh, iJ, "TransitRoute");
	es.extend(eh.prototype, {
		setPolicy: function(e) {
			if (e >= BMAP_TRANSIT_POLICY_RECOMMEND && e <= BMAP_TRANSIT_POLICY_FIRST_SUBWAYS) {
				this._opts.policy = e
			} else {
				this._opts.policy = BMAP_TRANSIT_POLICY_RECOMMEND
			}
		},
		setIntercityPolicy: function(e) {
			if (e >= BMAP_INTERCITY_POLICY_LEAST_TIME && e <= BMAP_INTERCITY_POLICY_CHEAP_PRICE) {
				this._opts.intercityPolicy = e
			} else {
				this._opts.intercityPolicy = BMAP_INTERCITY_POLICY_LEAST_TIME
			}
		},
		setTransitTypePolicy: function(e) {
			if (e >= BMAP_TRANSIT_TYPE_POLICY_TRAIN && e <= BMAP_TRANSIT_TYPE_POLICY_COACH) {
				this._opts.transitTypePolicy = e
			} else {
				this._opts.transitTypePolicy = BMAP_TRANSIT_TYPE_POLICY_TRAIN
			}
		},
		_internalSearch: function(i, e) {
			this._queryList.push({
				method: "_internalSearch",
				arguments: [i, e]
			})
		},
		search: function(i, e) {
			this._queryList.push({
				method: "search",
				arguments: [i, e]
			})
		},
		setPageCapacity: function(e) {
			if (typeof e === "string") {
				e = parseInt(e, 10);
				if (isNaN(e)) {
					this._opts.pageCapacity = eh.MAX_PAGE_CAPACITY;
					return
				}
			}
			if (typeof e !== "number") {
				this._opts.pageCapacity = eh.MAX_PAGE_CAPACITY;
				return
			}
			if (e >= 1 && e <= eh.MAX_PAGE_CAPACITY) {
				this._opts.pageCapacity = Math.round(e)
			} else {
				this._opts.pageCapacity = eh.MAX_PAGE_CAPACITY
			}
		},
		toString: function() {
			return "TransitRoute"
		},
		_shortTitle: function(e) {
			return e.replace(/\(.*\)/, "")
		}
	});
	window.BMAP_HIGHLIGHT_STEP = 1;
	window.BMAP_HIGHLIGHT_ROUTE = 2;
	var ci = function(e, i9) {
		iJ.call(this, e, i9);
		this._overlays = [];
		this._curIndex = -1;
		this._queryList = [];
		var T = this;
		var i = this._opts.renderOptions;
		if (i.highlightMode !== BMAP_HIGHLIGHT_STEP && i.highlightMode !== BMAP_HIGHLIGHT_ROUTE) {
			i.highlightMode = BMAP_HIGHLIGHT_STEP
		}
		this._enableDragging = this._opts.renderOptions.enableDragging ? true : false;
		gi.load("route", function() {
			T._asyncSearch()
		}, true);
		if (this.init_d) {
			this.init_d()
		}
	};
	ci.ROAD_TYPE = ["", "环岛", "无属性道路", "主路", "高速连接路", "交叉点内路段", "连接道路", "停车场内部道路", "服务区内部道路", "桥", "步行街", "辅路", "匝道", "全封闭道路", "未定义交通区域", "POI连接路", "隧道", "步行道", "公交专用道", "提前右转道"];
	es.inherit(ci, iJ, "DWRoute");
	es.extend(ci.prototype, {
		search: function(T, e, i) {
			this._queryList.push({
				method: "search",
				arguments: [T, e, i]
			})
		}
	});
	window.BMAP_DRIVING_POLICY_DEFAULT = 0;
	window.BMAP_DRIVING_POLICY_AVOID_HIGHWAYS = 3;
	window.BMAP_DRIVING_POLICY_FIRST_HIGHWAYS = 4;
	window.BMAP_DRIVING_POLICY_AVOID_CONGESTION = 5;
	window.BMAP_TRAFFICE_STATUS_NONE = 0;
	window.BMAP_TRAFFICE_STATUS_NORMAL = 1;
	window.BMAP_TRAFFICE_STATUS_SLOW = 2;
	window.BMAP_TRAFFICE_STATUS_JAM = 3;

	function b7(e, i) {
		ci.call(this, e, i);
		i = i || {};
		this._opts._enableTraffic = i.enableTraffic || false;
		this.setPolicy(i.policy);
		this.QUERY_TYPE = aE;
		this.RETURN_TYPE = au;
		this.ROUTE_TYPE = BMAP_ROUTE_TYPE_DRIVING
	}
	es.inherit(b7, ci, "DrivingRoute");
	b7.prototype.setPolicy = function(e) {
		if (e >= BMAP_DRIVING_POLICY_DEFAULT && e <= BMAP_DRIVING_POLICY_AVOID_CONGESTION) {
			this._opts.policy = e
		} else {
			this._opts.policy = BMAP_DRIVING_POLICY_DEFAULT
		}
	};

	function eS(e, i) {
		ci.call(this, e, i);
		this.QUERY_TYPE = hj;
		this.RETURN_TYPE = fB;
		this.ROUTE_TYPE = BMAP_ROUTE_TYPE_WALKING;
		this._enableDragging = false
	}
	es.inherit(eS, ci, "WalkingRoute");

	function cG(e, i) {
		ci.call(this, e, i);
		this.QUERY_TYPE = gK;
		this.ROUTE_TYPE = BMAP_ROUTE_TYPE_RIDING;
		this._enableDragging = false
	}
	es.inherit(cG, ci, "RidingRoute");
	window.BMAP_MODE_DRIVING = "driving";
	window.BMAP_MODE_TRANSIT = "transit";
	window.BMAP_MODE_WALKING = "walking";
	window.BMAP_MODE_NAVIGATION = "navigation";
	var aS = {
		web: "//api.map.baidu.com/direction?",
		android: "bdapp://map/direction?",
		ios: "baidumap://map/direction?"
	};

	function hN(e) {
		this.opts = e || {}
	}
	es.extend(hN.prototype, {
		routeCall: function(i9, e, T) {
			var i = this;
			gi.load("route", function() {
				i._asyncSearch(i9, e, T)
			})
		}
	});

	function dD() {
		return Pano.getStreetViewCoverageLayer(bo)
	}

	function ej() {
		Pano.PanoramaService.call(this)
	}
	es.inherit(ej, Pano.PanoramaService, "PanoramaService");
	es.extend(ej.prototype, {
		getPanoramaById: function(T, i) {
			var e = this;
			this.getPanoById(T, function(i9) {
				i && i(e._makeData(i9))
			})
		},
		getPanoramaByLocation: function(e, T) {
			e = ia.convertLL2MC(e);
			var i = this;
			this.getPanoByLocation(e, 50, function(i9) {
				T && T(i._makeData(i9))
			})
		},
		_makeData: function(T) {
			if (!T) {
				return null
			}
			var i = {};
			var e = T.content[0];
			i.description = e.Rname || e.Info || "";
			i.id = e.ID;
			i.pointX = e.X / 100;
			i.pointY = e.Y / 100;
			i.position = ia.convertMC2LL(new cd(i.pointX, i.pointY));
			return i
		}
	});

	function eJ() {
		if (window.PANORAMA_URL) {
			return Pano.getPanoControl(bo, {
				imgPath: w.imgPath,
				tileBaseUrl: w.panoTilePath,
			})
		}
		return Pano.getPanoControl(bo)
	}

	function J(T, e) {
		if (!e) {
			return
		}
		this.content = T;
		if (e.position && !Array.isArray(e.position)) {
			e.position = ia.convertLL2MC(e.position);
			this.position = e.position;
			this.hideDistance = !!e.hideDistance
		} else {
			this.hideDistance = true
		}
		var i = this._createDom();
		Pano.PanoOverlay.call(this, e.position, {
			dom: i,
			altitude: e.altitude,
		})
	}
	es.inherit(J, Pano.PanoOverlay, "PanoramaLabel");
	es.extend(J.prototype, {
		init: function(e) {
			var i = this;
			this._pano = e;
			this.updatedDistance();
			Pano.PanoOverlay.prototype.init.call(this, e);
			this._pano.on("dataload", function(T) {
				i.updatedDistance()
			})
		},
		_createDom: function() {
			var i9 = this.content;
			var jc = document.createElement("div");
			var i = jc.style;
			i.position = "absolute";
			i.backgroundColor = "rgba(29, 29, 29, 0.8)";
			i.padding = "7px 0";
			i.height = "19px";
			i.font = "16px arial";
			i.color = "white";
			i.whiteSpace = "nowrap";
			i.borderRadius = "4px";
			var e = document.createElement("div");
			e.style["float"] = "left";
			e.style["lineHeight"] = "19px";
			jc.appendChild(e);
			var T = document.createElement("span");
			T.style.margin = "0 14px";
			T.innerText = i9;
			e.appendChild(T);
			if (!this.hideDistance) {
				var jb = document.createElement("span");
				jb.style.color = "color:rgba(255,255,255,0.3)";
				jb.innerText = "|";
				e.appendChild(jb);
				var ja = document.createElement("span");
				ja.style.margin = "0 8px";
				ja.style.color = "#60c7fa";
				ja.style.fontSize = "12px";
				ja.innerText = "0米";
				e.appendChild(ja);
				this._distanceDom = ja
			}
			this._dom = jc;
			this._titleDom = T;
			return jc
		},
		updatedDistance: function() {
			if (this.hideDistance) {
				return
			}
			var T = 0;
			if (this._pano) {
				var i = this._pano.position;
				var e = this.position;
				if (i && !i.equals(e)) {
					T = ia.getDistanceByMC(i, e)
				}
			}
			if (T > 100) {
				T = T / 1000;
				T = T < 100 ? T.toFixed(2) : T.toFixed(0);
				T += "公里"
			} else {
				T = T < 100 ? T.toFixed(2) : T.toFixed(0);
				T += "米"
			}
			this._distanceDom.innerText = T
		},
	});

	function c(i) {
		if (typeof i === "string" && /^(?!#)(\w)*/.test(i)) {
			i = "#" + i
		}
		var i9 = {};
		if (window.PANORAMA_URL) {
			i9.imgPath = w.imgPath;
			i9.tileBaseUrls = [w.panoTilePath]
		}
		var e = Pano.init(i, i9);
		var T = e.setPosition;
		e.setPosition = function(jb) {
			var jc = ia.convertLL2MC(jb);
			T.call(e, jc)
		};
		var ja = e.addEventListener;
		e.addEventListener = function(jb, jc) {
			if (jb === "position_changed") {
				ja.call(e, jb, function(jd) {
					var je = ia.convertMC2LL(jd);
					jc(je)
				})
			} else {
				ja.call(e, jb, jc)
			}
		};
		return e
	}
	bo.Map = gV;
	bo.MapType = dO;
	bo.Point = cd;
	bo.Pixel = eL;
	bo.Size = h3;
	bo.Bounds = ha;
	bo.PrivateRegionDataModel = cp;
	bo.TileLayer = gI;
	bo.Copyright = h;
	bo.Projection = bo.Project = ia;
	bo.XYZProjection = bo.XYZProject = da;
	bo.Convertor = fg;
	bo.RenderTypeUtils = cH;
	bo.Overlay = aH;
	bo.Label = g3;
	bo.Marker = r;
	bo.Icon = it;
	bo.Polyline = bc;
	bo.BezierCurve = cl;
	bo.PolylineMultipart = dQ;
	bo.Polygon = hM;
	bo.MapMask = iX;
	bo.Prism = bi;
	bo.Marker3D = dH;
	bo.GroundOverlay = fm;
	bo.InfoWindow = dz;
	bo.SimpleInfoWindow = hd;
	bo.Circle = aK;
	bo.Control = f0;
	bo.NavigationControl = iF;
	bo.NavigationControl3D = eu;
	bo.CopyrightControl = fr;
	bo.ScaleControl = i8;
	bo.CityListControl = bj;
	bo.MapTypeControl = u;
	bo.ZoomControl = id;
	bo.LocationControl = fJ;
	bo.LogoControl = br;
	bo.DistanceTool = bZ;
	bo.ContextMenu = gz;
	bo.MenuItem = g8;
	bo.OperationMask = ae;
	bo.Animation = e0;
	bo.ViewAnimation = n;
	bo.Transitions = fT;
	bo.Event = e7;
	bo.trafficLayer = iC;
	bo.TrafficLayer = ii;
	bo.XYZLayer = iY;
	bo.PixelLayer = c2;
	bo.BaiduLayer = O;
	bo.Geolocation = cz;
	bo.Geocoder = a6;
	bo.Boundary = eN;
	bo.DistrictLayer = dw;
	bo.LocalCity = eG;
	bo.LocalSearch = cf;
	bo.Autocomplete = h5;
	bo.BusLineSearch = d2;
	bo.WalkingRoute = eS;
	bo.RidingRoute = cG;
	bo.DrivingRoute = b7;
	bo.TransitRoute = eh;
	bo.RouteSearch = hN;
	bo.PanoramaCoverageLayer = dD;
	bo.PanoramaControl = eJ;
	bo.PanoramaService = ej;
	bo.PanoramaLabel = J;
	bo.Panorama = c;

	function gr(e, i) {
		for (var T in i) {
			e[T] = i[T]
		}
	}
	bo.fetchDebug && bo.fetchDebug.init();
	bo.verify();
	bo.apiLoad();
	bo.frequency();
	bo.getSeckeyCid();
	window._layer = 1;
	es.extend(dw.prototype, {
		_asyncSearch: function() {
			for (var T = 0, e = this._queryList.length; T < e; T++) {
				var i9 = this._queryList[T];
				this[i9.method].apply(this, i9.arguments)
			}
			delete this._queryList
		},
		addDistrict: function() {
			if (this._opts.districts) {
				var e = this._opts.districts;
				if (typeof e === "string") {
					this.getDistrictData(e)
				} else {
					if (Object.prototype.toString.call(e) === "[object Array]") {
						var i = this.parseArrayParams(e);
						this.getDistrictData(i)
					}
				}
			}
		},
		parseArrayParams: function(e) {
			var ja = "";
			for (var i9 = 0; i9 < e.length; i9++) {
				if (e[i9] instanceof Array) {
					ja += "(";
					for (var T = 0; T < e.length; T++) {
						ja += e[T]
					}
					ja += ")"
				} else {
					ja += "(" + e[i9] + ")"
				}
			}
			return ja
		},
		getDistrictData: function(e) {
			var i = this;
			iU.request(function(i9) {
				var T = i._parseGeoData(i9);
				i._drawToMap(i, T)
			}, {
				qt: iD,
				adnames: e,
				level: i._opts.kind
			})
		},
		_drawToMap: function(ji, je) {
			var jh = je.boundaries.length;
			if (jh === 0) {
				alert("未能获取当前输入行政区域");
				return
			}
			var jj = this._config.fillColor;
			var jb = this._config.fillOpacity;
			var T = this._config.strokeColor;
			var e = this._config.strokeOpacity;
			var jf = this._config.strokeWeight;
			if (typeof jj === "string") {
				var i9 = jj;
				var jk = [];
				for (var jd = 0; jd < jh; jd++) {
					var jg = new BMapGL.Polygon(je.boundaries[jd], {
						strokeWeight: jf,
						strokeColor: T,
						strokeOpacity: e,
						fillColor: i9,
						fillOpacity: jb
					});
					jg.style = {
						strokeWeight: jf,
						strokecolor: T,
						strokeOpacity: e,
						fillColor: i9,
						fillOpacity: jb
					};
					this.disOverlays.push(jg);
					this.addEventListenerIn();
					ji._map.addOverlay(jg);
					jk = jk.concat(jg.getPath())
				}
				if (this._config.viewport) {
					ji._map.setViewport(jk)
				}
			} else {
				if (Object.prototype.toString.call(jj) === "[object Array]") {
					var jk = [];
					var jc = jj.length;
					if (jc < jh) {
						for (var jd = 0, ja = 0; jd < jh - jc; jd++) {
							if (ja < jc - 1) {
								jj.push(jj[ja++])
							} else {
								jj.push(jj[0])
							}
						}
					}
					for (var jd = 0; jd < jh; jd++) {
						var i9 = jj[jd];
						var jg = new BMapGL.Polygon(je.boundaries[jd], {
							strokeWeight: jf,
							strokeColor: T,
							strokeOpacity: e,
							fillColor: i9,
							fillOpacity: jb
						});
						jg.style = {
							strokeWeight: jf,
							strokecolor: T,
							strokeOpacity: e,
							fillColor: i9,
							fillOpacity: jb
						};
						this.disOverlays.push(jg);
						this.addEventListenerIn();
						ji._map.addOverlay(jg);
						jk = jk.concat(jg.getPath())
					}
					if (this._config.viewport) {
						ji._map.setViewport(jk)
					}
				}
			}
		},
		_parseGeoData: function(ji) {
			var jl = {};
			jl.boundaries = [];
			if (ji && ji.content && ji.content["geo"]) {
				for (var jq = 0; jq < ji.content["geo"].length; jq++) {
					var i9 = bx.parseGeo(ji.content["geo"][jq], false);
					if (i9.geo && i9.geo.length && i9.geo.length > 0) {
						var jo = i9.geo.length;
						for (ip = 0; ip < jo; ip++) {
							var T = i9.geo[ip];
							if (T && T.length && T.length > 0) {
								var jg = T.length - 1;
								var jn = [];
								var jf = false;
								var jm = 0;
								var jk = 0;
								for (var jp = 0; jp < jg; jp += 2) {
									var jd = T[jp];
									var jb = T[jp + 1];
									var jj = new cd(jd, jb);
									jj = ia.convertMC2LL(jj);
									if (jp < jg - 3) {
										var i = T[jp + 2];
										var e = T[jp + 3];
										var jh = new cd(i, e);
										jh = ia.convertMC2LL(jh)
									}
									jn.push(jj.lng + ", " + jj.lat)
								}
								if (jf === true) {
									if (jm > jk) {
										var jr = jm;
										jm = jk;
										jk = jr
									}
									var je = jn;
									var jc = jn.splice(jm + 1);
									var ja = jc.splice(jk - jm);
									je = je.concat(ja);
									jl.boundaries.push(je.join(";"));
									jl.boundaries.push(jc.join(";"));
									jf = false;
									continue
								}
								if (jn.length !== 0) {
									jl.boundaries.push(jn.join(";"))
								}
							}
						}
					}
				}
			}
			return jl
		},
		deleteDistrict: function(i9) {
			var T = i9.disOverlays;
			for (var e = 0; e < T.length; e++) {
				this._map.removeOverlay(T[e])
			}
		},
		addEventListener: function(e, i) {
			this.eventAndCallback[e] = i
		},
		addEventListenerIn: function() {
			var i9 = this;
			var jb = Object.keys(i9.eventAndCallback);
			if (jb.length > 0) {
				for (var T = 0; T < jb.length; T++) {
					var ja = i9.eventAndCallback[jb[T]];
					for (var e = 0; e < i9.disOverlays.length; e++) {
						i9.disOverlays[e].addEventListener(jb[T], ja)
					}
				}
			}
		},
		searchBoundary: function(i, ja) {
			i = i || {};
			var e = i.name || "";
			var T = i.kind || 0;
			var i9 = this;
			iU.request(function(jc) {
				var jb = i9._parseGeoData(jc);
				ja && ja(jb)
			}, {
				qt: iD,
				adnames: e,
				level: T
			})
		}
	});
	window._layer = 2;
})(BMapGL, "BMapGL");